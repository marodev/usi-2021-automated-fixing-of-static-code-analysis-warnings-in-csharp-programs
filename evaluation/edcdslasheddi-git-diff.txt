diff --git a/CargoMonitor/CargoMonitor.cs b/CargoMonitor/CargoMonitor.cs
index fe807a5f..c132ce76 100644
--- a/CargoMonitor/CargoMonitor.cs
+++ b/CargoMonitor/CargoMonitor.cs
@@ -145,80 +145,80 @@ namespace EddiCargoMonitor
             Logging.Debug("Received event " + JsonConvert.SerializeObject(@event));
 
             // Handle the events that we care about
-            if (@event is CargoEvent)
+            if (@event is CargoEvent cargoEvent)
             {
-                handleCargoEvent((CargoEvent)@event);
+                handleCargoEvent(cargoEvent);
             }
-            else if (@event is CommodityCollectedEvent)
+            else if (@event is CommodityCollectedEvent commodityCollectedEvent)
             {
-                handleCommodityCollectedEvent((CommodityCollectedEvent)@event);
+                handleCommodityCollectedEvent(commodityCollectedEvent);
             }
-            else if (@event is CommodityEjectedEvent)
+            else if (@event is CommodityEjectedEvent commodityEjectedEvent)
             {
-                handleCommodityEjectedEvent((CommodityEjectedEvent)@event);
+                handleCommodityEjectedEvent(commodityEjectedEvent);
             }
-            else if (@event is CommodityPurchasedEvent)
+            else if (@event is CommodityPurchasedEvent commodityPurchasedEvent)
             {
-                handleCommodityPurchasedEvent((CommodityPurchasedEvent)@event);
+                handleCommodityPurchasedEvent(commodityPurchasedEvent);
             }
-            else if (@event is CommodityRefinedEvent)
+            else if (@event is CommodityRefinedEvent commodityRefinedEvent)
             {
-                handleCommodityRefinedEvent((CommodityRefinedEvent)@event);
+                handleCommodityRefinedEvent(commodityRefinedEvent);
             }
-            else if (@event is CommoditySoldEvent)
+            else if (@event is CommoditySoldEvent commoditySoldEvent)
             {
-                handleCommoditySoldEvent((CommoditySoldEvent)@event);
+                handleCommoditySoldEvent(commoditySoldEvent);
             }
-            else if (@event is CargoDepotEvent)
+            else if (@event is CargoDepotEvent cargoDepotEvent)
             {
                 // If cargo is collected or delivered in a wing mission
-                handleCargoDepotEvent((CargoDepotEvent)@event);
+                handleCargoDepotEvent(cargoDepotEvent);
             }
-            else if (@event is LimpetPurchasedEvent)
+            else if (@event is LimpetPurchasedEvent limpetPurchasedEvent)
             {
-                handleLimpetPurchasedEvent((LimpetPurchasedEvent)@event);
+                handleLimpetPurchasedEvent(limpetPurchasedEvent);
             }
-            else if (@event is MissionsEvent)
+            else if (@event is MissionsEvent missionsEvent)
             {
                 // Remove cargo haulage stragglers for completed missions
-                handleMissionsEvent((MissionsEvent)@event);
+                handleMissionsEvent(missionsEvent);
             }
-            else if (@event is MissionAbandonedEvent)
+            else if (@event is MissionAbandonedEvent missionAbandonedEvent)
             {
                 // If we abandon a mission with cargo it becomes stolen
-                handleMissionAbandonedEvent((MissionAbandonedEvent)@event);
+                handleMissionAbandonedEvent(missionAbandonedEvent);
             }
-            else if (@event is MissionAcceptedEvent)
+            else if (@event is MissionAcceptedEvent missionAcceptedEvent)
             {
                 // Check to see if this is a cargo mission and update our inventory accordingly
-                handleMissionAcceptedEvent((MissionAcceptedEvent)@event);
+                handleMissionAcceptedEvent(missionAcceptedEvent);
             }
-            else if (@event is MissionCompletedEvent)
+            else if (@event is MissionCompletedEvent missionCompletedEvent)
             {
                 // Check to see if this is a cargo mission and update our inventory accordingly
-                handleMissionCompletedEvent((MissionCompletedEvent)@event);
+                handleMissionCompletedEvent(missionCompletedEvent);
             }
-            else if (@event is MissionExpiredEvent)
+            else if (@event is MissionExpiredEvent missionExpiredEvent)
             {
                 // Check to see if this is a cargo mission and update our inventory accordingly
-                handleMissionExpiredEvent((MissionExpiredEvent)@event);
+                handleMissionExpiredEvent(missionExpiredEvent);
             }
-            else if (@event is MissionFailedEvent)
+            else if (@event is MissionFailedEvent missionFailedEvent)
             {
                 // If we fail a mission with cargo it becomes stolen
-                handleMissionFailedEvent((MissionFailedEvent)@event);
+                handleMissionFailedEvent(missionFailedEvent);
             }
-            else if (@event is DiedEvent)
+            else if (@event is DiedEvent diedEvent)
             {
-                handleDiedEvent((DiedEvent)@event);
+                handleDiedEvent(diedEvent);
             }
-            else if (@event is EngineerContributedEvent)
+            else if (@event is EngineerContributedEvent engineerContributedEvent)
             {
-                handleEngineerContributedEvent((EngineerContributedEvent)@event);
+                handleEngineerContributedEvent(engineerContributedEvent);
             }
-            else if (@event is SynthesisedEvent)
+            else if (@event is SynthesisedEvent synthesisedEvent)
             {
-                handleSynthesisedEvent((SynthesisedEvent)@event);
+                handleSynthesisedEvent(synthesisedEvent);
             }
         }
 
diff --git a/CrimeMonitor/CrimeMonitor.cs b/CrimeMonitor/CrimeMonitor.cs
index 561c6c76..132a2621 100644
--- a/CrimeMonitor/CrimeMonitor.cs
+++ b/CrimeMonitor/CrimeMonitor.cs
@@ -140,61 +140,61 @@ namespace EddiCrimeMonitor
             Logging.Debug("Received event " + JsonConvert.SerializeObject(@event));
 
             // Handle the events that we care about
-            if (@event is LocationEvent)
+            if (@event is LocationEvent locationEvent)
             {
-                handleLocationEvent((LocationEvent)@event);
+                handleLocationEvent(locationEvent);
             }
-            else if (@event is JumpedEvent)
+            else if (@event is JumpedEvent jumpedEvent)
             {
-                handleJumpedEvent((JumpedEvent)@event);
+                handleJumpedEvent(jumpedEvent);
             }
-            else if (@event is ShipTargetedEvent)
+            else if (@event is ShipTargetedEvent shipTargetedEvent)
             {
-                handleShipTargetedEvent((ShipTargetedEvent)@event);
+                handleShipTargetedEvent(shipTargetedEvent);
             }
-            else if (@event is BondAwardedEvent)
+            else if (@event is BondAwardedEvent bondAwardedEvent)
             {
-                handleBondAwardedEvent((BondAwardedEvent)@event);
+                handleBondAwardedEvent(bondAwardedEvent);
             }
-            else if (@event is BondRedeemedEvent)
+            else if (@event is BondRedeemedEvent bondRedeemedEvent)
             {
-                handleBondRedeemedEvent((BondRedeemedEvent)@event);
+                handleBondRedeemedEvent(bondRedeemedEvent);
             }
-            else if (@event is BountyAwardedEvent)
+            else if (@event is BountyAwardedEvent bountyAwardedEvent)
             {
-                handleBountyAwardedEvent((BountyAwardedEvent)@event);
+                handleBountyAwardedEvent(bountyAwardedEvent);
             }
-            else if (@event is BountyIncurredEvent)
+            else if (@event is BountyIncurredEvent bountyIncurredEvent)
             {
-                handleBountyIncurredEvent((BountyIncurredEvent)@event);
+                handleBountyIncurredEvent(bountyIncurredEvent);
             }
-            else if (@event is BountyPaidEvent)
+            else if (@event is BountyPaidEvent bountyPaidEvent)
             {
-                handleBountyPaidEvent((BountyPaidEvent)@event);
+                handleBountyPaidEvent(bountyPaidEvent);
             }
-            else if (@event is BountyRedeemedEvent)
+            else if (@event is BountyRedeemedEvent bountyRedeemedEvent)
             {
-                handleBountyRedeemedEvent((BountyRedeemedEvent)@event);
+                handleBountyRedeemedEvent(bountyRedeemedEvent);
             }
-            else if (@event is FineIncurredEvent)
+            else if (@event is FineIncurredEvent fineIncurredEvent)
             {
-                handleFineIncurredEvent((FineIncurredEvent)@event);
+                handleFineIncurredEvent(fineIncurredEvent);
             }
-            else if (@event is FinePaidEvent)
+            else if (@event is FinePaidEvent finePaidEvent)
             {
-                handleFinePaidEvent((FinePaidEvent)@event);
+                handleFinePaidEvent(finePaidEvent);
             }
-            else if (@event is MissionAbandonedEvent)
+            else if (@event is MissionAbandonedEvent missionAbandonedEvent)
             {
-                handleMissionAbandonedEvent((MissionAbandonedEvent)@event);
+                handleMissionAbandonedEvent(missionAbandonedEvent);
             }
-            else if (@event is MissionFailedEvent)
+            else if (@event is MissionFailedEvent missionFailedEvent)
             {
-                handleMissionFailedEvent((MissionFailedEvent)@event);
+                handleMissionFailedEvent(missionFailedEvent);
             }
-            else if (@event is DiedEvent)
+            else if (@event is DiedEvent diedEvent)
             {
-                handleDiedEvent((DiedEvent)@event);
+                handleDiedEvent(diedEvent);
             }
         }
 
diff --git a/DataDefinitions/StarSystem.cs b/DataDefinitions/StarSystem.cs
index f8799d60..0b1975d4 100644
--- a/DataDefinitions/StarSystem.cs
+++ b/DataDefinitions/StarSystem.cs
@@ -260,7 +260,7 @@ namespace EddiDataDefinitions
         public long estimatedvalue => estimateSystemValue(bodies);
 
         /// <summary>Number of visits</summary>
-        public int visits => visitLog.Count();
+        public int visits => visitLog.Count;
 
         /// <summary>Time of last visit</summary>
         public DateTime? lastvisit => visitLog.LastOrDefault();
@@ -393,7 +393,7 @@ namespace EddiDataDefinitions
             }
 
             // Bonus for fully discovering a system
-            if (totalbodies == bodies.Where(b => b.scanned != null).Count())
+            if (totalbodies == bodies.Count(b => b.scanned != null))
             {
                 value += totalbodies * 1000;
 
diff --git a/DataProviderService/LegacyEddpService.cs b/DataProviderService/LegacyEddpService.cs
index 76f9131d..14a74c58 100644
--- a/DataProviderService/LegacyEddpService.cs
+++ b/DataProviderService/LegacyEddpService.cs
@@ -130,13 +130,13 @@ namespace EddiDataProviderService
             foreach (object sellingModule in sellingModules)
             {
                 Module module = new Module();
-                if (sellingModule is long)
+                if (sellingModule is long l)
                 {
-                    module = Module.FromEddbID((long)sellingModule);
+                    module = Module.FromEddbID(l);
                 }
-                else if (sellingModule is string)
+                else if (sellingModule is string s)
                 {
-                    module = Module.FromEDName((string)sellingModule);
+                    module = Module.FromEDName(s);
                 }
                 if (module != null) { modules.Add(module); }
             }
diff --git a/EDDNResponder/EDDNResponder.cs b/EDDNResponder/EDDNResponder.cs
index 433fbb96..a2b6ffb0 100644
--- a/EDDNResponder/EDDNResponder.cs
+++ b/EDDNResponder/EDDNResponder.cs
@@ -125,9 +125,9 @@ namespace EDDNResponder
 
             Logging.Debug("Received event " + JsonConvert.SerializeObject(theEvent));
 
-            if (theEvent is MarketInformationUpdatedEvent)
+            if (theEvent is MarketInformationUpdatedEvent marketInformationUpdatedEvent)
             {
-                handleMarketInformationUpdatedEvent((MarketInformationUpdatedEvent)theEvent);
+                handleMarketInformationUpdatedEvent(marketInformationUpdatedEvent);
             }
             else
             {
diff --git a/EDDPMonitor/ConfigurationWindow.xaml.cs b/EDDPMonitor/ConfigurationWindow.xaml.cs
index edb0d0a5..7b496803 100644
--- a/EDDPMonitor/ConfigurationWindow.xaml.cs
+++ b/EDDPMonitor/ConfigurationWindow.xaml.cs
@@ -93,10 +93,7 @@ namespace EddiEddpMonitor
 
         private void updateWatchesConfiguration()
         {
-            if (configuration != null)
-            {
-                configuration.ToFile();
-            }
+            configuration?.ToFile();
             EDDI.Instance.Reload("EDDP monitor");
         }
     }
diff --git a/EDSMResponder/ConfigurationWindow.xaml.cs b/EDSMResponder/ConfigurationWindow.xaml.cs
index 2e7910c3..00f3244d 100644
--- a/EDSMResponder/ConfigurationWindow.xaml.cs
+++ b/EDSMResponder/ConfigurationWindow.xaml.cs
@@ -74,7 +74,7 @@ namespace EddiEdsmResponder
             {
                 // Fetch the commander name from the companion app
                 Commander cmdr = EDDI.Instance.Cmdr;
-                if (cmdr != null && cmdr.name != null)
+                if (cmdr?.name != null)
                 {
                     commanderName = cmdr.name;
                 }
diff --git a/GalnetMonitor/GalnetMonitor.cs b/GalnetMonitor/GalnetMonitor.cs
index 31cf2995..20daf621 100644
--- a/GalnetMonitor/GalnetMonitor.cs
+++ b/GalnetMonitor/GalnetMonitor.cs
@@ -363,7 +363,7 @@ namespace GalnetMonitor
                 {
                     continue;
                 }
-                if (dir.GetFiles().Count() == 0)
+                if (!dir.GetFiles().Any())
                 {
                     continue;
                 }
diff --git a/MaterialMonitor/MaterialMonitor.cs b/MaterialMonitor/MaterialMonitor.cs
index 6884437d..4382f35b 100644
--- a/MaterialMonitor/MaterialMonitor.cs
+++ b/MaterialMonitor/MaterialMonitor.cs
@@ -372,7 +372,7 @@ namespace EddiMaterialMonitor
             lock (inventoryLock)
             {
                 Material material = Material.FromEDName(edname);
-                MaterialAmount ma = inventory.Where(inv => inv.edname == material.edname).FirstOrDefault();
+                MaterialAmount ma = inventory.FirstOrDefault(inv => inv.edname == material.edname);
                 if (ma == null)
                 {
                     // No information for the current material - create one and set it to amount
@@ -431,7 +431,7 @@ namespace EddiMaterialMonitor
 
                     MaterialAmount ma2 = new MaterialAmount(ma.edname, ma.amount, ma.minimum, ma.desired, ma.maximum);
                     // Make sure the edname is unique before adding the material to the new inventory 
-                    if (newInventory.Where(inv => inv.edname == ma2.edname).Count() == 0)
+                    if (!newInventory.Any(inv => inv.edname == ma2.edname))
                     {
                         // Set material maximums if they aren't already defined
                         if (ma2.maximum == null || !ma2.maximum.HasValue)
@@ -449,7 +449,7 @@ namespace EddiMaterialMonitor
                 // Add in any new materials
                 foreach (Material material in Material.AllOfThem.ToList())
                 {
-                    MaterialAmount ma = newInventory.Where(inv => inv.edname == material.edname).FirstOrDefault();
+                    MaterialAmount ma = newInventory.FirstOrDefault(inv => inv.edname == material.edname);
                     if (ma == null)
                     {
                         // We don't have this one - add it and set it to zero
diff --git a/MissionMonitor/MissionMonitor.cs b/MissionMonitor/MissionMonitor.cs
index c1eae3df..1dc4230f 100644
--- a/MissionMonitor/MissionMonitor.cs
+++ b/MissionMonitor/MissionMonitor.cs
@@ -220,17 +220,17 @@ namespace EddiMissionMonitor
         public void PostHandle(Event @event)
         {
             // Use the post-handler to remove missions from the missions list only after we have reacted to them.
-            if (@event is MissionAbandonedEvent)
+            if (@event is MissionAbandonedEvent missionAbandonedEvent)
             {
-                postHandleMissionAbandonedEvent((MissionAbandonedEvent)@event);
+                postHandleMissionAbandonedEvent(missionAbandonedEvent);
             }
-            else if (@event is MissionCompletedEvent)
+            else if (@event is MissionCompletedEvent missionCompletedEvent)
             {
-                postHandleMissionCompletedEvent((MissionCompletedEvent)@event);
+                postHandleMissionCompletedEvent(missionCompletedEvent);
             }
-            else if (@event is MissionFailedEvent)
+            else if (@event is MissionFailedEvent missionFailedEvent)
             {
-                postHandleMissionFailedEvent((MissionFailedEvent)@event);
+                postHandleMissionFailedEvent(missionFailedEvent);
             }
         }
 
@@ -239,52 +239,52 @@ namespace EddiMissionMonitor
             Logging.Debug("Received pre-event " + JsonConvert.SerializeObject(@event));
 
             // Handle the events that we care about
-            if (@event is DataScannedEvent)
+            if (@event is DataScannedEvent dataScannedEvent)
             {
-                handleDataScannedEvent((DataScannedEvent)@event);
+                handleDataScannedEvent(dataScannedEvent);
             }
-            else if (@event is PassengersEvent)
+            else if (@event is PassengersEvent passengersEvent)
             {
-                handlePassengersEvent((PassengersEvent)@event);
+                handlePassengersEvent(passengersEvent);
             }
-            else if (@event is MissionsEvent)
+            else if (@event is MissionsEvent missionsEvent)
             {
-                handleMissionsEvent((MissionsEvent)@event);
+                handleMissionsEvent(missionsEvent);
             }
-            else if (@event is CommunityGoalsEvent)
+            else if (@event is CommunityGoalsEvent communityGoalsEvent)
             {
-                handleCommunityGoalsEvent((CommunityGoalsEvent)@event);
+                handleCommunityGoalsEvent(communityGoalsEvent);
             }
-            else if (@event is CargoDepotEvent)
+            else if (@event is CargoDepotEvent cargoDepotEvent)
             {
-                handleCargoDepotEvent((CargoDepotEvent)@event);
+                handleCargoDepotEvent(cargoDepotEvent);
             }
-            else if (@event is MissionAcceptedEvent)
+            else if (@event is MissionAcceptedEvent missionAcceptedEvent)
             {
-                handleMissionAcceptedEvent((MissionAcceptedEvent)@event);
+                handleMissionAcceptedEvent(missionAcceptedEvent);
             }
-            else if (@event is MissionRedirectedEvent)
+            else if (@event is MissionRedirectedEvent missionRedirectedEvent)
             {
-                handleMissionRedirectedEvent((MissionRedirectedEvent)@event);
+                handleMissionRedirectedEvent(missionRedirectedEvent);
             }
-            else if (@event is MissionExpiredEvent)
+            else if (@event is MissionExpiredEvent missionExpiredEvent)
             {
-                handleMissionExpiredEvent((MissionExpiredEvent)@event);
+                handleMissionExpiredEvent(missionExpiredEvent);
             }
 
             // Change the mission status here, remove the missions after the events resolve using the post-handler
-            if (@event is MissionAbandonedEvent)
+            if (@event is MissionAbandonedEvent missionAbandonedEvent)
             {
-                handleMissionAbandonedEvent((MissionAbandonedEvent)@event);
+                handleMissionAbandonedEvent(missionAbandonedEvent);
             }
-            else if (@event is MissionCompletedEvent)
+            else if (@event is MissionCompletedEvent missionCompletedEvent)
             {
-                handleMissionCompletedEvent((MissionCompletedEvent)@event);
+                handleMissionCompletedEvent(missionCompletedEvent);
             }
 
-            else if (@event is MissionFailedEvent)
+            else if (@event is MissionFailedEvent missionFailedEvent)
             {
-                handleMissionFailedEvent((MissionFailedEvent)@event);
+                handleMissionFailedEvent(missionFailedEvent);
             }
         }
 
@@ -1151,7 +1151,7 @@ namespace EddiMissionMonitor
             missionsRouteDistance = 0;
             bool found = false;
 
-            int numSystems = systems.Count();
+            int numSystems = systems.Count;
             if (numSystems > 1)
             {
                 List<string> bestRoute = new List<string>();
@@ -1192,7 +1192,7 @@ namespace EddiMissionMonitor
                     int currIndex = i;
 
                     // Repeat until all systems (except starting system) are in the route
-                    while (route.Count() < numSystems - 1)
+                    while (route.Count < numSystems - 1)
                     {
                         SortedList<decimal, int> nearestList = new SortedList<decimal, int>();
 
@@ -1402,7 +1402,7 @@ namespace EddiMissionMonitor
                 distance = CalculateDistance(curr, dest);
 
                 // Calculate remaining route distance
-                for (int i = 0; i < route.Count() - 1; i++)
+                for (int i = 0; i < route.Count - 1; i++)
                 {
                     curr = starsystems.Find(s => s.systemname == route[i]);
                     dest = starsystems.Find(s => s.systemname == route[i + 1]);
diff --git a/NavigationService/NavigationService.cs b/NavigationService/NavigationService.cs
index da777acc..6d847347 100644
--- a/NavigationService/NavigationService.cs
+++ b/NavigationService/NavigationService.cs
@@ -194,7 +194,7 @@ namespace EddiNavigationService
                 // Set missions route variables
                 missionMonitor.SetMissionsRouteData(searchSystem, searchDistance);
             }
-            EDDI.Instance.enqueueEvent(new RouteDetailsEvent(DateTime.Now, "farthest", searchSystem, null, searchSystem, missionids.Count(), searchDistance, searchDistance, missionids));
+            EDDI.Instance.enqueueEvent(new RouteDetailsEvent(DateTime.Now, "farthest", searchSystem, null, searchSystem, missionids.Count, searchDistance, searchDistance, missionids));
             return searchSystem;
         }
 
@@ -268,7 +268,7 @@ namespace EddiNavigationService
                 // Sort the 'most' systems by distance
                 SortedList<decimal, string> mostList = new SortedList<decimal, string>();   // List of 'most' systems, sorted by distance
                 mostCount = systemsCount.Max();
-                for (int i = 0; i < systems.Count(); i++)
+                for (int i = 0; i < systems.Count; i++)
                 {
                     if (systemsCount[i] == mostCount)
                     {
@@ -363,7 +363,7 @@ namespace EddiNavigationService
                 // Set missions route variables
                 missionMonitor.SetMissionsRouteData(searchSystem, searchDistance);
             }
-            EDDI.Instance.enqueueEvent(new RouteDetailsEvent(DateTime.Now, "nearest", searchSystem, null, searchSystem, missionids.Count(), searchDistance, searchDistance, missionids));
+            EDDI.Instance.enqueueEvent(new RouteDetailsEvent(DateTime.Now, "nearest", searchSystem, null, searchSystem, missionids.Count, searchDistance, searchDistance, missionids));
             return searchSystem;
         }
 
@@ -456,7 +456,7 @@ namespace EddiNavigationService
                     missionMonitor.SetMissionsRouteData(searchSystem, searchDistance);
                 }
             }
-            EDDI.Instance.enqueueEvent(new RouteDetailsEvent(DateTime.Now, serviceType, searchSystem, searchStation, searchSystem, missionids.Count(), searchDistance, searchDistance, missionids));
+            EDDI.Instance.enqueueEvent(new RouteDetailsEvent(DateTime.Now, serviceType, searchSystem, searchStation, searchSystem, missionids.Count, searchDistance, searchDistance, missionids));
             return searchSystem;
         }
 
@@ -506,7 +506,7 @@ namespace EddiNavigationService
                                      .Where(s => s.stationservices.Count > 0).ToList();
                                 stations = stations.Where(s => s.distancefromstar <= maxStationDistance).ToList();
                                 if (serviceType == "facilitator") { stations = stations.Where(s => s.LandingPadCheck(shipSize)).ToList(); }
-                                int stationCount = stations.Where(s => s.stationServices.Contains(filter.service)).Count();
+                                int stationCount = stations.Count(s => s.stationServices.Contains(filter.service));
 
                                 // Build list to find the 'service' system nearest to the current system, meeting station requirements
                                 if (stationCount > 0)
diff --git a/ShipMonitor/ShipMonitor.cs b/ShipMonitor/ShipMonitor.cs
index ce8292a5..87788407 100644
--- a/ShipMonitor/ShipMonitor.cs
+++ b/ShipMonitor/ShipMonitor.cs
@@ -137,125 +137,125 @@ namespace EddiShipMonitor
             Logging.Debug("Received event " + JsonConvert.SerializeObject(@event));
 
             // Handle the events that we care about
-            if (@event is CommanderContinuedEvent)
+            if (@event is CommanderContinuedEvent commanderContinuedEvent)
             {
-                handleCommanderContinuedEvent((CommanderContinuedEvent)@event);
+                handleCommanderContinuedEvent(commanderContinuedEvent);
             }
-            else if (@event is LocationEvent)
+            else if (@event is LocationEvent locationEvent)
             {
-                handleLocationEvent((LocationEvent)@event);
+                handleLocationEvent(locationEvent);
             }
-            else if (@event is JumpedEvent)
+            else if (@event is JumpedEvent jumpedEvent)
             {
-                handleJumpedEvent((JumpedEvent)@event);
+                handleJumpedEvent(jumpedEvent);
             }
-            else if (@event is ShipPurchasedEvent)
+            else if (@event is ShipPurchasedEvent shipPurchasedEvent)
             {
-                handleShipPurchasedEvent((ShipPurchasedEvent)@event);
+                handleShipPurchasedEvent(shipPurchasedEvent);
             }
-            else if (@event is ShipDeliveredEvent)
+            else if (@event is ShipDeliveredEvent shipDeliveredEvent)
             {
-                handleShipDeliveredEvent((ShipDeliveredEvent)@event);
+                handleShipDeliveredEvent(shipDeliveredEvent);
             }
-            else if (@event is ShipSwappedEvent)
+            else if (@event is ShipSwappedEvent shipSwappedEvent)
             {
-                handleShipSwappedEvent((ShipSwappedEvent)@event);
+                handleShipSwappedEvent(shipSwappedEvent);
             }
-            else if (@event is ShipRenamedEvent)
+            else if (@event is ShipRenamedEvent shipRenamedEvent)
             {
-                handleShipRenamedEvent((ShipRenamedEvent)@event);
+                handleShipRenamedEvent(shipRenamedEvent);
             }
-            else if (@event is ShipSoldEvent)
+            else if (@event is ShipSoldEvent shipSoldEvent)
             {
-                handleShipSoldEvent((ShipSoldEvent)@event);
+                handleShipSoldEvent(shipSoldEvent);
             }
-            else if (@event is ShipSoldOnRebuyEvent)
+            else if (@event is ShipSoldOnRebuyEvent shipSoldOnRebuyEvent)
             {
-                handleShipSoldOnRebuyEvent((ShipSoldOnRebuyEvent)@event);
+                handleShipSoldOnRebuyEvent(shipSoldOnRebuyEvent);
             }
-            else if (@event is ShipLoadoutEvent)
+            else if (@event is ShipLoadoutEvent shipLoadoutEvent)
             {
-                handleShipLoadoutEvent((ShipLoadoutEvent)@event);
+                handleShipLoadoutEvent(shipLoadoutEvent);
             }
-            else if (@event is StoredShipsEvent)
+            else if (@event is StoredShipsEvent storedShipsEvent)
             {
-                handleStoredShipsEvent((StoredShipsEvent)@event);
+                handleStoredShipsEvent(storedShipsEvent);
             }
-            else if (@event is ShipRebootedEvent)
+            else if (@event is ShipRebootedEvent shipRebootedEvent)
             {
-                handleShipRebootedEvent((ShipRebootedEvent)@event);
+                handleShipRebootedEvent(shipRebootedEvent);
             }
-            else if (@event is ShipRefuelledEvent)
+            else if (@event is ShipRefuelledEvent shipRefuelledEvent)
             {
-                handleShipRefuelledEvent((ShipRefuelledEvent)@event);
+                handleShipRefuelledEvent(shipRefuelledEvent);
             }
-            else if (@event is ShipAfmuRepairedEvent)
+            else if (@event is ShipAfmuRepairedEvent shipAfmuRepairedEvent)
             {
-                handleShipAFMURepairedEvent((ShipAfmuRepairedEvent)@event);
+                handleShipAFMURepairedEvent(shipAfmuRepairedEvent);
             }
-            else if (@event is ShipRepairedEvent)
+            else if (@event is ShipRepairedEvent shipRepairedEvent)
             {
-                handleShipRepairedEvent((ShipRepairedEvent)@event);
+                handleShipRepairedEvent(shipRepairedEvent);
             }
-            else if (@event is ShipRepairDroneEvent)
+            else if (@event is ShipRepairDroneEvent shipRepairDroneEvent)
             {
-                handleShipRepairDroneEvent((ShipRepairDroneEvent)@event);
+                handleShipRepairDroneEvent(shipRepairDroneEvent);
             }
-            else if (@event is ShipRepurchasedEvent)
+            else if (@event is ShipRepurchasedEvent shipRepurchasedEvent)
             {
-                handleShipRepurchasedEvent((ShipRepurchasedEvent)@event);
+                handleShipRepurchasedEvent(shipRepurchasedEvent);
             }
-            else if (@event is ShipRestockedEvent)
+            else if (@event is ShipRestockedEvent shipRestockedEvent)
             {
-                handleShipRestockedEvent((ShipRestockedEvent)@event);
+                handleShipRestockedEvent(shipRestockedEvent);
             }
-            else if (@event is ModulePurchasedEvent)
+            else if (@event is ModulePurchasedEvent modulePurchasedEvent)
             {
-                handleModulePurchasedEvent((ModulePurchasedEvent)@event);
+                handleModulePurchasedEvent(modulePurchasedEvent);
             }
-            else if (@event is ModuleRetrievedEvent)
+            else if (@event is ModuleRetrievedEvent moduleRetrievedEvent)
             {
-                handleModuleRetrievedEvent((ModuleRetrievedEvent)@event);
+                handleModuleRetrievedEvent(moduleRetrievedEvent);
             }
-            else if (@event is ModuleSoldEvent)
+            else if (@event is ModuleSoldEvent moduleSoldEvent)
             {
-                handleModuleSoldEvent((ModuleSoldEvent)@event);
+                handleModuleSoldEvent(moduleSoldEvent);
             }
-            else if (@event is ModuleSoldFromStorageEvent)
+            else if (@event is ModuleSoldFromStorageEvent moduleSoldFromStorageEvent)
             {
-                handleModuleSoldFromStorageEvent((ModuleSoldFromStorageEvent)@event);
+                handleModuleSoldFromStorageEvent(moduleSoldFromStorageEvent);
             }
-            else if (@event is ModuleStoredEvent)
+            else if (@event is ModuleStoredEvent moduleStoredEvent)
             {
-                handleModuleStoredEvent((ModuleStoredEvent)@event);
+                handleModuleStoredEvent(moduleStoredEvent);
             }
-            else if (@event is ModulesStoredEvent)
+            else if (@event is ModulesStoredEvent modulesStoredEvent)
             {
-                handleModulesStoredEvent((ModulesStoredEvent)@event);
+                handleModulesStoredEvent(modulesStoredEvent);
             }
-            else if (@event is ModuleSwappedEvent)
+            else if (@event is ModuleSwappedEvent moduleSwappedEvent)
             {
-                handleModuleSwappedEvent((ModuleSwappedEvent)@event);
+                handleModuleSwappedEvent(moduleSwappedEvent);
             }
-            else if (@event is ModuleTransferEvent)
+            else if (@event is ModuleTransferEvent moduleTransferEvent)
             {
-                handleModuleTransferEvent((ModuleTransferEvent)@event);
+                handleModuleTransferEvent(moduleTransferEvent);
             }
-            else if (@event is ModuleInfoEvent)
+            else if (@event is ModuleInfoEvent moduleInfoEvent)
             {
-                handleModuleInfoEvent((ModuleInfoEvent)@event);
+                handleModuleInfoEvent(moduleInfoEvent);
             }
-            else if (@event is StoredModulesEvent)
+            else if (@event is StoredModulesEvent storedModulesEvent)
             {
-                handleStoredModulesEvent((StoredModulesEvent)@event);
+                handleStoredModulesEvent(storedModulesEvent);
             }
-            else if (@event is BountyIncurredEvent)
+            else if (@event is BountyIncurredEvent bountyIncurredEvent)
             {
-                handleBountyIncurredEvent((BountyIncurredEvent)@event);
+                handleBountyIncurredEvent(bountyIncurredEvent);
             }
-            else if (@event is BountyPaidEvent)
+            else if (@event is BountyPaidEvent bountyPaidEvent)
             {
-                handleBountyPaidEvent((BountyPaidEvent)@event);
+                handleBountyPaidEvent(bountyPaidEvent);
             }
         }
 
@@ -1076,9 +1076,9 @@ namespace EddiShipMonitor
 
         public void PostHandle(Event @event)
         {
-            if (@event is ShipLoadoutEvent)
+            if (@event is ShipLoadoutEvent shipLoadoutEvent)
             {
-                posthandleShipLoadoutEvent((ShipLoadoutEvent)@event);
+                posthandleShipLoadoutEvent(shipLoadoutEvent);
             }
         }
 
diff --git a/SpeechResponder/CustomFunctions/StationDetails.cs b/SpeechResponder/CustomFunctions/StationDetails.cs
index a322bb87..99063822 100644
--- a/SpeechResponder/CustomFunctions/StationDetails.cs
+++ b/SpeechResponder/CustomFunctions/StationDetails.cs
@@ -35,7 +35,7 @@ namespace EddiSpeechResponder.CustomFunctions
                     // Named system
                     system = StarSystemSqLiteRepository.Instance.GetOrFetchStarSystem(values[1].AsString, true);
                 }
-                result = system != null && system.stations != null ? system.stations.FirstOrDefault(v => v.name.ToLowerInvariant() == values[0].AsString.ToLowerInvariant()) : null;
+                result = system?.stations != null ? system.stations.FirstOrDefault(v => v.name.ToLowerInvariant() == values[0].AsString.ToLowerInvariant()) : null;
             }
             return new ReflectionValue(result ?? new object());
         }, 1, 2);
diff --git a/SpeechResponder/Personality.cs b/SpeechResponder/Personality.cs
index 65842f7f..bbd05d2a 100644
--- a/SpeechResponder/Personality.cs
+++ b/SpeechResponder/Personality.cs
@@ -40,7 +40,7 @@ namespace EddiSpeechResponder
         {
             // Ensure that the name doesn't have any illegal characters
             string regexSearch = new string(Path.GetInvalidFileNameChars()) + new string(Path.GetInvalidPathChars());
-            Regex r = new Regex(string.Format("[{0}]", Regex.Escape(regexSearch)));
+            Regex r = new Regex($"[{Regex.Escape(regexSearch)}]");
             Name = r.Replace(name, "");
 
             Name = name;
@@ -171,7 +171,7 @@ namespace EddiSpeechResponder
         {
             // Tidy the name up to avoid bad characters
             string regexSearch = new string(Path.GetInvalidFileNameChars()) + new string(Path.GetInvalidPathChars());
-            Regex r = new Regex(string.Format("[{0}]", Regex.Escape(regexSearch)));
+            Regex r = new Regex($"[{Regex.Escape(regexSearch)}]");
             name = r.Replace(name, "");
 
             // Save a copy of this personality
diff --git a/SpeechResponder/SpeechResponder.cs b/SpeechResponder/SpeechResponder.cs
index 145539a4..892665a2 100644
--- a/SpeechResponder/SpeechResponder.cs
+++ b/SpeechResponder/SpeechResponder.cs
@@ -52,7 +52,7 @@ namespace EddiSpeechResponder
         {
             SpeechResponderConfiguration configuration = SpeechResponderConfiguration.FromFile();
             Personality personality = null;
-            if (configuration != null && configuration.Personality != null)
+            if (configuration?.Personality != null)
             {
                 personality = Personality.FromName(configuration.Personality);
             }
@@ -106,10 +106,10 @@ namespace EddiSpeechResponder
             {
                 sampleEvents = new List<Event>();
             }
-            else if (sample is string)
+            else if (sample is string s)
             {
                 // It's a string so a journal entry.  Parse it
-                sampleEvents = JournalMonitor.ParseJournalEntry((string)sample);
+                sampleEvents = JournalMonitor.ParseJournalEntry(s);
             }
             else if (sample is Event)
             {
diff --git a/StarMapService/StarMapService.cs b/StarMapService/StarMapService.cs
index 17608310..3d80bcfa 100644
--- a/StarMapService/StarMapService.cs
+++ b/StarMapService/StarMapService.cs
@@ -307,7 +307,7 @@ namespace EddiStarMapService
             StarMapCommentResponse response = starMapCommentResponse.Data;
 
             Dictionary<string, string> vals = new Dictionary<string, string>();
-            if (response != null && response.comments != null)
+            if (response?.comments != null)
             {
                 foreach (StarMapResponseCommentEntry entry in response.comments)
                 {
diff --git a/Tests/CrimeMonitorTests.cs b/Tests/CrimeMonitorTests.cs
index 52e1946c..ff6028e5 100644
--- a/Tests/CrimeMonitorTests.cs
+++ b/Tests/CrimeMonitorTests.cs
@@ -207,7 +207,7 @@ namespace UnitTests
             privateObject.Invoke("_handleBountyAwardedEvent", new object[] { events[0], true });
             record = crimeMonitor.criminalrecord.FirstOrDefault(r => r.faction == "Calennero State Industries");
             record.factionReports.FirstOrDefault(r => r.amount == 22265).shipId = 10;
-            Assert.AreEqual(2, record.factionReports.Where(r => r.bounty && r.crimeDef == Crime.None).Count());
+            Assert.AreEqual(2, record.factionReports.Count(r => r.bounty && r.crimeDef == Crime.None));
             Assert.AreEqual(127433, record.bountiesAmount);
 
             // Fine Incurred Event
@@ -217,7 +217,7 @@ namespace UnitTests
             privateObject.Invoke("_handleFineIncurredEvent", new object[] { events[0] });
             record = crimeMonitor.criminalrecord.FirstOrDefault(r => r.faction == "Constitution Party of Aerial");
             record.factionReports.FirstOrDefault(r => !r.bounty && r.crimeDef != Crime.None).shipId = 10;
-            Assert.AreEqual(1, record.factionReports.Where(r => !r.bounty && r.crimeDef != Crime.None).Count());
+            Assert.AreEqual(1, record.factionReports.Count(r => !r.bounty && r.crimeDef != Crime.None));
             Assert.AreEqual(400, record.finesIncurred.Sum(r => r.amount));
 
             // Bounty Incurred Event
@@ -227,7 +227,7 @@ namespace UnitTests
             privateObject.Invoke("_handleBountyIncurredEvent", new object[] { events[0] });
             record = crimeMonitor.criminalrecord.FirstOrDefault(r => r.faction == "Calennero State Industries");
             record.factionReports.FirstOrDefault(r => r.bounty && r.crimeDef != Crime.None).shipId = 10;
-            Assert.AreEqual(1, record.factionReports.Where(r => r.bounty && r.crimeDef != Crime.None).Count());
+            Assert.AreEqual(1, record.factionReports.Count(r => r.bounty && r.crimeDef != Crime.None));
             Assert.AreEqual(400, record.bountiesIncurred.Sum(r => r.amount));
 
             // Redeem Bond Event
@@ -236,7 +236,7 @@ namespace UnitTests
             Assert.IsTrue(events.Count == 1);
             privateObject.Invoke("_handleBondRedeemedEvent", new object[] { events[0] });
             record = crimeMonitor.criminalrecord.FirstOrDefault(r => r.faction == "Constitution Party of Aerial");
-            Assert.AreEqual(0, record.factionReports.Where(r => !r.bounty && r.crimeDef == Crime.None).Count());
+            Assert.AreEqual(0, record.factionReports.Count(r => !r.bounty && r.crimeDef == Crime.None));
 
             // Redeem Bounty Event - Multiple
             line = "{ \"timestamp\":\"2019-04-09T10:31:31Z\", \"event\":\"RedeemVoucher\", \"Type\":\"bounty\", \"Amount\":213896, \"Factions\":[ { \"Faction\":\"Calennero State Industries\", \"Amount\":105168 }, { \"Faction\":\"HIP 20277 Inc\", \"Amount\":108728 } ] }";
@@ -245,7 +245,7 @@ namespace UnitTests
             privateObject.Invoke("_handleBountyRedeemedEvent", new object[] { events[0] });
             record = crimeMonitor.criminalrecord.FirstOrDefault(r => r.faction == "Calennero State Industries");
             Assert.IsNotNull(record);
-            Assert.AreEqual(0, record.factionReports.Where(r => r.bounty && r.crimeDef == Crime.None).Count());
+            Assert.AreEqual(0, record.factionReports.Count(r => r.bounty && r.crimeDef == Crime.None));
             record = crimeMonitor.criminalrecord.FirstOrDefault(r => r.faction == "HIP 20277 Inc");
             Assert.IsNull(record);
 
@@ -255,7 +255,7 @@ namespace UnitTests
             Assert.IsTrue(events.Count == 1);
             privateObject.Invoke("_handleFinePaidEvent", new object[] { events[0] });
             record = crimeMonitor.criminalrecord.FirstOrDefault(r => r.faction == "Calennero State Industries");
-            Assert.AreEqual(0, record.factionReports.Where(r => !r.bounty && r.crimeDef != Crime.None).Count());
+            Assert.AreEqual(0, record.factionReports.Count(r => !r.bounty && r.crimeDef != Crime.None));
             Assert.AreEqual(0, record.finesIncurred.Sum(r => r.amount));
             record = crimeMonitor.criminalrecord.FirstOrDefault(r => r.faction == "Constitution Party of Aerial");
             Assert.IsNull(record);
diff --git a/Tests/MissionMonitorTests.cs b/Tests/MissionMonitorTests.cs
index 2a52b9bc..e2a30eeb 100644
--- a/Tests/MissionMonitorTests.cs
+++ b/Tests/MissionMonitorTests.cs
@@ -166,7 +166,7 @@ namespace UnitTests
             Assert.IsTrue(events.Count == 1);
             missionMonitor._handleMissionsEvent((MissionsEvent)events[0]);
             Assert.AreEqual(3, missionMonitor.missions.Count);
-            Assert.AreEqual(3, missionMonitor.missions.Where(m => m.statusEDName == "Active").Count());
+            Assert.AreEqual(3, missionMonitor.missions.Count(m => m.statusEDName == "Active"));
 
             //CargoDepotEvent - 'Shared'
             line = @"{ ""timestamp"":""2018-08-26T02:55:10Z"", ""event"":""CargoDepot"", ""MissionID"":413748365, ""UpdateType"":""WingUpdate"", ""CargoType"":""Gold"", ""Count"":20, ""StartMarketID"":0, ""EndMarketID"":3224777216, ""ItemsCollected"":0, ""ItemsDelivered"":20, ""TotalItemsToDeliver"":54, ""Progress"":0.000000 }";
@@ -220,7 +220,7 @@ namespace UnitTests
             events = JournalMonitor.ParseJournalEntry(line);
             Assert.IsTrue(events.Count == 1);
             missionMonitor._handleMissionAcceptedEvent((MissionAcceptedEvent)events[0]);
-            Assert.AreEqual(1, missionMonitor.missions.ToList().Where(m => m.missionid == 413748324).Count());
+            Assert.AreEqual(1, missionMonitor.missions.ToList().Count(m => m.missionid == 413748324));
             Assert.AreEqual(4, missionMonitor.missions.Count);
 
             //CargoDepotEvent - 'Collect'
diff --git a/Utilities/Files.cs b/Utilities/Files.cs
index 1dd82783..faec1185 100644
--- a/Utilities/Files.cs
+++ b/Utilities/Files.cs
@@ -272,10 +272,7 @@ namespace Utilities
             }
             finally
             {
-                if (stream != null)
-                {
-                    stream.Close();
-                }
+                stream?.Close();
             }
 
             //file is not locked
