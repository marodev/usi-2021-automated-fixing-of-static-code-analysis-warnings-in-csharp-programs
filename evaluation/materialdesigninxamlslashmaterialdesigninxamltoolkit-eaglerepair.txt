Found the following rules to apply: UseMethodAnyRewriterR6, MergeSequentialChecksRewriterR2, NullChecksShouldNotBeUsedWithIsRewriterR3, SimplifyLinqRewriterR4, TypeCheckAndCastRewriterR5, UseNullPropagationRewriterR7, UsePatternMatchingRewriterR8, UseStringInterpolationRewriterR9, UseStringIsNullOrEmptyRewriterR10



Project: MaterialDesignThemes.Wpf(net452)
    #1 Path: D:\a\1\s\MaterialDesignThemes.Wpf\Converters\PointValueConverter.cs, Line: 26, Message: ReSharper: Type check and casts can be merged. See https://www.jetbrains.com/help/resharper/MergeCastWithTypeCheck.html / SonarQube: Duplicate casts should not be made. See https://rules.sonarsource.com/csharp/RSPEC-3247
    #2 Path: D:\a\1\s\MaterialDesignThemes.Wpf\Converters\SnackbarMessageTypeConverter.cs, Line: 17, Message: ReSharper: Convert 'as' expression type check and the following null check into pattern matching. See https://www.jetbrains.com/help/resharper/UsePatternMatching.html
    #3 Path: D:\a\1\s\MaterialDesignThemes.Wpf\DataGridTextColumn.cs, Line: 11, Message: ReSharper: Convert 'as' expression type check and the following null check into pattern matching. See https://www.jetbrains.com/help/resharper/UsePatternMatching.html
    #4 Path: D:\a\1\s\MaterialDesignThemes.Wpf\Plane3D.cs, Line: 235, Message: ReSharper: Replace if statement with null-propagating code. See https://www.jetbrains.com/help/resharper/UseNullPropagation.html
    #5 Path: D:\a\1\s\MaterialDesignThemes.Wpf\Plane3D.cs, Line: 245, Message: ReSharper: Replace if statement with null-propagating code. See https://www.jetbrains.com/help/resharper/UseNullPropagation.html
    #6 Path: D:\a\1\s\MaterialDesignThemes.Wpf\PopupEx.cs, Line: 134, Message: ReSharper: Convert 'as' expression type check and the following null check into pattern matching. See https://www.jetbrains.com/help/resharper/UsePatternMatching.html
    #7 Path: D:\a\1\s\MaterialDesignThemes.Wpf\Ripple.cs, Line: 45, Message: ReSharper: Convert 'as' expression type check and the following null check into pattern matching. See https://www.jetbrains.com/help/resharper/UsePatternMatching.html
    #8 Path: D:\a\1\s\MaterialDesignThemes.Wpf\Ripple.cs, Line: 52, Message: ReSharper: Convert 'as' expression type check and the following null check into pattern matching. See https://www.jetbrains.com/help/resharper/UsePatternMatching.html
    #9 Path: D:\a\1\s\MaterialDesignThemes.Wpf\Ripple.cs, Line: 57, Message: ReSharper: Convert 'as' expression type check and the following null check into pattern matching. See https://www.jetbrains.com/help/resharper/UsePatternMatching.html
    #10 Path: D:\a\1\s\MaterialDesignThemes.Wpf\SnackbarMessage.cs, Line: 117, Message: ReSharper: Convert 'as' expression type check and the following null check into pattern matching. See https://www.jetbrains.com/help/resharper/UsePatternMatching.html
    #11 Path: D:\a\1\s\MaterialDesignThemes.Wpf\TextFieldAssist.cs, Line: 406, Message: ReSharper: Convert 'as' expression type check and the following null check into pattern matching. See https://www.jetbrains.com/help/resharper/UsePatternMatching.html
    #12 Path: D:\a\1\s\MaterialDesignThemes.Wpf\Transitions\IndexedItemOffsetMultiplierExtension.cs, Line: 74, Message: ReSharper: Convert 'as' expression type check and the following null check into pattern matching. See https://www.jetbrains.com/help/resharper/UsePatternMatching.html



Project: mdresgen
    #13 Path: D:\a\1\s\mdresgen\Program.cs, Line: 209, Message: ReSharper: Use string interpolation expression. See https://www.jetbrains.com/help/resharper/UseStringInterpolation.html
    #14 Path: D:\a\1\s\mdresgen\Program.cs, Line: 232, Message: ReSharper: Use string interpolation expression. See https://www.jetbrains.com/help/resharper/UseStringInterpolation.html
    #15 Path: D:\a\1\s\mdresgen\Program.cs, Line: 240, Message: ReSharper: Use string interpolation expression. See https://www.jetbrains.com/help/resharper/UseStringInterpolation.html
    #16 Path: D:\a\1\s\mdresgen\Program.cs, Line: 242, Message: ReSharper: Use string interpolation expression. See https://www.jetbrains.com/help/resharper/UseStringInterpolation.html
    #17 Path: D:\a\1\s\mdresgen\Program.cs, Line: 298, Message: ReSharper: Use string interpolation expression. See https://www.jetbrains.com/help/resharper/UseStringInterpolation.html
    #18 Path: D:\a\1\s\mdresgen\Program.cs, Line: 306, Message: ReSharper: Use string interpolation expression. See https://www.jetbrains.com/help/resharper/UseStringInterpolation.html
    #19 Path: D:\a\1\s\mdresgen\Program.cs, Line: 313, Message: ReSharper: Use string interpolation expression. See https://www.jetbrains.com/help/resharper/UseStringInterpolation.html



--- Rules Summary ---
R8: 9
R9: 7
R7: 2
R5: 1

--- Summary ---
Fixed ReSharper issues: 19
Fixed SonarQube issues: 1
Total fixed issues: 19

Finished in: 16 s

######################################################################
Nr: 1 - TypeCheckAndCastRewriterR5
Filepath: D:\a\1\s\MaterialDesignThemes.Wpf\ScaleHelper.cs
Description: Error: The created Syntax Tree is semantically incorrect.
------------------------------------------------------------------------
---- Original Tree ----
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Media;

namespace MaterialDesignThemes.Wpf
{
    internal static class ScaleHelper
    {
        internal static double GetTotalTransformScaleX(Visual visual)
        {
            double totalTransform = 1.0d;
            DependencyObject currentVisualTreeElement = visual;
            do
            {
                if (currentVisualTreeElement is Visual)
                {
                    visual = (Visual)currentVisualTreeElement;
                    Transform transform = VisualTreeHelper.GetTransform(visual);
                    if ((transform != null) &&
                        (transform.Value.M12 == 0) &&
                        (transform.Value.OffsetX == 0))
                    {
                        totalTransform *= transform.Value.M11;
                    }
                }
                currentVisualTreeElement = VisualTreeHelper.GetParent(currentVisualTreeElement);
            }
            while (currentVisualTreeElement != null);

            return totalTransform;
        }

        internal static double GetTotalTransformScaleY(Visual visual)
        {
            double totalTransform = 1.0d;
            DependencyObject currentVisualTreeElement = visual;
            do
            {
                if (currentVisualTreeElement is Visual)
                {
                    visual = (Visual)currentVisualTreeElement;
                    Transform transform = VisualTreeHelper.GetTransform(visual);
                    if ((transform != null) &&
                        (transform.Value.M21 == 0) &&
                        (transform.Value.OffsetY == 0))
                    {
                        totalTransform *= transform.Value.M22;
                    }
                }
                currentVisualTreeElement = VisualTreeHelper.GetParent(currentVisualTreeElement);
            }
            while (currentVisualTreeElement != null);

            return totalTransform;
        }
    }
}

---- Transformed Tree ----
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Media;

namespace MaterialDesignThemes.Wpf
{
    internal static class ScaleHelper
    {
        internal static double GetTotalTransformScaleX(Visual visual)
        {
            double totalTransform = 1.0d;
            DependencyObject currentVisualTreeElement = visual;
            do
            {
                if (currentVisualTreeElement is Visual visual)
                {
                    visual = visual;
                    Transform transform = VisualTreeHelper.GetTransform(visual);
                    if ((transform != null) &&
                        (transform.Value.M12 == 0) &&
                        (transform.Value.OffsetX == 0))
                    {
                        totalTransform *= transform.Value.M11;
                    }
                }
                currentVisualTreeElement = VisualTreeHelper.GetParent(currentVisualTreeElement);
            }
            while (currentVisualTreeElement != null);

            return totalTransform;
        }

        internal static double GetTotalTransformScaleY(Visual visual)
        {
            double totalTransform = 1.0d;
            DependencyObject currentVisualTreeElement = visual;
            do
            {
                if (currentVisualTreeElement is Visual visual)
                {
                    visual = visual;
                    Transform transform = VisualTreeHelper.GetTransform(visual);
                    if ((transform != null) &&
                        (transform.Value.M21 == 0) &&
                        (transform.Value.OffsetY == 0))
                    {
                        totalTransform *= transform.Value.M22;
                    }
                }
                currentVisualTreeElement = VisualTreeHelper.GetParent(currentVisualTreeElement);
            }
            while (currentVisualTreeElement != null);

            return totalTransform;
        }
    }
}

---- Semantic diagnostics *before* transformation ----
D:\a\1\s\MaterialDesignThemes.Wpf\ScaleHelper.cs(4,1): hidden CS8019: Unnecessary using directive.,D:\a\1\s\MaterialDesignThemes.Wpf\ScaleHelper.cs(2,1): hidden CS8019: Unnecessary using directive.,D:\a\1\s\MaterialDesignThemes.Wpf\ScaleHelper.cs(3,1): hidden CS8019: Unnecessary using directive.,D:\a\1\s\MaterialDesignThemes.Wpf\ScaleHelper.cs(1,1): hidden CS8019: Unnecessary using directive.,D:\a\1\s\MaterialDesignThemes.Wpf\ScaleHelper.cs(5,1): hidden CS8019: Unnecessary using directive.
---- Semantic diagnostics *after* transformation ----
D:\a\1\s\MaterialDesignThemes.Wpf\ScaleHelper.cs(19,56): error CS0136: A local or parameter named 'visual' cannot be declared in this scope because that name is used in an enclosing local scope to define a local or parameter,D:\a\1\s\MaterialDesignThemes.Wpf\ScaleHelper.cs(21,21): warning CS1717: Assignment made to same variable; did you mean to assign something else?,D:\a\1\s\MaterialDesignThemes.Wpf\ScaleHelper.cs(43,56): error CS0136: A local or parameter named 'visual' cannot be declared in this scope because that name is used in an enclosing local scope to define a local or parameter,D:\a\1\s\MaterialDesignThemes.Wpf\ScaleHelper.cs(45,21): warning CS1717: Assignment made to same variable; did you mean to assign something else?,D:\a\1\s\MaterialDesignThemes.Wpf\ScaleHelper.cs(2,1): hidden CS8019: Unnecessary using directive.,D:\a\1\s\MaterialDesignThemes.Wpf\ScaleHelper.cs(4,1): hidden CS8019: Unnecessary using directive.,D:\a\1\s\MaterialDesignThemes.Wpf\ScaleHelper.cs(5,1): hidden CS8019: Unnecessary using directive.,D:\a\1\s\MaterialDesignThemes.Wpf\ScaleHelper.cs(1,1): hidden CS8019: Unnecessary using directive.,D:\a\1\s\MaterialDesignThemes.Wpf\ScaleHelper.cs(3,1): hidden CS8019: Unnecessary using directive.
######################################################################


