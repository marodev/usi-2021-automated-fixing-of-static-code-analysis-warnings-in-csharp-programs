diff --git a/Scripts/Abilities/BleedAttack.cs b/Scripts/Abilities/BleedAttack.cs
index 6413c80b0..1c9c323b4 100644
--- a/Scripts/Abilities/BleedAttack.cs
+++ b/Scripts/Abilities/BleedAttack.cs
@@ -40,7 +40,7 @@ namespace Server.Items
                 }
             }
 
-            BuffInfo.AddBuff(m, new BuffInfo(BuffIcon.Bleed, 1075829, 1075830, TimeSpan.FromSeconds(10), m, string.Format("{0}\t{1}\t{2}", "1", "10", "2")));
+            BuffInfo.AddBuff(m, new BuffInfo(BuffIcon.Bleed, 1075829, 1075830, TimeSpan.FromSeconds(10), m, $"{"1"}\t{"10"}\t{"2"}"));
 
             timer = new BleedTimer(from, m, CheckBloodDrink(from));
             m_BleedTable[m] = timer;
diff --git a/Scripts/Abilities/Block.cs b/Scripts/Abilities/Block.cs
index 1e2909559..bf6ea6f7f 100644
--- a/Scripts/Abilities/Block.cs
+++ b/Scripts/Abilities/Block.cs
@@ -79,7 +79,7 @@ namespace Server.Items
             BlockInfo info = new BlockInfo(dciBonus, spellblock, meleeblock);
             _Table[m] = info;
 
-            string args = string.Format("{0}\t{1}\t{2}\t{3}\t{4}", dciBonus, spellblock, meleeblock, "15", "30");
+            string args = $"{dciBonus}\t{spellblock}\t{meleeblock}\t{"15"}\t{"30"}";
 
             BuffInfo.AddBuff(m, new BuffInfo(BuffIcon.Block, 1151291, 1151292, TimeSpan.FromSeconds(6), m, args));
             // Next incoming damage reduced.<br>Defense Chance Increase: +~1_val~%<br>Incoming Spell Damage: -~2_val~%<br>Incoming Attack Damage: -~3_val~%<br>Hit Chance Penalty: ~4_val~%<br>Damage Penalty: ~5_val~%
diff --git a/Scripts/Abilities/DefenseMastery.cs b/Scripts/Abilities/DefenseMastery.cs
index 568e9ce45..3a5feab4c 100644
--- a/Scripts/Abilities/DefenseMastery.cs
+++ b/Scripts/Abilities/DefenseMastery.cs
@@ -41,9 +41,7 @@ namespace Server.Items
 
             int modifier = (int)(30.0 * ((Math.Max(attacker.Skills[SkillName.Bushido].Value, attacker.Skills[SkillName.Ninjitsu].Value) - 50.0) / 70.0));
 
-            DefenseMasteryInfo info = m_Table[attacker] as DefenseMasteryInfo;
-
-            if (info != null)
+            if (m_Table[attacker] is DefenseMasteryInfo info)
                 EndDefense(info);
 
             ResistanceMod mod = new ResistanceMod(ResistanceType.Physical, 50 + modifier);
diff --git a/Scripts/Abilities/DoubleShot.cs b/Scripts/Abilities/DoubleShot.cs
index febaaf04e..a1c10cc61 100644
--- a/Scripts/Abilities/DoubleShot.cs
+++ b/Scripts/Abilities/DoubleShot.cs
@@ -9,9 +9,7 @@ namespace Server.Items
 
         public override bool OnBeforeDamage(Mobile attacker, Mobile defender)
         {
-            BaseWeapon wep = attacker.Weapon as BaseWeapon;
-
-            if (wep != null)
+            if (attacker.Weapon is BaseWeapon wep)
                 wep.ProcessingMultipleHits = true;
 
             return true;
diff --git a/Scripts/Abilities/DoubleStrike.cs b/Scripts/Abilities/DoubleStrike.cs
index e3d994507..f45dbf96f 100644
--- a/Scripts/Abilities/DoubleStrike.cs
+++ b/Scripts/Abilities/DoubleStrike.cs
@@ -11,9 +11,7 @@ namespace Server.Items
 
         public override bool OnBeforeDamage(Mobile attacker, Mobile defender)
         {
-            BaseWeapon wep = attacker.Weapon as BaseWeapon;
-
-            if (wep != null)
+            if (attacker.Weapon is BaseWeapon wep)
                 wep.InDoubleStrike = true;
 
             return true;
diff --git a/Scripts/Abilities/Feint.cs b/Scripts/Abilities/Feint.cs
index 78a4621b4..3365f476e 100644
--- a/Scripts/Abilities/Feint.cs
+++ b/Scripts/Abilities/Feint.cs
@@ -51,7 +51,7 @@ namespace Server.Items
             t.Start();
             m_Registry[attacker] = t;
 
-            string args = string.Format("{0}\t{1}", defender.Name, bonus);
+            string args = $"{defender.Name}\t{bonus}";
             BuffInfo.AddBuff(attacker, new BuffInfo(BuffIcon.Feint, 1151308, 1151307, TimeSpan.FromSeconds(6), attacker, args));
 
             if (creature)
diff --git a/Scripts/Abilities/Focus.cs b/Scripts/Abilities/Focus.cs
index 46fa1399a..955d80cd7 100644
--- a/Scripts/Abilities/Focus.cs
+++ b/Scripts/Abilities/Focus.cs
@@ -27,9 +27,7 @@ namespace Server.Items
 
         public static void OnLogin(LoginEventArgs e)
         {
-            PlayerMobile pm = e.Mobile as PlayerMobile;
-
-            if (pm != null)
+            if (e.Mobile is PlayerMobile pm)
             {
                 UpdateBuff(pm);
             }
@@ -59,7 +57,7 @@ namespace Server.Items
                     FocusInfo info = m_Table[from];
 
                     BuffInfo.AddBuff(from, new BuffInfo(BuffIcon.RageFocusingBuff, 1151393, 1151394,
-                        string.Format("{0}\t{1}", info.Target == null ? "NONE" : info.Target.Name, info.DamageBonus)));
+                        $"{(info.Target == null ? "NONE" : info.Target.Name)}\t{info.DamageBonus}"));
                 }
 
                 m_Table[from] = new FocusInfo(target, DefaultDamageBonus);
diff --git a/Scripts/Abilities/ForceArrow.cs b/Scripts/Abilities/ForceArrow.cs
index 7718c0792..3d5101d31 100644
--- a/Scripts/Abilities/ForceArrow.cs
+++ b/Scripts/Abilities/ForceArrow.cs
@@ -39,9 +39,7 @@ namespace Server.Items
                 }
             }
 
-            Spell spell = defender.Spell as Spell;
-
-            if (spell != null && spell.IsCasting)
+            if (defender.Spell is Spell spell && spell.IsCasting)
                 spell.Disturb(DisturbType.Hurt, false, true);
         }
 
diff --git a/Scripts/Abilities/FrenziedWhirlwind.cs b/Scripts/Abilities/FrenziedWhirlwind.cs
index 15936f076..43f7864a0 100644
--- a/Scripts/Abilities/FrenziedWhirlwind.cs
+++ b/Scripts/Abilities/FrenziedWhirlwind.cs
@@ -68,8 +68,8 @@ namespace Server.Items
                     Timer.DelayCall(TimeSpan.FromSeconds(2), mob => mob.SendSpeedControl(SpeedControlType.Disable), defender);
                 }
 
-                if (attacker is BaseCreature)
-                    PetTrainingHelper.OnWeaponAbilityUsed((BaseCreature)attacker, SkillName.Ninjitsu);
+                if (attacker is BaseCreature baseCreature)
+                    PetTrainingHelper.OnWeaponAbilityUsed(baseCreature, SkillName.Ninjitsu);
             }
         }
 
diff --git a/Scripts/Abilities/MysticArc.cs b/Scripts/Abilities/MysticArc.cs
index 3a492cc3e..09c48bfa1 100644
--- a/Scripts/Abilities/MysticArc.cs
+++ b/Scripts/Abilities/MysticArc.cs
@@ -46,10 +46,7 @@ namespace Server.Items
 
             if (m_Target != null)
             {
-                if (defender != null)
-                {
-                    defender.MovingEffect(m_Target, weapon.ItemID, 18, 1, false, false);
-                }
+                defender?.MovingEffect(m_Target, weapon.ItemID, 18, 1, false, false);
 
                 Timer.DelayCall(TimeSpan.FromMilliseconds(333.0), ThrowAgain);
                 m_Mobile = attacker;
diff --git a/Scripts/Abilities/NerveStrike.cs b/Scripts/Abilities/NerveStrike.cs
index 7b1e8cc2f..4ddf9b8a7 100644
--- a/Scripts/Abilities/NerveStrike.cs
+++ b/Scripts/Abilities/NerveStrike.cs
@@ -44,8 +44,8 @@ namespace Server.Items
                 doEffects = true;
             }
 
-            if (attacker is BaseCreature)
-                PetTrainingHelper.OnWeaponAbilityUsed((BaseCreature)attacker, SkillName.Bushido);
+            if (attacker is BaseCreature baseCreature)
+                PetTrainingHelper.OnWeaponAbilityUsed(baseCreature, SkillName.Bushido);
 
             if (!immune)
             {
diff --git a/Scripts/Abilities/ParalyzingBlow.cs b/Scripts/Abilities/ParalyzingBlow.cs
index e68fd487d..e4a0395d0 100644
--- a/Scripts/Abilities/ParalyzingBlow.cs
+++ b/Scripts/Abilities/ParalyzingBlow.cs
@@ -61,10 +61,7 @@ namespace Server.Items
 
             if (defender.Paralyzed)
             {
-                if (attacker != null)
-                {
-                    attacker.SendLocalizedMessage(1061923); // The target is already frozen.
-                }
+                attacker?.SendLocalizedMessage(1061923);
 
                 return false;
             }
diff --git a/Scripts/Abilities/PsychicAttack.cs b/Scripts/Abilities/PsychicAttack.cs
index 8aa81e4e7..d44c77e2e 100644
--- a/Scripts/Abilities/PsychicAttack.cs
+++ b/Scripts/Abilities/PsychicAttack.cs
@@ -33,7 +33,7 @@ namespace Server.Items
 
             BuffInfo.RemoveBuff(defender, BuffIcon.PsychicAttack);
 
-            string args = string.Format("{0}\t{1}", m_Registry[defender].SpellDamageMalus, m_Registry[defender].ManaCostMalus);
+            string args = $"{m_Registry[defender].SpellDamageMalus}\t{m_Registry[defender].ManaCostMalus}";
             BuffInfo.AddBuff(defender, new BuffInfo(BuffIcon.PsychicAttack, 1151296, 1151297, args));
         }
 
diff --git a/Scripts/Abilities/RidingSwipe.cs b/Scripts/Abilities/RidingSwipe.cs
index 93455972e..6fda5e17e 100644
--- a/Scripts/Abilities/RidingSwipe.cs
+++ b/Scripts/Abilities/RidingSwipe.cs
@@ -55,8 +55,8 @@ namespace Server.Items
 
                 Items.Dismount.DoDismount(attacker, defender, mount, 10, type);
 
-                if (mount is Mobile)
-                    AOS.Damage((Mobile)mount, attacker, amount, 100, 0, 0, 0, 0);
+                if (mount is Mobile mobile)
+                    AOS.Damage(mobile, attacker, amount, 100, 0, 0, 0, 0);
 
                 defender.PlaySound(0x140);
                 defender.FixedParticles(0x3728, 10, 15, 9955, EffectLayer.Waist);
diff --git a/Scripts/Abilities/SAPropEffects.cs b/Scripts/Abilities/SAPropEffects.cs
index 78a0028a1..96537f284 100644
--- a/Scripts/Abilities/SAPropEffects.cs
+++ b/Scripts/Abilities/SAPropEffects.cs
@@ -175,9 +175,8 @@ namespace Server.Items
 
         public static void CheckHit(Mobile attacker, Mobile defender, int damage)
         {
-            BaseShield shield = defender.FindItemOnLayer(Layer.TwoHanded) as BaseShield;
 
-            if (shield != null && shield.ArmorAttributes.SoulCharge > 0 && shield.ArmorAttributes.SoulCharge > Utility.Random(100))
+            if (defender.FindItemOnLayer(Layer.TwoHanded) is BaseShield shield && shield.ArmorAttributes.SoulCharge > 0 && shield.ArmorAttributes.SoulCharge > Utility.Random(100))
             {
                 SoulChargeContext sc = GetContextForVictim<SoulChargeContext>(defender);
 
@@ -586,10 +585,7 @@ namespace Server.Items
 
             SwarmContext context = GetContext<SwarmContext>(attacker, defender);
 
-            if (context != null)
-            {
-                context.RemoveEffects();
-            }
+            context?.RemoveEffects();
 
             AddEffects(context = new SwarmContext(attacker, defender, null));
 
diff --git a/Scripts/Abilities/WhirlwindAttack.cs b/Scripts/Abilities/WhirlwindAttack.cs
index 8476bb381..a31f3ae6e 100644
--- a/Scripts/Abilities/WhirlwindAttack.cs
+++ b/Scripts/Abilities/WhirlwindAttack.cs
@@ -16,9 +16,7 @@ namespace Server.Items
 
         public override bool OnBeforeDamage(Mobile attacker, Mobile defender)
         {
-            BaseWeapon wep = attacker.Weapon as BaseWeapon;
-
-            if (wep != null)
+            if (attacker.Weapon is BaseWeapon wep)
                 wep.ProcessingMultipleHits = true;
 
             return true;
@@ -96,10 +94,7 @@ namespace Server.Items
 
         private static void RemoveContext(WhirlwindAttackContext context)
         {
-            if (Contexts != null)
-            {
-                Contexts.Remove(context);
-            }
+            Contexts?.Remove(context);
         }
 
         public static int DamageBonus(Mobile attacker, Mobile defender)
diff --git a/Scripts/Accounting/Account.cs b/Scripts/Accounting/Account.cs
index be9adf738..efa0b89a4 100644
--- a/Scripts/Accounting/Account.cs
+++ b/Scripts/Accounting/Account.cs
@@ -755,9 +755,9 @@ namespace Server.Accounting
 
         public int CompareTo(object obj)
         {
-            if (obj is Account)
+            if (obj is Account account)
             {
-                return CompareTo((Account)obj);
+                return CompareTo(account);
             }
 
             throw new ArgumentException();
@@ -1526,9 +1526,7 @@ namespace Server.Accounting
                 acc.m_YoungTimer = null;
             }
 
-            PlayerMobile m = e.Mobile as PlayerMobile;
-
-            if (m != null)
+            if (e.Mobile is PlayerMobile m)
             {
                 acc.m_TotalGameTime += DateTime.UtcNow - m.SessionStart;
             }
diff --git a/Scripts/Accounting/AccountHandler.cs b/Scripts/Accounting/AccountHandler.cs
index 91689ce4d..0ae25d8c4 100644
--- a/Scripts/Accounting/AccountHandler.cs
+++ b/Scripts/Accounting/AccountHandler.cs
@@ -188,7 +188,7 @@ namespace Server.Misc
                         * Please check your Journal for messages every few minutes.
                         */
 
-                        PageQueue.Enqueue(new PageEntry(from, string.Format("[Automated: Change Password]<br>Desired password: {0}<br>Current IP address: {1}<br>Account IP address: {2}", pass, ipAddress, accessList[0]), PageType.Account));
+                        PageQueue.Enqueue(new PageEntry(from, $"[Automated: Change Password]<br>Desired password: {pass}<br>Current IP address: {ipAddress}<br>Account IP address: {accessList[0]}", PageType.Account));
                     }
                 }
             }
@@ -363,9 +363,7 @@ namespace Server.Misc
         {
             if (accCheck != null)
             {
-                Account a = accCheck.Account as Account;
-
-                if (a != null)
+                if (accCheck.Account is Account a)
                 {
                     for (int i = 0; i < a.Length; ++i)
                     {
@@ -424,7 +422,7 @@ namespace Server.Misc
                     Console.WriteLine("Client: {0}: Deleting character {1} (0x{2:X})", state, index, m.Serial.Value);
                     Utility.PopColor();
 
-                    acct.Comments.Add(new AccountComment("System", string.Format("Character #{0} {1} deleted by {2}", index + 1, m, state)));
+                    acct.Comments.Add(new AccountComment("System", $"Character #{index + 1} {m} deleted by {state}"));
 
                     m.Delete();
                     state.Send(new CharacterListUpdate(acct));
diff --git a/Scripts/Accounting/Firewall.cs b/Scripts/Accounting/Firewall.cs
index 30a96e551..c1a291687 100644
--- a/Scripts/Accounting/Firewall.cs
+++ b/Scripts/Accounting/Firewall.cs
@@ -75,7 +75,7 @@ namespace Server
 
             public override string ToString()
             {
-                return string.Format("{0}/{1}", m_CIDRPrefix, m_CIDRLength);
+                return $"{m_CIDRPrefix}/{m_CIDRLength}";
             }
 
             public override bool Equals(object obj)
diff --git a/Scripts/Commands/AccountGoldCheck.cs b/Scripts/Commands/AccountGoldCheck.cs
index a0d7c832c..8dea66e9d 100644
--- a/Scripts/Commands/AccountGoldCheck.cs
+++ b/Scripts/Commands/AccountGoldCheck.cs
@@ -27,7 +27,7 @@ namespace Server.Items
                         foreach (KeyValuePair<string, long> kvp in table.OrderBy(k => -k.Value))
                         {
                             op.WriteLine(
-                                string.Format("{0} currency: {1}", kvp.Key, kvp.Value.ToString("N0", System.Globalization.CultureInfo.GetCultureInfo("en-US"))));
+                                $"{kvp.Key} currency: {kvp.Value.ToString("N0", System.Globalization.CultureInfo.GetCultureInfo("en-US"))}");
                         }
 
                         op.WriteLine("");
diff --git a/Scripts/Commands/Add.cs b/Scripts/Commands/Add.cs
index ff559a056..fe4ea9fef 100644
--- a/Scripts/Commands/Add.cs
+++ b/Scripts/Commands/Add.cs
@@ -355,14 +355,13 @@ namespace Server.Commands
 
                         sb.AppendFormat("0x{0:X}; ", built.Serial.Value);
 
-                        if (built is Item)
+                        if (built is Item item)
                         {
                             Container pack = packs[i];
-                            pack.DropItem((Item)built);
+                            pack.DropItem(item);
                         }
-                        else if (built is Mobile)
+                        else if (built is Mobile m)
                         {
-                            Mobile m = (Mobile)built;
                             m.MoveToWorld(new Point3D(start.X, start.Y, start.Z), map);
                         }
                     }
@@ -385,14 +384,12 @@ namespace Server.Commands
 
                             sb.AppendFormat("0x{0:X}; ", built.Serial.Value);
 
-                            if (built is Item)
+                            if (built is Item item)
                             {
-                                Item item = (Item)built;
                                 item.MoveToWorld(new Point3D(x, y, z), map);
                             }
-                            else if (built is Mobile)
+                            else if (built is Mobile m)
                             {
-                                Mobile m = (Mobile)built;
                                 m.MoveToWorld(new Point3D(x, y, z), map);
                             }
                         }
@@ -691,14 +688,12 @@ namespace Server.Commands
 
             protected override void OnTarget(Mobile from, object o)
             {
-                IPoint3D p = o as IPoint3D;
-
-                if (p != null)
+                if (o is IPoint3D p)
                 {
-                    if (p is Item)
-                        p = ((Item)p).GetWorldTop();
-                    else if (p is Mobile)
-                        p = ((Mobile)p).Location;
+                    if (p is Item item)
+                        p = item.GetWorldTop();
+                    else if (p is Mobile mobile)
+                        p = mobile.Location;
 
                     Point3D point = new Point3D(p);
                     Add.Invoke(from, point, point, m_Args);
diff --git a/Scripts/Commands/BoundingBoxPicker.cs b/Scripts/Commands/BoundingBoxPicker.cs
index 18ea12d9d..0e1421fb8 100644
--- a/Scripts/Commands/BoundingBoxPicker.cs
+++ b/Scripts/Commands/BoundingBoxPicker.cs
@@ -40,8 +40,8 @@ namespace Server
 
                 if (p == null)
                     return;
-                else if (p is Item)
-                    p = ((Item)p).GetWorldTop();
+                else if (p is Item item)
+                    p = item.GetWorldTop();
 
                 if (m_First)
                 {
diff --git a/Scripts/Commands/CreateWorld.cs b/Scripts/Commands/CreateWorld.cs
index da195512c..d144291e1 100644
--- a/Scripts/Commands/CreateWorld.cs
+++ b/Scripts/Commands/CreateWorld.cs
@@ -226,7 +226,7 @@ namespace Server.Commands
         {
             if (CreateWorldData.CreateTable.ContainsKey(entry.CheckID) && CreateWorldData.CreateTable[entry.CheckID])
             {
-                string er = string.Format("<br>- {0} have been generated already.", entry.Name);
+                string er = $"<br>- {entry.Name} have been generated already.";
                 Console.WriteLine(er);
 
                 error += er;
@@ -241,7 +241,7 @@ namespace Server.Commands
                     return true;
                 }
 
-                string er = string.Format("<br>- Cannot generate {0}. You need to generate Decorations and Spawners first.", entry.Name);
+                string er = $"<br>- Cannot generate {entry.Name}. You need to generate Decorations and Spawners first.";
                 Console.WriteLine(er);
 
                 error += er;
@@ -257,7 +257,7 @@ namespace Server.Commands
                 }
                 else
                 {
-                    string er = string.Format("<br>- Cannot generate {0}. You need to generate Spawners first.", entry.Name);
+                    string er = $"<br>- Cannot generate {entry.Name}. You need to generate Spawners first.";
                     Console.WriteLine(er);
 
                     error += er;
@@ -322,7 +322,7 @@ namespace Server.Gumps
             {
                 bool created = CreateWorldData.CreateTable.ContainsKey(entry.CheckID) && CreateWorldData.CreateTable[entry.CheckID];
 
-                AddLabel(20, y + 1, created ? 200 : 338, string.Format("{0} {1}", entry.Name, created ? "[created]" : "[not created]"));
+                AddLabel(20, y + 1, created ? 200 : 338, $"{entry.Name} {(created ? "[created]" : "[not created]")}");
                 AddCheck(210, y - 2, 210, 211, m_Type == CreateWorld.GumpType.Create ? !created : created, entry.CheckID);
 
                 y += 25;
@@ -386,7 +386,7 @@ namespace Server.Gumps
             }
 
             AddHtml(152, 15, 450, 20, ColorAndCenter("#00FFFF", label), false, false);
-            AddHtml(12, 15, 140, 20, ColorAndCenter("#696969", string.Format("Shard Expansion: {0}", Core.Expansion.ToString())), false, false);
+            AddHtml(12, 15, 140, 20, ColorAndCenter("#696969", $"Shard Expansion: {Core.Expansion.ToString()}"), false, false);
 
             for (int i = 0; i < 6; i++)
             {
@@ -418,7 +418,7 @@ namespace Server.Gumps
                 else
                     check = GumpType == CreateWorld.GumpType.Create ? !created : created;
 
-                AddLabel(x + 21, y, created ? 200 : 338, string.Format("{0} {1}", entry.Name, created ? "[created]" : "[not created]"));
+                AddLabel(x + 21, y, created ? 200 : 338, $"{entry.Name} {(created ? "[created]" : "[not created]")}");
                 AddCheck(x, y - 2, 210, 211, check, entry.CheckID);
 
                 y += 20;
@@ -506,7 +506,7 @@ namespace Server.Gumps
                 case 115:
                     return WeakEntityCollection.HasCollection("sa");
                 case 116:
-                    return World.Items.Values.Where(i => i != null && (i is XmlSpawner || i is Spawner)).Count() > 1000;
+                    return World.Items.Values.Count(i => i != null && (i is XmlSpawner || i is Spawner))> 1000;
                 case 117:
                     return WeakEntityCollection.HasCollection("despise");
                 case 118:
diff --git a/Scripts/Commands/Decorate.cs b/Scripts/Commands/Decorate.cs
index bc1e5310a..06ac2a6af 100644
--- a/Scripts/Commands/Decorate.cs
+++ b/Scripts/Commands/Decorate.cs
@@ -567,7 +567,7 @@ namespace Server.Commands
             }
             catch (Exception e)
             {
-                throw new Exception(string.Format("Bad type: {0}", m_Type), e);
+                throw new Exception($"Bad type: {m_Type}", e);
             }
 
             if (item is BaseAddon)
@@ -1297,7 +1297,7 @@ namespace Server.Commands
             list.m_Type = ScriptCompiler.FindTypeByName(line.Substring(0, indexOf++), true);
 
             if (list.m_Type == null)
-                throw new ArgumentException(string.Format("Type not found for header: '{0}'", line));
+                throw new ArgumentException($"Type not found for header: '{line}'");
 
             line = line.Substring(indexOf);
             indexOf = line.IndexOf('(');
diff --git a/Scripts/Commands/DecorateDelete.cs b/Scripts/Commands/DecorateDelete.cs
index 4bc9c66ce..656a9cf4b 100644
--- a/Scripts/Commands/DecorateDelete.cs
+++ b/Scripts/Commands/DecorateDelete.cs
@@ -479,7 +479,7 @@ namespace Server.Commands
             }
             catch (Exception e)
             {
-                throw new Exception(string.Format("Bad type: {0}", m_Type), e);
+                throw new Exception($"Bad type: {m_Type}", e);
             }
 
             if (item is BaseAddon)
@@ -1131,7 +1131,7 @@ namespace Server.Commands
             list.m_Type = ScriptCompiler.FindTypeByName(line.Substring(0, indexOf++), true);
 
             if (list.m_Type == null)
-                throw new ArgumentException(string.Format("Type not found for header: '{0}'", line));
+                throw new ArgumentException($"Type not found for header: '{line}'");
 
             line = line.Substring(indexOf);
             indexOf = line.IndexOf('(');
diff --git a/Scripts/Commands/Docs.cs b/Scripts/Commands/Docs.cs
index e9a726008..d9711bb0e 100644
--- a/Scripts/Commands/Docs.cs
+++ b/Scripts/Commands/Docs.cs
@@ -1089,10 +1089,8 @@ namespace Server.Commands
                 {
                     rewards[16] = true;
                 }
-                else if (item is PowerScroll)
+                else if (item is PowerScroll ps)
                 {
-                    PowerScroll ps = (PowerScroll)item;
-
                     if (ps.Value == 105.0)
                     {
                         rewards[6] = true;
@@ -1133,10 +1131,8 @@ namespace Server.Commands
                         rewards[4] = true;
                     }
                 }
-                else if (item is RunicSewingKit)
+                else if (item is RunicSewingKit rkit)
                 {
-                    RunicSewingKit rkit = (RunicSewingKit)item;
-
                     rewards[16 + CraftResources.GetIndex(rkit.Resource)] = true;
                 }
 
@@ -1210,7 +1206,7 @@ namespace Server.Commands
                     html.WriteLine(
                         "            <td width=\"{0}\"{1} class=\"entry\">&nbsp;</td>",
                         count * 25,
-                        count == 1 ? "" : string.Format(" colspan=\"{0}\"", count));
+                        count == 1 ? "" : $" colspan=\"{count}\"");
                 }
             }
 
@@ -1225,7 +1221,7 @@ namespace Server.Commands
 
             lbod.Entries = LargeBulkEntry.ConvertEntries(lbod, entries);
 
-            WriteSmithBODHeader(html, string.Format("(Large) {0}: Normal", name));
+            WriteSmithBODHeader(html, $"(Large) {name}: Normal");
 
             lbod.RequireExceptional = false;
             for (BulkMaterialType mat = BulkMaterialType.None; mat <= BulkMaterialType.Valorite; ++mat)
@@ -1239,7 +1235,7 @@ namespace Server.Commands
 
             html.WriteLine("      <br /><br />");
 
-            WriteSmithBODHeader(html, string.Format("(Large) {0}: Exceptional", name));
+            WriteSmithBODHeader(html, $"(Large) {name}: Exceptional");
 
             lbod.RequireExceptional = true;
             for (BulkMaterialType mat = BulkMaterialType.None; mat <= BulkMaterialType.Valorite; ++mat)
@@ -1400,10 +1396,8 @@ namespace Server.Commands
                 {
                     rewards[7] = true;
                 }
-                else if (item is PowerScroll)
+                else if (item is PowerScroll ps)
                 {
-                    PowerScroll ps = (PowerScroll)item;
-
                     if (ps.Value == 105.0)
                     {
                         rewards[8] = true;
@@ -1421,16 +1415,12 @@ namespace Server.Commands
                         rewards[11] = true;
                     }
                 }
-                else if (item is RunicHammer)
+                else if (item is RunicHammer rh)
                 {
-                    RunicHammer rh = (RunicHammer)item;
-
                     rewards[11 + CraftResources.GetIndex(rh.Resource)] = true;
                 }
-                else if (item is AncientSmithyHammer)
+                else if (item is AncientSmithyHammer ash)
                 {
-                    AncientSmithyHammer ash = (AncientSmithyHammer)item;
-
                     if (ash.Bonus == 10)
                     {
                         rewards[20] = true;
@@ -1528,7 +1518,7 @@ namespace Server.Commands
                     html.WriteLine(
                         "            <td style=\"width: {0}px;\"{1} class=\"entry\">&nbsp;</td>",
                         count * 25,
-                        count == 1 ? "" : string.Format(" colspan=\"{0}\"", count));
+                        count == 1 ? "" : $" colspan=\"{count}\"");
                 }
             }
 
@@ -2499,9 +2489,7 @@ namespace Server.Commands
 
                 if (attributes.Length > 0)
                 {
-                    CustomEnumAttribute attr = attributes[0] as CustomEnumAttribute;
-
-                    if (attr != null)
+                    if (attributes[0] is CustomEnumAttribute attr)
                     {
                         StringBuilder sb = new StringBuilder();
 
@@ -2812,17 +2800,17 @@ namespace Server.Commands
 
             foreach (MemberInfo mi in membs)
             {
-                if (mi is PropertyInfo)
+                if (mi is PropertyInfo propertyInfo)
                 {
-                    WriteProperty((PropertyInfo)mi, typeHtml);
+                    WriteProperty(propertyInfo, typeHtml);
                 }
-                else if (mi is ConstructorInfo)
+                else if (mi is ConstructorInfo constructorInfo)
                 {
-                    WriteCtor(info.TypeName, (ConstructorInfo)mi, typeHtml);
+                    WriteCtor(info.TypeName, constructorInfo, typeHtml);
                 }
-                else if (mi is MethodInfo)
+                else if (mi is MethodInfo methodInfo)
                 {
-                    WriteMethod((MethodInfo)mi, typeHtml);
+                    WriteMethod(methodInfo, typeHtml);
                 }
             }
         }
diff --git a/Scripts/Commands/GMbody.cs b/Scripts/Commands/GMbody.cs
index 78a8264cc..4b6221808 100644
--- a/Scripts/Commands/GMbody.cs
+++ b/Scripts/Commands/GMbody.cs
@@ -29,9 +29,8 @@ namespace Server.Commands
 
             protected override void OnTarget(Mobile from, object targeted)
             {
-                if (targeted is Mobile)
+                if (targeted is Mobile targ)
                 {
-                    Mobile targ = (Mobile)targeted;
                     if (from != targ)
                         from.SendMessage("You may only set your own body to GM style.");
 
diff --git a/Scripts/Commands/GenCategorization.cs b/Scripts/Commands/GenCategorization.cs
index b78cf6c31..e3fc8e6de 100644
--- a/Scripts/Commands/GenCategorization.cs
+++ b/Scripts/Commands/GenCategorization.cs
@@ -317,14 +317,14 @@ namespace Server.Commands
             int start = text.IndexOf('(');
 
             if (start < 0)
-                throw new FormatException(string.Format("Input string not correctly formatted ('{0}')", text));
+                throw new FormatException($"Input string not correctly formatted ('{text}')");
 
             m_Title = text.Substring(0, start).Trim();
 
             int end = text.IndexOf(')', ++start);
 
             if (end < start)
-                throw new FormatException(string.Format("Input string not correctly formatted ('{0}')", text));
+                throw new FormatException($"Input string not correctly formatted ('{text}')");
 
             text = text.Substring(start, end - start);
             string[] split = text.Split(';');
@@ -388,7 +388,7 @@ namespace Server.Commands
             }
 
             if (index >= input.Length)
-                throw new FormatException(string.Format("Input string not correctly formatted ('{0}')", input));
+                throw new FormatException($"Input string not correctly formatted ('{input}')");
 
             m_Indentation = index;
             m_Text = input.Substring(index);
diff --git a/Scripts/Commands/GenTeleporter.cs b/Scripts/Commands/GenTeleporter.cs
index 550524ba3..ee7106c69 100644
--- a/Scripts/Commands/GenTeleporter.cs
+++ b/Scripts/Commands/GenTeleporter.cs
@@ -37,8 +37,7 @@ namespace Server.Commands
 
         public override int GetHashCode()
         {
-            string hashString = string.Format("{0}-{1}-{2}-{3}",
-                X, Y, Z, Map.MapID);
+            string hashString = $"{X}-{Y}-{Z}-{Map.MapID}";
             return hashString.GetHashCode();
         }
 
@@ -96,7 +95,7 @@ namespace Server.Commands
                 string[] parts = line.Split(m_Sep);
                 if (parts.Length != 9)
                 {
-                    e.Mobile.SendMessage(33, string.Format("Bad teleporter definition on line {0}", lineNum));
+                    e.Mobile.SendMessage(33, $"Bad teleporter definition on line {lineNum}");
                     continue;
                 }
                 try
@@ -115,11 +114,11 @@ namespace Server.Commands
                 }
                 catch (FormatException)
                 {
-                    e.Mobile.SendMessage(33, string.Format("Bad number format on line {0}", lineNum));
+                    e.Mobile.SendMessage(33, $"Bad number format on line {lineNum}");
                 }
                 catch (ArgumentException ex)
                 {
-                    e.Mobile.SendMessage(33, string.Format("Argument Execption {0} on line {1}", ex.Message, lineNum));
+                    e.Mobile.SendMessage(33, $"Argument Execption {ex.Message} on line {lineNum}");
                 }
             }
             reader.Close();
diff --git a/Scripts/Commands/GenerateGameDocs.cs b/Scripts/Commands/GenerateGameDocs.cs
index 5f069fd74..bad3d540e 100644
--- a/Scripts/Commands/GenerateGameDocs.cs
+++ b/Scripts/Commands/GenerateGameDocs.cs
@@ -178,12 +178,12 @@ namespace Server.Commands
                 {
                     if (first)
                     {
-                        outf.Write(string.Format("\"{0}\"", header));
+                        outf.Write($"\"{header}\"");
                         first = false;
                     }
                     else
                     {
-                        outf.Write(string.Format(",\"{0}\"", header));
+                        outf.Write($",\"{header}\"");
                     }
                 }
                 outf.WriteLine("");
@@ -197,12 +197,12 @@ namespace Server.Commands
                         row.TryGetValue(header, out value);
                         if (first)
                         {
-                            outf.Write(string.Format("\"{0}\"", value));
+                            outf.Write($"\"{value}\"");
                             first = false;
                         }
                         else
                         {
-                            outf.Write(string.Format(",\"{0}\"", value));
+                            outf.Write($",\"{value}\"");
                         }
                     }
                     outf.WriteLine("");
diff --git a/Scripts/Commands/Generic/Commands/BaseCommand.cs b/Scripts/Commands/Generic/Commands/BaseCommand.cs
index 6da0e2d39..02a252bc7 100644
--- a/Scripts/Commands/Generic/Commands/BaseCommand.cs
+++ b/Scripts/Commands/Generic/Commands/BaseCommand.cs
@@ -112,10 +112,10 @@ namespace Server.Commands.Generic
 
             Mobile mob;
 
-            if (obj is Mobile)
-                mob = (Mobile)obj;
-            else if (obj is Item)
-                mob = ((Item)obj).RootParent as Mobile;
+            if (obj is Mobile mobile)
+                mob = mobile;
+            else if (obj is Item item)
+                mob = item.RootParent as Mobile;
             else
                 mob = null;
 
@@ -191,16 +191,16 @@ namespace Server.Commands.Generic
                 {
                     object obj = m_Responses[i];
 
-                    if (obj is MessageEntry)
+                    if (obj is MessageEntry messageEntry)
                     {
-                        from.SendMessage(((MessageEntry)obj).ToString());
+                        from.SendMessage(messageEntry.ToString());
 
                         if (flushToLog)
                             CommandLogging.WriteLine(from, ((MessageEntry)obj).ToString());
                     }
-                    else if (obj is Gump)
+                    else if (obj is Gump gump)
                     {
-                        from.SendGump((Gump)obj);
+                        from.SendGump(gump);
                     }
                 }
             }
@@ -227,7 +227,7 @@ namespace Server.Commands.Generic
             public override string ToString()
             {
                 if (m_Count > 1)
-                    return string.Format("{0} ({1})", m_Message, m_Count);
+                    return $"{m_Message} ({m_Count})";
 
                 return m_Message;
             }
diff --git a/Scripts/Commands/Generic/Commands/Commands.cs b/Scripts/Commands/Generic/Commands/Commands.cs
index 86df02ebd..e3d4343ef 100644
--- a/Scripts/Commands/Generic/Commands/Commands.cs
+++ b/Scripts/Commands/Generic/Commands/Commands.cs
@@ -153,9 +153,9 @@ namespace Server.Commands.Generic
 
         public override void Execute(CommandEventArgs e, object obj)
         {
-            if (obj is HouseSign)
+            if (obj is HouseSign houseSign)
             {
-                BaseHouse house = ((HouseSign)obj).Owner;
+                BaseHouse house = houseSign.Owner;
 
                 if (house == null)
                 {
@@ -193,7 +193,7 @@ namespace Server.Commands.Generic
             if (list.Count == 1)
                 AddResponse("There is one matching object.");
             else
-                AddResponse(string.Format("There are {0} matching objects.", list.Count));
+                AddResponse($"There are {list.Count} matching objects.");
         }
     }
 
@@ -268,7 +268,7 @@ namespace Server.Commands.Generic
                             new WarningGump(
                                 1060637,
                                 30720,
-                                string.Format("A game master is requesting to open your web browser to the following URL:<br>{0}", url),
+                                $"A game master is requesting to open your web browser to the following URL:<br>{url}",
                                 0xFFC000,
                                 320,
                                 240,
@@ -445,10 +445,10 @@ namespace Server.Commands.Generic
                 object obj = list[i];
                 Container cont = null;
 
-                if (obj is Mobile)
-                    cont = ((Mobile)obj).Backpack;
-                else if (obj is Container)
-                    cont = (Container)obj;
+                if (obj is Mobile mobile)
+                    cont = mobile.Backpack;
+                else if (obj is Container container)
+                    cont = container;
 
                 if (cont != null)
                     packs.Add(cont);
@@ -515,10 +515,10 @@ namespace Server.Commands.Generic
             if (p == null)
                 return;
 
-            if (p is Item)
-                p = ((Item)p).GetWorldTop();
-            else if (p is Mobile)
-                p = ((Mobile)p).Location;
+            if (p is Item item)
+                p = item.GetWorldTop();
+            else if (p is Mobile mobile)
+                p = mobile.Location;
 
             Add.Invoke(e.Mobile, new Point3D(p), new Point3D(p), e.Arguments);
         }
@@ -600,9 +600,9 @@ namespace Server.Commands.Generic
             {
                 Item item = mob.Items[i];
 
-                if (item is IMountItem)
+                if (item is IMountItem iMountItem)
                 {
-                    IMount mount = ((IMountItem)item).Mount;
+                    IMount mount = iMountItem.Mount;
 
                     if (mount != null)
                     {
@@ -649,7 +649,7 @@ namespace Server.Commands.Generic
 
         public override void Execute(CommandEventArgs e, object obj)
         {
-            if (obj is BaseVendor)
+            if (obj is BaseVendor baseVendor)
             {
                 CommandLogging.WriteLine(
                     e.Mobile,
@@ -658,7 +658,7 @@ namespace Server.Commands.Generic
                     CommandLogging.Format(e.Mobile),
                     CommandLogging.Format(obj));
 
-                ((BaseVendor)obj).Restock();
+                baseVendor.Restock();
                 AddResponse("The vendor has been restocked.");
             }
             else
@@ -691,9 +691,9 @@ namespace Server.Commands.Generic
                 Type type = obj.GetType();
 
                 if (type.DeclaringType == null)
-                    AddResponse(string.Format("The type of that object is {0}.", type.Name));
+                    AddResponse($"The type of that object is {type.Name}.");
                 else
-                    AddResponse(string.Format("The type of that object is {0}.", type.FullName));
+                    AddResponse($"The type of that object is {type.FullName}.");
             }
         }
     }
@@ -754,7 +754,7 @@ namespace Server.Commands.Generic
             Commands = new[] { command };
             ObjectTypes = objects;
             Usage = command;
-            Description = string.Format("Sets the {0} property to {1}.", name, value);
+            Description = $"Sets the {name} property to {value}.";
         }
 
         public override void Execute(CommandEventArgs e, object obj)
@@ -887,7 +887,7 @@ namespace Server.Commands.Generic
                     {
                         if (string.IsNullOrWhiteSpace(message))
                         {
-                            message = string.Format("Confirm deletion of {0}", obj);
+                            message = $"Confirm deletion of {obj}";
                         }
 
                         e.Mobile.SendGump(
@@ -912,7 +912,7 @@ namespace Server.Commands.Generic
                 {
                     if (string.IsNullOrWhiteSpace(message))
                     {
-                        message = string.Format("Confirm deletion of {0}", obj);
+                        message = $"Confirm deletion of {obj}";
                     }
 
                     ArrayList list = new ArrayList
@@ -928,7 +928,7 @@ namespace Server.Commands.Generic
                 }
             }
 
-            if (obj is Item)
+            if (obj is Item item)
             {
                 CommandLogging.WriteLine(
                     e.Mobile,
@@ -936,7 +936,7 @@ namespace Server.Commands.Generic
                     e.Mobile.AccessLevel,
                     CommandLogging.Format(e.Mobile),
                     CommandLogging.Format(obj));
-                ((Item)obj).Delete();
+                item.Delete();
                 AddResponse("The item has been deleted.");
             }
             else if (obj is Mobile && !((Mobile)obj).Player)
@@ -1214,7 +1214,7 @@ namespace Server.Commands.Generic
 
                         targ.Say("I've been {0}!", m_Ban ? "banned" : "kicked");
 
-                        AddResponse(string.Format("They have been {0}.", m_Ban ? "banned" : "kicked"));
+                        AddResponse($"They have been {(m_Ban ? "banned" : "kicked")}.");
 
                         targState.Dispose();
 
diff --git a/Scripts/Commands/Generic/Commands/DesignInsert.cs b/Scripts/Commands/Generic/Commands/DesignInsert.cs
index 70b23edec..a6dcecada 100644
--- a/Scripts/Commands/Generic/Commands/DesignInsert.cs
+++ b/Scripts/Commands/Generic/Commands/DesignInsert.cs
@@ -94,7 +94,7 @@ namespace Server.Commands.Generic
         #region Area targeting mode
         public override void ExecuteList(CommandEventArgs e, ArrayList list)
         {
-            e.Mobile.SendGump(new WarningGump(1060637, 30720, string.Format("You are about to insert {0} objects. This cannot be undone without a full server revert.<br><br>Continue?", list.Count), 0xFFC000, 420, 280, OnConfirmCallback, new object[] { e, list, (e.Length < 1 || !e.GetBoolean(0)) }));
+            e.Mobile.SendGump(new WarningGump(1060637, 30720, $"You are about to insert {list.Count} objects. This cannot be undone without a full server revert.<br><br>Continue?", 0xFFC000, 420, 280, OnConfirmCallback, new object[] { e, list, (e.Length < 1 || !e.GetBoolean(0)) }));
             AddResponse("Awaiting confirmation...");
         }
 
diff --git a/Scripts/Commands/Generic/Commands/Interface.cs b/Scripts/Commands/Generic/Commands/Interface.cs
index b607f6ff0..e1b0986b0 100644
--- a/Scripts/Commands/Generic/Commands/Interface.cs
+++ b/Scripts/Commands/Generic/Commands/Interface.cs
@@ -80,7 +80,7 @@ namespace Server.Commands.Generic
             else
                 AddEntryHeader(20);
 
-            AddEntryHtml(40 + (m_Columns.Length * 130) - 20 + ((m_Columns.Length - 2) * OffsetSize), Center(string.Format("Page {0} of {1}", m_Page + 1, (m_List.Count + EntriesPerPage - 1) / EntriesPerPage)));
+            AddEntryHtml(40 + (m_Columns.Length * 130) - 20 + ((m_Columns.Length - 2) * OffsetSize), Center($"Page {m_Page + 1} of {(m_List.Count + EntriesPerPage - 1) / EntriesPerPage}"));
 
             if ((m_Page + 1) * EntriesPerPage < m_List.Count)
                 AddEntryButton(20, ArrowRightID1, ArrowRightID2, 2, ArrowRightWidth, ArrowRightHeight);
@@ -130,17 +130,13 @@ namespace Server.Commands.Generic
                 object obj = m_List[i];
                 bool isDeleted = false;
 
-                if (obj is Item)
+                if (obj is Item item)
                 {
-                    Item item = (Item)obj;
-
                     if (!(isDeleted = item.Deleted))
                         AddEntryHtml(40 + 130, item.GetType().Name);
                 }
-                else if (obj is Mobile)
+                else if (obj is Mobile mob)
                 {
-                    Mobile mob = (Mobile)obj;
-
                     if (!(isDeleted = mob.Deleted))
                         AddEntryHtml(40 + 130, mob.Name);
                 }
@@ -329,7 +325,7 @@ namespace Server.Commands.Generic
                 case 4: // Go there
                     {
                         m_From.SendGump(new InterfaceItemGump(m_From, m_Columns, m_List, m_Page, m_Item));
-                        InvokeCommand(string.Format("Go {0}", m_Item.Serial.Value));
+                        InvokeCommand($"Go {m_Item.Serial.Value}");
                         break;
                     }
                 case 5: // Move to target
@@ -363,7 +359,7 @@ namespace Server.Commands.Generic
 
         private void InvokeCommand(string ip)
         {
-            CommandSystem.Handle(m_From, string.Format("{0}{1}", CommandSystem.Prefix, ip));
+            CommandSystem.Handle(m_From, $"{CommandSystem.Prefix}{ip}");
         }
     }
 
@@ -490,7 +486,7 @@ namespace Server.Commands.Generic
                 case 4: // Go there
                     {
                         m_From.SendGump(new InterfaceMobileGump(m_From, m_Columns, m_List, m_Page, m_Mobile));
-                        InvokeCommand(string.Format("Go {0}", m_Mobile.Serial.Value));
+                        InvokeCommand($"Go {m_Mobile.Serial.Value}");
                         break;
                     }
                 case 5: // Bring them here
@@ -550,7 +546,7 @@ namespace Server.Commands.Generic
 
         private void InvokeCommand(string ip)
         {
-            CommandSystem.Handle(m_From, string.Format("{0}{1}", CommandSystem.Prefix, ip));
+            CommandSystem.Handle(m_From, $"{CommandSystem.Prefix}{ip}");
         }
     }
 }
\ No newline at end of file
diff --git a/Scripts/Commands/Generic/Extensions/Compilers/ConditionalCompiler.cs b/Scripts/Commands/Generic/Extensions/Compilers/ConditionalCompiler.cs
index b2487c65a..cf678d281 100644
--- a/Scripts/Commands/Generic/Extensions/Compilers/ConditionalCompiler.cs
+++ b/Scripts/Commands/Generic/Extensions/Compilers/ConditionalCompiler.cs
@@ -70,22 +70,22 @@ namespace Server.Commands.Generic
             }
             else
             {
-                if (m_Value is int)
-                    method.Load((int)m_Value);
-                else if (m_Value is long)
-                    method.Load((long)m_Value);
-                else if (m_Value is float)
-                    method.Load((float)m_Value);
-                else if (m_Value is double)
-                    method.Load((double)m_Value);
-                else if (m_Value is char)
-                    method.Load((char)m_Value);
-                else if (m_Value is bool)
-                    method.Load((bool)m_Value);
-                else if (m_Value is string)
-                    method.Load((string)m_Value);
-                else if (m_Value is Enum)
-                    method.Load((Enum)m_Value);
+                if (m_Value is int i)
+                    method.Load(i);
+                else if (m_Value is long l)
+                    method.Load(l);
+                else if (m_Value is float f)
+                    method.Load(f);
+                else if (m_Value is double d)
+                    method.Load(d);
+                else if (m_Value is char c)
+                    method.Load(c);
+                else if (m_Value is bool b)
+                    method.Load(b);
+                else if (m_Value is string s)
+                    method.Load(s);
+                else if (m_Value is Enum enum)
+                    method.Load(enum);
                 else
                     throw new InvalidOperationException("Unrecognized comparison value.");
             }
@@ -93,10 +93,8 @@ namespace Server.Commands.Generic
 
         public void Acquire(TypeBuilder typeBuilder, ILGenerator il, string fieldName)
         {
-            if (m_Value is string)
+            if (m_Value is string toParse)
             {
-                string toParse = (string)m_Value;
-
                 if (!m_Type.IsValueType && toParse == "null")
                 {
                     m_Value = null;
@@ -175,10 +173,7 @@ namespace Server.Commands.Generic
                     else
                     {
                         throw new InvalidOperationException(
-                            string.Format(
-                                "Unable to convert string \"{0}\" into type '{1}'.",
-                                m_Value,
-                                m_Type));
+                            $"Unable to convert string \"{m_Value}\" into type '{m_Type}'.");
                     }
                 }
             }
diff --git a/Scripts/Commands/Generic/Implementors/ObjectConditional.cs b/Scripts/Commands/Generic/Implementors/ObjectConditional.cs
index 2d5b6d483..07b432698 100644
--- a/Scripts/Commands/Generic/Implementors/ObjectConditional.cs
+++ b/Scripts/Commands/Generic/Implementors/ObjectConditional.cs
@@ -93,7 +93,7 @@ namespace Server.Commands.Generic
             Type objectType = ScriptCompiler.FindTypeByName(args[offset + index], true);
 
             if (objectType == null)
-                throw new Exception(string.Format("No type with that name ({0}) was found.", args[offset + index]));
+                throw new Exception($"No type with that name ({args[offset + index]}) was found.");
 
             ++index;
 
@@ -219,7 +219,7 @@ namespace Server.Commands.Generic
                 }
 
                 if (condition == null)
-                    throw new InvalidOperationException(string.Format("Unrecognized operator (\"{0}\").", oper));
+                    throw new InvalidOperationException($"Unrecognized operator (\"{oper}\").");
 
                 current.Add(condition);
             }
diff --git a/Scripts/Commands/Handlers.cs b/Scripts/Commands/Handlers.cs
index ce4ef14b9..76c407800 100644
--- a/Scripts/Commands/Handlers.cs
+++ b/Scripts/Commands/Handlers.cs
@@ -214,8 +214,7 @@ namespace Server.Commands
 
                 e.Mobile.SendGump(
                     new WarningGump(1060635, 30720,
-                        string.Format("You are about to delete {0} object{1} from this facet.  Do you really wish to continue?",
-                            list.Count, list.Count == 1 ? "" : "s"),
+                        $"You are about to delete {list.Count} object{(list.Count == 1 ? "" : "s")} from this facet.  Do you really wish to continue?",
                         0xFFC000, 360, 260, DeleteList_Callback, list));
             }
             else
@@ -427,7 +426,7 @@ namespace Server.Commands
         [Description("Broadcasts a message to all online staff.")]
         public static void StaffMessage_OnCommand(CommandEventArgs e)
         {
-            BroadcastMessage(AccessLevel.Counselor, e.Mobile.SpeechHue, string.Format("[{0}] {1}", e.Mobile.Name, e.ArgString));
+            BroadcastMessage(AccessLevel.Counselor, e.Mobile.SpeechHue, $"[{e.Mobile.Name}] {e.ArgString}");
         }
 
         [Usage("BCast <text>")]
@@ -435,7 +434,7 @@ namespace Server.Commands
         [Description("Broadcasts a message to everyone online.")]
         public static void BroadcastMessage_OnCommand(CommandEventArgs e)
         {
-            BroadcastMessage(AccessLevel.Player, 0x482, string.Format("Staff message from {0}:", e.Mobile.Name));
+            BroadcastMessage(AccessLevel.Player, 0x482, $"Staff message from {e.Mobile.Name}:");
             BroadcastMessage(AccessLevel.Player, 0x482, e.ArgString);
         }
 
@@ -827,7 +826,7 @@ namespace Server.Commands
                 {
                     Item item = m.Items[i];
 
-                    entries[i] = new ItemListEntry(string.Format("{0}: {1}", item.Layer, item.GetType().Name), item.ItemID, item.Hue);
+                    entries[i] = new ItemListEntry($"{item.Layer}: {item.GetType().Name}", item.ItemID, item.Hue);
                 }
 
                 return entries;
@@ -859,7 +858,7 @@ namespace Server.Commands
                     private readonly Mobile m_Mobile;
                     private readonly Item m_Item;
                     public EquipDetailsMenu(Mobile m, Item item)
-                        : base(string.Format("{0}: {1}", item.Layer, item.GetType().Name), new string[] { "Move", "Delete", "Props" })
+                        : base($"{item.Layer}: {item.GetType().Name}", new string[] { "Move", "Delete", "Props" })
                     {
                         m_Mobile = m;
                         m_Item = item;
diff --git a/Scripts/Commands/HelpInfo.cs b/Scripts/Commands/HelpInfo.cs
index 5c05b4d66..6f6811c75 100644
--- a/Scripts/Commands/HelpInfo.cs
+++ b/Scripts/Commands/HelpInfo.cs
@@ -215,7 +215,7 @@ namespace Server.Commands
                     return;
                 }
                 else
-                    e.Mobile.SendMessage(string.Format("Command '{0}' not found!", arg));
+                    e.Mobile.SendMessage($"Command '{arg}' not found!");
             }
 
             e.Mobile.SendGump(new CommandListGump(0, e.Mobile, null));
@@ -251,7 +251,7 @@ namespace Server.Commands
                 else
                     AddEntryHeader(20);
 
-                AddEntryHtml(160, Center(string.Format("Page {0} of {1}", m_Page + 1, (m_List.Count + EntriesPerPage - 1) / EntriesPerPage)));
+                AddEntryHtml(160, Center($"Page {m_Page + 1} of {(m_List.Count + EntriesPerPage - 1) / EntriesPerPage}"));
 
                 if ((m_Page + 1) * EntriesPerPage < m_List.Count)
                     AddEntryButton(20, ArrowRightID1, ArrowRightID2, 2, ArrowRightWidth, ArrowRightHeight);
@@ -371,7 +371,7 @@ namespace Server.Commands
 
                 if (aliases != null && aliases.Length != 0)
                 {
-                    sb.Append(string.Format("Alias{0}: ", aliases.Length == 1 ? "" : "es"));
+                    sb.Append($"Alias{(aliases.Length == 1 ? "" : "es")}: ");
 
                     for (int i = 0; i < aliases.Length; ++i)
                     {
@@ -414,12 +414,12 @@ namespace Server.Commands
 
             public string Color(string text, int color)
             {
-                return string.Format("<BASEFONT COLOR=#{0:X6}>{1}</BASEFONT>", color, text);
+                return $"<BASEFONT COLOR=#{color:X6}>{text}</BASEFONT>";
             }
 
             public string Center(string text)
             {
-                return string.Format("<CENTER>{0}</CENTER>", text);
+                return $"<CENTER>{text}</CENTER>";
             }
         }
     }
diff --git a/Scripts/Commands/Logging.cs b/Scripts/Commands/Logging.cs
index 75a86b58a..951034405 100644
--- a/Scripts/Commands/Logging.cs
+++ b/Scripts/Commands/Logging.cs
@@ -35,7 +35,7 @@ namespace Server.Commands
 
             try
             {
-                m_Output = new StreamWriter(Path.Combine(directory, string.Format("{0}.log", DateTime.UtcNow.ToLongDateString())), true)
+                m_Output = new StreamWriter(Path.Combine(directory, $"{DateTime.UtcNow.ToLongDateString()}.log"), true)
                 {
                     AutoFlush = true
                 };
@@ -52,19 +52,15 @@ namespace Server.Commands
 
         public static object Format(object o)
         {
-            if (o is Mobile)
+            if (o is Mobile m)
             {
-                Mobile m = (Mobile)o;
-
                 if (m.Account == null)
-                    return string.Format("{0} (no account)", m);
+                    return $"{m} (no account)";
                 else
-                    return string.Format("{0} ('{1}')", m, m.Account.Username);
+                    return $"{m} ('{m.Account.Username}')";
             }
-            else if (o is Item)
+            else if (o is Item item)
             {
-                Item item = (Item)o;
-
                 return string.Format("0x{0:X} ({1})", item.Serial.Value, item.GetType().Name);
             }
 
@@ -100,7 +96,7 @@ namespace Server.Commands
                 AppendPath(ref path, "Logs");
                 AppendPath(ref path, "Commands");
                 AppendPath(ref path, from == null ? AccessLevel.Owner.ToString() : from.AccessLevel.ToString());
-                path = Path.Combine(path, string.Format("{0}.log", name));
+                path = Path.Combine(path, $"{name}.log");
 
                 using (StreamWriter sw = new StreamWriter(path, true))
                     sw.WriteLine("{0}: {1}: {2}", DateTime.UtcNow, from == null ? "System" : from.NetState.ToString(), text);
diff --git a/Scripts/Commands/Mark.cs b/Scripts/Commands/Mark.cs
index 51c19863f..438896e31 100644
--- a/Scripts/Commands/Mark.cs
+++ b/Scripts/Commands/Mark.cs
@@ -26,7 +26,7 @@ namespace Server.Commands
             rune.Name = rune.Description = runeName;
 
             e.Mobile.AddToBackpack(rune);
-            e.Mobile.SendMessage(string.Format("Rune {0} added to your backpack.", runeName));
+            e.Mobile.SendMessage($"Rune {runeName} added to your backpack.");
         }
     }
 }
diff --git a/Scripts/Commands/Profiling.cs b/Scripts/Commands/Profiling.cs
index 762e7efa5..8b36a61c7 100644
--- a/Scripts/Commands/Profiling.cs
+++ b/Scripts/Commands/Profiling.cs
@@ -387,10 +387,8 @@ namespace Server.Commands
                 if (obj is int)
                     return (int)obj;
 
-                if (obj is int[])
+                if (obj is int[] list)
                 {
-                    int[] list = (int[])obj;
-
                     int total = 0;
 
                     for (int i = 0; i < list.Length; ++i)
diff --git a/Scripts/Commands/Properties.cs b/Scripts/Commands/Properties.cs
index 17cffe57c..f7f67b23c 100644
--- a/Scripts/Commands/Properties.cs
+++ b/Scripts/Commands/Properties.cs
@@ -95,35 +95,33 @@ namespace Server.Commands
 
                     if (attr == null)
                     {
-                        failReason = string.Format("Property '{0}' not found.", propertyName);
+                        failReason = $"Property '{propertyName}' not found.";
                         return null;
                     }
 
                     if ((access & PropertyAccess.Read) != 0 && m.AccessLevel < attr.ReadLevel)
                     {
-                        failReason = string.Format(
-                            "You must be at least {0} to get the property '{1}'.", Mobile.GetAccessLevelName(attr.ReadLevel), propertyName);
+                        failReason = $"You must be at least {Mobile.GetAccessLevelName(attr.ReadLevel)} to get the property '{propertyName}'.";
 
                         return null;
                     }
 
                     if ((access & PropertyAccess.Write) != 0 && m.AccessLevel < attr.WriteLevel)
                     {
-                        failReason = string.Format(
-                            "You must be at least {0} to set the property '{1}'.", Mobile.GetAccessLevelName(attr.WriteLevel), propertyName);
+                        failReason = $"You must be at least {Mobile.GetAccessLevelName(attr.WriteLevel)} to set the property '{propertyName}'.";
 
                         return null;
                     }
 
                     if ((access & PropertyAccess.Read) != 0 && !p.CanRead)
                     {
-                        failReason = string.Format("Property '{0}' is write only.", propertyName);
+                        failReason = $"Property '{propertyName}' is write only.";
                         return null;
                     }
 
                     if ((access & PropertyAccess.Write) != 0 && (!p.CanWrite || attr.ReadOnly) && isFinal)
                     {
-                        failReason = string.Format("Property '{0}' is read only.", propertyName);
+                        failReason = $"Property '{propertyName}' is read only.";
                         return null;
                     }
 
@@ -137,7 +135,7 @@ namespace Server.Commands
                     continue;
                 }
 
-                failReason = string.Format("Property '{0}' not found.", propertyName);
+                failReason = $"Property '{propertyName}' not found.";
                 return null;
             }
 
@@ -174,7 +172,7 @@ namespace Server.Commands
                     continue;
                 }
 
-                failReason = string.Format("Property '{0}' is null.", chain[i]);
+                failReason = $"Property '{chain[i]}' is null.";
                 return null;
             }
 
@@ -284,7 +282,7 @@ namespace Server.Commands
 
             if (realProps.Length == 1)
             {
-                return string.Format("The property has been {0}.", positive ? "increased." : "decreased");
+                return $"The property has been {(positive ? "increased." : "decreased")}.";
             }
 
             if (positive || negative)
@@ -292,7 +290,7 @@ namespace Server.Commands
                 return "The properties have been changed.";
             }
 
-            return string.Format("The properties have been {0}.", positive ? "increased." : "decreased");
+            return $"The properties have been {(positive ? "increased." : "decreased")}.";
         }
 
         public static string SetValue(Mobile m, object o, string name, string value)
@@ -398,9 +396,8 @@ namespace Server.Commands
         {
             try
             {
-                if (toSet is AccessLevel)
+                if (toSet is AccessLevel newLevel)
                 {
-                    AccessLevel newLevel = (AccessLevel)toSet;
                     AccessLevel reqLevel = AccessLevel.Administrator;
 
                     if (newLevel == AccessLevel.Administrator)
@@ -587,13 +584,13 @@ namespace Server.Commands
             }
             else if (IsString(type))
             {
-                toString = (string)value == "null" ? @"@""null""" : string.Format("\"{0}\"", value);
+                toString = (string)value == "null" ? @"@""null""" : $"\"{value}\"";
             }
             else if (IsIDynamicEnum(type))
             {
                 toString = ((IDynamicEnum)value).Value == "null"
                                ? @"@""null"""
-                               : string.Format("\"{0}\"", ((IDynamicEnum)value).Value);
+                               : $"\"{((IDynamicEnum)value).Value}\"";
             }
             else if (IsText(type))
             {
@@ -606,7 +603,7 @@ namespace Server.Commands
 
             if (chain == null)
             {
-                return string.Format("{0} = {1}", p.Name, toString);
+                return $"{p.Name} = {toString}";
             }
 
             string[] concat = new string[chain.Length * 2 + 1];
@@ -736,7 +733,7 @@ namespace Server
     public sealed class UnknownPropertyException : BindingException
     {
         public UnknownPropertyException(Property property, string current)
-            : base(property, string.Format("Property '{0}' not found.", current))
+            : base(property, $"Property '{current}' not found.")
         { }
     }
 
@@ -776,11 +773,7 @@ namespace Server
         public ClearanceException(Property property, AccessLevel playerAccess, AccessLevel neededAccess, string accessType)
             : base(
                 property,
-                string.Format(
-                    "You must be at least {0} to {1} this property, you are currently {2}.",
-                    Mobile.GetAccessLevelName(neededAccess),
-                    accessType,
-                    Mobile.GetAccessLevelName(playerAccess)))
+                $"You must be at least {Mobile.GetAccessLevelName(neededAccess)} to {accessType} this property, you are currently {Mobile.GetAccessLevelName(playerAccess)}.")
         { }
     }
 
diff --git a/Scripts/Commands/SHTelGenDelete.cs b/Scripts/Commands/SHTelGenDelete.cs
index e31684376..76affd69f 100644
--- a/Scripts/Commands/SHTelGenDelete.cs
+++ b/Scripts/Commands/SHTelGenDelete.cs
@@ -75,14 +75,8 @@ namespace Server.Commands
                 SHTeleporter tele1 = AddSHT(map, ext1, x1, y1, z1);
                 SHTeleporter tele2 = AddSHT(map, ext2, x2, y2, z2);
 
-                if (tele1 != null)
-                {
-                    tele1.Delete();
-                }
-                if (tele2 != null)
-                {
-                    tele2.Delete();
-                }
+                tele1?.Delete();
+                tele2?.Delete();
                 //Link(tele1, tele2);
             }
 
@@ -105,28 +99,16 @@ namespace Server.Commands
                 tele2 = AddSHT(Map.Trammel, false, 5658, 1898, 0);
                 //Link(tele1, tele2);
 
-                if (tele1 != null)
-                {
-                    tele1.Delete();
-                }
-                if (tele2 != null)
-                {
-                    tele2.Delete();
-                }
+                tele1?.Delete();
+                tele2?.Delete();
 
                 tele1 = AddSHT(Map.Felucca, false, 5747, 1895, 0);
                 //tele1.LeftTele.TeleOffset = new Point3D(-1, 3, 0);
                 tele2 = AddSHT(Map.Felucca, false, 5658, 1898, 0);
                 //Link(tele1, tele2);
 
-                if (tele1 != null)
-                {
-                    tele1.Delete();
-                }
-                if (tele2 != null)
-                {
-                    tele2.Delete();
-                }
+                tele1?.Delete();
+                tele2?.Delete();
 
                 AddSHTCouple(false, 5727, 1894, 0, false, 5756, 1794, 0);
                 AddSHTCouple(false, 5784, 1929, 0, false, 5700, 1929, 0);
@@ -136,56 +118,32 @@ namespace Server.Commands
                 tele2 = AddSHT(Map.Trammel, false, 5657, 1954, 0);
                 //Link(tele1, tele2);
 
-                if (tele1 != null)
-                {
-                    tele1.Delete();
-                }
-                if (tele2 != null)
-                {
-                    tele2.Delete();
-                }
+                tele1?.Delete();
+                tele2?.Delete();
 
                 tele1 = AddSHT(Map.Felucca, false, 5711, 1952, 0);
                 //tele1.LeftTele.TeleOffset = new Point3D(-1, 3, 0);
                 tele2 = AddSHT(Map.Felucca, false, 5657, 1954, 0);
                 //Link(tele1, tele2);
 
-                if (tele1 != null)
-                {
-                    tele1.Delete();
-                }
-                if (tele2 != null)
-                {
-                    tele2.Delete();
-                }
+                tele1?.Delete();
+                tele2?.Delete();
 
                 tele1 = AddSHT(Map.Trammel, false, 5655, 2018, 0);
                 //tele1.LeftTele.TeleOffset = new Point3D(-1, 3, 0);
                 tele2 = AddSHT(Map.Trammel, true, 1690, 2789, 0);
                 //Link(tele1, tele2);
 
-                if (tele1 != null)
-                {
-                    tele1.Delete();
-                }
-                if (tele2 != null)
-                {
-                    tele2.Delete();
-                }
+                tele1?.Delete();
+                tele2?.Delete();
 
                 tele1 = AddSHT(Map.Felucca, false, 5655, 2018, 0);
                 //tele1.LeftTele.TeleOffset = new Point3D(-1, 3, 0);
                 tele2 = AddSHT(Map.Felucca, true, 1690, 2789, 0);
                 //Link(tele1, tele2);
 
-                if (tele1 != null)
-                {
-                    tele1.Delete();
-                }
-                if (tele2 != null)
-                {
-                    tele2.Delete();
-                }
+                tele1?.Delete();
+                tele2?.Delete();
 
                 AddSHTCouple(false, 5809, 1905, 0, false, 5876, 1891, 0);
 
@@ -194,28 +152,16 @@ namespace Server.Commands
                 tele2 = AddSHT(Map.Trammel, false, 5913, 1893, 0);
                 //Link(tele1, tele2);
 
-                if (tele1 != null)
-                {
-                    tele1.Delete();
-                }
-                if (tele2 != null)
-                {
-                    tele2.Delete();
-                }
+                tele1?.Delete();
+                tele2?.Delete();
 
                 tele1 = AddSHT(Map.Felucca, false, 5814, 2015, 0);
                 //tele1.LeftTele.TeleOffset = new Point3D(-1, 3, 0);
                 tele2 = AddSHT(Map.Felucca, false, 5913, 1893, 0);
                 //Link(tele1, tele2);
 
-                if (tele1 != null)
-                {
-                    tele1.Delete();
-                }
-                if (tele2 != null)
-                {
-                    tele2.Delete();
-                }
+                tele1?.Delete();
+                tele2?.Delete();
 
                 AddSHTCouple(false, 5919, 2021, 0, true, 1724, 814, 0);
 
@@ -223,40 +169,22 @@ namespace Server.Commands
                 tele2 = AddSHT(Map.Trammel, true, 730, 1451, 0);
                 //Link(tele1, tele2);
 
-                if (tele1 != null)
-                {
-                    tele1.Delete();
-                }
-                if (tele2 != null)
-                {
-                    tele2.Delete();
-                }
+                tele1?.Delete();
+                tele2?.Delete();
 
                 tele1 = AddSHT(Map.Trammel, false, 5734, 1859, 0)/*.ChangeDest(tele2)*/;
-                if (tele1 != null)
-                {
-                    tele1.Delete();
-                }
+                tele1?.Delete();
 
                 tele1 = AddSHT(Map.Felucca, false, 5654, 1791, 0);
                 tele2 = AddSHT(Map.Felucca, true, 730, 1451, 0);
                 //Link(tele1, tele2);
 
-                if (tele1 != null)
-                {
-                    tele1.Delete();
-                }
-                if (tele2 != null)
-                {
-                    tele2.Delete();
-                }
+                tele1?.Delete();
+                tele2?.Delete();
 
                 tele1 = AddSHT(Map.Felucca, false, 5734, 1859, 0)/*.ChangeDest(tele2)*/;
 
-                if (tele1 != null)
-                {
-                    tele1.Delete();
-                }
+                tele1?.Delete();
 
                 return m_Count;
             }
diff --git a/Scripts/Commands/SignParser.cs b/Scripts/Commands/SignParser.cs
index b6388d204..0fcfbee4b 100644
--- a/Scripts/Commands/SignParser.cs
+++ b/Scripts/Commands/SignParser.cs
@@ -150,7 +150,7 @@ namespace Server.Commands
                 if (map == Map.Malas) return 4;
                 if (map == Map.Tokuno) return 5;
                 if (map == Map.TerMur) return 6;
-                throw new ArgumentException(string.Format("Unhandled map {0}", map.Name));
+                throw new ArgumentException($"Unhandled map {map.Name}");
             }
 
             public static List<SignEntry> LoadConfig(string path)
@@ -188,9 +188,7 @@ namespace Server.Commands
                 {
                     foreach (SignEntry sign in signs)
                     {
-                        string line = string.Format("{0} {1} {2} {3} {4} {5}", sign.m_Map,
-                            sign.m_ItemID, sign.m_Location.X, sign.m_Location.Y,
-                            sign.m_Location.Z, sign.m_Text);
+                        string line = $"{sign.m_Map} {sign.m_ItemID} {sign.m_Location.X} {sign.m_Location.Y} {sign.m_Location.Z} {sign.m_Text}";
                         op.WriteLine(line);
                     }
                 }
diff --git a/Scripts/Commands/Skills.cs b/Scripts/Commands/Skills.cs
index 1ff5addbd..2bde8dba8 100644
--- a/Scripts/Commands/Skills.cs
+++ b/Scripts/Commands/Skills.cs
@@ -83,9 +83,8 @@ namespace Server.Commands
 
             protected override void OnTarget(Mobile from, object targeted)
             {
-                if (targeted is Mobile)
+                if (targeted is Mobile targ)
                 {
-                    Mobile targ = (Mobile)targeted;
                     Server.Skills skills = targ.Skills;
 
                     for (int i = 0; i < skills.Length; ++i)
@@ -122,9 +121,8 @@ namespace Server.Commands
 
             protected override void OnTarget(Mobile from, object targeted)
             {
-                if (targeted is Mobile)
+                if (targeted is Mobile targ)
                 {
-                    Mobile targ = (Mobile)targeted;
                     Skill skill = targ.Skills[m_Skill];
 
                     if (skill == null)
@@ -133,7 +131,7 @@ namespace Server.Commands
                     if (m_Set)
                     {
                         skill.Base = m_Value;
-                        CommandLogging.LogChangeProperty(from, targ, string.Format("{0}.Base", m_Skill), m_Value.ToString());
+                        CommandLogging.LogChangeProperty(from, targ, $"{m_Skill}.Base", m_Value.ToString());
                     }
 
                     from.SendMessage("{0} : {1} (Base: {2})", m_Skill, skill.Value, skill.Base);
diff --git a/Scripts/Commands/SkillsMenu.cs b/Scripts/Commands/SkillsMenu.cs
index 1aba09218..a082d4285 100644
--- a/Scripts/Commands/SkillsMenu.cs
+++ b/Scripts/Commands/SkillsMenu.cs
@@ -31,8 +31,8 @@ namespace Server.Commands
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is Mobile)
-                    from.SendGump(new SkillsGump(from, (Mobile)o));
+                if (o is Mobile mobile)
+                    from.SendGump(new SkillsGump(from, mobile));
             }
         }
     }
diff --git a/Scripts/Commands/Statics.cs b/Scripts/Commands/Statics.cs
index da1e46746..4e512beb9 100644
--- a/Scripts/Commands/Statics.cs
+++ b/Scripts/Commands/Statics.cs
@@ -266,7 +266,7 @@ namespace Server
             if (totalFrozen == 0 && badDataFile)
                 from.SendGump(new NoticeGump(1060637, 30720, "Output data files could not be opened and the freeze operation has been aborted.<br><br>This probably means your server and client are using the same data files.  Instructions on how to resolve this can be found in the first warning window.", 0xFFC000, 320, 240, null, null));
             else
-                from.SendGump(new NoticeGump(1060637, 30720, string.Format("Freeze operation completed successfully.<br><br>{0} item{1} frozen.<br><br>You must restart your client and update it's data files to see the changes.", totalFrozen, totalFrozen != 1 ? "s were" : " was"), 0xFFC000, 320, 240, null, null));
+                from.SendGump(new NoticeGump(1060637, 30720, $"Freeze operation completed successfully.<br><br>{totalFrozen} item{(totalFrozen != 1 ? "s were" : " was")} frozen.<br><br>You must restart your client and update it's data files to see the changes.", 0xFFC000, 320, 240, null, null));
         }
 
         [Usage("Unfreeze")]
@@ -329,7 +329,7 @@ namespace Server
             if (totalUnfrozen == 0 && badDataFile)
                 from.SendGump(new NoticeGump(1060637, 30720, "Output data files could not be opened and the unfreeze operation has been aborted.<br><br>This probably means your server and client are using the same data files.  Instructions on how to resolve this can be found in the first warning window.", 0xFFC000, 320, 240, null, null));
             else
-                from.SendGump(new NoticeGump(1060637, 30720, string.Format("Unfreeze operation completed successfully.<br><br>{0} item{1} unfrozen.<br><br>You must restart your client and update it's data files to see the changes.", totalUnfrozen, totalUnfrozen != 1 ? "s were" : " was"), 0xFFC000, 320, 240, null, null));
+                from.SendGump(new NoticeGump(1060637, 30720, $"Unfreeze operation completed successfully.<br><br>{totalUnfrozen} item{(totalUnfrozen != 1 ? "s were" : " was")} unfrozen.<br><br>You must restart your client and update it's data files to see the changes.", 0xFFC000, 320, 240, null, null));
         }
 
         private static void FreezeBox_Callback(Mobile from, Map map, Point3D start, Point3D end, object state)
diff --git a/Scripts/Commands/UnloadMaps.cs b/Scripts/Commands/UnloadMaps.cs
index daeadedb6..500eacf6c 100644
--- a/Scripts/Commands/UnloadMaps.cs
+++ b/Scripts/Commands/UnloadMaps.cs
@@ -335,111 +335,111 @@ namespace Server.Gumps
 
                             if (Selections.Contains(101) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 101", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 101");
                             }
                             if (Selections.Contains(102) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 102", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 102");
                             }
                             if (Selections.Contains(103) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 103", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 103");
                             }
                             if (Selections.Contains(104) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 104", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 104");
                             }
                             if (Selections.Contains(105) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 105", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 105");
                             }
                             if (Selections.Contains(106) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 106", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 106");
                             }
                             if (Selections.Contains(107) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 107", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 107");
                             }
                             if (Selections.Contains(108) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 108", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 108");
                             }
                             if (Selections.Contains(109) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 109", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 109");
                             }
                             if (Selections.Contains(110) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 110", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 110");
                             }
                             if (Selections.Contains(111) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 111", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 111");
                             }
                             if (Selections.Contains(112) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 112", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 112");
                             }
                             if (Selections.Contains(113) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 113", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 113");
                             }
                             if (Selections.Contains(114) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 114", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 114");
                             }
                             if (Selections.Contains(115) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 115", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 115");
                             }
                             if (Selections.Contains(116) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 116", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 116");
                             }
                             if (Selections.Contains(117) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 117", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 117");
                             }
                             if (Selections.Contains(118) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 118", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 118");
                             }
                             if (Selections.Contains(119) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 119", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 119");
                             }
                             if (Selections.Contains(120) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 120", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 120");
                             }
                             if (Selections.Contains(121) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 121", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 121");
                             }
                             if (Selections.Contains(122) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 122", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 122");
                             }
                             if (Selections.Contains(123) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 123", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 123");
                             }
                             if (Selections.Contains(124) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 124", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 124");
                             }
                             if (Selections.Contains(125) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 125", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 125");
                             }
                             if (Selections.Contains(126) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 126", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 126");
                             }
                             if (Selections.Contains(127) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 127", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 127");
                             }
                         }
 
@@ -721,115 +721,115 @@ namespace Server.Gumps
 
                             if (Selections.Contains(101) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 201", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 201");
                             }
                             if (Selections.Contains(102) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 202", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 202");
                             }
                             if (Selections.Contains(103) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 203", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 203");
                             }
                             if (Selections.Contains(104) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 204", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 204");
                             }
                             if (Selections.Contains(105) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 205", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 205");
                             }
                             if (Selections.Contains(106) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 206", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 206");
                             }
                             if (Selections.Contains(107) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 207", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 207");
                             }
                             if (Selections.Contains(108) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 208", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 208");
                             }
                             if (Selections.Contains(109) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 209", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 209");
                             }
                             if (Selections.Contains(110) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 210", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 210");
                             }
                             if (Selections.Contains(111) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 228", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 228");
                             }
                             if (Selections.Contains(112) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 211", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 211");
                             }
                             if (Selections.Contains(113) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 212", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 212");
                             }
                             if (Selections.Contains(114) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 213", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 213");
                             }
                             if (Selections.Contains(115) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 214", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 214");
                             }
                             if (Selections.Contains(116) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 215", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 215");
                             }
                             if (Selections.Contains(117) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 216", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 216");
                             }
                             if (Selections.Contains(118) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 217", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 217");
                             }
                             if (Selections.Contains(119) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 218", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 218");
                             }
                             if (Selections.Contains(120) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 219", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 219");
                             }
                             if (Selections.Contains(121) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 220", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 220");
                             }
                             if (Selections.Contains(122) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 221", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 221");
                             }
                             if (Selections.Contains(123) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 222", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 222");
                             }
                             if (Selections.Contains(124) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 223", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 223");
                             }
                             if (Selections.Contains(125) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 224", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 224");
                             }
                             if (Selections.Contains(126) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 225", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 225");
                             }
                             if (Selections.Contains(127) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 226", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 226");
                             }
                             if (Selections.Contains(128) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 227", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 227");
                             }
                         }
 
@@ -986,59 +986,59 @@ namespace Server.Gumps
 
                             if (Selections.Contains(101) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 301", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 301");
                             }
                             if (Selections.Contains(102) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 302", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 302");
                             }
                             if (Selections.Contains(103) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 303", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 303");
                             }
                             if (Selections.Contains(104) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 304", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 304");
                             }
                             if (Selections.Contains(105) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 305", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 305");
                             }
                             if (Selections.Contains(106) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 306", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 306");
                             }
                             if (Selections.Contains(107) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 307", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 307");
                             }
                             if (Selections.Contains(108) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 308", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 308");
                             }
                             if (Selections.Contains(109) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 309", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 309");
                             }
                             if (Selections.Contains(110) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 310", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 310");
                             }
                             if (Selections.Contains(111) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 311", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 311");
                             }
                             if (Selections.Contains(112) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 312", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 312");
                             }
                             if (Selections.Contains(113) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 313", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 313");
                             }
                             if (Selections.Contains(114) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 314", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 314");
                             }
                         }
 
@@ -1140,35 +1140,35 @@ namespace Server.Gumps
 
                             if (Selections.Contains(101) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 401", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 401");
                             }
                             if (Selections.Contains(102) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 402", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 402");
                             }
                             if (Selections.Contains(103) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 403", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 403");
                             }
                             if (Selections.Contains(104) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 404", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 404");
                             }
                             if (Selections.Contains(105) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 405", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 405");
                             }
                             if (Selections.Contains(106) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 406", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 406");
                             }
                             if (Selections.Contains(107) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 407", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 407");
                             }
                             if (Selections.Contains(108) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 408", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 408");
                             }
                         }
 
@@ -1262,27 +1262,27 @@ namespace Server.Gumps
 
                             if (Selections.Contains(101) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 501", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 501");
                             }
                             if (Selections.Contains(102) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 502", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 502");
                             }
                             if (Selections.Contains(103) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 503", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 503");
                             }
                             if (Selections.Contains(104) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 504", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 504");
                             }
                             if (Selections.Contains(105) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 505", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 505");
                             }
                             if (Selections.Contains(106) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 506", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 506");
                             }
                         }
 
@@ -1620,155 +1620,155 @@ namespace Server.Gumps
 
                             if (Selections.Contains(101) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 601", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 601");
                             }
                             if (Selections.Contains(102) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 602", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 602");
                             }
                             if (Selections.Contains(103) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 603", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 603");
                             }
                             if (Selections.Contains(104) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 604", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 604");
                             }
                             if (Selections.Contains(105) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 605", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 605");
                             }
                             if (Selections.Contains(106) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 606", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 606");
                             }
                             if (Selections.Contains(107) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 607", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 607");
                             }
                             if (Selections.Contains(108) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 608", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 608");
                             }
                             if (Selections.Contains(109) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 609", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 609");
                             }
                             if (Selections.Contains(110) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 610", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 610");
                             }
                             if (Selections.Contains(111) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 611", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 611");
                             }
                             if (Selections.Contains(112) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 612", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 612");
                             }
                             if (Selections.Contains(113) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 613", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 613");
                             }
                             if (Selections.Contains(114) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 614", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 614");
                             }
                             if (Selections.Contains(115) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 615", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 615");
                             }
                             if (Selections.Contains(116) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 616", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 616");
                             }
                             if (Selections.Contains(117) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 617", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 617");
                             }
                             if (Selections.Contains(118) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 618", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 618");
                             }
                             if (Selections.Contains(119) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 619", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 619");
                             }
                             if (Selections.Contains(120) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 620", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 620");
                             }
                             if (Selections.Contains(121) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 621", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 621");
                             }
                             if (Selections.Contains(122) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 622", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 622");
                             }
                             if (Selections.Contains(123) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 623", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 623");
                             }
                             if (Selections.Contains(124) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 624", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 624");
                             }
                             if (Selections.Contains(125) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 625", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 625");
                             }
                             if (Selections.Contains(126) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 626", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 626");
                             }
                             if (Selections.Contains(127) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 627", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 627");
                             }
                             if (Selections.Contains(128) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 628", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 628");
                             }
                             if (Selections.Contains(129) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 629", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 629");
                             }
                             if (Selections.Contains(130) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 630", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 630");
                             }
                             if (Selections.Contains(131) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 631", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 631");
                             }
                             if (Selections.Contains(132) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 632", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 632");
                             }
                             if (Selections.Contains(133) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 633", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 633");
                             }
                             if (Selections.Contains(134) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 634", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 634");
                             }
                             if (Selections.Contains(135) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 635", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 635");
                             }
                             if (Selections.Contains(136) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 636", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 636");
                             }
                             if (Selections.Contains(137) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 637", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 637");
                             }
                             if (Selections.Contains(138) == true)
                             {
-                                CommandSystem.Handle(from, string.Format("{0}Spawngen unload 638", prefix));
+                                CommandSystem.Handle(from, $"{prefix}Spawngen unload 638");
                             }
                         }
 
diff --git a/Scripts/Commands/WhatIsIt.cs b/Scripts/Commands/WhatIsIt.cs
index a9d84b90d..5cdb6dbf2 100644
--- a/Scripts/Commands/WhatIsIt.cs
+++ b/Scripts/Commands/WhatIsIt.cs
@@ -26,7 +26,7 @@ namespace Server.Commands
                 string typename = targeted.GetType().Name;
                 string article = "a";
 
-                if (typename != null && typename.Length > 0)
+                if (!string.IsNullOrEmpty(typename))
                 {
                     if ("aeiouy".IndexOf(typename.ToLower()[0]) >= 0)
                     {
@@ -34,14 +34,14 @@ namespace Server.Commands
                     }
                 }
 
-                if (targeted is Item)
+                if (targeted is Item item)
                 {
-                    name = ((Item)targeted).Name;
+                    name = item.Name;
                 }
                 else
-                    if (targeted is Mobile)
+                    if (targeted is Mobile mobile)
                 {
-                    name = ((Mobile)targeted).Name;
+                    name = mobile.Name;
                 }
                 if (name != string.Empty && name != null)
                 {
diff --git a/Scripts/Context Menus/AddToSpellbookEntry.cs b/Scripts/Context Menus/AddToSpellbookEntry.cs
index 73d5d07a2..c4d2b1fae 100644
--- a/Scripts/Context Menus/AddToSpellbookEntry.cs	
+++ b/Scripts/Context Menus/AddToSpellbookEntry.cs	
@@ -27,11 +27,10 @@ namespace Server.ContextMenus
 
             protected override void OnTarget(Mobile from, object targeted)
             {
-                if (targeted is Spellbook)
+                if (targeted is Spellbook book)
                 {
                     if (from.CheckAlive() && !m_Scroll.Deleted && m_Scroll.Movable && m_Scroll.Amount >= 1 && m_Scroll.CheckItemUse(from))
                     {
-                        Spellbook book = (Spellbook)targeted;
 
                         SpellbookType type = Spellbook.GetTypeForSpell(m_Scroll.SpellID);
 
diff --git a/Scripts/Gumps/AddCustomizableMessageGump.cs b/Scripts/Gumps/AddCustomizableMessageGump.cs
index 5d8916cc3..0fc32a382 100644
--- a/Scripts/Gumps/AddCustomizableMessageGump.cs
+++ b/Scripts/Gumps/AddCustomizableMessageGump.cs
@@ -45,7 +45,7 @@ namespace Server.Items
             AddPage(0);
 
             AddBackground(0, 0, 420, 320, 0x2454);
-            AddHtmlLocalized(10, 10, 400, 18, 1114513, string.Format("#{0}", TitleCliloc == 0 ? 1151680 : TitleCliloc), 0x4000, false, false); // Add Message
+            AddHtmlLocalized(10, 10, 400, 18, 1114513, $"#{(TitleCliloc == 0 ? 1151680 : TitleCliloc)}", 0x4000, false, false); // Add Message
             AddHtmlLocalized(10, 37, 400, 90, SubjectCliloc == 0 ? 1151681 : SubjectCliloc, 0x14AA, false, false); // Enter up to three lines of personallized text.  you may enter up to 25 characters per line.
 
             AddHtmlLocalized(10, 136, 400, 16, 1150296, 0x14AA, false, false); // Line 1:
@@ -90,22 +90,22 @@ namespace Server.Items
                     _MessageItem.Lines[i] = s;
                 }
 
-                if (_MessageItem is BaseAddon)
+                if (_MessageItem is BaseAddon baseAddon)
                 {
-                    foreach (AddonComponent comp in ((BaseAddon)_MessageItem).Components)
+                    foreach (AddonComponent comp in baseAddon.Components)
                     {
                         comp.InvalidateProperties();
                     }
                 }
-                else if (_MessageItem is Item)
+                else if (_MessageItem is Item item)
                 {
-                    ((Item)_MessageItem).InvalidateProperties();
+                    item.InvalidateProperties();
                 }
             }
 
-            if (_MessageItem is ValentineBear)
+            if (_MessageItem is ValentineBear valentineBear)
             {
-                ((ValentineBear)_MessageItem).EditEnd = DateTime.UtcNow + TimeSpan.FromMinutes(10.0);
+                valentineBear.EditEnd = DateTime.UtcNow + TimeSpan.FromMinutes(10.0);
             }
         }
     }
@@ -124,9 +124,9 @@ namespace Server.Items
 
         public override void OnClick()
         {
-            if (_MessageItem is Item)
+            if (_MessageItem is Item item)
             {
-                if (_MessageItem is BaseAddon || ((Item)_MessageItem).IsChildOf(_From.Backpack))
+                if (_MessageItem is BaseAddon || item.IsChildOf(_From.Backpack))
                 {
                     BaseGump.SendGump(new AddCustomizableMessageGump(_From, _MessageItem));
                 }
diff --git a/Scripts/Gumps/AddDoorGump.cs b/Scripts/Gumps/AddDoorGump.cs
index 96351b457..d6cd0b0d8 100644
--- a/Scripts/Gumps/AddDoorGump.cs
+++ b/Scripts/Gumps/AddDoorGump.cs
@@ -92,7 +92,7 @@ namespace Server.Gumps
                     if (pos == 0)
                     {
                         AddPage(page);
-                        AddHtmlLocalized(30, 20, 60, 20, 1042971, string.Format("{0}", page), 0x7FFF, false, false); // #
+                        AddHtmlLocalized(30, 20, 60, 20, 1042971, $"{page}", 0x7FFF, false, false); // #
 
                         AddHtmlLocalized(30, 45, 60, 20, 1043353, 0x7FFF, false, false); // Next
                         if (page < pages)
@@ -153,12 +153,12 @@ namespace Server.Gumps
                 if (button >= 0 && button < 8)
                 {
                     from.SendGump(new AddDoorGump(m_Type));
-                    CommandSystem.Handle(from, string.Format("{0}Add {1} {2}", CommandSystem.Prefix, m_Types[m_Type].m_Type.Name, (DoorFacing)button));
+                    CommandSystem.Handle(from, $"{CommandSystem.Prefix}Add {m_Types[m_Type].m_Type.Name} {(DoorFacing)button}");
                 }
                 else if (button == 8)
                 {
                     from.SendGump(new AddDoorGump(m_Type));
-                    CommandSystem.Handle(from, string.Format("{0}Link", CommandSystem.Prefix));
+                    CommandSystem.Handle(from, $"{CommandSystem.Prefix}Link");
                 }
                 else
                 {
diff --git a/Scripts/Gumps/AddGump.cs b/Scripts/Gumps/AddGump.cs
index 33cdb751f..a699f2668 100644
--- a/Scripts/Gumps/AddGump.cs
+++ b/Scripts/Gumps/AddGump.cs
@@ -227,14 +227,12 @@ namespace Server.Gumps
 
             protected override void OnTarget(Mobile from, object o)
             {
-                IPoint3D p = o as IPoint3D;
-
-                if (p != null)
+                if (o is IPoint3D p)
                 {
-                    if (p is Item)
-                        p = ((Item)p).GetWorldTop();
-                    else if (p is Mobile)
-                        p = ((Mobile)p).Location;
+                    if (p is Item item)
+                        p = item.GetWorldTop();
+                    else if (p is Mobile mobile)
+                        p = mobile.Location;
 
                     Commands.Add.Invoke(from, new Point3D(p), new Point3D(p), new string[] { m_Type.Name });
 
diff --git a/Scripts/Gumps/AddSignGump.cs b/Scripts/Gumps/AddSignGump.cs
index d8b45e46c..6a8d3054d 100644
--- a/Scripts/Gumps/AddSignGump.cs
+++ b/Scripts/Gumps/AddSignGump.cs
@@ -156,7 +156,7 @@ namespace Server.Gumps
                 if (xpos == 0 && ypos == 0)
                 {
                     AddPage(page);
-                    AddHtmlLocalized(30, 20, 60, 20, 1042971, string.Format("{0}", page), 0x7FFF, false, false); // #
+                    AddHtmlLocalized(30, 20, 60, 20, 1042971, $"{page}", 0x7FFF, false, false); // #
 
                     AddHtmlLocalized(30, 45, 60, 20, 1043353, 0x7FFF, false, false); // Next
                     if (page < pages)
@@ -209,7 +209,7 @@ namespace Server.Gumps
             if (button < 0)
                 return;
 
-            CommandSystem.Handle(from, string.Format("{0}Add {1} {2}", CommandSystem.Prefix, " Sign ", m_Types[button].m_BaseID));
+            CommandSystem.Handle(from, $"{CommandSystem.Prefix}Add {" Sign "} {m_Types[button].m_BaseID}");
             from.SendGump(new AddSignGump());
         }
     }
diff --git a/Scripts/Gumps/AdminGump.cs b/Scripts/Gumps/AdminGump.cs
index 63b1e101b..33e3d40ac 100644
--- a/Scripts/Gumps/AdminGump.cs
+++ b/Scripts/Gumps/AdminGump.cs
@@ -86,12 +86,12 @@ namespace Server.Gumps
 
         public string Center(string text)
         {
-            return string.Format("<CENTER>{0}</CENTER>", text);
+            return $"<CENTER>{text}</CENTER>";
         }
 
         public string Color(string text, int color)
         {
-            return string.Format("<BASEFONT COLOR=#{0:X6}>{1}</BASEFONT>", color, text);
+            return $"<BASEFONT COLOR=#{color:X6}>{text}</BASEFONT>";
         }
 
         public void AddBlackAlpha(int x, int y, int width, int height)
@@ -113,15 +113,15 @@ namespace Server.Gumps
         public static string FormatByteAmount(long totalBytes)
         {
             if (totalBytes > 1000000000)
-                return string.Format("{0:F1} GB", (double)totalBytes / 1073741824);
+                return $"{(double)totalBytes / 1073741824:F1} GB";
 
             if (totalBytes > 1000000)
-                return string.Format("{0:F1} MB", (double)totalBytes / 1048576);
+                return $"{(double)totalBytes / 1048576:F1} MB";
 
             if (totalBytes > 1000)
-                return string.Format("{0:F1} KB", (double)totalBytes / 1024);
+                return $"{(double)totalBytes / 1024:F1} KB";
 
-            return string.Format("{0} Bytes", totalBytes);
+            return $"{totalBytes} Bytes";
         }
 
         public static void Initialize()
@@ -612,7 +612,7 @@ namespace Server.Gumps
                             y += 20;
 
                             AddLabel(20, y, LabelHue, "Location:");
-                            AddLabel(200, y, LabelHue, string.Format("{0} [{1}]", m.Location, m.Map));
+                            AddLabel(200, y, LabelHue, $"{m.Location} [{m.Map}]");
                             y += 44;
                         }
                         else
@@ -628,7 +628,7 @@ namespace Server.Gumps
                             y += 20;
 
                             AddLabel(20, y, LabelHue, "Location:");
-                            AddLabel(200, y, LabelHue, string.Format("{0} [{1}]", m.Location, m.Map));
+                            AddLabel(200, y, LabelHue, $"{m.Location} [{m.Map}]");
                             y += 24;
                         }
 
@@ -1472,7 +1472,7 @@ namespace Server.Gumps
                 CommandLogging.WriteLine(from, "{0} {1} deleting account {2}", from.AccessLevel, CommandLogging.Format(from), a.Username);
                 a.Delete();
 
-                from.SendGump(new AdminGump(from, AdminGumpPage.Accounts, 0, null, string.Format("{0} : The account has been deleted.", a.Username), null));
+                from.SendGump(new AdminGump(from, AdminGumpPage.Accounts, 0, null, $"{a.Username} : The account has been deleted.", null));
             }
             else
             {
@@ -1531,14 +1531,14 @@ namespace Server.Gumps
                 if (!ban)
                     NetState.Resume();
 
-                from.SendGump(new NoticeGump(1060637, 30720, string.Format("You have {0} the account{1}.", ban ? "banned" : "deleted", rads.Count == 1 ? "" : "s"), 0xFFC000, 420, 280, ResendGump_Callback, new object[] { list, rads, ban ? page : 0 }));
+                from.SendGump(new NoticeGump(1060637, 30720, $"You have {(ban ? "banned" : "deleted")} the account{(rads.Count == 1 ? "" : "s")}.", 0xFFC000, 420, 280, ResendGump_Callback, new object[] { list, rads, ban ? page : 0 }));
 
                 if (ban)
                     from.SendGump(new BanDurationGump(rads));
             }
             else
             {
-                from.SendGump(new NoticeGump(1060637, 30720, string.Format("You have chosen not to {0} the account{1}.", ban ? "ban" : "delete", rads.Count == 1 ? "" : "s"), 0xFFC000, 420, 280, ResendGump_Callback, new object[] { list, rads, page }));
+                from.SendGump(new NoticeGump(1060637, 30720, $"You have chosen not to {(ban ? "ban" : "delete")} the account{(rads.Count == 1 ? "" : "s")}.", 0xFFC000, 420, 280, ResendGump_Callback, new object[] { list, rads, page }));
             }
         }
 
@@ -1582,7 +1582,7 @@ namespace Server.Gumps
             {
                 Firewall.Add(toFirewall);
 
-                notice = string.Format("{0} : Added to firewall.", toFirewall);
+                notice = $"{toFirewall} : Added to firewall.";
             }
             else
             {
@@ -1615,7 +1615,7 @@ namespace Server.Gumps
                 newList.Remove(ip);
                 a.LoginIPs = newList.ToArray();
 
-                notice = string.Format("{0} : Removed address.", ip);
+                notice = $"{ip} : Removed address.";
             }
             else
             {
@@ -1831,7 +1831,7 @@ namespace Server.Gumps
                                     else
                                     {
                                         notice = "Your message has been broadcasted.";
-                                        InvokeCommand(string.Format("{0} {1}", index == 210 ? "BC" : "SM", text));
+                                        InvokeCommand($"{(index == 210 ? "BC" : "SM")} {text}");
                                     }
 
                                     break;
@@ -2040,7 +2040,7 @@ namespace Server.Gumps
                                         if (count == 0)
                                             notice = "Nobody without access was found to disconnect.";
                                         else
-                                            notice = string.Format("Number of players disconnected: {0}", count);
+                                            notice = $"Number of players disconnected: {count}";
                                     }
                                     else
                                     {
@@ -2131,7 +2131,7 @@ namespace Server.Gumps
 
                                     if (string.IsNullOrEmpty(match))
                                     {
-                                        notice = string.Format("You must enter {0} to search.", forName ? "a name" : "an ip address");
+                                        notice = $"You must enter {(forName ? "a name" : "an ip address")} to search.";
                                     }
                                     else
                                     {
@@ -2274,7 +2274,7 @@ namespace Server.Gumps
                                         else
                                         {
                                             dispAccount = new Account(un, pw);
-                                            notice = string.Format("{0} : Account added.", un);
+                                            notice = $"{un} : Account added.";
                                             CommandLogging.WriteLine(from, "{0} {1} adding new account: {2}", from.AccessLevel, CommandLogging.Format(from), un);
                                         }
                                     }
@@ -2332,7 +2332,7 @@ namespace Server.Gumps
                                     a.SetUnspecifiedBan(from);
                                     a.Banned = (index == 10);
                                     CommandLogging.WriteLine(from, "{0} {1} {3} account {2}", from.AccessLevel, CommandLogging.Format(from), a.Username, a.Banned ? "banning" : "unbanning");
-                                    from.SendGump(new AdminGump(from, m_PageType, m_ListPage, m_List, string.Format("The account has been {0}.", a.Banned ? "banned" : "unbanned"), m_State));
+                                    from.SendGump(new AdminGump(from, m_PageType, m_ListPage, m_List, $"The account has been {(a.Banned ? "banned" : "unbanned")}.", m_State));
 
                                     if (index == 10)
                                         from.SendGump(new BanDurationGump(a));
@@ -2439,7 +2439,7 @@ namespace Server.Gumps
 
                                     if (a.LoginIPs.Length > 0)
                                     {
-                                        from.SendGump(new WarningGump(1060635, 30720, string.Format("You are about to firewall {0} address{1}. Do you wish to continue?", a.LoginIPs.Length, a.LoginIPs.Length != 1 ? "s" : ""), 0xFFC000, 420, 400, FirewallShared_Callback, a));
+                                        from.SendGump(new WarningGump(1060635, 30720, $"You are about to firewall {a.LoginIPs.Length} address{(a.LoginIPs.Length != 1 ? "s" : "")}. Do you wish to continue?", 0xFFC000, 420, 400, FirewallShared_Callback, a));
                                     }
                                     else
                                     {
@@ -2487,7 +2487,7 @@ namespace Server.Gumps
 
                                             a.IPRestrictions = newList;
 
-                                            notice = string.Format("{0} : Added to restriction list.", ip);
+                                            notice = $"{ip} : Added to restriction list.";
                                         }
                                     }
 
@@ -2551,7 +2551,7 @@ namespace Server.Gumps
                                     if (a == null)
                                         break;
 
-                                    from.SendGump(new WarningGump(1060635, 30720, string.Format("<center>Account of {0}</center><br>You are about to <em><basefont color=red>permanently delete</basefont></em> the account. Likewise, all characters on the account will be deleted, including equiped, inventory, and banked items. Any houses tied to the account will be demolished.<br><br>Do you wish to continue?", a.Username), 0xFFC000, 420, 280, AccountDelete_Callback, m_State));
+                                    from.SendGump(new WarningGump(1060635, 30720, $"<center>Account of {a.Username}</center><br>You are about to <em><basefont color=red>permanently delete</basefont></em> the account. Likewise, all characters on the account will be deleted, including equiped, inventory, and banked items. Any houses tied to the account will be demolished.<br><br>Do you wish to continue?", 0xFFC000, 420, 280, AccountDelete_Callback, m_State));
                                     break;
                                 }
                             case 26: // View all shared accounts
@@ -2568,7 +2568,7 @@ namespace Server.Gumps
                                         break;
 
                                     if (rads.Count > 0)
-                                        from.SendGump(new WarningGump(1060635, 30720, string.Format("You are about to ban {0} marked account{1}. Be cautioned, the only way to reverse this is by hand--manually unbanning each account.<br><br>Do you wish to continue?", rads.Count, rads.Count == 1 ? "" : "s"), 0xFFC000, 420, 280, Marked_Callback, new object[] { true, list, rads, m_ListPage }));
+                                        from.SendGump(new WarningGump(1060635, 30720, $"You are about to ban {rads.Count} marked account{(rads.Count == 1 ? "" : "s")}. Be cautioned, the only way to reverse this is by hand--manually unbanning each account.<br><br>Do you wish to continue?", 0xFFC000, 420, 280, Marked_Callback, new object[] { true, list, rads, m_ListPage }));
                                     else
                                         from.SendGump(new NoticeGump(1060637, 30720, "You have not yet marked any accounts. Place a check mark next to the accounts you wish to ban and then try again.", 0xFFC000, 420, 280, ResendGump_Callback, new object[] { list, rads, m_ListPage }));
 
@@ -2732,7 +2732,7 @@ namespace Server.Gumps
                                     if (ips.Length == 0)
                                         from.SendGump(new AdminGump(from, AdminGumpPage.AccountDetails_Access_ClientIPs, 0, null, "This account has not yet been accessed.", m_State));
                                     else
-                                        from.SendGump(new WarningGump(1060635, 30720, string.Format("You are about to clear the address list for account {0} containing {1} {2}. Do you wish to continue?", a, ips.Length, (ips.Length == 1) ? "entry" : "entries"), 0xFFC000, 420, 280, RemoveLoginIPs_Callback, a));
+                                        from.SendGump(new WarningGump(1060635, 30720, $"You are about to clear the address list for account {a} containing {ips.Length} {((ips.Length == 1) ? "entry" : "entries")}. Do you wish to continue?", 0xFFC000, 420, 280, RemoveLoginIPs_Callback, a));
 
                                     break;
                                 }
@@ -2798,7 +2798,7 @@ namespace Server.Gumps
                                     if (results.Count == 1)
                                         from.SendGump(new AdminGump(from, AdminGumpPage.FirewallInfo, 0, null, "One match found.", results[0]));
                                     else if (results.Count > 1)
-                                        from.SendGump(new AdminGump(from, AdminGumpPage.Firewall, 0, results, string.Format("Search results for : {0}", match), m_State));
+                                        from.SendGump(new AdminGump(from, AdminGumpPage.Firewall, 0, results, $"Search results for : {match}", m_State));
                                     else
                                         from.SendGump(new AdminGump(from, m_PageType, m_ListPage, m_List, notice == null ? "Nothing matched your search terms." : notice, m_State));
 
@@ -2824,7 +2824,7 @@ namespace Server.Gumps
                                         CommandLogging.WriteLine(from, "{0} {1} firewalling {2}", from.AccessLevel, CommandLogging.Format(from), toAdd);
 
                                         Firewall.Add(toAdd);
-                                        from.SendGump(new AdminGump(from, AdminGumpPage.FirewallInfo, 0, null, string.Format("{0} : Added to firewall.", toAdd), toAdd));
+                                        from.SendGump(new AdminGump(from, AdminGumpPage.FirewallInfo, 0, null, $"{toAdd} : Added to firewall.", toAdd));
                                     }
 
                                     break;
@@ -2842,7 +2842,7 @@ namespace Server.Gumps
                                         CommandLogging.WriteLine(from, "{0} {1} removing {2} from firewall list", from.AccessLevel, CommandLogging.Format(from), m_State);
 
                                         Firewall.Remove(m_State);
-                                        from.SendGump(new AdminGump(from, AdminGumpPage.Firewall, 0, null, string.Format("{0} : Removed from firewall.", m_State), null));
+                                        from.SendGump(new AdminGump(from, AdminGumpPage.Firewall, 0, null, $"{m_State} : Removed from firewall.", null));
                                     }
 
                                     break;
@@ -3030,7 +3030,7 @@ namespace Server.Gumps
 
                             if (m_PageType == AdminGumpPage.AccountDetails_Access_ClientIPs)
                             {
-                                from.SendGump(new WarningGump(1060635, 30720, string.Format("You are about to firewall {0}. All connection attempts from a matching IP will be refused. Are you sure?", m_List[index]), 0xFFC000, 420, 280, Firewall_Callback, new object[] { a, m_List[index] }));
+                                from.SendGump(new WarningGump(1060635, 30720, $"You are about to firewall {m_List[index]}. All connection attempts from a matching IP will be refused. Are you sure?", 0xFFC000, 420, 280, Firewall_Callback, new object[] { a, m_List[index] }));
                             }
                             else if (m_PageType == AdminGumpPage.AccountDetails_Access_Restrictions)
                             {
@@ -3040,7 +3040,7 @@ namespace Server.Gumps
 
                                 a.IPRestrictions = (string[])list.ToArray(typeof(string));
 
-                                from.SendGump(new AdminGump(from, AdminGumpPage.AccountDetails_Access_Restrictions, 0, null, string.Format("{0} : Removed from list.", m_List[index]), a));
+                                from.SendGump(new AdminGump(from, AdminGumpPage.AccountDetails_Access_Restrictions, 0, null, $"{m_List[index]} : Removed from list.", a));
                             }
                         }
 
@@ -3089,7 +3089,7 @@ namespace Server.Gumps
                                 if (a == null)
                                     break;
 
-                                from.SendGump(new WarningGump(1060635, 30720, string.Format("You are about to remove address {0} from account {1}. Do you wish to continue?", ip, a), 0xFFC000, 420, 280, RemoveLoginIP_Callback, new object[] { a, ip }));
+                                from.SendGump(new WarningGump(1060635, 30720, $"You are about to remove address {ip} from account {a}. Do you wish to continue?", 0xFFC000, 420, 280, RemoveLoginIP_Callback, new object[] { a, ip }));
                             }
                         }
 
@@ -3110,7 +3110,7 @@ namespace Server.Gumps
 
         private void InvokeCommand(string c)
         {
-            CommandSystem.Handle(m_From, string.Format("{0}{1}", CommandSystem.Prefix, c));
+            CommandSystem.Handle(m_From, $"{CommandSystem.Prefix}{c}");
         }
 
         public static void GetAccountInfo(Account a, out AccessLevel accessLevel, out bool online)
diff --git a/Scripts/Gumps/BanDurationGump.cs b/Scripts/Gumps/BanDurationGump.cs
index 25558884e..e0b0fe452 100644
--- a/Scripts/Gumps/BanDurationGump.cs
+++ b/Scripts/Gumps/BanDurationGump.cs
@@ -241,7 +241,7 @@ namespace Server.Gumps
                     a.SetBanTags(from, DateTime.UtcNow, duration);
 
                     if (comment != null)
-                        a.Comments.Add(new AccountComment(from.RawName, string.Format("Duration: {0}, Comment: {1}", ((duration == TimeSpan.MaxValue) ? "Infinite" : duration.ToString()), comment)));
+                        a.Comments.Add(new AccountComment(from.RawName, $"Duration: {((duration == TimeSpan.MaxValue) ? "Infinite" : duration.ToString())}, Comment: {comment}"));
                 }
 
                 if (duration == TimeSpan.MaxValue)
diff --git a/Scripts/Gumps/BaseGridGump.cs b/Scripts/Gumps/BaseGridGump.cs
index 74c519030..354ae20f2 100644
--- a/Scripts/Gumps/BaseGridGump.cs
+++ b/Scripts/Gumps/BaseGridGump.cs
@@ -33,12 +33,12 @@ namespace Server.Gumps
         public virtual int TextOffsetX => 2;
         public string Center(string text)
         {
-            return string.Format("<CENTER>{0}</CENTER>", text);
+            return $"<CENTER>{text}</CENTER>";
         }
 
         public string Color(string text, int color)
         {
-            return string.Format("<BASEFONT COLOR=#{0:X6}>{1}</BASEFONT>", color, text);
+            return $"<BASEFONT COLOR=#{color:X6}>{text}</BASEFONT>";
         }
 
         public int GetButtonID(int typeCount, int type, int index)
diff --git a/Scripts/Gumps/BaseGump.cs b/Scripts/Gumps/BaseGump.cs
index 8fc672bcd..e0b4df48a 100644
--- a/Scripts/Gumps/BaseGump.cs
+++ b/Scripts/Gumps/BaseGump.cs
@@ -28,10 +28,8 @@ namespace Server.Gumps
 
                 if (_Parent != null)
                 {
-                    if (_Parent is BaseGump)
+                    if (_Parent is BaseGump bGump)
                     {
-                        var bGump = (BaseGump)_Parent;
-
                         if (!bGump.Children.Contains(this))
                         {
                             bGump.Children.Add(this);
@@ -151,8 +149,8 @@ namespace Server.Gumps
 
         public void RefreshParent(bool resend = false)
         {
-            if (Parent is BaseGump)
-                ((BaseGump)Parent).Refresh();
+            if (Parent is BaseGump baseGump)
+                baseGump.Refresh();
 
             if (resend)
                 Refresh();
@@ -175,8 +173,8 @@ namespace Server.Gumps
 
             if (Parent != null)
             {
-                if (Parent is BaseGump)
-                    ((BaseGump)Parent).OnChildClosed(this);
+                if (Parent is BaseGump baseGump)
+                    baseGump.OnChildClosed(this);
 
                 Parent = null;
             }
@@ -333,52 +331,52 @@ namespace Server.Gumps
 
         protected string Color(string color, string str)
         {
-            return string.Format("<basefont color={0}>{1}", color, str);
+            return $"<basefont color={color}>{str}";
         }
 
         protected string Color(int color, string str)
         {
-            return string.Format("<basefont color=#{0:X6}>{1}", color, str);
+            return $"<basefont color=#{color:X6}>{str}";
         }
 
         protected string ColorAndCenter(string color, string str)
         {
-            return string.Format("<center><basefont color={0}>{1}</center>", color, str);
+            return $"<center><basefont color={color}>{str}</center>";
         }
 
         protected string ColorAndSize(string color, int size, string str)
         {
-            return string.Format("<basefont color={0} size={1}>{2}", color, size.ToString(), str);
+            return $"<basefont color={color} size={size.ToString()}>{str}";
         }
 
         protected string ColorAndCenterAndSize(string color, int size, string str)
         {
-            return string.Format("<basefont color={0} size={1}><center>{2}</center>", color, size.ToString(), str);
+            return $"<basefont color={color} size={size.ToString()}><center>{str}</center>";
         }
 
         protected string ColorAndCenter(int color, string str)
         {
-            return string.Format("<basefont color=#{0:X6}><center>{1}</center>", color, str);
+            return $"<basefont color=#{color:X6}><center>{str}</center>";
         }
 
         protected string Center(string str)
         {
-            return string.Format("<CENTER>{0}</CENTER>", str);
+            return $"<CENTER>{str}</CENTER>";
         }
 
         protected string ColorAndAlignRight(int color, string str)
         {
-            return string.Format("<DIV ALIGN=RIGHT><basefont color=#{0:X6}>{1}</DIV>", color, str);
+            return $"<DIV ALIGN=RIGHT><basefont color=#{color:X6}>{str}</DIV>";
         }
 
         protected string ColorAndAlignRight(string color, string str)
         {
-            return string.Format("<DIV ALIGN=RIGHT><basefont color={0}>{1}</DIV>", color, str);
+            return $"<DIV ALIGN=RIGHT><basefont color={color}>{str}</DIV>";
         }
 
         protected string AlignRight(string str)
         {
-            return string.Format("<DIV ALIGN=RIGHT>{0}</DIV>", str);
+            return $"<DIV ALIGN=RIGHT>{str}</DIV>";
         }
 
         public void AddHtmlTextDefinition(int x, int y, int length, int height, TextDefinition text, bool background, bool scrollbar)
@@ -407,22 +405,22 @@ namespace Server.Gumps
 
         public void AddHtmlLocalizedCentered(int x, int y, int length, int height, int localization, bool background, bool scrollbar)
         {
-            AddHtmlLocalized(x, y, length, height, 1113302, string.Format("#{0}", localization), 0, background, scrollbar);
+            AddHtmlLocalized(x, y, length, height, 1113302, $"#{localization}", 0, background, scrollbar);
         }
 
         public void AddHtmlLocalizedCentered(int x, int y, int length, int height, int localization, int hue, bool background, bool scrollbar)
         {
-            AddHtmlLocalized(x, y, length, height, 1113302, string.Format("#{0}", localization), hue, background, scrollbar);
+            AddHtmlLocalized(x, y, length, height, 1113302, $"#{localization}", hue, background, scrollbar);
         }
 
         public void AddHtmlLocalizedAlignRight(int x, int y, int length, int height, int localization, bool background, bool scrollbar)
         {
-            AddHtmlLocalized(x, y, length, height, 1114514, string.Format("#{0}", localization), 0, background, scrollbar);
+            AddHtmlLocalized(x, y, length, height, 1114514, $"#{localization}", 0, background, scrollbar);
         }
 
         public void AddHtmlLocalizedAlignRight(int x, int y, int length, int height, int localization, int hue, bool background, bool scrollbar)
         {
-            AddHtmlLocalized(x, y, length, height, 1114514, string.Format("#{0}", localization), hue, background, scrollbar);
+            AddHtmlLocalized(x, y, length, height, 1114514, $"#{localization}", hue, background, scrollbar);
         }
         #endregion
 
diff --git a/Scripts/Gumps/BaseRewardGump.cs b/Scripts/Gumps/BaseRewardGump.cs
index a3f709b71..d1f708bb2 100644
--- a/Scripts/Gumps/BaseRewardGump.cs
+++ b/Scripts/Gumps/BaseRewardGump.cs
@@ -162,9 +162,7 @@ namespace Server.Gumps
 
         public virtual void OnConfirmed(CollectionItem citem, int index)
         {
-            Item item = Activator.CreateInstance(citem.Type) as Item;
-
-            if (item != null)
+            if (Activator.CreateInstance(citem.Type) is Item item)
             {
                 if (User.Backpack == null || !User.Backpack.TryDropItem(User, item, false))
                 {
diff --git a/Scripts/Gumps/BasicInfoGump.cs b/Scripts/Gumps/BasicInfoGump.cs
index ee8e38941..0166d339d 100644
--- a/Scripts/Gumps/BasicInfoGump.cs
+++ b/Scripts/Gumps/BasicInfoGump.cs
@@ -27,12 +27,12 @@ namespace Server.Gumps
                 if (title.Number > 0)
                     AddHtmlLocalized(12, 10, 275, 20, title.Number, 0xFFFFFF, false, false);
                 else if (title.String != null)
-                    AddHtml(12, 10, 275, 20, string.Format("<BASEFONT COLOR=WHITE>{0}</BASEFONT>", title.String), false, false);
+                    AddHtml(12, 10, 275, 20, $"<BASEFONT COLOR=WHITE>{title.String}</BASEFONT>", false, false);
 
                 if (body.Number > 0)
                     AddHtmlLocalized(12, 40, 275, height - 60, body.Number, 0xFFFFFF, false, false);
                 else if (body.String != null)
-                    AddHtml(12, 40, 275, height - 60, string.Format("<BASEFONT COLOR=WHITE>{0}</BASEFONT>", body.String), false, false);
+                    AddHtml(12, 40, 275, height - 60, $"<BASEFONT COLOR=WHITE>{body.String}</BASEFONT>", false, false);
             }
             else
             {
@@ -41,7 +41,7 @@ namespace Server.Gumps
                 if (body.Number > 0)
                     AddHtmlLocalized(12, 10, 275, height - 25, body, 0xFFFFFF, false, false);
                 else if (body.String != null)
-                    AddHtml(12, 10, 275, height - 25, string.Format("<BASEFONT COLOR=WHITE>{0}</BASEFONT>", body.String), false, false);
+                    AddHtml(12, 10, 275, height - 25, $"<BASEFONT COLOR=WHITE>{body.String}</BASEFONT>", false, false);
             }
         }
     }
@@ -71,7 +71,7 @@ namespace Server.Gumps
             if (warning.Number > 0)
                 AddHtmlLocalized(10, 10, width - 20, height - 50, warning.Number, 0xFFFF, false, false);
             else
-                AddHtml(10, 10, width - 20, height - 50, string.Format("<BASEFONT COLOR=#FFFFFF>{0}</BASEFONT>", warning.String), false, true);
+                AddHtml(10, 10, width - 20, height - 50, $"<BASEFONT COLOR=#FFFFFF>{warning.String}</BASEFONT>", false, true);
         }
 
         public override void OnResponse(Network.NetState sender, RelayInfo info)
diff --git a/Scripts/Gumps/CategorizedAddGump.cs b/Scripts/Gumps/CategorizedAddGump.cs
index 29dcf2e76..f559afb76 100644
--- a/Scripts/Gumps/CategorizedAddGump.cs
+++ b/Scripts/Gumps/CategorizedAddGump.cs
@@ -46,7 +46,7 @@ namespace Server.Gumps
             }
             else
             {
-                CommandSystem.Handle(from, string.Format("{0}Add {1}", CommandSystem.Prefix, m_Type.Name));
+                CommandSystem.Handle(from, $"{CommandSystem.Prefix}Add {m_Type.Name}");
 
                 from.SendGump(new CategorizedAddGump(from, m_Parent, page));
             }
@@ -248,7 +248,7 @@ namespace Server.Gumps
             if (!OldStyle)
                 AddImageTiled(x - (OldStyle ? OffsetSize : 0), y, emptyWidth + (OldStyle ? OffsetSize * 2 : 0), EntryHeight, EntryGumpID);
 
-            AddHtml(x + TextOffsetX, y + ((EntryHeight - 20) / 2), emptyWidth - TextOffsetX, EntryHeight, string.Format("<center>{0}</center>", m_Category.Caption), false, false);
+            AddHtml(x + TextOffsetX, y + ((EntryHeight - 20) / 2), emptyWidth - TextOffsetX, EntryHeight, $"<center>{m_Category.Caption}</center>", false, false);
 
             x += emptyWidth + OffsetSize;
 
@@ -295,9 +295,8 @@ namespace Server.Gumps
 
                 AddButton(x + SetOffsetX, y + SetOffsetY, SetButtonID1, SetButtonID2, i + 4, GumpButtonType.Reply, 0);
 
-                if (node is CAGObject)
+                if (node is CAGObject obj)
                 {
-                    CAGObject obj = (CAGObject)node;
                     int itemID = obj.ItemID;
 
                     Rectangle2D bounds = ItemBounds.Table[itemID];
diff --git a/Scripts/Gumps/ClientGump.cs b/Scripts/Gumps/ClientGump.cs
index 355fb65fb..cab3b4e4b 100644
--- a/Scripts/Gumps/ClientGump.cs
+++ b/Scripts/Gumps/ClientGump.cs
@@ -66,7 +66,7 @@ namespace Server.Gumps
                 AddHtml(70, 36 + (line++ * 20), 200, 20, Color(string.Format("{0} (0x{1:X})", m.Name, m.Serial.Value), LabelColor32), false, false);
 
                 AddHtml(14, 36 + (line * 20), 200, 20, Color("Location:", LabelColor32), false, false);
-                AddHtml(70, 36 + (line++ * 20), 200, 20, Color(string.Format("{0} [{1}]", m.Location, m.Map), LabelColor32), false, false);
+                AddHtml(70, 36 + (line++ * 20), 200, 20, Color($"{m.Location} [{m.Map}]", LabelColor32), false, false);
 
                 AddButton(13, 157, 0xFAB, 0xFAD, 1, GumpButtonType.Reply, 0);
                 AddHtml(48, 158, 200, 20, Color("Send Message", LabelColor32), false, false);
@@ -278,12 +278,12 @@ namespace Server.Gumps
 
         public string Center(string text)
         {
-            return string.Format("<CENTER>{0}</CENTER>", text);
+            return $"<CENTER>{text}</CENTER>";
         }
 
         public string Color(string text, int color)
         {
-            return string.Format("<BASEFONT COLOR=#{0:X6}>{1}</BASEFONT>", color, text);
+            return $"<BASEFONT COLOR=#{color:X6}>{text}</BASEFONT>";
         }
 
         private void Resend(Mobile to, RelayInfo info)
diff --git a/Scripts/Gumps/ConfirmCallbackGump.cs b/Scripts/Gumps/ConfirmCallbackGump.cs
index 720c49f9a..0ee1d6f4e 100644
--- a/Scripts/Gumps/ConfirmCallbackGump.cs
+++ b/Scripts/Gumps/ConfirmCallbackGump.cs
@@ -74,7 +74,7 @@ namespace Server.Gumps
                 }
                 else if (!string.IsNullOrEmpty(Title.String))
                 {
-                    AddHtml(25, 25, 200, 20, string.Format("<basefont color=#FF0000>{0}", Title.String), false, false);
+                    AddHtml(25, 25, 200, 20, $"<basefont color=#FF0000>{Title.String}", false, false);
                 }
             }
 
@@ -93,7 +93,7 @@ namespace Server.Gumps
             }
             else if (!string.IsNullOrEmpty(Body.String))
             {
-                AddHtml(25, 55, 300, 120, string.Format("<BASEFONT COLOR=#FFFFFF>{0}</BASEFONT>", Body.String), false, false);
+                AddHtml(25, 55, 300, 120, $"<BASEFONT COLOR=#FFFFFF>{Body.String}</BASEFONT>", false, false);
             }
 
             AddRadio(25, 175, 0x25F8, 0x25FB, true, 1);
@@ -195,7 +195,7 @@ namespace Server.Gumps
             }
             else if (!string.IsNullOrEmpty(Title.String))
             {
-                AddHtml(25, 25, 200, 20, string.Format("<basefont color=#FF0000>{0}", Title.String), false, false);
+                AddHtml(25, 25, 200, 20, $"<basefont color=#FF0000>{Title.String}", false, false);
             }
 
             AddImage(25, 45, 0xBBF);
@@ -213,7 +213,7 @@ namespace Server.Gumps
             }
             else if (!string.IsNullOrEmpty(Body.String))
             {
-                AddHtml(25, 55, 300, 120, string.Format("<BASEFONT COLOR=#FFFFFF>{0}</BASEFONT>", Body.String), false, false);
+                AddHtml(25, 55, 300, 120, $"<BASEFONT COLOR=#FFFFFF>{Body.String}</BASEFONT>", false, false);
             }
 
             AddRadio(25, 175, 0x25F8, 0x25FB, true, 1);
diff --git a/Scripts/Gumps/ConfirmMountStatuetteGump.cs b/Scripts/Gumps/ConfirmMountStatuetteGump.cs
index 309cf630d..cdc1c4419 100644
--- a/Scripts/Gumps/ConfirmMountStatuetteGump.cs
+++ b/Scripts/Gumps/ConfirmMountStatuetteGump.cs
@@ -22,9 +22,9 @@ namespace Server.Gumps
 
             BaseCreature m = null;
 
-            if (m_Item is ICreatureStatuette)
+            if (m_Item is ICreatureStatuette iCreatureStatuette)
             {
-                m = Activator.CreateInstance(((ICreatureStatuette)m_Item).CreatureType) as BaseCreature;
+                m = Activator.CreateInstance(iCreatureStatuette.CreatureType) as BaseCreature;
             }
 
             if (m != null)
diff --git a/Scripts/Gumps/ConstainerDisplayGump.cs b/Scripts/Gumps/ConstainerDisplayGump.cs
index 838c825c7..b9d68de09 100644
--- a/Scripts/Gumps/ConstainerDisplayGump.cs
+++ b/Scripts/Gumps/ConstainerDisplayGump.cs
@@ -33,7 +33,7 @@ namespace Server.Gumps
             {
                 if (Title.Number > 0)
                 {
-                    AddHtmlLocalized(0, 10, 600, 18, CenterLoc, string.Format("#{0}", Title.Number), 0x6B45, false, false);
+                    AddHtmlLocalized(0, 10, 600, 18, CenterLoc, $"#{Title.Number}", 0x6B45, false, false);
                 }
                 else if (!string.IsNullOrEmpty(Title.String))
                 {
@@ -79,7 +79,7 @@ namespace Server.Gumps
 
             if (Pages > 1)
             {
-                AddHtmlLocalized(263, 346, 100, 18, 1153561, string.Format("{0}\t{1}", Page + 1, Pages), 0x6B45, false, false); // Page ~1_CUR~ of ~2_MAX~
+                AddHtmlLocalized(263, 346, 100, 18, 1153561, $"{Page + 1}\t{Pages}", 0x6B45, false, false); // Page ~1_CUR~ of ~2_MAX~
             }
             else
             {
@@ -149,9 +149,7 @@ namespace Server.Gumps
                     list.Add(item);
                 }
 
-                var cont = item as Container;
-
-                if (cont != null)
+                if (item is Container cont)
                 {
                     AllContents(list, cont);
                 }
diff --git a/Scripts/Gumps/Go/GoGump.cs b/Scripts/Gumps/Go/GoGump.cs
index 027adfea2..33bc4b280 100644
--- a/Scripts/Gumps/Go/GoGump.cs
+++ b/Scripts/Gumps/Go/GoGump.cs
@@ -147,7 +147,7 @@ namespace Server.Gumps
             if (!OldStyle)
                 AddImageTiled(x - (OldStyle ? OffsetSize : 0), y, emptyWidth + (OldStyle ? OffsetSize * 2 : 0), EntryHeight, EntryGumpID);
 
-            AddHtml(x + TextOffsetX, y, emptyWidth - TextOffsetX, EntryHeight, string.Format("<center>{0}</center>", node.Name), false, false);
+            AddHtml(x + TextOffsetX, y, emptyWidth - TextOffsetX, EntryHeight, $"<center>{node.Name}</center>", false, false);
 
             x += emptyWidth + OffsetSize;
 
@@ -185,10 +185,10 @@ namespace Server.Gumps
                 object child = node.Children[index];
                 string name = "";
 
-                if (child is ParentNode)
-                    name = ((ParentNode)child).Name;
-                else if (child is ChildNode)
-                    name = ((ChildNode)child).Name;
+                if (child is ParentNode parentNode)
+                    name = parentNode.Name;
+                else if (child is ChildNode childNode)
+                    name = childNode.Name;
 
                 AddImageTiled(x, y, EntryWidth, EntryHeight, EntryGumpID);
                 AddLabelCropped(x + TextOffsetX, y, EntryWidth - TextOffsetX, EntryHeight, TextHue, name);
@@ -237,9 +237,9 @@ namespace Server.Gumps
                         {
                             object o = m_Node.Children[index];
 
-                            if (o is ParentNode)
+                            if (o is ParentNode parentNode)
                             {
-                                from.SendGump(new GoGump(0, from, m_Tree, (ParentNode)o));
+                                from.SendGump(new GoGump(0, from, m_Tree, parentNode));
                             }
                             else
                             {
diff --git a/Scripts/Gumps/HouseRaffleManagementGump.cs b/Scripts/Gumps/HouseRaffleManagementGump.cs
index 554caa00c..422fe40ac 100644
--- a/Scripts/Gumps/HouseRaffleManagementGump.cs
+++ b/Scripts/Gumps/HouseRaffleManagementGump.cs
@@ -118,7 +118,7 @@ namespace Server.Gumps
                     Account acc = entry.From.Account as Account;
 
                     if (acc != null)
-                        name = string.Format("{0} ({1})", entry.From.Name, acc);
+                        name = $"{entry.From.Name} ({acc})";
                     else
                         name = entry.From.Name;
                 }
@@ -150,17 +150,17 @@ namespace Server.Gumps
         }
         public string Right(string text)
         {
-            return string.Format("<DIV ALIGN=RIGHT>{0}</DIV>", text);
+            return $"<DIV ALIGN=RIGHT>{text}</DIV>";
         }
 
         public string Center(string text)
         {
-            return string.Format("<CENTER>{0}</CENTER>", text);
+            return $"<CENTER>{text}</CENTER>";
         }
 
         public string Color(string text, int color)
         {
-            return string.Format("<BASEFONT COLOR=#{0:X6}>{1}</BASEFONT>", color, text);
+            return $"<BASEFONT COLOR=#{color:X6}>{text}</BASEFONT>";
         }
 
         public override void OnResponse(NetState sender, RelayInfo info)
diff --git a/Scripts/Gumps/NoticeGump.cs b/Scripts/Gumps/NoticeGump.cs
index 2cb196cb7..84bae1891 100644
--- a/Scripts/Gumps/NoticeGump.cs
+++ b/Scripts/Gumps/NoticeGump.cs
@@ -25,10 +25,10 @@ namespace Server.Gumps
             AddImageTiled(10, 40, width - 20, height - 80, 2624);
             AddAlphaRegion(10, 40, width - 20, height - 80);
 
-            if (content is int)
-                AddHtmlLocalized(10, 40, width - 20, height - 80, (int)content, contentColor, false, true);
+            if (content is int i)
+                AddHtmlLocalized(10, 40, width - 20, height - 80, i, contentColor, false, true);
             else if (content is string)
-                AddHtml(10, 40, width - 20, height - 80, string.Format("<BASEFONT COLOR=#{0:X6}>{1}</BASEFONT>", contentColor, content), false, true);
+                AddHtml(10, 40, width - 20, height - 80, $"<BASEFONT COLOR=#{contentColor:X6}>{content}</BASEFONT>", false, true);
 
             AddImageTiled(10, height - 30, width - 20, 20, 2624);
             AddAlphaRegion(10, height - 30, width - 20, 20);
diff --git a/Scripts/Gumps/PetResurrectGump.cs b/Scripts/Gumps/PetResurrectGump.cs
index 267dae936..cd7ab1022 100644
--- a/Scripts/Gumps/PetResurrectGump.cs
+++ b/Scripts/Gumps/PetResurrectGump.cs
@@ -32,7 +32,7 @@ namespace Server.Gumps
             AddItem(218, 95, 0xCB0);
 
             AddHtmlLocalized(30, 30, 150, 75, 1049665, false, false); // <div align=center>Wilt thou sanctify the resurrection of:</div>
-            AddHtml(30, 70, 150, 25, string.Format("<div align=CENTER>{0}</div>", pet.Name), true, false);
+            AddHtml(30, 70, 150, 25, $"<div align=CENTER>{pet.Name}</div>", true, false);
 
             AddButton(40, 105, 0x81A, 0x81B, 0x1, GumpButtonType.Reply, 0); // Okay
             AddButton(110, 105, 0x819, 0x818, 0x2, GumpButtonType.Reply, 0); // Cancel
diff --git a/Scripts/Gumps/PetTrainingStyleConfirmGump.cs b/Scripts/Gumps/PetTrainingStyleConfirmGump.cs
index f54b5d96d..113cf9fe2 100644
--- a/Scripts/Gumps/PetTrainingStyleConfirmGump.cs
+++ b/Scripts/Gumps/PetTrainingStyleConfirmGump.cs
@@ -29,7 +29,7 @@ namespace Server.Gumps
 
             if (_Title.Number > 0)
             {
-                AddHtmlLocalized(35, 10, 400, 20, 1114513, string.Format("#{0}", _Title.Number.ToString()), C32216(0x0d0d0d), false, false);
+                AddHtmlLocalized(35, 10, 400, 20, 1114513, $"#{_Title.Number.ToString()}", C32216(0x0d0d0d), false, false);
             }
             else if(!string.IsNullOrEmpty(_Title.String))
             {
diff --git a/Scripts/Gumps/PlayerVendorGumps.cs b/Scripts/Gumps/PlayerVendorGumps.cs
index 11ab9090e..3f02c7102 100644
--- a/Scripts/Gumps/PlayerVendorGumps.cs
+++ b/Scripts/Gumps/PlayerVendorGumps.cs
@@ -215,7 +215,7 @@ namespace Server.Gumps
             else
             {
                 AddHtmlLocalized(40, 78, 260, 20, 1159157, 0x7FFF, false, false); // My commission per sale:
-                AddLabel(300, 78, 0x480, string.Format("{0}%", vendor.CommissionPerc));
+                AddLabel(300, 78, 0x480, $"{vendor.CommissionPerc}%");
             }
 
             AddHtmlLocalized(40, 181, 260, 20, vendor.VendorSearch ? 1154633 : 1154634, 0x7FFF, false, false); // Vendor Search Enabled / Disable            
@@ -226,12 +226,12 @@ namespace Server.Gumps
             AddHtmlLocalized(40, 128, 260, 20, 1062509, 0x7FFF, false, false); // Shop Name:
             AddLabel(140, 128, 0x66D, vendor.ShopName);
 
-            if (vendor is RentedVendor)
+            if (vendor is RentedVendor rentedVendor)
             {
                 int days, hours;
-                ((RentedVendor)vendor).ComputeRentalExpireDelay(out days, out hours);
+                rentedVendor.ComputeRentalExpireDelay(out days, out hours);
 
-                AddLabel(40, 154, 0x480, string.Format("Location rental will expire in {0} day{1} and {2} hour{3}.", days, days != 1 ? "s" : "", hours, hours != 1 ? "s" : ""));
+                AddLabel(40, 154, 0x480, $"Location rental will expire in {days} day{(days != 1 ? "s" : "")} and {hours} hour{(hours != 1 ? "s" : "")}.");
             }
 
             AddButton(390, 24, 0x15E1, 0x15E5, 1, GumpButtonType.Reply, 0);
diff --git a/Scripts/Gumps/Props/PropsGump.cs b/Scripts/Gumps/Props/PropsGump.cs
index 19320d4ab..f3b88f375 100644
--- a/Scripts/Gumps/Props/PropsGump.cs
+++ b/Scripts/Gumps/Props/PropsGump.cs
@@ -193,7 +193,7 @@ namespace Server.Gumps
             }
             catch (Exception e)
             {
-                return string.Format("!{0}!", e.GetType());
+                return $"!{e.GetType()}!";
             }
         }
 
@@ -206,7 +206,7 @@ namespace Server.Gumps
 
             if (o is string)
             {
-                return string.Format("\"{0}\"", o);
+                return $"\"{o}\"";
             }
 
             if (o is bool)
@@ -219,10 +219,8 @@ namespace Server.Gumps
                 return string.Format("0x{0:X} '{1}'", (int)(char)o, (char)o);
             }
 
-            if (o is Serial)
+            if (o is Serial s)
             {
-                Serial s = (Serial)o;
-
                 if (s.IsValid)
                 {
                     if (s.IsItem)
@@ -241,46 +239,44 @@ namespace Server.Gumps
                 return string.Format("{0} (0x{0:X})", o);
             }
 
-            if (o is Mobile)
+            if (o is Mobile mobile)
             {
-                return string.Format("(M) 0x{0:X} \"{1}\"", ((Mobile)o).Serial.Value, ((Mobile)o).Name);
+                return string.Format("(M) 0x{0:X} \"{1}\"", mobile.Serial.Value, ((Mobile)o).Name);
             }
 
-            if (o is Item)
+            if (o is Item item)
             {
-                return string.Format("(I) 0x{0:X} \"{1}\"", ((Item)o).Serial.Value, ((Item)o).Name);
+                return string.Format("(I) 0x{0:X} \"{1}\"", item.Serial.Value, ((Item)o).Name);
             }
 
-            if (o is Type)
+            if (o is Type type)
             {
-                return ((Type)o).Name;
+                return type.Name;
             }
 
-            if (o is IAccount)
+            if (o is IAccount iAccount)
             {
-                return ((IAccount)o).Username;
+                return iAccount.Username;
             }
 
-            if (o is Color)
+            if (o is Color c)
             {
-                Color c = (Color)o;
-
                 if (c.IsNamedColor)
                 {
                     return c.Name;
                 }
 
-                return string.Format("#{0:X6}", c.ToArgb() & 0x00FFFFFF);
+                return $"#{c.ToArgb() & 0x00FFFFFF:X6}";
             }
 
-            if (o is TextDefinition)
+            if (o is TextDefinition textDefinition)
             {
-                return ((TextDefinition)o).Format(true);
+                return textDefinition.Format(true);
             }
 
-            if (o is IDynamicEnum)
+            if (o is IDynamicEnum iDynamicEnum)
             {
-                return ((IDynamicEnum)o).Value;
+                return iDynamicEnum.Value;
             }
 
             return o.ToString();
@@ -592,7 +588,7 @@ namespace Server.Gumps
 
             if (o is string)
             {
-                return string.Format("\"{0}\"", o);
+                return $"\"{o}\"";
             }
 
             if (o is bool)
@@ -605,10 +601,8 @@ namespace Server.Gumps
                 return string.Format("0x{0:X} '{1}'", (int)(char)o, (char)o);
             }
 
-            if (o is Serial)
+            if (o is Serial s)
             {
-                Serial s = (Serial)o;
-
                 if (s.IsValid)
                 {
                     if (s.IsItem)
@@ -630,36 +624,34 @@ namespace Server.Gumps
                 return string.Format("{0} (0x{0:X})", o);
             }
 
-            if (o is Mobile)
+            if (o is Mobile mobile)
             {
-                return string.Format("(M) 0x{0:X} \"{1}\"", ((Mobile)o).Serial.Value, ((Mobile)o).Name);
+                return string.Format("(M) 0x{0:X} \"{1}\"", mobile.Serial.Value, ((Mobile)o).Name);
             }
 
-            if (o is Item)
+            if (o is Item item)
             {
-                return string.Format("(I) 0x{0:X} \"{1}\"", ((Item)o).Serial.Value, ((Item)o).Name);
+                return string.Format("(I) 0x{0:X} \"{1}\"", item.Serial.Value, ((Item)o).Name);
             }
 
-            if (o is Type)
+            if (o is Type type)
             {
-                return ((Type)o).Name;
+                return type.Name;
             }
 
-            if (o is IAccount)
+            if (o is IAccount iAccount)
             {
-                return ((IAccount)o).Username;
+                return iAccount.Username;
             }
 
-            if (o is Color)
+            if (o is Color c)
             {
-                Color c = (Color)o;
-
                 if (c.IsNamedColor)
                 {
                     return c.Name;
                 }
 
-                return string.Format("#{0:X6}", c.ToArgb() & 0x00FFFFFF);
+                return $"#{c.ToArgb() & 0x00FFFFFF:X6}";
             }
 
             return o.ToString();
@@ -737,7 +729,7 @@ namespace Server.Gumps
                     y,
                     emptyWidth,
                     EntryHeight,
-                    string.Format("<BASEFONT COLOR=#FAFAFA><CENTER>{0}</CENTER></BASEFONT>", m_Type.Name),
+                    $"<BASEFONT COLOR=#FAFAFA><CENTER>{m_Type.Name}</CENTER></BASEFONT>",
                     false,
                     false);
             }
@@ -766,10 +758,8 @@ namespace Server.Gumps
 
                 object o = m_List[index];
 
-                if (o is Type)
+                if (o is Type type)
                 {
-                    Type type = (Type)o;
-
                     AddImageTiled(x, y, TypeWidth, EntryHeight, EntryGumpID);
                     AddLabelCropped(x + TextOffsetX, y, TypeWidth - TextOffsetX, EntryHeight, TextHue, type.Name);
                     x += TypeWidth + OffsetSize;
@@ -779,10 +769,8 @@ namespace Server.Gumps
                         AddImageTiled(x, y, SetWidth, EntryHeight, SetGumpID);
                     }
                 }
-                else if (o is PropertyInfo)
+                else if (o is PropertyInfo prop)
                 {
-                    PropertyInfo prop = (PropertyInfo)o;
-
                     AddImageTiled(x, y, NameWidth, EntryHeight, EntryGumpID);
                     AddLabelCropped(x + TextOffsetX, y, NameWidth - TextOffsetX, EntryHeight, TextHue, prop.Name);
                     x += NameWidth + OffsetSize;
diff --git a/Scripts/Gumps/Props/SetBodyGump.cs b/Scripts/Gumps/Props/SetBodyGump.cs
index 90ccd3ca6..92565657a 100644
--- a/Scripts/Gumps/Props/SetBodyGump.cs
+++ b/Scripts/Gumps/Props/SetBodyGump.cs
@@ -111,12 +111,12 @@ namespace Server.Gumps
 
         public string Center(string text)
         {
-            return string.Format("<CENTER>{0}</CENTER>", text);
+            return $"<CENTER>{text}</CENTER>";
         }
 
         public string Color(string text, int color)
         {
-            return string.Format("<BASEFONT COLOR=#{0:X6}>{1}</BASEFONT>", color, text);
+            return $"<BASEFONT COLOR=#{color:X6}>{text}</BASEFONT>";
         }
 
         public void AddTypeButton(int x, int y, int buttonID, string text, ModelBodyType type)
@@ -250,25 +250,13 @@ namespace Server.Gumps
                     list.Add(new InternalEntry(bodyID, itemID, oldEntry.Name));
             }
 
-            if (m_Monster != null)
-            {
-                m_Monster.Sort();
-            }
+            m_Monster?.Sort();
 
-            if (m_Animal != null)
-            {
-                m_Animal.Sort();
-            }
+            m_Animal?.Sort();
 
-            if (m_Sea != null)
-            {
-                m_Sea.Sort();
-            }
+            m_Sea?.Sort();
 
-            if (m_Human != null)
-            {
-                m_Human.Sort();
-            }
+            m_Human?.Sort();
         }
 
         private class InternalEntry : IComparable
diff --git a/Scripts/Gumps/Props/SetColorGump.cs b/Scripts/Gumps/Props/SetColorGump.cs
index f799c999e..78a5c818c 100644
--- a/Scripts/Gumps/Props/SetColorGump.cs
+++ b/Scripts/Gumps/Props/SetColorGump.cs
@@ -87,7 +87,7 @@ namespace Server.Gumps
 
             string rgb = "#" + (m_OldColor.ToArgb() & 0x00FFFFFF).ToString("X6");
 
-            string val = string.Format("{0} ({1}) ({2},{3},{4})", name, rgb, m_OldColor.R, m_OldColor.G, m_OldColor.B);
+            string val = $"{name} ({rgb}) ({m_OldColor.R},{m_OldColor.G},{m_OldColor.B})";
 
             AddRect(0, prop.Name, 0, -1);
             AddRect(1, val, 0, -1);
@@ -168,7 +168,7 @@ namespace Server.Gumps
                     break;
                 case 2: // RGB
                     {
-                        string toapply = rgb != string.Empty ? rgb : string.Format("{0},{1},{2}", m_OldColor.R, m_OldColor.G, m_OldColor.B);
+                        string toapply = rgb != string.Empty ? rgb : $"{m_OldColor.R},{m_OldColor.G},{m_OldColor.B}";
 
                         string[] args = toapply.Split(',');
 
@@ -186,7 +186,7 @@ namespace Server.Gumps
                     break;
                 case 3: // Hex
                     {
-                        string toapply = hex != string.Empty ? hex : string.Format("#{0:X6}", m_OldColor.ToArgb() & 0x00FFFFFF);
+                        string toapply = hex != string.Empty ? hex : $"#{m_OldColor.ToArgb() & 0x00FFFFFF:X6}";
 
                         int val;
 
diff --git a/Scripts/Gumps/Props/SetDateTimeGump.cs b/Scripts/Gumps/Props/SetDateTimeGump.cs
index 9d578580b..61fd9bb6e 100644
--- a/Scripts/Gumps/Props/SetDateTimeGump.cs
+++ b/Scripts/Gumps/Props/SetDateTimeGump.cs
@@ -176,13 +176,7 @@ namespace Server.Gumps
                 case 2: // From YYYY MM DD H:M
                     {
                         bool successfulParse = false;
-                        string toapply = string.Format(
-                            "{0}/{1}/{2} {3}:{4}:00",
-                            (year != string.Empty ? year : string.Format("{0:yyyy}", m_OldDT)),
-                            (month != string.Empty ? month : string.Format("{0:MM}", m_OldDT)),
-                            (day != string.Empty ? day : string.Format("{0:dd}", m_OldDT)),
-                            (hour != string.Empty ? hour : string.Format("{0:HH}", m_OldDT)),
-                            (min != string.Empty ? min : string.Format("{0:mm}", m_OldDT)));
+                        string toapply = $"{(year != string.Empty ? year : string.Format("{0:yyyy}", m_OldDT))}/{(month != string.Empty ? month : string.Format("{0:MM}", m_OldDT))}/{(day != string.Empty ? day : string.Format("{0:dd}", m_OldDT))} {(hour != string.Empty ? hour : string.Format("{0:HH}", m_OldDT))}:{(min != string.Empty ? min : string.Format("{0:mm}", m_OldDT))}:00";
                         successfulParse = DateTime.TryParse(toapply, out toSet);
 
                         shouldSet = shouldSend = successfulParse;
diff --git a/Scripts/Gumps/Props/SetGump.cs b/Scripts/Gumps/Props/SetGump.cs
index 7384c7799..79a7706ab 100644
--- a/Scripts/Gumps/Props/SetGump.cs
+++ b/Scripts/Gumps/Props/SetGump.cs
@@ -67,8 +67,8 @@ namespace Server.Gumps
 
             if (val == null)
                 initialText = "";
-            else if (val is TextDefinition)
-                initialText = ((TextDefinition)val).GetValue();
+            else if (val is TextDefinition textDefinition)
+                initialText = textDefinition.GetValue();
             else
                 initialText = val.ToString();
 
diff --git a/Scripts/Gumps/Props/SetPoint2DGump.cs b/Scripts/Gumps/Props/SetPoint2DGump.cs
index 9364de309..65dae31ec 100644
--- a/Scripts/Gumps/Props/SetPoint2DGump.cs
+++ b/Scripts/Gumps/Props/SetPoint2DGump.cs
@@ -206,9 +206,7 @@ namespace Server.Gumps
 
             protected override void OnTarget(Mobile from, object targeted)
             {
-                IPoint3D p = targeted as IPoint3D;
-
-                if (p != null)
+                if (targeted is IPoint3D p)
                 {
                     try
                     {
diff --git a/Scripts/Gumps/Props/SetPoint3DGump.cs b/Scripts/Gumps/Props/SetPoint3DGump.cs
index 91f6e4cf4..a0acbb727 100644
--- a/Scripts/Gumps/Props/SetPoint3DGump.cs
+++ b/Scripts/Gumps/Props/SetPoint3DGump.cs
@@ -215,9 +215,7 @@ namespace Server.Gumps
 
             protected override void OnTarget(Mobile from, object targeted)
             {
-                IPoint3D p = targeted as IPoint3D;
-
-                if (p != null)
+                if (targeted is IPoint3D p)
                 {
                     try
                     {
diff --git a/Scripts/Gumps/ReportMurderer.cs b/Scripts/Gumps/ReportMurderer.cs
index 047d4d2f3..1b69e78b3 100644
--- a/Scripts/Gumps/ReportMurderer.cs
+++ b/Scripts/Gumps/ReportMurderer.cs
@@ -123,9 +123,8 @@ namespace Server.Gumps
                             ((PlayerMobile)from).RecentlyReported.Add(killer);
                             Timer.DelayCall(TimeSpan.FromMinutes(10), new TimerStateCallback(ReportedListExpiry_Callback), new object[] { from, killer });
 
-                            if (killer is PlayerMobile)
+                            if (killer is PlayerMobile pk)
                             {
-                                PlayerMobile pk = (PlayerMobile)killer;
                                 pk.ResetKillTime();
                                 pk.SendLocalizedMessage(1049067);//You have been reported for murder!
 
diff --git a/Scripts/Gumps/RunebookGump.cs b/Scripts/Gumps/RunebookGump.cs
index 736635d9f..408781aad 100644
--- a/Scripts/Gumps/RunebookGump.cs
+++ b/Scripts/Gumps/RunebookGump.cs
@@ -88,11 +88,11 @@ namespace Server.Gumps
 
             if (e.Type == RecallRuneType.Ship)
             {
-                loc = string.Format("Aboard {0}", e.Description.Substring(e.Description.IndexOf(",") + 2));
+                loc = $"Aboard {e.Description.Substring(e.Description.IndexOf(",") + 2)}";
             }
             else if (Sextant.Format(e.Location, e.Map, ref xLong, ref yLat, ref xMins, ref yMins, ref xEast, ref ySouth))
             {
-                loc = string.Format("{0}o {1}'{2}, {3}o {4}'{5}", yLat, yMins, ySouth ? "S" : "N", xLong, xMins, xEast ? "E" : "W");
+                loc = $"{yLat}o {yMins}'{(ySouth ? "S" : "N")}, {xLong}o {xMins}'{(xEast ? "E" : "W")}";
             }
             else
             {
@@ -316,7 +316,7 @@ namespace Server.Gumps
 
             if (Sextant.Format(e.Location, e.Map, ref xLong, ref yLat, ref xMins, ref yMins, ref xEast, ref ySouth))
             {
-                from.SendAsciiMessage(string.Format("{0}o {1}'{2}, {3}o {4}'{5}", yLat, yMins, ySouth ? "S" : "N", xLong, xMins, xEast ? "E" : "W"));
+                from.SendAsciiMessage($"{yLat}o {yMins}'{(ySouth ? "S" : "N")}, {xLong}o {xMins}'{(xEast ? "E" : "W")}");
             }
         }
 
diff --git a/Scripts/Gumps/SkillsGump.cs b/Scripts/Gumps/SkillsGump.cs
index 261a28634..93e3a47fd 100644
--- a/Scripts/Gumps/SkillsGump.cs
+++ b/Scripts/Gumps/SkillsGump.cs
@@ -60,7 +60,7 @@ namespace Server.Gumps
             int y = BorderSize + OffsetSize;
 
             AddImageTiled(x, y, EntryWidth, EntryHeight, EntryGumpID);
-            AddLabelCropped(x + TextOffsetX, y, EntryWidth - TextOffsetX, EntryHeight, TextHue, string.Format("{0}  [{1}]", skill.Name, skill.Cap));
+            AddLabelCropped(x + TextOffsetX, y, EntryWidth - TextOffsetX, EntryHeight, TextHue, $"{skill.Name}  [{skill.Cap}]");
             x += EntryWidth + OffsetSize;
 
             if (SetGumpID != 0)
@@ -92,7 +92,7 @@ namespace Server.Gumps
                         if (text != null)
                         {
                             m_Skill.Base = Convert.ToDouble(text.Text);
-                            CommandLogging.LogChangeProperty(m_From, m_Target, string.Format("{0}.Base", m_Skill), m_Skill.Base.ToString());
+                            CommandLogging.LogChangeProperty(m_From, m_Target, $"{m_Skill}.Base", m_Skill.Base.ToString());
                         }
                     }
                     else
diff --git a/Scripts/Gumps/TithingGump.cs b/Scripts/Gumps/TithingGump.cs
index 8429ea68c..4b81bb266 100644
--- a/Scripts/Gumps/TithingGump.cs
+++ b/Scripts/Gumps/TithingGump.cs
@@ -27,7 +27,7 @@ namespace Server.Gumps
 
             AddHtmlLocalized(43, 275, 200, 18, 1159137, 0x7FFF, false, false); // How much whilst thou tithe?
             AddBackground(85, 295, 80, 22, 0x2486);
-            AddTextEntry(87, 297, 76, 18, 0x0, 1, offer > 0 ? string.Format("{0}", offer) : "", 6);
+            AddTextEntry(87, 297, 76, 18, 0x0, 1, offer > 0 ? $"{offer}" : "", 6);
 
             AddButton(205, 321, 0xFB7, 0xFB8, 2, GumpButtonType.Reply, 0); // OK
 
diff --git a/Scripts/Gumps/TitlesMenu.cs b/Scripts/Gumps/TitlesMenu.cs
index 794c0ebde..979913c19 100644
--- a/Scripts/Gumps/TitlesMenu.cs
+++ b/Scripts/Gumps/TitlesMenu.cs
@@ -376,7 +376,7 @@ namespace Server.Gumps
 
                     if (info.Harrower > 0)
                     {
-                        AddHtml(260, y, 245, 16, Color("#FFFFFF", string.Format(": {0} of Evil", Titles.HarrowerTitles[Math.Min(Titles.HarrowerTitles.Length, info.Harrower) - 1])), false, false);
+                        AddHtml(260, y, 245, 16, Color("#FFFFFF", $": {Titles.HarrowerTitles[Math.Min(Titles.HarrowerTitles.Length, info.Harrower) - 1]} of Evil"), false, false);
                         AddCallbackButton(225, y, 4005, 4007, 295, GumpButtonType.Reply, 0, b =>
                         {
                             TitleSelected = 295;
@@ -405,7 +405,7 @@ namespace Server.Gumps
 
                         ChampionSpawnInfo champInfo = ChampionSpawnInfo.GetInfo((ChampionSpawnType)i);
 
-                        AddHtml(260, y + (index * 22), 245, 16, Color("#FFFFFF", string.Format(": {0} of the {1}", champInfo.LevelNames[Math.Min(offset, champInfo.LevelNames.Length) - 1], champInfo.Name)), false, false);
+                        AddHtml(260, y + (index * 22), 245, 16, Color("#FFFFFF", $": {champInfo.LevelNames[Math.Min(offset, champInfo.LevelNames.Length) - 1]} of the {champInfo.Name}"), false, false);
                         AddCallbackButton(225, y + (index * 22), 4005, 4007, i + 251, GumpButtonType.Reply, 0, b =>
                         {
                             TitleSelected = b.ButtonID - 251;
@@ -422,10 +422,10 @@ namespace Server.Gumps
                     string str = GetChampionTitle();
                     object description = GetChampInfo();
 
-                    if (description is int)
-                        AddHtmlLocalized(225, 70, 270, 140, (int)description, 0xFFFF, false, false);
-                    else if (description is string)
-                        AddHtml(250, 70, 270, 140, Color("#FFFFFF", (string)description), false, false);
+                    if (description is int i)
+                        AddHtmlLocalized(225, 70, 270, 140, i, 0xFFFF, false, false);
+                    else if (description is string s)
+                        AddHtml(250, 70, 270, 140, Color("#FFFFFF", s), false, false);
 
                     AddHtmlLocalized(225, 220, 160, 16, 1115027, 0xFFFF, false, false); // Paperdoll Name (Suffix)
                     AddHtml(275, 240, 245, 16, Color("#FFFFFF", str), false, false);
@@ -568,7 +568,7 @@ namespace Server.Gumps
             {
                 if (!ShowingDescription || TitleSelected == -1)
                 {
-                    AddHtml(260, 70, 160, 16, Color("#FFFFFF", string.Format("[{0}]", g.Abbreviation)), false, false);
+                    AddHtml(260, 70, 160, 16, Color("#FFFFFF", $"[{g.Abbreviation}]"), false, false);
                     AddCallbackButton(225, 70, 4005, 4007, 397, GumpButtonType.Reply, 0, b =>
                         {
                             ShowingDescription = true;
@@ -581,7 +581,7 @@ namespace Server.Gumps
                     AddHtmlLocalized(225, 65, 270, 140, 1115040, 0xFFFF, false, false); // This is your guild's abbreviation.
                     AddHtmlLocalized(225, 220, 160, 16, 1115028, 0xFFFF, false, false); // Overhead Name
 
-                    AddHtml(275, 240, 245, 16, Color("#FFFFFF", string.Format("[{0}]", g.Abbreviation)), false, false);
+                    AddHtml(275, 240, 245, 16, Color("#FFFFFF", $"[{g.Abbreviation}]"), false, false);
                     AddHtmlLocalized(225, 275, 200, 16, 1115035, 0xFFFF, false, false); // Do you wish to apply this title?
 
                     AddHtmlLocalized(480, 275, 80, 16, 1011046, 0xFFFF, false, false); // APPLY
@@ -630,10 +630,10 @@ namespace Server.Gumps
                     int title = rewards[TitleSelected];
                     object description = GetRewardTitleInfo(title);
 
-                    if (description is int)
-                        AddHtmlLocalized(225, 70, 270, 140, (int)description, 0xFFFF, false, false);
-                    else if (description is string)
-                        AddHtml(225, 70, 270, 140, Color("#FFFFFF", (string)description), false, false);
+                    if (description is int i)
+                        AddHtmlLocalized(225, 70, 270, 140, i, 0xFFFF, false, false);
+                    else if (description is string s)
+                        AddHtml(225, 70, 270, 140, Color("#FFFFFF", s), false, false);
 
                     AddHtmlLocalized(225, 220, 160, 16, 1115029, 0xFFFF, false, false); // Subtitle
 
@@ -782,7 +782,7 @@ namespace Server.Gumps
             {
                 if (!ShowingDescription || TitleSelected == -1)
                 {
-                    AddHtml(260, 70, 245, 16, Color("#FFFFFF", string.Format("{0}, {1}", Utility.FixHtml(User.GuildTitle), Utility.FixHtml(guild.Name))), false, false);
+                    AddHtml(260, 70, 245, 16, Color("#FFFFFF", $"{Utility.FixHtml(User.GuildTitle)}, {Utility.FixHtml(guild.Name)}"), false, false);
                     AddCallbackButton(225, 70, 4005, 4007, 500, GumpButtonType.Reply, 0, b =>
                     {
                         TitleSelected = 1;
@@ -794,7 +794,7 @@ namespace Server.Gumps
                 {
                     AddHtmlLocalized(225, 70, 270, 140, 1115039, 0xFFFF, false, false); // This is a custom guild title assigned by your guild leader.
                     AddHtmlLocalized(225, 220, 160, 16, 1115029, 0xFFFF, false, false); // Subtitle
-                    AddHtml(275, 240, 245, 16, Color("#FFFFFF", string.Format("{0}, {1}", Utility.FixHtml(User.GuildTitle), Utility.FixHtml(guild.Name))), false, false);
+                    AddHtml(275, 240, 245, 16, Color("#FFFFFF", $"{Utility.FixHtml(User.GuildTitle)}, {Utility.FixHtml(guild.Name)}"), false, false);
 
                     AddHtmlLocalized(225, 275, 200, 16, 1115035, 0xFFFF, false, false); // Do you wish to apply this title?
 
@@ -836,8 +836,8 @@ namespace Server.Gumps
                             else
                                 AddHtmlLocalized(260, 70 + (index * 22), 245, 16, (int)title, 0xFFFF, false, false);
                         }
-                        else if (title is string)
-                            AddHtml(260, 70 + (index * 22), 245, 16, Color("#FFFFFF", (string)title), false, false);
+                        else if (title is string s)
+                            AddHtml(260, 70 + (index * 22), 245, 16, Color("#FFFFFF", s), false, false);
 
                         AddCallbackButton(225, 70 + (index * 22), 4005, 4007, i + 600, GumpButtonType.Reply, 0, b =>
                         {
@@ -855,10 +855,10 @@ namespace Server.Gumps
                     object title = User.RewardTitles[TitleSelected];
                     object description = GetRewardTitleInfo(title);
 
-                    if (description is int)
-                        AddHtmlLocalized(225, 70, 270, 140, (int)description, 0xFFFF, false, false);
-                    else if (description is string)
-                        AddHtml(225, 70, 270, 140, Color("#FFFFFF", (string)description), false, false);
+                    if (description is int i)
+                        AddHtmlLocalized(225, 70, 270, 140, i, 0xFFFF, false, false);
+                    else if (description is string s)
+                        AddHtml(225, 70, 270, 140, Color("#FFFFFF", s), false, false);
 
                     AddHtmlLocalized(225, 220, 160, 16, 1115029, 0xFFFF, false, false); // Subtitle
 
@@ -1017,7 +1017,7 @@ namespace Server.Gumps
                 v = info.Harrower;
 
                 if (v > 0)
-                    str = string.Format(": {0} of Evil", Titles.HarrowerTitles[Math.Min(Titles.HarrowerTitles.Length, info.Harrower) - 1]);
+                    str = $": {Titles.HarrowerTitles[Math.Min(Titles.HarrowerTitles.Length, info.Harrower) - 1]} of Evil";
             }
             else
             {
@@ -1033,7 +1033,7 @@ namespace Server.Gumps
 
                 if (offset > 0)
                 {
-                    str = string.Format(": {0} of the {1}", champInfo.LevelNames[Math.Min(offset, champInfo.LevelNames.Length) - 1], champInfo.Name);
+                    str = $": {champInfo.LevelNames[Math.Min(offset, champInfo.LevelNames.Length) - 1]} of the {champInfo.Name}";
                 }
             }
 
@@ -1073,10 +1073,8 @@ namespace Server.Gumps
                 return null;
             }
 
-            if (title is int)
+            if (title is int id)
             {
-                int id = (int)title;
-
                 if ((id >= 1152739 && id <= 1152893) || id == 1154017)
                     return 1152893; // This title is gained through city loyalty.
 
@@ -1163,7 +1161,7 @@ namespace Server.Gumps
 
         private string Color(string color, string str)
         {
-            return string.Format("<basefont color={0}>{1}", color, str);
+            return $"<basefont color={color}>{str}";
         }
     }
 }
diff --git a/Scripts/Gumps/VendorInventoryGump.cs b/Scripts/Gumps/VendorInventoryGump.cs
index ad446468b..cd45aa105 100644
--- a/Scripts/Gumps/VendorInventoryGump.cs
+++ b/Scripts/Gumps/VendorInventoryGump.cs
@@ -34,7 +34,7 @@ namespace Server.Gumps
                 if (inventory.Owner == from)
                     AddButton(10, y, 0xFA5, 0xFA7, i + 1, GumpButtonType.Reply, 0);
 
-                AddLabel(45, y, 0x481, string.Format("{0} ({1})", inventory.ShopName, inventory.VendorName));
+                AddLabel(45, y, 0x481, $"{inventory.ShopName} ({inventory.VendorName})");
 
                 TimeSpan expire = inventory.ExpireTime - DateTime.UtcNow;
                 int hours = (int)expire.TotalHours;
diff --git a/Scripts/Gumps/ViewHousesGump.cs b/Scripts/Gumps/ViewHousesGump.cs
index df689222e..8d3fe47fc 100644
--- a/Scripts/Gumps/ViewHousesGump.cs
+++ b/Scripts/Gumps/ViewHousesGump.cs
@@ -57,7 +57,7 @@ namespace Server.Gumps
 
                     object name = FindHouseName(list[i]);
 
-                    AddHtml(15, 40 + ((i % 15) * 20), 20, 20, Color(string.Format("{0}.", i + 1), White), false, false);
+                    AddHtml(15, 40 + ((i % 15) * 20), 20, 20, Color($"{i + 1}.", White), false, false);
 
                     if (name is int)
                         AddHtmlLocalized(35, 40 + ((i % 15) * 20), 160, 20, (int)name, White16, false, false);
@@ -81,7 +81,7 @@ namespace Server.Gumps
                 bool valid = Sextant.Format(sel.Location, map, ref xLong, ref yLat, ref xMins, ref yMins, ref xEast, ref ySouth);
 
                 if (valid)
-                    location = string.Format("{0}° {1}'{2}, {3}° {4}'{5}", yLat, yMins, ySouth ? "S" : "N", xLong, xMins, xEast ? "E" : "W");
+                    location = $"{yLat}° {yMins}'{(ySouth ? "S" : "N")}, {xLong}° {xMins}'{(xEast ? "E" : "W")}";
                 else
                     location = "unknown";
 
@@ -267,17 +267,17 @@ namespace Server.Gumps
 
         public string Right(string text)
         {
-            return string.Format("<div align=right>{0}</div>", text);
+            return $"<div align=right>{text}</div>";
         }
 
         public string Center(string text)
         {
-            return string.Format("<CENTER>{0}</CENTER>", text);
+            return $"<CENTER>{text}</CENTER>";
         }
 
         public string Color(string text, int color)
         {
-            return string.Format("<BASEFONT COLOR=#{0:X6}>{1}</BASEFONT>", color, text);
+            return $"<BASEFONT COLOR=#{color:X6}>{text}</BASEFONT>";
         }
 
         public void AddBlackAlpha(int x, int y, int width, int height)
diff --git a/Scripts/Gumps/WarningGump.cs b/Scripts/Gumps/WarningGump.cs
index 1c045fd92..8d408d8da 100644
--- a/Scripts/Gumps/WarningGump.cs
+++ b/Scripts/Gumps/WarningGump.cs
@@ -35,7 +35,7 @@ namespace Server.Gumps
             }
             else if (header.String != null)
             {
-                AddHtml(10, 10, width - 20, height - 80, string.Format("<BASEFONT COLOR=#{0:X6}>{1}</BASEFONT>", headerColor, header.String), false, true);
+                AddHtml(10, 10, width - 20, height - 80, $"<BASEFONT COLOR=#{headerColor:X6}>{header.String}</BASEFONT>", false, true);
             }
 
             AddImageTiled(10, 40, width - 20, height - 80, 2624);
@@ -47,7 +47,7 @@ namespace Server.Gumps
             }
             else if (content.String != null)
             {
-                AddHtml(10, 40, width - 20, height - 80, string.Format("<BASEFONT COLOR=#{0:X6}>{1}</BASEFONT>", contentColor, content.String), false, true);
+                AddHtml(10, 40, width - 20, height - 80, $"<BASEFONT COLOR=#{contentColor:X6}>{content.String}</BASEFONT>", false, true);
             }
 
             AddImageTiled(10, height - 30, width - 20, 20, 2624);
diff --git a/Scripts/Gumps/WhoGump.cs b/Scripts/Gumps/WhoGump.cs
index 6f5687108..5b8e8d2f0 100644
--- a/Scripts/Gumps/WhoGump.cs
+++ b/Scripts/Gumps/WhoGump.cs
@@ -129,7 +129,7 @@ namespace Server.Gumps
             if (!OldStyle)
                 AddImageTiled(x - (OldStyle ? OffsetSize : 0), y, emptyWidth + (OldStyle ? OffsetSize * 2 : 0), EntryHeight, EntryGumpID);
 
-            AddLabel(x + TextOffsetX, y, TextHue, string.Format("Page {0} of {1} ({2})", page + 1, (m_Mobiles.Count + EntryCount - 1) / EntryCount, m_Mobiles.Count));
+            AddLabel(x + TextOffsetX, y, TextHue, $"Page {page + 1} of {(m_Mobiles.Count + EntryCount - 1) / EntryCount} ({m_Mobiles.Count})");
 
             x += emptyWidth + OffsetSize;
 
diff --git a/Scripts/Gumps/YoungGumps.cs b/Scripts/Gumps/YoungGumps.cs
index 3abff3d1b..6afd3b487 100644
--- a/Scripts/Gumps/YoungGumps.cs
+++ b/Scripts/Gumps/YoungGumps.cs
@@ -84,10 +84,7 @@ namespace Server.Gumps
             {
                 Account acc = from.Account as Account;
 
-                if (acc != null)
-                {
-                    acc.RemoveYoungStatus(502085); // You have chosen to renounce your `Young' player status.
-                }
+                acc?.RemoveYoungStatus(502085);
             }
             else
             {
diff --git a/Scripts/Items/Addons/AddonComponent.cs b/Scripts/Items/Addons/AddonComponent.cs
index 4868676d4..5923e645f 100644
--- a/Scripts/Items/Addons/AddonComponent.cs
+++ b/Scripts/Items/Addons/AddonComponent.cs
@@ -268,20 +268,14 @@ namespace Server.Items
         {
             base.GetProperties(list);
 
-            if (Addon != null)
-            {
-                Addon.GetProperties(list, this);
-            }
+            Addon?.GetProperties(list, this);
         }
 
         public override void GetContextMenuEntries(Mobile m, List<ContextMenuEntry> list)
         {
             base.GetContextMenuEntries(m, list);
 
-            if (Addon != null)
-            {
-                Addon.GetContextMenuEntries(m, list);
-            }
+            Addon?.GetContextMenuEntries(m, list);
         }
 
         public override void Serialize(GenericWriter writer)
diff --git a/Scripts/Items/Addons/AddonContainerComponent.cs b/Scripts/Items/Addons/AddonContainerComponent.cs
index 154d7bea5..384feb5ce 100644
--- a/Scripts/Items/Addons/AddonContainerComponent.cs
+++ b/Scripts/Items/Addons/AddonContainerComponent.cs
@@ -80,20 +80,14 @@ namespace Server.Items
         {
             base.GetProperties(list);
 
-            if (Addon != null)
-            {
-                Addon.GetProperties(list, this);
-            }
+            Addon?.GetProperties(list, this);
         }
 
         public override void GetContextMenuEntries(Mobile m, List<ContextMenuEntry> list)
         {
             base.GetContextMenuEntries(m, list);
 
-            if (Addon != null)
-            {
-                Addon.GetContextMenuEntries(m, list);
-            }
+            Addon?.GetContextMenuEntries(m, list);
         }
 
         public override void Serialize(GenericWriter writer)
diff --git a/Scripts/Items/Addons/AnkhOfSacrifice.cs b/Scripts/Items/Addons/AnkhOfSacrifice.cs
index 958e63930..d590d04ec 100644
--- a/Scripts/Items/Addons/AnkhOfSacrifice.cs
+++ b/Scripts/Items/Addons/AnkhOfSacrifice.cs
@@ -56,8 +56,8 @@ namespace Server.Items
         {
             base.GetContextMenuEntries(from, list);
 
-            if (from is PlayerMobile)
-                list.Add(new LockKarmaEntry((PlayerMobile)from, Addon as AnkhOfSacrificeAddon));
+            if (from is PlayerMobile playerMobile)
+                list.Add(new LockKarmaEntry(playerMobile, Addon as AnkhOfSacrificeAddon));
 
             list.Add(new ResurrectEntry(from, Addon as AnkhOfSacrificeAddon));
         }
@@ -142,9 +142,9 @@ namespace Server.Items
                         return;
                     }
 
-                    if (from is PlayerMobile)
+                    if (from is PlayerMobile playerMobile)
                     {
-                        ((PlayerMobile)from).AnkhNextUse = DateTime.UtcNow + TimeSpan.FromHours(1);
+                        playerMobile.AnkhNextUse = DateTime.UtcNow + TimeSpan.FromHours(1);
                     }
 
                     base.OnResponse(state, info);
diff --git a/Scripts/Items/Addons/ArcaneBookshelfEastAddon.cs b/Scripts/Items/Addons/ArcaneBookshelfEastAddon.cs
index d851b15ec..353bd369e 100644
--- a/Scripts/Items/Addons/ArcaneBookshelfEastAddon.cs
+++ b/Scripts/Items/Addons/ArcaneBookshelfEastAddon.cs
@@ -151,9 +151,7 @@ namespace Server.Items
 
         private void Replace()
         {
-            Container c = Parent as Container;
-
-            if (c != null)
+            if (Parent is Container c)
             {
                 ArcaneBookShelfDeedEast deed = new ArcaneBookShelfDeedEast();
                 c.DropItem(deed);
diff --git a/Scripts/Items/Addons/ArcaneBookshelfSouthAddon.cs b/Scripts/Items/Addons/ArcaneBookshelfSouthAddon.cs
index ef82126f7..f74b09e6a 100644
--- a/Scripts/Items/Addons/ArcaneBookshelfSouthAddon.cs
+++ b/Scripts/Items/Addons/ArcaneBookshelfSouthAddon.cs
@@ -151,9 +151,7 @@ namespace Server.Items
 
         private void Replace()
         {
-            Container c = Parent as Container;
-
-            if (c != null)
+            if (Parent is Container c)
             {
                 ArcaneBookShelfDeedSouth deed = new ArcaneBookShelfDeedSouth();
                 c.DropItem(deed);
diff --git a/Scripts/Items/Addons/ArcheryButteAddon.cs b/Scripts/Items/Addons/ArcheryButteAddon.cs
index fe729faa5..4c094559d 100644
--- a/Scripts/Items/Addons/ArcheryButteAddon.cs
+++ b/Scripts/Items/Addons/ArcheryButteAddon.cs
@@ -227,7 +227,7 @@ namespace Server.Items
                 if (se.Count == 1)
                     PublicOverheadMessage(MessageType.Regular, 0x3B2, 1062719, se.Total.ToString());
                 else
-                    PublicOverheadMessage(MessageType.Regular, 0x3B2, 1042683, string.Format("{0}\t{1}", se.Total, se.Count));
+                    PublicOverheadMessage(MessageType.Regular, 0x3B2, 1042683, $"{se.Total}\t{se.Count}");
 
                 return;
             }
@@ -267,7 +267,7 @@ namespace Server.Items
 
             if (split)
             {
-                PublicOverheadMessage(MessageType.Regular, 0x3B2, 1010027 + area, string.Format("{0}\t{1}", from.Name, isArrow ? "arrow" : "bolt"));
+                PublicOverheadMessage(MessageType.Regular, 0x3B2, 1010027 + area, $"{from.Name}\t{(isArrow ? "arrow" : "bolt")}");
             }
             else
             {
@@ -287,7 +287,7 @@ namespace Server.Items
             if (se.Count == 1)
                 PublicOverheadMessage(MessageType.Regular, 0x3B2, 1062719, se.Total.ToString());
             else
-                PublicOverheadMessage(MessageType.Regular, 0x3B2, 1042683, string.Format("{0}\t{1}", se.Total, se.Count));
+                PublicOverheadMessage(MessageType.Regular, 0x3B2, 1042683, $"{se.Total}\t{se.Count}");
         }
 
         public override void Serialize(GenericWriter writer)
diff --git a/Scripts/Items/Addons/BallotBox.cs b/Scripts/Items/Addons/BallotBox.cs
index 8955baab4..7e8dd0f46 100644
--- a/Scripts/Items/Addons/BallotBox.cs
+++ b/Scripts/Items/Addons/BallotBox.cs
@@ -183,12 +183,12 @@ namespace Server.Items
                 if (!isOwner)
                     AddButton(20, 240, 0xFA5, 0xFA7, 3, GumpButtonType.Reply, 0);
                 AddHtmlLocalized(55, 242, 25, 35, 1011004, false, false); // aye:
-                AddLabel(78, 242, 0x0, string.Format("[{0}]", yesCount));
+                AddLabel(78, 242, 0x0, $"[{yesCount}]");
 
                 if (!isOwner)
                     AddButton(20, 275, 0xFA5, 0xFA7, 4, GumpButtonType.Reply, 0);
                 AddHtmlLocalized(55, 277, 25, 35, 1011005, false, false); // nay:
-                AddLabel(78, 277, 0x0, string.Format("[{0}]", noCount));
+                AddLabel(78, 277, 0x0, $"[{noCount}]");
 
                 if (totalVotes > 0)
                 {
diff --git a/Scripts/Items/Addons/BaseAddon.cs b/Scripts/Items/Addons/BaseAddon.cs
index 244c3b367..f10492d24 100644
--- a/Scripts/Items/Addons/BaseAddon.cs
+++ b/Scripts/Items/Addons/BaseAddon.cs
@@ -90,9 +90,9 @@ namespace Server.Items
 
             #region High Seas
             BaseBoat boat = BaseBoat.FindBoatAt(from, from.Map);
-            if (boat != null && boat is BaseGalleon)
+            if (boat is BaseGalleon baseGalleon)
             {
-                ((BaseGalleon)boat).OnChop(this, from);
+                baseGalleon.OnChop(this, from);
                 return;
             }
             #endregion
diff --git a/Scripts/Items/Addons/BaseAddonDeed.cs b/Scripts/Items/Addons/BaseAddonDeed.cs
index b7aa49066..7f6fe0d89 100644
--- a/Scripts/Items/Addons/BaseAddonDeed.cs
+++ b/Scripts/Items/Addons/BaseAddonDeed.cs
@@ -196,10 +196,7 @@ namespace Server.Items
                             house.Addons[addon] = from;
                         }
 
-                        if (galleon != null)
-                        {
-                            galleon.AddAddon(addon);
-                        }
+                        galleon?.AddAddon(addon);
 
                         m_Deed.DeleteDeed();
                     }
diff --git a/Scripts/Items/Addons/Cannon.cs b/Scripts/Items/Addons/Cannon.cs
index 6420668f1..1fe9b05b2 100644
--- a/Scripts/Items/Addons/Cannon.cs
+++ b/Scripts/Items/Addons/Cannon.cs
@@ -25,9 +25,9 @@ namespace Server.Items
         {
             base.GetProperties(list);
 
-            if (Addon is CannonAddon)
+            if (Addon is CannonAddon cannonAddon)
             {
-                if (((CannonAddon)Addon).IsRewardItem)
+                if (cannonAddon.IsRewardItem)
                     list.Add(1076223); // 7th Year Veteran Reward
 
                 list.Add(1076207, ((CannonAddon)Addon).Charges.ToString()); // Remaining Charges: ~1_val~
diff --git a/Scripts/Items/Addons/Craft Addons/AnvilofArtifacts.cs b/Scripts/Items/Addons/Craft Addons/AnvilofArtifacts.cs
index 4cd65672d..441c2f11d 100644
--- a/Scripts/Items/Addons/Craft Addons/AnvilofArtifacts.cs	
+++ b/Scripts/Items/Addons/Craft Addons/AnvilofArtifacts.cs	
@@ -326,16 +326,16 @@ namespace Server.Items
 
                 for (int i = 0; i < _ResistOrder.Length; i++)
                 {
-                    AddHtmlLocalized(60, 115 + (18 * i), 125, 18, 1114514, string.Format("#{0}", 1061158 + (int)_ResistOrder[i]), 0x6B45, false, false); // <DIV ALIGN=RIGHT>~1_TOKEN~</DIV>
-                    AddLabel(185, 115 + (18 * i), 0x9C2, string.Format("{0}", Entry.Exceptional[_ResistOrder[i]]));
+                    AddHtmlLocalized(60, 115 + (18 * i), 125, 18, 1114514, $"#{1061158 + (int)_ResistOrder[i]}", 0x6B45, false, false); // <DIV ALIGN=RIGHT>~1_TOKEN~</DIV>
+                    AddLabel(185, 115 + (18 * i), 0x9C2, $"{Entry.Exceptional[_ResistOrder[i]]}");
                 }
 
                 AddHtmlLocalized(60, 223, 125, 18, 1114513, "#1159450", 0x6B55, false, false); // <DIV ALIGN=CENTER>~1_TOKEN~</DIV>
 
                 for (int i = 0; i < _ResistOrder.Length; i++)
                 {
-                    AddHtmlLocalized(60, 241 + (18 * i), 125, 18, 1114514, string.Format("#{0}", 1061158 + (int)_ResistOrder[i]), 0x6B45, false, false); // <DIV ALIGN=RIGHT>~1_TOKEN~</DIV>
-                    AddLabel(185, 241 + (18 * i), 0x9C2, string.Format("{0}", Entry.Runic[_ResistOrder[i]]));
+                    AddHtmlLocalized(60, 241 + (18 * i), 125, 18, 1114514, $"#{1061158 + (int)_ResistOrder[i]}", 0x6B45, false, false); // <DIV ALIGN=RIGHT>~1_TOKEN~</DIV>
+                    AddLabel(185, 241 + (18 * i), 0x9C2, $"{Entry.Runic[_ResistOrder[i]]}");
                 }
             }
             else
@@ -360,23 +360,23 @@ namespace Server.Items
                 int armslorebonus = Siege.SiegeShard ? (int)Math.Floor(User.Skills[SkillName.ArmsLore].Base / 12.5) : (int)Math.Floor(User.Skills[SkillName.ArmsLore].Base / 20.0);
 
                 AddHtmlLocalized(60, 170, 125, 18, 1114513, "#1159451", 0x6B55, false, false); // <DIV ALIGN=CENTER>~1_TOKEN~</DIV>
-                AddHtmlLocalized(60, 188, 125, 18, 1152355, string.Format("{0}", 15 + armslorebonus), 0x6B55, false, false); // <CENTER>Total Must Equal ~1_VAL~</CENTER>
+                AddHtmlLocalized(60, 188, 125, 18, 1152355, $"{15 + armslorebonus}", 0x6B55, false, false); // <CENTER>Total Must Equal ~1_VAL~</CENTER>
                 
                 for (int i = 0; i < _ResistOrder.Length; i++)
                 {
-                    AddHtmlLocalized(60, 206 + (18 * i), 125, 18, 1114514, string.Format("#{0}", 1061158 + (int)_ResistOrder[i]), 0x6B45, false, false); // <DIV ALIGN=RIGHT>~1_TOKEN~</DIV>
+                    AddHtmlLocalized(60, 206 + (18 * i), 125, 18, 1114514, $"#{1061158 + (int)_ResistOrder[i]}", 0x6B45, false, false); // <DIV ALIGN=RIGHT>~1_TOKEN~</DIV>
                     AddBackground(185, 206 + (18 * i), 30, 18, 0x2486);
-                    AddTextEntry(187, 208 + (18 * i), 26, 14, 0x0, i, string.Format("{0}", Entry.Exceptional[_ResistOrder[i]]), 2);
+                    AddTextEntry(187, 208 + (18 * i), 26, 14, 0x0, i, $"{Entry.Exceptional[_ResistOrder[i]]}", 2);
                 }
 
                 AddHtmlLocalized(60, 314, 125, 18, 1114513, "#1159450", 0x6B55, false, false); // <DIV ALIGN=CENTER>~1_TOKEN~</DIV>
-                AddHtmlLocalized(60, 332, 125, 18, 1152355, string.Format("{0}", 6 + armslorebonus), 0x6B55, false, false); // <CENTER>Total Must Equal ~1_VAL~</CENTER>
+                AddHtmlLocalized(60, 332, 125, 18, 1152355, $"{6 + armslorebonus}", 0x6B55, false, false); // <CENTER>Total Must Equal ~1_VAL~</CENTER>
                 
                 for (int i = 0; i < _ResistOrder.Length; i++)
                 {
-                    AddHtmlLocalized(60, 350 + (18 * i), 125, 18, 1114514, string.Format("#{0}", 1061158 + (int)_ResistOrder[i]), 0x6B45, false, false); // <DIV ALIGN=RIGHT>~1_TOKEN~</DIV>
+                    AddHtmlLocalized(60, 350 + (18 * i), 125, 18, 1114514, $"#{1061158 + (int)_ResistOrder[i]}", 0x6B45, false, false); // <DIV ALIGN=RIGHT>~1_TOKEN~</DIV>
                     AddBackground(185, 350 + (18 * i), 30, 18, 0x2486);
-                    AddTextEntry(187, 352 + (18 * i), 26, 14, 0x0, i + 5, string.Format("{0}", Entry.Runic[_ResistOrder[i]]), 2);
+                    AddTextEntry(187, 352 + (18 * i), 26, 14, 0x0, i + 5, $"{Entry.Runic[_ResistOrder[i]]}", 2);
                 }
             }
         }
diff --git a/Scripts/Items/Addons/Craft Addons/CraftAddon.cs b/Scripts/Items/Addons/Craft Addons/CraftAddon.cs
index 313c1994d..df7b32f7f 100644
--- a/Scripts/Items/Addons/Craft Addons/CraftAddon.cs	
+++ b/Scripts/Items/Addons/Craft Addons/CraftAddon.cs	
@@ -164,9 +164,7 @@ namespace Server.Items
             int count = reader.ReadInt();
             for (int i = 0; i < count; i++)
             {
-                AddonToolComponent tool = reader.ReadItem() as AddonToolComponent;
-
-                if (tool != null)
+                if (reader.ReadItem() is AddonToolComponent tool)
                 {
                     tool.SetCraftSystem(CraftSystem);
                     Tools.Add(tool);
@@ -186,9 +184,8 @@ namespace Server.Items
             public override bool OnDragDrop(Mobile from, Item dropped)
             {
                 BaseHouse house = BaseHouse.FindHouseAt(this);
-                CraftAddon addon = Addon as CraftAddon;
 
-                if (house != null && addon != null && house.HasSecureAccess(from, addon.Level))
+                if (house != null && Addon is CraftAddon addon && house.HasSecureAccess(from, addon.Level))
                 {
                     if (dropped is ITool && !(dropped is BaseRunicTool))
                     {
diff --git a/Scripts/Items/Addons/Curtains.cs b/Scripts/Items/Addons/Curtains.cs
index 5b6131a53..235f293f0 100644
--- a/Scripts/Items/Addons/Curtains.cs
+++ b/Scripts/Items/Addons/Curtains.cs
@@ -44,10 +44,8 @@ namespace Server.Items
                 {
                     foreach (AddonComponent c in Addon.Components)
                     {
-                        if (c is CurtainsComponent)
+                        if (c is CurtainsComponent curtain)
                         {
-                            CurtainsComponent curtain = (CurtainsComponent)c;
-
                             int temp = curtain.ItemID;
                             curtain.ItemID = curtain.ClosedID;
                             curtain.ClosedID = temp;
diff --git a/Scripts/Items/Addons/DawnsMusicBox/DawnsMusicGear.cs b/Scripts/Items/Addons/DawnsMusicBox/DawnsMusicGear.cs
index 0564b4ac5..3b9baec11 100644
--- a/Scripts/Items/Addons/DawnsMusicBox/DawnsMusicGear.cs
+++ b/Scripts/Items/Addons/DawnsMusicBox/DawnsMusicGear.cs
@@ -119,9 +119,7 @@ namespace Server.Items
                 if (m_Gear == null || m_Gear.Deleted)
                     return;
 
-                DawnsMusicBox box = targeted as DawnsMusicBox;
-
-                if (box != null)
+                if (targeted is DawnsMusicBox box)
                 {
                     if (!box.Tracks.Contains(m_Gear.Music))
                     {
diff --git a/Scripts/Items/Addons/DolphinRug.cs b/Scripts/Items/Addons/DolphinRug.cs
index 7bee4898e..de418e650 100644
--- a/Scripts/Items/Addons/DolphinRug.cs
+++ b/Scripts/Items/Addons/DolphinRug.cs
@@ -183,9 +183,9 @@ namespace Server.Items
             {
                 base.GetProperties(list);
 
-                if (Addon is DolphinRugAddon)
+                if (Addon is DolphinRugAddon dolphinRugAddon)
                 {
-                    list.Add(1150103, ((DolphinRugAddon)Addon).ResourceCount.ToString()); // Messages in Bottles: ~1_val~
+                    list.Add(1150103, dolphinRugAddon.ResourceCount.ToString()); // Messages in Bottles: ~1_val~
                 }
             }
 
diff --git a/Scripts/Items/Addons/DungeonHitchingPost.cs b/Scripts/Items/Addons/DungeonHitchingPost.cs
index f4ef1f640..2035d335e 100644
--- a/Scripts/Items/Addons/DungeonHitchingPost.cs
+++ b/Scripts/Items/Addons/DungeonHitchingPost.cs
@@ -94,8 +94,8 @@ namespace Server.Items
 
             protected override void OnTarget(Mobile from, object targeted)
             {
-                if (targeted is BaseCreature)
-                    m_Post.EndStable(from, (BaseCreature)targeted);
+                if (targeted is BaseCreature baseCreature)
+                    m_Post.EndStable(from, baseCreature);
                 else if (targeted == from)
                     from.SendLocalizedMessage(502672); // HA HA HA! Sorry, I am not an inn.
                 else
@@ -368,7 +368,7 @@ namespace Server.Items
                         continue;
 
                     AddButton(15, 39 + (i * 20), 10006, 10006, i + 1, GumpButtonType.Reply, 0);
-                    AddHtml(32, 35 + (i * 20), 275, 18, string.Format("<BASEFONT COLOR=#C0C0EE>{0}</BASEFONT>", pet.Name), false, false);
+                    AddHtml(32, 35 + (i * 20), 275, 18, $"<BASEFONT COLOR=#C0C0EE>{pet.Name}</BASEFONT>", false, false);
                 }
             }
 
diff --git a/Scripts/Items/Addons/ElvenDresserEastAddon.cs b/Scripts/Items/Addons/ElvenDresserEastAddon.cs
index f00391dd2..962840dc8 100644
--- a/Scripts/Items/Addons/ElvenDresserEastAddon.cs
+++ b/Scripts/Items/Addons/ElvenDresserEastAddon.cs
@@ -148,9 +148,7 @@ namespace Server.Items
 
         private void Replace()
         {
-            Container c = Parent as Container;
-
-            if (c != null)
+            if (Parent is Container c)
             {
                 ElvenDresserDeedEast deed = new ElvenDresserDeedEast();
                 c.DropItem(deed);
diff --git a/Scripts/Items/Addons/ElvenDresserSouthAddon.cs b/Scripts/Items/Addons/ElvenDresserSouthAddon.cs
index 30c4a7d41..41333a092 100644
--- a/Scripts/Items/Addons/ElvenDresserSouthAddon.cs
+++ b/Scripts/Items/Addons/ElvenDresserSouthAddon.cs
@@ -149,9 +149,7 @@ namespace Server.Items
 
         private void Replace()
         {
-            Container c = Parent as Container;
-
-            if (c != null)
+            if (Parent is Container c)
             {
                 ElvenDresserDeedSouth deed = new ElvenDresserDeedSouth();
                 c.DropItem(deed);
diff --git a/Scripts/Items/Addons/EnormousVenusFlytrap.cs b/Scripts/Items/Addons/EnormousVenusFlytrap.cs
index 5594e7351..25568452f 100644
--- a/Scripts/Items/Addons/EnormousVenusFlytrap.cs
+++ b/Scripts/Items/Addons/EnormousVenusFlytrap.cs
@@ -105,7 +105,7 @@ namespace Server.Items
                         if (m_Cleanup.Find(x => x.mobiles == m && x.confirm) != null)
                         {
                             double point = m_Cleanup.Where(x => x.mobiles == m && x.confirm).Sum(x => x.points);
-                            m.SendLocalizedMessage(1151280, string.Format("{0}\t{1}", point.ToString(), m_Cleanup.Count(r => r.mobiles == m))); // You have received approximately ~1_VALUE~points for turning in ~2_COUNT~items for Clean Up Britannia.
+                            m.SendLocalizedMessage(1151280, $"{point.ToString()}\t{m_Cleanup.Count(r => r.mobiles == m)}"); // You have received approximately ~1_VALUE~points for turning in ~2_COUNT~items for Clean Up Britannia.
                             PointsSystem.CleanUpBritannia.AwardPoints(m, point);
                         }
                     }
diff --git a/Scripts/Items/Addons/FlourMillEastAddon.cs b/Scripts/Items/Addons/FlourMillEastAddon.cs
index e643ced21..155026301 100644
--- a/Scripts/Items/Addons/FlourMillEastAddon.cs
+++ b/Scripts/Items/Addons/FlourMillEastAddon.cs
@@ -144,9 +144,7 @@ namespace Server.Items
                 m_Timer = null;
             }
 
-            Mobile from = state as Mobile;
-
-            if (from != null && !from.Deleted && !Deleted && IsFull)
+            if (state is Mobile from && !from.Deleted && !Deleted && IsFull)
             {
                 SackFlour flour = new SackFlour
                 {
diff --git a/Scripts/Items/Addons/FlourMillSouthAddon.cs b/Scripts/Items/Addons/FlourMillSouthAddon.cs
index dd69ad071..fefd71d98 100644
--- a/Scripts/Items/Addons/FlourMillSouthAddon.cs
+++ b/Scripts/Items/Addons/FlourMillSouthAddon.cs
@@ -131,9 +131,7 @@ namespace Server.Items
                 m_Timer = null;
             }
 
-            Mobile from = state as Mobile;
-
-            if (from != null && !from.Deleted && !Deleted && IsFull)
+            if (state is Mobile from && !from.Deleted && !Deleted && IsFull)
             {
                 SackFlour flour = new SackFlour
                 {
diff --git a/Scripts/Items/Addons/FountainOfLife.cs b/Scripts/Items/Addons/FountainOfLife.cs
index dd9939629..650c8d1ba 100644
--- a/Scripts/Items/Addons/FountainOfLife.cs
+++ b/Scripts/Items/Addons/FountainOfLife.cs
@@ -219,9 +219,7 @@ namespace Server.Items
                 if (Items[i] is EnhancedBandage)
                     continue;
 
-                Bandage bandage = Items[i] as Bandage;
-
-                if (bandage != null)
+                if (Items[i] is Bandage bandage)
                 {
                     Item enhanced;
 
diff --git a/Scripts/Items/Addons/GardenShed.cs b/Scripts/Items/Addons/GardenShed.cs
index 56a28debe..17e7a7eef 100644
--- a/Scripts/Items/Addons/GardenShed.cs
+++ b/Scripts/Items/Addons/GardenShed.cs
@@ -106,10 +106,7 @@ namespace Server.Items
         {
             base.OnLocationChange(old);
 
-            if (SecondContainer != null)
-            {
-                SecondContainer.MoveToWorld(new Point3D(X + m_Offset.X, Y + m_Offset.Y, Z + m_Offset.Z), Map);
-            }
+            SecondContainer?.MoveToWorld(new Point3D(X + m_Offset.X, Y + m_Offset.Y, Z + m_Offset.Z), Map);
         }
 
         public override void OnMapChange()
diff --git a/Scripts/Items/Addons/GeoffreyCampAddon.cs b/Scripts/Items/Addons/GeoffreyCampAddon.cs
index 26a355a8c..31f8d48f0 100644
--- a/Scripts/Items/Addons/GeoffreyCampAddon.cs
+++ b/Scripts/Items/Addons/GeoffreyCampAddon.cs
@@ -54,7 +54,7 @@ namespace Server.Items
         {
             AddonComponent ac;
             ac = new AddonComponent(item);
-            if (name != null && name.Length > 0)
+            if (!string.IsNullOrEmpty(name))
                 ac.Name = name;
             if (hue != 0)
                 ac.Hue = hue;
diff --git a/Scripts/Items/Addons/GuillotineComponent.cs b/Scripts/Items/Addons/GuillotineComponent.cs
index 6f521708a..13e8ac3c2 100644
--- a/Scripts/Items/Addons/GuillotineComponent.cs
+++ b/Scripts/Items/Addons/GuillotineComponent.cs
@@ -128,10 +128,8 @@ namespace Server.Items
 
         private void Deactivate(object obj)
         {
-            if (obj is AddonComponent)
+            if (obj is AddonComponent c)
             {
-                AddonComponent c = (AddonComponent)obj;
-
                 if (c.ItemID == 0x1269)
                     c.ItemID = 0x1260;
                 else if (c.ItemID == 0x1260)
diff --git a/Scripts/Items/Addons/Harpsichord.cs b/Scripts/Items/Addons/Harpsichord.cs
index aba48b5b1..e9ffa96b3 100644
--- a/Scripts/Items/Addons/Harpsichord.cs
+++ b/Scripts/Items/Addons/Harpsichord.cs
@@ -363,13 +363,10 @@ namespace Server.Items
 
             writer.Write(_List != null ? _List.Count : 0);
 
-            if (_List != null)
-            {
-                _List.ForEach(x =>
-                {
-                    writer.Write((int)x);
-                });
-            }
+            _List?.ForEach(x =>
+{
+    writer.Write((int)x);
+});
         }
 
         public override void Deserialize(GenericReader reader)
diff --git a/Scripts/Items/Addons/HavenCannon.cs b/Scripts/Items/Addons/HavenCannon.cs
index 13aa4592e..a0b7b3c68 100644
--- a/Scripts/Items/Addons/HavenCannon.cs
+++ b/Scripts/Items/Addons/HavenCannon.cs
@@ -184,8 +184,8 @@ namespace Server.Engines.Quests.Haven
             }
             set
             {
-                if (Addon is Cannon)
-                    ((Cannon)Addon).Canoneer = value;
+                if (Addon is Cannon cannon)
+                    cannon.Canoneer = value;
             }
         }
         public override void Serialize(GenericWriter writer)
diff --git a/Scripts/Items/Addons/HitchingPost.cs b/Scripts/Items/Addons/HitchingPost.cs
index b5a2ceead..8ec863a2d 100644
--- a/Scripts/Items/Addons/HitchingPost.cs
+++ b/Scripts/Items/Addons/HitchingPost.cs
@@ -161,7 +161,7 @@ namespace Server.Items
                         continue;
 
                     AddButton(15, 39 + (i * 20), 10006, 10006, i + 1, GumpButtonType.Reply, 0);
-                    AddHtml(32, 35 + (i * 20), 275, 18, string.Format("<BASEFONT COLOR=#C0C0EE>{0}</BASEFONT>", pet.Name), false, false);
+                    AddHtml(32, 35 + (i * 20), 275, 18, $"<BASEFONT COLOR=#C0C0EE>{pet.Name}</BASEFONT>", false, false);
                 }
             }
 
@@ -189,8 +189,8 @@ namespace Server.Items
 
             protected override void OnTarget(Mobile from, object targeted)
             {
-                if (targeted is BaseCreature)
-                    m_Post.EndStable(from, (BaseCreature)targeted);
+                if (targeted is BaseCreature baseCreature)
+                    m_Post.EndStable(from, baseCreature);
                 else if (targeted == from)
                     from.SendLocalizedMessage(502672); // HA HA HA! Sorry, I am not an inn.
                 else
diff --git a/Scripts/Items/Addons/IronMaiden.cs b/Scripts/Items/Addons/IronMaiden.cs
index 9b4334af7..dfab70091 100644
--- a/Scripts/Items/Addons/IronMaiden.cs
+++ b/Scripts/Items/Addons/IronMaiden.cs
@@ -99,8 +99,8 @@ namespace Server.Items
 
         private void Deactivate(object obj)
         {
-            if (obj is AddonComponent)
-                ((AddonComponent)obj).ItemID = 0x1249;
+            if (obj is AddonComponent addonComponent)
+                addonComponent.ItemID = 0x1249;
         }
     }
 
diff --git a/Scripts/Items/Addons/JackOLantern.cs b/Scripts/Items/Addons/JackOLantern.cs
index 6b3669a1e..d85ce6209 100644
--- a/Scripts/Items/Addons/JackOLantern.cs
+++ b/Scripts/Items/Addons/JackOLantern.cs
@@ -57,9 +57,7 @@ namespace Server.Items
                 {
                     for (int i = 0; i < Components.Count; ++i)
                     {
-                        AddonComponent ac = Components[i] as AddonComponent;
-
-                        if (ac != null && ac.Hue == 2118)
+                        if (Components[i] is AddonComponent ac && ac.Hue == 2118)
                             ac.Hue = 1161;
                     }
                 });
@@ -71,9 +69,7 @@ namespace Server.Items
                 {
                     for (int i = 0; i < Components.Count; ++i)
                     {
-                        AddonComponent ac = Components[i] as AddonComponent;
-
-                        if (ac != null)
+                        if (Components[i] is AddonComponent ac)
                             ac.Name = "jack-o-lantern";
                     }
                 });
diff --git a/Scripts/Items/Addons/LighthouseAddon.cs b/Scripts/Items/Addons/LighthouseAddon.cs
index 2bb3b4ec6..630a0d331 100644
--- a/Scripts/Items/Addons/LighthouseAddon.cs
+++ b/Scripts/Items/Addons/LighthouseAddon.cs
@@ -103,8 +103,8 @@ namespace Server.Items
 
                 Container cont;
 
-                if (boat is BaseGalleon)
-                    cont = ((BaseGalleon)boat).GalleonHold;
+                if (boat is BaseGalleon baseGalleon)
+                    cont = baseGalleon.GalleonHold;
                 else
                     cont = boat.Hold;
 
diff --git a/Scripts/Items/Addons/MiningCart.cs b/Scripts/Items/Addons/MiningCart.cs
index e262d02df..89fe38bdc 100644
--- a/Scripts/Items/Addons/MiningCart.cs
+++ b/Scripts/Items/Addons/MiningCart.cs
@@ -362,9 +362,9 @@ namespace Server.Items
             {
                 base.GetProperties(list);
 
-                if (Addon is MiningCart)
+                if (Addon is MiningCart miningCart)
                 {
-                    switch (((MiningCart)Addon).CartType)
+                    switch (miningCart.CartType)
                     {
                         case MiningCartType.OreSouth:
                         case MiningCartType.OreEast: list.Add(1094724, ((MiningCart)Addon).Ore.ToString()); break; // Ore: ~1_COUNT~
diff --git a/Scripts/Items/Addons/Parrot.cs b/Scripts/Items/Addons/Parrot.cs
index 4e24b582e..51d577970 100644
--- a/Scripts/Items/Addons/Parrot.cs
+++ b/Scripts/Items/Addons/Parrot.cs
@@ -60,10 +60,8 @@ namespace Server.Items
 
             protected override void OnTarget(Mobile from, object targeted)
             {
-                if (targeted is AddonComponent)
+                if (targeted is AddonComponent component)
                 {
-                    AddonComponent component = (AddonComponent)targeted;
-
                     if (component.Addon is ParrotPerchAddon)
                     {
                         ParrotPerchAddon perch = (ParrotPerchAddon)component.Addon;
diff --git a/Scripts/Items/Addons/RepairBench.cs b/Scripts/Items/Addons/RepairBench.cs
index 8b3e1e139..855c21386 100644
--- a/Scripts/Items/Addons/RepairBench.cs
+++ b/Scripts/Items/Addons/RepairBench.cs
@@ -231,15 +231,12 @@ namespace Server.Items
 
             writer.Write(Tools == null ? 0 : Tools.Count);
 
-            if (Tools != null)
-            {
-                Tools.ForEach(x =>
-                {
-                    writer.Write((int)x.Skill);
-                    writer.Write((int)x.SkillValue);
-                    writer.Write(x.Charges);
-                });
-            }
+            Tools?.ForEach(x =>
+{
+    writer.Write((int)x.Skill);
+    writer.Write((int)x.SkillValue);
+    writer.Write(x.Charges);
+});
         }
 
         public override void Deserialize(GenericReader reader)
@@ -330,7 +327,7 @@ namespace Server.Items
             if (Tools != null)
             {
                 int[] value = Tools.Select(x => x.Charges).ToArray();
-                list.Add(1158899, string.Format("{0}\t{1}\t{2}\t{3}\t{4}\t{5}\t{6}", value[0], value[1], value[2], value[3], value[4], value[5], value[6])); // Tinkering: ~1_CHARGES~<br>Blacksmithing: ~2_CHARGES~<br>Carpentry: ~3_CHARGES~<br>Tailoring: ~4_CHARGES~<br>Fletching: ~5_CHARGES~<br>Masonry: ~6_CHARGES~<br>Glassblowing: ~7_CHARGES~
+                list.Add(1158899, $"{value[0]}\t{value[1]}\t{value[2]}\t{value[3]}\t{value[4]}\t{value[5]}\t{value[6]}"); // Tinkering: ~1_CHARGES~<br>Blacksmithing: ~2_CHARGES~<br>Carpentry: ~3_CHARGES~<br>Tailoring: ~4_CHARGES~<br>Fletching: ~5_CHARGES~<br>Masonry: ~6_CHARGES~<br>Glassblowing: ~7_CHARGES~
             }
         }
 
@@ -370,15 +367,12 @@ namespace Server.Items
 
             writer.Write(Tools == null ? 0 : Tools.Count);
 
-            if (Tools != null)
-            {
-                Tools.ForEach(x =>
-                {
-                    writer.Write((int)x.Skill);
-                    writer.Write((int)x.SkillValue);
-                    writer.Write(x.Charges);
-                });
-            }
+            Tools?.ForEach(x =>
+{
+    writer.Write((int)x.Skill);
+    writer.Write((int)x.SkillValue);
+    writer.Write(x.Charges);
+});
         }
 
         public override void Deserialize(GenericReader reader)
@@ -439,7 +433,7 @@ namespace Server.Items
 
             AddBackground(0, 0, 291, 113, 0x13BE);
             AddImageTiled(5, 5, 280, 80, 0xA40);
-            AddHtmlLocalized(9, 9, 272, 80, 1158874, string.Format("#{0}", addon.Tools.Find(x => x.Skill == skill).Cliloc), 0x7FFF, false, false); // Are you sure you wish to remove all the ~1_SKILL~ charges from the bench? This action will delete all existing charges and will not refund any deeds.
+            AddHtmlLocalized(9, 9, 272, 80, 1158874, $"#{addon.Tools.Find(x => x.Skill == skill).Cliloc}", 0x7FFF, false, false); // Are you sure you wish to remove all the ~1_SKILL~ charges from the bench? This action will delete all existing charges and will not refund any deeds.
 
             AddButton(5, 87, 0xFB1, 0xFB2, 0, GumpButtonType.Reply, 0);
             AddHtmlLocalized(40, 89, 100, 20, 1060051, 0x7FFF, false, false); // CANCEL
@@ -466,7 +460,7 @@ namespace Server.Items
                         tool.SkillValue = 0;
                         tool.Charges = 0;
 
-                        m.SendLocalizedMessage(1158873, string.Format("#{0}", tool.Cliloc)); // You clear all the ~1_SKILL~ charges from the bench.
+                        m.SendLocalizedMessage(1158873, $"#{tool.Cliloc}"); // You clear all the ~1_SKILL~ charges from the bench.
 
                         m.SendGump(new RepairBenchGump(m, m_Addon));
                         break;
@@ -502,50 +496,50 @@ namespace Server.Items
             AddItem(20, 80, 0x1EB8);
             AddTooltip(1044097);
             AddButton(70, 97, 0x15E1, 0x15E5, 12, GumpButtonType.Reply, 0);
-            AddLabel(113, 97, 0x5F, string.Format("{0:F1}", GetSkillValue(RepairSkillType.Tinkering)));
-            AddLabel(218, 97, 0x5F, string.Format("{0}", GetCharges(RepairSkillType.Tinkering)));
+            AddLabel(113, 97, 0x5F, $"{GetSkillValue(RepairSkillType.Tinkering):F1}");
+            AddLabel(218, 97, 0x5F, $"{GetCharges(RepairSkillType.Tinkering)}");
             AddButton(318, 97, 0x2716, 0x2716, 22, GumpButtonType.Reply, 0);
 
             AddItem(20, 125, 0x0FB4);
             AddTooltip(1044067);
             AddButton(70, 137, 0x15E1, 0x15E5, 10, GumpButtonType.Reply, 0);
-            AddLabel(113, 137, 0x5F, string.Format("{0:F1}", GetSkillValue(RepairSkillType.Smithing)));
-            AddLabel(218, 137, 0x5F, string.Format("{0}", GetCharges(RepairSkillType.Smithing)));
+            AddLabel(113, 137, 0x5F, $"{GetSkillValue(RepairSkillType.Smithing):F1}");
+            AddLabel(218, 137, 0x5F, $"{GetCharges(RepairSkillType.Smithing)}");
             AddButton(318, 137, 0x2716, 0x2716, 20, GumpButtonType.Reply, 0);
 
             AddItem(20, 170, 0x1034);
             AddTooltip(1044071);
             AddButton(70, 177, 0x15E1, 0x15E5, 13, GumpButtonType.Reply, 0);
-            AddLabel(113, 177, 0x5F, string.Format("{0:F1}", GetSkillValue(RepairSkillType.Carpentry)));
-            AddLabel(218, 177, 0x5F, string.Format("{0}", GetCharges(RepairSkillType.Carpentry)));
+            AddLabel(113, 177, 0x5F, $"{GetSkillValue(RepairSkillType.Carpentry):F1}");
+            AddLabel(218, 177, 0x5F, $"{GetCharges(RepairSkillType.Carpentry)}");
             AddButton(318, 177, 0x2716, 0x2716, 23, GumpButtonType.Reply, 0);
 
             AddItem(20, 215, 0x0F9D);
             AddTooltip(1044094);
             AddButton(70, 217, 0x15E1, 0x15E5, 11, GumpButtonType.Reply, 0);
-            AddLabel(113, 217, 0x5F, string.Format("{0:F1}", GetSkillValue(RepairSkillType.Tailoring)));
-            AddLabel(218, 217, 0x5F, string.Format("{0}", GetCharges(RepairSkillType.Tailoring)));
+            AddLabel(113, 217, 0x5F, $"{GetSkillValue(RepairSkillType.Tailoring):F1}");
+            AddLabel(218, 217, 0x5F, $"{GetCharges(RepairSkillType.Tailoring)}");
             AddButton(318, 217, 0x2716, 0x2716, 21, GumpButtonType.Reply, 0);
 
             AddItem(20, 260, 0x12B3);
             AddTooltip(1072392);
             AddButton(70, 257, 0x15E1, 0x15E5, 15, GumpButtonType.Reply, 0);
-            AddLabel(113, 257, 0x5F, string.Format("{0:F1}", GetSkillValue(RepairSkillType.Masonry)));
-            AddLabel(218, 257, 0x5F, string.Format("{0}", GetCharges(RepairSkillType.Masonry)));
+            AddLabel(113, 257, 0x5F, $"{GetSkillValue(RepairSkillType.Masonry):F1}");
+            AddLabel(218, 257, 0x5F, $"{GetCharges(RepairSkillType.Masonry)}");
             AddButton(318, 257, 0x2716, 0x2716, 25, GumpButtonType.Reply, 0);
 
             AddItem(20, 305, 0x182D);
             AddTooltip(1072393);
             AddButton(70, 297, 0x15E1, 0x15E5, 16, GumpButtonType.Reply, 0);
-            AddLabel(113, 297, 0x5F, string.Format("{0:F1}", GetSkillValue(RepairSkillType.Glassblowing)));
-            AddLabel(218, 297, 0x5F, string.Format("{0}", GetCharges(RepairSkillType.Glassblowing)));
+            AddLabel(113, 297, 0x5F, $"{GetSkillValue(RepairSkillType.Glassblowing):F1}");
+            AddLabel(218, 297, 0x5F, $"{GetCharges(RepairSkillType.Glassblowing)}");
             AddButton(318, 297, 0x2716, 0x2716, 26, GumpButtonType.Reply, 0);
 
             AddItem(20, 350, 0x1022);
             AddTooltip(1015156);
             AddButton(70, 337, 0x15E1, 0x15E5, 14, GumpButtonType.Reply, 0);
-            AddLabel(113, 337, 0x5F, string.Format("{0:F1}", GetSkillValue(RepairSkillType.Fletching)));
-            AddLabel(218, 337, 0x5F, string.Format("{0}", GetCharges(RepairSkillType.Fletching)));
+            AddLabel(113, 337, 0x5F, $"{GetSkillValue(RepairSkillType.Fletching):F1}");
+            AddLabel(218, 337, 0x5F, $"{GetCharges(RepairSkillType.Fletching)}");
             AddButton(318, 337, 0x2716, 0x2716, 24, GumpButtonType.Reply, 0);
 
             AddButton(70, 407, 0x15E1, 0x15E5, 1, GumpButtonType.Reply, 0);
diff --git a/Scripts/Items/Addons/RoseRug.cs b/Scripts/Items/Addons/RoseRug.cs
index b0542923f..b594890c2 100644
--- a/Scripts/Items/Addons/RoseRug.cs
+++ b/Scripts/Items/Addons/RoseRug.cs
@@ -189,9 +189,9 @@ namespace Server.Items
             {
                 base.GetProperties(list);
 
-                if (Addon is RoseRugAddon)
+                if (Addon is RoseRugAddon roseRugAddon)
                 {
-                    list.Add(1150102, ((RoseRugAddon)Addon).ResourceCount.ToString()); // Seeds: ~1_val~
+                    list.Add(1150102, roseRugAddon.ResourceCount.ToString()); // Seeds: ~1_val~
                 }
             }
 
diff --git a/Scripts/Items/Addons/SacrificialAltar.cs b/Scripts/Items/Addons/SacrificialAltar.cs
index 6cd322fec..5f5e2b898 100644
--- a/Scripts/Items/Addons/SacrificialAltar.cs
+++ b/Scripts/Items/Addons/SacrificialAltar.cs
@@ -168,7 +168,7 @@ namespace Server.Items
                         if (m_Cleanup.Find(x => x.mobiles == m && x.confirm) != null)
                         {
                             double point = m_Cleanup.Where(x => x.mobiles == m && x.confirm).Sum(x => x.points);
-                            m.SendLocalizedMessage(1151280, string.Format("{0}\t{1}", point.ToString(), m_Cleanup.Count(r => r.mobiles == m))); // You have received approximately ~1_VALUE~points for turning in ~2_COUNT~items for Clean Up Britannia.
+                            m.SendLocalizedMessage(1151280, $"{point.ToString()}\t{m_Cleanup.Count(r => r.mobiles == m)}"); // You have received approximately ~1_VALUE~points for turning in ~2_COUNT~items for Clean Up Britannia.
                             PointsSystem.CleanUpBritannia.AwardPoints(m, point);
                         }
                     }
diff --git a/Scripts/Items/Addons/SheepStatue.cs b/Scripts/Items/Addons/SheepStatue.cs
index 637b97bc2..dc29f8899 100644
--- a/Scripts/Items/Addons/SheepStatue.cs
+++ b/Scripts/Items/Addons/SheepStatue.cs
@@ -157,9 +157,9 @@ namespace Server.Items
             {
                 base.GetProperties(list);
 
-                if (Addon is SheepStatue)
+                if (Addon is SheepStatue sheepStatue)
                 {
-                    list.Add(1151834, ((SheepStatue)Addon).ResourceCount.ToString()); // Resources: ~1_val~
+                    list.Add(1151834, sheepStatue.ResourceCount.ToString()); // Resources: ~1_val~
                 }
             }
 
diff --git a/Scripts/Items/Addons/SkullRug.cs b/Scripts/Items/Addons/SkullRug.cs
index 0a57b70bb..56693ee55 100644
--- a/Scripts/Items/Addons/SkullRug.cs
+++ b/Scripts/Items/Addons/SkullRug.cs
@@ -197,9 +197,9 @@ namespace Server.Items
             {
                 base.GetProperties(list);
 
-                if (Addon is SkullRugAddon)
+                if (Addon is SkullRugAddon skullRugAddon)
                 {
-                    list.Add(1150101, ((SkullRugAddon)Addon).ResourceCount.ToString()); // Treasure Maps: ~1_val~
+                    list.Add(1150101, skullRugAddon.ResourceCount.ToString()); // Treasure Maps: ~1_val~
                 }
             }
 
diff --git a/Scripts/Items/Addons/SolenAntHole.cs b/Scripts/Items/Addons/SolenAntHole.cs
index 4a12b15bb..470c6f116 100644
--- a/Scripts/Items/Addons/SolenAntHole.cs
+++ b/Scripts/Items/Addons/SolenAntHole.cs
@@ -26,7 +26,7 @@ namespace Server.Items
                 if (map == Map.Trammel || map == Map.Felucca)
                 {
                     from.MoveToWorld(new Point3D(5922, 2024, 0), map);
-                    PublicOverheadMessage(MessageType.Regular, 0x3B2, true, string.Format("* {0} dives into the hole and disappears!*", from.Name));
+                    PublicOverheadMessage(MessageType.Regular, 0x3B2, true, $"* {from.Name} dives into the hole and disappears!*");
                 }
             }
             else
diff --git a/Scripts/Items/Addons/TreeStump.cs b/Scripts/Items/Addons/TreeStump.cs
index e159edbba..a6489e309 100644
--- a/Scripts/Items/Addons/TreeStump.cs
+++ b/Scripts/Items/Addons/TreeStump.cs
@@ -162,9 +162,9 @@ namespace Server.Items
             {
                 base.GetProperties(list);
 
-                if (Addon is TreeStump)
+                if (Addon is TreeStump treeStump)
                 {
-                    list.Add(1094719, ((TreeStump)Addon).Logs.ToString()); // Logs: ~1_COUNT~
+                    list.Add(1094719, treeStump.Logs.ToString()); // Logs: ~1_COUNT~
                 }
             }
 
diff --git a/Scripts/Items/Addons/Wreath.cs b/Scripts/Items/Addons/Wreath.cs
index 4c6a3b96b..8680b001c 100644
--- a/Scripts/Items/Addons/Wreath.cs
+++ b/Scripts/Items/Addons/Wreath.cs
@@ -113,9 +113,9 @@ namespace Server.Items
             {
                 Item deed = Deed;
 
-                if (Parent is Item)
+                if (Parent is Item item)
                 {
-                    ((Item)Parent).AddItem(deed);
+                    item.AddItem(deed);
                     deed.Location = Location;
                 }
                 else
diff --git a/Scripts/Items/Aquariums/Aquarium.cs b/Scripts/Items/Aquariums/Aquarium.cs
index cf88cb8dd..f8aa12d24 100644
--- a/Scripts/Items/Aquariums/Aquarium.cs
+++ b/Scripts/Items/Aquariums/Aquarium.cs
@@ -299,10 +299,8 @@ namespace Server.Items
 
             bool takeItem = true;
 
-            if (dropped is FishBowl)
+            if (dropped is FishBowl bowl)
             {
-                FishBowl bowl = (FishBowl)dropped;
-
                 if (bowl.Empty || !AddFish(from, bowl.Fish))
                     return false;
 
@@ -310,10 +308,8 @@ namespace Server.Items
 
                 takeItem = false;
             }
-            else if (dropped is BaseFish)
+            else if (dropped is BaseFish fish)
             {
-                BaseFish fish = (BaseFish)dropped;
-
                 if (!AddFish(from, fish))
                     return false;
             }
@@ -331,10 +327,8 @@ namespace Server.Items
 
                 from.SendLocalizedMessage(1074259, "1"); // ~1_NUM~ unit(s) of food have been added to the aquarium.
             }
-            else if (dropped is BaseBeverage)
+            else if (dropped is BaseBeverage beverage)
             {
-                BaseBeverage beverage = (BaseBeverage)dropped;
-
                 if (beverage.IsEmpty || !beverage.Pourable || beverage.Content != BeverageType.Water)
                 {
                     from.SendLocalizedMessage(500840); // Can't pour that in there.
@@ -766,7 +760,7 @@ namespace Server.Items
                 return;
             }
 
-            to.SendLocalizedMessage(1074360, string.Format("#{0}", item.LabelNumber)); // You receive a reward: ~1_REWARD~
+            to.SendLocalizedMessage(1074360, $"#{item.LabelNumber}"); // You receive a reward: ~1_REWARD~
             to.PlaySound(0x5A3);
 
             m_RewardAvailable = false;
@@ -821,10 +815,8 @@ namespace Server.Items
                 return false;
             }
 
-            if (item is BaseFish)
+            if (item is BaseFish fish)
             {
-                BaseFish fish = (BaseFish)item;
-
                 FishBowl bowl;
 
                 if ((bowl = GetEmptyBowl(from)) != null)
@@ -900,7 +892,7 @@ namespace Server.Items
             LiveCreatures += 1;
 
             if (from != null)
-                from.SendLocalizedMessage(1073632, string.Format("#{0}", fish.LabelNumber)); // You add the following creature to your aquarium: ~1_FISH~
+                from.SendLocalizedMessage(1073632, $"#{fish.LabelNumber}"); // You add the following creature to your aquarium: ~1_FISH~
 
             InvalidateProperties();
             return true;
@@ -935,7 +927,7 @@ namespace Server.Items
             AddItem(item);
 
             if (from != null)
-                from.SendLocalizedMessage(1073635, (item.LabelNumber != 0) ? string.Format("#{0}", item.LabelNumber) : item.Name); // You add the following decoration to your aquarium: ~1_NAME~
+                from.SendLocalizedMessage(1073635, (item.LabelNumber != 0) ? $"#{item.LabelNumber}" : item.Name); // You add the following decoration to your aquarium: ~1_NAME~
 
             InvalidateProperties();
             return true;
diff --git a/Scripts/Items/Aquariums/AquariumGump.cs b/Scripts/Items/Aquariums/AquariumGump.cs
index a80a0a5d7..85627f368 100644
--- a/Scripts/Items/Aquariums/AquariumGump.cs
+++ b/Scripts/Items/Aquariums/AquariumGump.cs
@@ -38,8 +38,8 @@ namespace Server.Items
                 AddHtmlLocalized(20, 217, 250, 20, item.LabelNumber, 0xFFFFFF, false, false); // Name
 
             // item details
-            if (item is BaseFish)
-                AddHtmlLocalized(20, 239, 315, 20, ((BaseFish)item).GetDescription(), 0xFFFFFF, false, false);
+            if (item is BaseFish baseFish)
+                AddHtmlLocalized(20, 239, 315, 20, baseFish.GetDescription(), 0xFFFFFF, false, false);
             else
                 AddHtmlLocalized(20, 239, 315, 20, 1073634, 0xFFFFFF, false, false); // An aquarium decoration
 
@@ -47,7 +47,7 @@ namespace Server.Items
             AddItem(150, 80, item.ItemID, item.Hue);
 
             // item number / all items
-            AddHtml(20, 195, 250, 20, string.Format("<BASEFONT COLOR=#FFFFFF>{0}/{1}</BASEFONT>", page, m_Aquarium.Items.Count), false, false);
+            AddHtml(20, 195, 250, 20, $"<BASEFONT COLOR=#FFFFFF>{page}/{m_Aquarium.Items.Count}</BASEFONT>", false, false);
 
             // remove item
             if (edit)
diff --git a/Scripts/Items/Artifacts/Consumables/BasePigmentsOfTokuno.cs b/Scripts/Items/Artifacts/Consumables/BasePigmentsOfTokuno.cs
index 5c68311c5..7a916de6a 100644
--- a/Scripts/Items/Artifacts/Consumables/BasePigmentsOfTokuno.cs
+++ b/Scripts/Items/Artifacts/Consumables/BasePigmentsOfTokuno.cs
@@ -114,12 +114,12 @@ namespace Server.Items
 
             CraftResource resource = CraftResource.None;
 
-            if (i is BaseWeapon)
-                resource = ((BaseWeapon)i).Resource;
-            else if (i is BaseArmor)
-                resource = ((BaseArmor)i).Resource;
-            else if (i is BaseClothing)
-                resource = ((BaseClothing)i).Resource;
+            if (i is BaseWeapon baseWeapon)
+                resource = baseWeapon.Resource;
+            else if (i is BaseArmor baseArmor)
+                resource = baseArmor.Resource;
+            else if (i is BaseClothing baseClothing)
+                resource = baseClothing.Resource;
 
             if (!CraftResources.IsStandard(resource))
                 return true;
diff --git a/Scripts/Items/Artifacts/Consumables/VialofArmorEssence.cs b/Scripts/Items/Artifacts/Consumables/VialofArmorEssence.cs
index c6ef51dd5..1074fa328 100644
--- a/Scripts/Items/Artifacts/Consumables/VialofArmorEssence.cs
+++ b/Scripts/Items/Artifacts/Consumables/VialofArmorEssence.cs
@@ -39,9 +39,9 @@ namespace Server.Items
             {
                 m.BeginTarget(2, false, TargetFlags.Beneficial, (from, targeted) =>
                 {
-                    if (targeted is Mobile)
+                    if (targeted is Mobile mobile)
                     {
-                        TryFeed(from, (Mobile)targeted);
+                        TryFeed(from, mobile);
                     }
                 });
             }
diff --git a/Scripts/Items/Artifacts/Decorative/LargeFishingNet.cs b/Scripts/Items/Artifacts/Decorative/LargeFishingNet.cs
index d703df241..3ab82405e 100644
--- a/Scripts/Items/Artifacts/Decorative/LargeFishingNet.cs
+++ b/Scripts/Items/Artifacts/Decorative/LargeFishingNet.cs
@@ -44,10 +44,7 @@ namespace Server.Items
         {
             object[] ojs = (object[])o;
 
-            Corpse c = ojs[0] as Corpse;
-            Mobile from = ojs[1] as Mobile;
-
-            if (c != null && from != null)
+            if (ojs[0] is Corpse c && ojs[1] is Mobile from)
                 c.MoveToWorld(from.Location, from.Map);
         }
 
diff --git a/Scripts/Items/Artifacts/Decorative/TenthAnniversarySculpture.cs b/Scripts/Items/Artifacts/Decorative/TenthAnniversarySculpture.cs
index f55e0ebeb..bff1b5d9e 100644
--- a/Scripts/Items/Artifacts/Decorative/TenthAnniversarySculpture.cs
+++ b/Scripts/Items/Artifacts/Decorative/TenthAnniversarySculpture.cs
@@ -118,9 +118,7 @@ namespace Server.Items
         {
             if (m_LuckTable.ContainsKey(from))
             {
-                Account account = from.Account as Account;
-
-                if (account != null)
+                if (from.Account is Account account)
                 {
                     return Math.Min(MaxLuckBonus, 200 + (RewardSystem.GetRewardLevel(account)) * 50);
                 }
diff --git a/Scripts/Items/Artifacts/Equipment/Armor/Sets/Bestial/BeastialSetHelper.cs b/Scripts/Items/Artifacts/Equipment/Armor/Sets/Bestial/BeastialSetHelper.cs
index b49577f6b..75857fa10 100644
--- a/Scripts/Items/Artifacts/Equipment/Armor/Sets/Bestial/BeastialSetHelper.cs
+++ b/Scripts/Items/Artifacts/Equipment/Armor/Sets/Bestial/BeastialSetHelper.cs
@@ -53,9 +53,7 @@ namespace Server
             if (item == null)
                 return 0;
 
-            Mobile m = item.RootParent as Mobile;
-
-            if (m != null && _Table != null && _Table.ContainsKey(m))
+            if (item.RootParent is Mobile m && _Table != null && _Table.ContainsKey(m))
                 return _Table[m].Level;
 
             return 1;
@@ -93,7 +91,7 @@ namespace Server
 
         public static int TotalPieces(Mobile m)
         {
-            return m.Items.Where(i => i is ISetItem && ((ISetItem)i).SetID == SetItem.Bestial).Count();
+            return m.Items.Count(i => i is ISetItem && ((ISetItem)i).SetID == SetItem.Bestial);
         }
 
         public static void AddBerserk(Mobile m)
diff --git a/Scripts/Items/Artifacts/Equipment/Armor/Sets/Epiphany/EpiphanyHelper.cs b/Scripts/Items/Artifacts/Equipment/Armor/Sets/Epiphany/EpiphanyHelper.cs
index fac26a793..e2fef38f2 100644
--- a/Scripts/Items/Artifacts/Equipment/Armor/Sets/Epiphany/EpiphanyHelper.cs
+++ b/Scripts/Items/Artifacts/Equipment/Armor/Sets/Epiphany/EpiphanyHelper.cs
@@ -25,9 +25,9 @@ namespace Server.Items
             if (m == null)
                 return 1;
 
-            return Math.Max(1, Math.Min(5, m.Items.Where(i => i is IEpiphanyArmor &&
+            return Math.Max(1, Math.Min(5, m.Items.Count(i => i is IEpiphanyArmor &&
                                       ((IEpiphanyArmor)i).Alignment == armor.Alignment &&
-                                      ((IEpiphanyArmor)i).Type == armor.Type).Count()));
+                                      ((IEpiphanyArmor)i).Type == armor.Type)));
         }
 
         public static int GetBonus(Mobile m, IEpiphanyArmor armor)
@@ -130,7 +130,7 @@ namespace Server.Items
                     list.Add(1150830 + (int)item.Alignment + 1); // Set Ability: good healing burst
                     break;
                 case SurgeType.Stam: // NOTE: This doesn't exist on EA, but put it in here anyways!
-                    list.Add(1149953, string.Format("{0}\t{1}", "Set Ability", item.Alignment == Alignment.Evil ? "evil stamina burst" : "good stamina burst"));
+                    list.Add(1149953, $"{"Set Ability"}\t{(item.Alignment == Alignment.Evil ? "evil stamina burst" : "good stamina burst")}");
                     break;
                 default:
                 case SurgeType.Mana:
diff --git a/Scripts/Items/Artifacts/Equipment/Armor/Sets/Epiphany/VillainousEpiphany.cs b/Scripts/Items/Artifacts/Equipment/Armor/Sets/Epiphany/VillainousEpiphany.cs
index d0c565e2e..d4fe214bf 100644
--- a/Scripts/Items/Artifacts/Equipment/Armor/Sets/Epiphany/VillainousEpiphany.cs
+++ b/Scripts/Items/Artifacts/Equipment/Armor/Sets/Epiphany/VillainousEpiphany.cs
@@ -47,10 +47,8 @@ namespace Server.Items
         {
             base.OnRemoved(parent);
 
-            if (parent is Mobile)
+            if (parent is Mobile m)
             {
-                Mobile m = (Mobile)parent;
-
                 foreach (Item armor in m.Items.Where(i => i is IEpiphanyArmor))
                 {
                     armor.InvalidateProperties();
@@ -117,10 +115,8 @@ namespace Server.Items
         {
             base.OnRemoved(parent);
 
-            if (parent is Mobile)
+            if (parent is Mobile m)
             {
-                Mobile m = (Mobile)parent;
-
                 foreach (Item armor in m.Items.Where(i => i is IEpiphanyArmor))
                 {
                     armor.InvalidateProperties();
@@ -189,10 +185,8 @@ namespace Server.Items
         {
             base.OnRemoved(parent);
 
-            if (parent is Mobile)
+            if (parent is Mobile m)
             {
-                Mobile m = (Mobile)parent;
-
                 foreach (Item armor in m.Items.Where(i => i is IEpiphanyArmor))
                 {
                     armor.InvalidateProperties();
@@ -261,10 +255,8 @@ namespace Server.Items
         {
             base.OnRemoved(parent);
 
-            if (parent is Mobile)
+            if (parent is Mobile m)
             {
-                Mobile m = (Mobile)parent;
-
                 foreach (Item armor in m.Items.Where(i => i is IEpiphanyArmor))
                 {
                     armor.InvalidateProperties();
@@ -333,10 +325,8 @@ namespace Server.Items
         {
             base.OnRemoved(parent);
 
-            if (parent is Mobile)
+            if (parent is Mobile m)
             {
-                Mobile m = (Mobile)parent;
-
                 foreach (Item armor in m.Items.Where(i => i is IEpiphanyArmor))
                 {
                     armor.InvalidateProperties();
@@ -405,10 +395,8 @@ namespace Server.Items
         {
             base.OnRemoved(parent);
 
-            if (parent is Mobile)
+            if (parent is Mobile m)
             {
-                Mobile m = (Mobile)parent;
-
                 foreach (Item armor in m.Items.Where(i => i is IEpiphanyArmor))
                 {
                     armor.InvalidateProperties();
@@ -475,10 +463,8 @@ namespace Server.Items
         {
             base.OnRemoved(parent);
 
-            if (parent is Mobile)
+            if (parent is Mobile m)
             {
-                Mobile m = (Mobile)parent;
-
                 foreach (Item armor in m.Items.Where(i => i is IEpiphanyArmor))
                 {
                     armor.InvalidateProperties();
@@ -545,10 +531,8 @@ namespace Server.Items
         {
             base.OnRemoved(parent);
 
-            if (parent is Mobile)
+            if (parent is Mobile m)
             {
-                Mobile m = (Mobile)parent;
-
                 foreach (Item armor in m.Items.Where(i => i is IEpiphanyArmor))
                 {
                     armor.InvalidateProperties();
@@ -615,10 +599,8 @@ namespace Server.Items
         {
             base.OnRemoved(parent);
 
-            if (parent is Mobile)
+            if (parent is Mobile m)
             {
-                Mobile m = (Mobile)parent;
-
                 foreach (Item armor in m.Items.Where(i => i is IEpiphanyArmor))
                 {
                     armor.InvalidateProperties();
@@ -685,10 +667,8 @@ namespace Server.Items
         {
             base.OnRemoved(parent);
 
-            if (parent is Mobile)
+            if (parent is Mobile m)
             {
-                Mobile m = (Mobile)parent;
-
                 foreach (Item armor in m.Items.Where(i => i is IEpiphanyArmor))
                 {
                     armor.InvalidateProperties();
@@ -755,10 +735,8 @@ namespace Server.Items
         {
             base.OnRemoved(parent);
 
-            if (parent is Mobile)
+            if (parent is Mobile m)
             {
-                Mobile m = (Mobile)parent;
-
                 foreach (Item armor in m.Items.Where(i => i is IEpiphanyArmor))
                 {
                     armor.InvalidateProperties();
@@ -825,10 +803,8 @@ namespace Server.Items
         {
             base.OnRemoved(parent);
 
-            if (parent is Mobile)
+            if (parent is Mobile m)
             {
-                Mobile m = (Mobile)parent;
-
                 foreach (Item armor in m.Items.Where(i => i is IEpiphanyArmor))
                 {
                     armor.InvalidateProperties();
diff --git a/Scripts/Items/Artifacts/Equipment/Armor/Sets/Epiphany/VirtuousEpiphany.cs b/Scripts/Items/Artifacts/Equipment/Armor/Sets/Epiphany/VirtuousEpiphany.cs
index 6f3106a9e..859608263 100644
--- a/Scripts/Items/Artifacts/Equipment/Armor/Sets/Epiphany/VirtuousEpiphany.cs
+++ b/Scripts/Items/Artifacts/Equipment/Armor/Sets/Epiphany/VirtuousEpiphany.cs
@@ -45,10 +45,8 @@ namespace Server.Items
         {
             base.OnRemoved(parent);
 
-            if (parent is Mobile)
+            if (parent is Mobile m)
             {
-                Mobile m = (Mobile)parent;
-
                 foreach (Item armor in m.Items.Where(i => i is IEpiphanyArmor))
                 {
                     armor.InvalidateProperties();
@@ -115,10 +113,8 @@ namespace Server.Items
         {
             base.OnRemoved(parent);
 
-            if (parent is Mobile)
+            if (parent is Mobile m)
             {
-                Mobile m = (Mobile)parent;
-
                 foreach (Item armor in m.Items.Where(i => i is IEpiphanyArmor))
                 {
                     armor.InvalidateProperties();
@@ -185,10 +181,8 @@ namespace Server.Items
         {
             base.OnRemoved(parent);
 
-            if (parent is Mobile)
+            if (parent is Mobile m)
             {
-                Mobile m = (Mobile)parent;
-
                 foreach (Item armor in m.Items.Where(i => i is IEpiphanyArmor))
                 {
                     armor.InvalidateProperties();
@@ -255,10 +249,8 @@ namespace Server.Items
         {
             base.OnRemoved(parent);
 
-            if (parent is Mobile)
+            if (parent is Mobile m)
             {
-                Mobile m = (Mobile)parent;
-
                 foreach (Item armor in m.Items.Where(i => i is IEpiphanyArmor))
                 {
                     armor.InvalidateProperties();
@@ -325,10 +317,8 @@ namespace Server.Items
         {
             base.OnRemoved(parent);
 
-            if (parent is Mobile)
+            if (parent is Mobile m)
             {
-                Mobile m = (Mobile)parent;
-
                 foreach (Item armor in m.Items.Where(i => i is IEpiphanyArmor))
                 {
                     armor.InvalidateProperties();
@@ -395,10 +385,8 @@ namespace Server.Items
         {
             base.OnRemoved(parent);
 
-            if (parent is Mobile)
+            if (parent is Mobile m)
             {
-                Mobile m = (Mobile)parent;
-
                 foreach (Item armor in m.Items.Where(i => i is IEpiphanyArmor))
                 {
                     armor.InvalidateProperties();
@@ -465,10 +453,8 @@ namespace Server.Items
         {
             base.OnRemoved(parent);
 
-            if (parent is Mobile)
+            if (parent is Mobile m)
             {
-                Mobile m = (Mobile)parent;
-
                 foreach (Item armor in m.Items.Where(i => i is IEpiphanyArmor))
                 {
                     armor.InvalidateProperties();
@@ -535,10 +521,8 @@ namespace Server.Items
         {
             base.OnRemoved(parent);
 
-            if (parent is Mobile)
+            if (parent is Mobile m)
             {
-                Mobile m = (Mobile)parent;
-
                 foreach (Item armor in m.Items.Where(i => i is IEpiphanyArmor))
                 {
                     armor.InvalidateProperties();
@@ -604,10 +588,8 @@ namespace Server.Items
         {
             base.OnRemoved(parent);
 
-            if (parent is Mobile)
+            if (parent is Mobile m)
             {
-                Mobile m = (Mobile)parent;
-
                 foreach (Item armor in m.Items.Where(i => i is IEpiphanyArmor))
                 {
                     armor.InvalidateProperties();
@@ -673,10 +655,8 @@ namespace Server.Items
         {
             base.OnRemoved(parent);
 
-            if (parent is Mobile)
+            if (parent is Mobile m)
             {
-                Mobile m = (Mobile)parent;
-
                 foreach (Item armor in m.Items.Where(i => i is IEpiphanyArmor))
                 {
                     armor.InvalidateProperties();
@@ -742,10 +722,8 @@ namespace Server.Items
         {
             base.OnRemoved(parent);
 
-            if (parent is Mobile)
+            if (parent is Mobile m)
             {
-                Mobile m = (Mobile)parent;
-
                 foreach (Item armor in m.Items.Where(i => i is IEpiphanyArmor))
                 {
                     armor.InvalidateProperties();
@@ -811,10 +789,8 @@ namespace Server.Items
         {
             base.OnRemoved(parent);
 
-            if (parent is Mobile)
+            if (parent is Mobile m)
             {
-                Mobile m = (Mobile)parent;
-
                 foreach (Item armor in m.Items.Where(i => i is IEpiphanyArmor))
                 {
                     armor.InvalidateProperties();
diff --git a/Scripts/Items/Artifacts/Equipment/Armor/Sets/SetItem.cs b/Scripts/Items/Artifacts/Equipment/Armor/Sets/SetItem.cs
index 306bef441..7bfafecbb 100644
--- a/Scripts/Items/Artifacts/Equipment/Armor/Sets/SetItem.cs
+++ b/Scripts/Items/Artifacts/Equipment/Armor/Sets/SetItem.cs
@@ -59,16 +59,16 @@ namespace Server
         {
             AosAttributes attrs;
 
-            if (setItem is BaseWeapon)
-                attrs = ((BaseWeapon)setItem).Attributes;
-            else if (setItem is BaseArmor)
-                attrs = ((BaseArmor)setItem).Attributes;
-            else if (setItem is BaseClothing)
-                attrs = ((BaseClothing)setItem).Attributes;
-            else if (setItem is BaseQuiver)
-                attrs = ((BaseQuiver)setItem).Attributes;
-            else if (setItem is BaseJewel)
-                attrs = ((BaseJewel)setItem).Attributes;
+            if (setItem is BaseWeapon baseWeapon)
+                attrs = baseWeapon.Attributes;
+            else if (setItem is BaseArmor baseArmor)
+                attrs = baseArmor.Attributes;
+            else if (setItem is BaseClothing baseClothing)
+                attrs = baseClothing.Attributes;
+            else if (setItem is BaseQuiver baseQuiver)
+                attrs = baseQuiver.Attributes;
+            else if (setItem is BaseJewel baseJewel)
+                attrs = baseJewel.Attributes;
             else
                 attrs = new AosAttributes(setItem as Item);
 
@@ -79,10 +79,8 @@ namespace Server
 
             int prop;
 
-            if (setItem is IFishingAttire)
+            if (setItem is IFishingAttire attire)
             {
-                IFishingAttire attire = (IFishingAttire)setItem;
-
                 if (setItem.SetEquipped && attire.SetBonus > 0)
                     list.Add(1151573, attire.SetBonus.ToString()); //Fish Bait Strength +~1_VAL~% (total)
                 else if (((IFishingAttire)setItem).BaitBonus > 0)
@@ -185,10 +183,8 @@ namespace Server
 
         public static void Remove(Mobile from, SetItem setID, Item item)
         {
-            if (item is ISetItem)
+            if (item is ISetItem setItem)
             {
-                ISetItem setItem = (ISetItem)item;
-
                 if (setItem.IsSetItem && setItem.SetID == setID)
                 {
                     if (setItem.LastEquipped)
diff --git a/Scripts/Items/Artifacts/Equipment/Jewelry/AmuletOfRighteousness.cs b/Scripts/Items/Artifacts/Equipment/Jewelry/AmuletOfRighteousness.cs
index ee67fc99f..a65a84522 100644
--- a/Scripts/Items/Artifacts/Equipment/Jewelry/AmuletOfRighteousness.cs
+++ b/Scripts/Items/Artifacts/Equipment/Jewelry/AmuletOfRighteousness.cs
@@ -98,10 +98,8 @@ namespace Server.Items
                 if (m_Amulet == null || m_Amulet.Deleted)
                     return;
 
-                if (targeted is Mobile)
+                if (targeted is Mobile target)
                 {
-                    Mobile target = (Mobile)targeted;
-
                     if (m_Amulet.UsesRemaining <= 0)
                     {
                         from.SendLocalizedMessage(1042544); // This item is out of charges.
diff --git a/Scripts/Items/Artifacts/Equipment/Jewelry/AnkhPendant.cs b/Scripts/Items/Artifacts/Equipment/Jewelry/AnkhPendant.cs
index 7943fd02e..7ae236aac 100644
--- a/Scripts/Items/Artifacts/Equipment/Jewelry/AnkhPendant.cs
+++ b/Scripts/Items/Artifacts/Equipment/Jewelry/AnkhPendant.cs
@@ -203,7 +203,7 @@ namespace Server.Items
             {
                 if (IsUnderEffects(from))
                 {
-                    from.SendLocalizedMessage(1079544, string.Format("#{0}", GetCliloc(m_Table[from].VType)));
+                    from.SendLocalizedMessage(1079544, $"#{GetCliloc(m_Table[from].VType)}");
                     return false;
                 }
 
@@ -242,7 +242,7 @@ namespace Server.Items
 
             from.Delta(MobileDelta.WeaponDamage);
 
-            from.SendLocalizedMessage(1079546, string.Format("#{0}", GetCliloc(t)));
+            from.SendLocalizedMessage(1079546, $"#{GetCliloc(t)}");
         }
 
         private static int GetCliloc(VirtueType t)
diff --git a/Scripts/Items/Artifacts/Equipment/Jewelry/BarreraakRing.cs b/Scripts/Items/Artifacts/Equipment/Jewelry/BarreraakRing.cs
index 3a83b92dc..0c40765ee 100644
--- a/Scripts/Items/Artifacts/Equipment/Jewelry/BarreraakRing.cs
+++ b/Scripts/Items/Artifacts/Equipment/Jewelry/BarreraakRing.cs
@@ -42,16 +42,16 @@ namespace Server.Items
         {
             base.OnAdded(parent);
 
-            if (parent is Mobile)
-                ((Mobile)parent).BodyMod = 334;
+            if (parent is Mobile mobile)
+                mobile.BodyMod = 334;
         }
 
         public override void OnRemoved(object parent)
         {
             base.OnRemoved(parent);
 
-            if (parent is Mobile)
-                ((Mobile)parent).BodyMod = 0;
+            if (parent is Mobile mobile)
+                mobile.BodyMod = 0;
         }
 
         public BarreraaksRing(Serial serial)
@@ -71,10 +71,8 @@ namespace Server.Items
             base.Deserialize(reader);
             int version = reader.ReadInt();
 
-            if (Parent is Mobile)
+            if (Parent is Mobile m)
             {
-                Mobile m = (Mobile)Parent;
-
                 Timer.DelayCall(() =>
                     {
                         if (!m.Mounted && !m.Flying && !m.IsBodyMod)
diff --git a/Scripts/Items/Artifacts/TOTLesserArtifacts.cs b/Scripts/Items/Artifacts/TOTLesserArtifacts.cs
index 8c04c8bd3..9af24d0c2 100644
--- a/Scripts/Items/Artifacts/TOTLesserArtifacts.cs
+++ b/Scripts/Items/Artifacts/TOTLesserArtifacts.cs
@@ -835,22 +835,18 @@ namespace Server.Items
                 int min = 20;
                 int max = 80;
 
-                if (item is BaseWeapon)
+                if (item is BaseWeapon weapon)
                 {
-                    BaseWeapon weapon = (BaseWeapon)item;
-
                     BaseRunicTool.ApplyAttributesTo(weapon, attributeCount, min, max);
                 }
-                else if (item is BaseArmor)
+                else if (item is BaseArmor armor)
                 {
-                    BaseArmor armor = (BaseArmor)item;
-
                     BaseRunicTool.ApplyAttributesTo(armor, attributeCount, min, max);
                 }
-                else if (item is BaseHat)
-                    BaseRunicTool.ApplyAttributesTo((BaseHat)item, attributeCount, min, max);
-                else if (item is BaseJewel)
-                    BaseRunicTool.ApplyAttributesTo((BaseJewel)item, attributeCount, min, max);
+                else if (item is BaseHat baseHat)
+                    BaseRunicTool.ApplyAttributesTo(baseHat, attributeCount, min, max);
+                else if (item is BaseJewel baseJewel)
+                    BaseRunicTool.ApplyAttributesTo(baseJewel, attributeCount, min, max);
 
                 DropItem(item);
             }
diff --git a/Scripts/Items/Artifacts/Tools/XenrrFishingPole.cs b/Scripts/Items/Artifacts/Tools/XenrrFishingPole.cs
index ebb01ce19..6f32bf61c 100644
--- a/Scripts/Items/Artifacts/Tools/XenrrFishingPole.cs
+++ b/Scripts/Items/Artifacts/Tools/XenrrFishingPole.cs
@@ -91,10 +91,8 @@ namespace Server.Items
                 reader.ReadInt();
             }
 
-            if (Parent is Mobile)
+            if (Parent is Mobile m)
             {
-                Mobile m = (Mobile)Parent;
-
                 Timer.DelayCall(() =>
                 {
                     if (!m.Mounted && !m.Flying && !m.IsBodyMod)
diff --git a/Scripts/Items/Books/BaseBook.cs b/Scripts/Items/Books/BaseBook.cs
index e58278ac1..7b85770f3 100644
--- a/Scripts/Items/Books/BaseBook.cs
+++ b/Scripts/Items/Books/BaseBook.cs
@@ -368,7 +368,7 @@ namespace Server.Items
 
         public override void AddNameProperty(ObjectPropertyList list)
         {
-            if (m_Title != null && m_Title.Length > 0)
+            if (!string.IsNullOrEmpty(m_Title))
                 list.Add(m_Title);
             else
                 base.AddNameProperty(list);
diff --git a/Scripts/Items/Books/BaseJournal.cs b/Scripts/Items/Books/BaseJournal.cs
index e6e4a4438..e1e9eafae 100644
--- a/Scripts/Items/Books/BaseJournal.cs
+++ b/Scripts/Items/Books/BaseJournal.cs
@@ -14,12 +14,12 @@ namespace Server.Items
             {
                 if (title.Number > 0)
                 {
-                    AddHtmlLocalized(50, y, 450, 20, 1154645, string.Format("#{0}", title.Number.ToString()), 0, false, false);
+                    AddHtmlLocalized(50, y, 450, 20, 1154645, $"#{title.Number.ToString()}", 0, false, false);
                     y += 30;
                 }
                 else
                 {
-                    AddHtml(50, y, 450, 20, string.Format("<CENTER>{0}</CENTER>", title.String), false, false);
+                    AddHtml(50, y, 450, 20, $"<CENTER>{title.String}</CENTER>", false, false);
                     y += 30;
                 }
             }
diff --git a/Scripts/Items/Books/GargishDocuments.cs b/Scripts/Items/Books/GargishDocuments.cs
index 0d9bbea37..46cab74f7 100644
--- a/Scripts/Items/Books/GargishDocuments.cs
+++ b/Scripts/Items/Books/GargishDocuments.cs
@@ -30,10 +30,10 @@ namespace Server.Items
 
         public override void AddNameProperty(ObjectPropertyList list)
         {
-            if (Title is int)
-                list.Add(1150928, string.Format("#{0}", (int)Title));  // Gargish Document - ~1_NAME~
-            else if (Title is string)
-                list.Add(1150928, (string)Title);
+            if (Title is int i)
+                list.Add(1150928, $"#{i}");  // Gargish Document - ~1_NAME~
+            else if (Title is string s)
+                list.Add(1150928, s);
             else
                 base.AddNameProperty(list);
         }
@@ -72,7 +72,7 @@ namespace Server.Items
 
         public override void AddNameProperty(ObjectPropertyList list)
         {
-            list.Add(1150928, string.Format("#{0}", Title));  // Gargish Document - ~1_NAME~
+            list.Add(1150928, $"#{Title}");  // Gargish Document - ~1_NAME~
         }
 
         public GargishDocumentNote(Serial serial) : base(serial)
diff --git a/Scripts/Items/Books/Note.cs b/Scripts/Items/Books/Note.cs
index 136f84a09..363c90063 100644
--- a/Scripts/Items/Books/Note.cs
+++ b/Scripts/Items/Books/Note.cs
@@ -29,10 +29,10 @@ namespace Server.Items
 
         public Note(object content) : base(0x1234)
         {
-            if (content is int)
-                m_Number = (int)content;
-            else if (content is string)
-                m_String = (string)content;
+            if (content is int i)
+                m_Number = i;
+            else if (content is string s)
+                m_String = s;
         }
 
         public override void OnDoubleClick(Mobile m)
diff --git a/Scripts/Items/Books/RunicAtlas.cs b/Scripts/Items/Books/RunicAtlas.cs
index 5f6c7249e..f7ce80b7b 100644
--- a/Scripts/Items/Books/RunicAtlas.cs
+++ b/Scripts/Items/Books/RunicAtlas.cs
@@ -141,7 +141,7 @@ namespace Server.Items
 
             bool valid = Sextant.Format(location, map, ref xLong, ref yLat, ref xMins, ref yMins, ref xEast, ref ySouth);
 
-            return valid ? string.Format("{0}° {1}'{2}, {3}° {4}'{5}", yLat, yMins, ySouth ? "S" : "N", xLong, xMins, xEast ? "E" : "W") : "Nowhere";
+            return valid ? $"{yLat}° {yMins}'{(ySouth ? "S" : "N")}, {xLong}° {xMins}'{(xEast ? "E" : "W")}" : "Nowhere";
         }
 
         public RunicAtlas Atlas { get; }
@@ -177,7 +177,7 @@ namespace Server.Items
             AddImage(0, 0, 39923);
 
             AddHtmlLocalized(60, 9, 147, 22, 1011296, false, false); //Charges:
-            AddHtml(110, 9, 97, 22, string.Format("{0} / {1}", Atlas.CurCharges, Atlas.MaxCharges), false, false);
+            AddHtml(110, 9, 97, 22, $"{Atlas.CurCharges} / {Atlas.MaxCharges}", false, false);
 
             AddHtmlLocalized(264, 9, 144, 18, 1011299, false, false); // rename book 
             AddButton(248, 14, 2103, 2103, 1, GumpButtonType.Reply, 0);
@@ -219,7 +219,7 @@ namespace Server.Items
 
             string coords = entry != null ? RunebookGump.GetLocation(entry) : "Nowhere";
 
-            AddHtml(25, 254, 182, 18, string.Format("<center>{0}</center>", coords), false, false);
+            AddHtml(25, 254, 182, 18, $"<center>{coords}</center>", false, false);
 
             AddHtmlLocalized(62, 290, 144, 18, 1011300, false, false); // Set default                        
             AddButton(46, 295, 2103, 2103, 2, GumpButtonType.Reply, 0);
@@ -227,7 +227,7 @@ namespace Server.Items
             AddHtmlLocalized(62, 310, 144, 18, 1011298, false, false); // Drop rune
             AddButton(46, 315, 2103, 2103, 3, GumpButtonType.Reply, 0);
 
-            AddHtml(25, 348, 182, 18, string.Format("<center>{0}</center>", entry != null ? entry.Description : "Empty"), false, false);
+            AddHtml(25, 348, 182, 18, $"<center>{(entry != null ? entry.Description : "Empty")}</center>", false, false);
 
             int hy = 284;
             int by = 289;
diff --git a/Scripts/Items/Books/SpecialScrollBooks/BaseSpecialScrollBook.cs b/Scripts/Items/Books/SpecialScrollBooks/BaseSpecialScrollBook.cs
index 2a949c252..31118fae0 100644
--- a/Scripts/Items/Books/SpecialScrollBooks/BaseSpecialScrollBook.cs
+++ b/Scripts/Items/Books/SpecialScrollBooks/BaseSpecialScrollBook.cs
@@ -69,7 +69,7 @@ namespace Server.Items
         {
             base.GetProperties(list);
 
-            list.Add(1151797, string.Format("{0}\t{1}", Items.Count, Capacity)); // Scrolls in book: ~1_val~/~2_val~
+            list.Add(1151797, $"{Items.Count}\t{Capacity}"); // Scrolls in book: ~1_val~/~2_val~
         }
 
         public override void GetContextMenuEntries(Mobile from, List<ContextMenuEntry> list)
diff --git a/Scripts/Items/Books/SpecialScrollBooks/RecipeBook/RecipeBook.cs b/Scripts/Items/Books/SpecialScrollBooks/RecipeBook/RecipeBook.cs
index faed7074f..21ac37b23 100644
--- a/Scripts/Items/Books/SpecialScrollBooks/RecipeBook/RecipeBook.cs
+++ b/Scripts/Items/Books/SpecialScrollBooks/RecipeBook/RecipeBook.cs
@@ -363,8 +363,8 @@ namespace Server.Items
 
                     from.SendLocalizedMessage(1158826); // Recipe added to the book.
 
-                    if (from is PlayerMobile)
-                        from.SendGump(new RecipeBookGump((PlayerMobile)from, this));
+                    if (from is PlayerMobile playerMobile)
+                        from.SendGump(new RecipeBookGump(playerMobile, this));
 
                     dropped.Delete();
                     return true;
@@ -452,9 +452,9 @@ namespace Server.Items
         {
             base.GetProperties(list);
 
-            list.Add(1158849, string.Format("{0}", Recipes.Sum(x => x.Amount))); // Recipes in book: ~1_val~
+            list.Add(1158849, $"{Recipes.Sum(x => x.Amount)}"); // Recipes in book: ~1_val~
 
-            if (BookName != null && BookName.Length > 0)
+            if (!string.IsNullOrEmpty(BookName))
                 list.Add(1062481, BookName);
         }
 
diff --git a/Scripts/Items/Books/SpecialScrollBooks/RecipeBook/RecipeBookGump.cs b/Scripts/Items/Books/SpecialScrollBooks/RecipeBook/RecipeBookGump.cs
index 6e49b9cfe..adcba07a9 100644
--- a/Scripts/Items/Books/SpecialScrollBooks/RecipeBook/RecipeBookGump.cs
+++ b/Scripts/Items/Books/SpecialScrollBooks/RecipeBook/RecipeBookGump.cs
@@ -355,7 +355,7 @@ namespace Server.Items
                 if (recipe.Amount > 0 && (canDrop || canLocked))
                     AddButton(35, y + 2, 5602, 5606, 4 + (i * 2), GumpButtonType.Reply, 0);
 
-                AddLabel(61, y, 0x480, string.Format("{0}", recipe.ID));
+                AddLabel(61, y, 0x480, $"{recipe.ID}");
                 AddHtmlLocalized(103, y, 130, 32, Recipe.Recipes[recipe.RecipeID].TextDefinition.Number, "#103221", 0xFFFFFF, false, false); // ~1_val~
                 AddLabel(235, y, 0x480, GetExpansion(recipe.Expansion));
                 AddHtmlLocalized(316, y, 100, 20, GetSkillName(recipe.Skill), "#104409", 0xFFFFFF, false, false); // ~1_val~
diff --git a/Scripts/Items/Books/SpecialScrollBooks/SpecialScrollBookGump.cs b/Scripts/Items/Books/SpecialScrollBooks/SpecialScrollBookGump.cs
index dafa069b5..2292ed61e 100644
--- a/Scripts/Items/Books/SpecialScrollBooks/SpecialScrollBookGump.cs
+++ b/Scripts/Items/Books/SpecialScrollBooks/SpecialScrollBookGump.cs
@@ -60,7 +60,7 @@ namespace Server.Gumps
 
         public virtual void BuildCategoriesPage()
         {
-            AddHtmlLocalized(0, 15, 175, 20, CenterLoc, string.Format("#{0}", Book.GumpTitle), 0, false, false);
+            AddHtmlLocalized(0, 15, 175, 20, CenterLoc, $"#{Book.GumpTitle}", 0, false, false);
 
             if (Book == null || Book.Deleted || Book.SkillInfo == null)
                 return;
@@ -81,7 +81,7 @@ namespace Server.Gumps
 
         public virtual void BuildSkillsPage()
         {
-            AddHtmlLocalized(0, 15, 175, 20, CenterLoc, string.Format("#{0}", BaseSpecialScrollBook.GetCategoryLocalization(Category)), 0, false, false); // Power Scrolls
+            AddHtmlLocalized(0, 15, 175, 20, CenterLoc, $"#{BaseSpecialScrollBook.GetCategoryLocalization(Category)}", 0, false, false); // Power Scrolls
 
             if (Category == SkillCat.None || Book == null || Book.Deleted || Book.SkillInfo == null)
                 return;
@@ -117,7 +117,7 @@ namespace Server.Gumps
 
         public virtual void BuildSkillPage()
         {
-            AddHtmlLocalized(0, 15, 175, 20, CenterLoc, string.Format("#{0}", SkillInfo.Table[Skill].Localization), 0, false, false);
+            AddHtmlLocalized(0, 15, 175, 20, CenterLoc, $"#{SkillInfo.Table[Skill].Localization}", 0, false, false);
 
             if (Skill == -1 || Book == null || Book.Deleted || Book.ValueInfo == null)
                 return;
diff --git a/Scripts/Items/Consumables/AnniversaryPromotionalToken.cs b/Scripts/Items/Consumables/AnniversaryPromotionalToken.cs
index bb5e9aac2..c9e234356 100644
--- a/Scripts/Items/Consumables/AnniversaryPromotionalToken.cs
+++ b/Scripts/Items/Consumables/AnniversaryPromotionalToken.cs
@@ -66,7 +66,7 @@ namespace Server.Items
                     break;
             }
 
-            list.Add(1070998, string.Format("#{0}", cliloc)); // Use this to redeem<br>your ~1_PROMO~
+            list.Add(1070998, $"#{cliloc}"); // Use this to redeem<br>your ~1_PROMO~
         }
 
         public override void OnDoubleClick(Mobile from)
diff --git a/Scripts/Items/Consumables/BaseRewardTitleDeed.cs b/Scripts/Items/Consumables/BaseRewardTitleDeed.cs
index 3a092bc68..3a26c29a0 100644
--- a/Scripts/Items/Consumables/BaseRewardTitleDeed.cs
+++ b/Scripts/Items/Consumables/BaseRewardTitleDeed.cs
@@ -18,9 +18,7 @@ namespace Server.Items
             {
                 if (Title != null && (Title.String != null || Title.Number > 0))
                 {
-                    PlayerMobile pm = from as PlayerMobile;
-
-                    if (pm != null)
+                    if (from is PlayerMobile pm)
                     {
                         if ((Title.Number > 0 && pm.AddRewardTitle(Title.Number)) ||
                              Title.String != null && pm.AddRewardTitle(Title.String))
diff --git a/Scripts/Items/Consumables/BaseRewardTitleScroll.cs b/Scripts/Items/Consumables/BaseRewardTitleScroll.cs
index eb5b09d93..9cf93040a 100644
--- a/Scripts/Items/Consumables/BaseRewardTitleScroll.cs
+++ b/Scripts/Items/Consumables/BaseRewardTitleScroll.cs
@@ -56,7 +56,7 @@ namespace Server.Items
                         if (textdef.Number > 0)
                             AddHtmlLocalized(50, 65 + (i * 20), 240, 20, textdef.Number, 0xFFFF, false, false);
                         else if (!string.IsNullOrEmpty(textdef.String))
-                            AddHtml(50, 65 + (i * 20), 240, 20, string.Format("<basefond color=#FFFFFF>{0}", textdef.String), false, false);
+                            AddHtml(50, 65 + (i * 20), 240, 20, $"<basefond color=#FFFFFF>{textdef.String}", false, false);
 
                         i++;
                     });
diff --git a/Scripts/Items/Consumables/BaseWaterContainer.cs b/Scripts/Items/Consumables/BaseWaterContainer.cs
index 6f0de3590..30948f437 100644
--- a/Scripts/Items/Consumables/BaseWaterContainer.cs
+++ b/Scripts/Items/Consumables/BaseWaterContainer.cs
@@ -43,7 +43,7 @@ namespace Server.Items
                     {
                         IEntity rootParent = RootParentEntity;
 
-                        if (rootParent != null && rootParent.Map != null && rootParent.Map != Map.Internal)
+                        if (rootParent?.Map != null && rootParent.Map != Map.Internal)
                             MoveToWorld(rootParent.Location, rootParent.Map);
                     }
 
diff --git a/Scripts/Items/Consumables/Beverage.cs b/Scripts/Items/Consumables/Beverage.cs
index cf32fd56c..df0de17bb 100644
--- a/Scripts/Items/Consumables/Beverage.cs
+++ b/Scripts/Items/Consumables/Beverage.cs
@@ -901,7 +901,7 @@ namespace Server.Items
         {
             if (_Resource > CraftResource.Iron)
             {
-                list.Add(1053099, "#{0}\t{1}", CraftResources.GetLocalizationNumber(_Resource), string.Format("#{0}", LabelNumber.ToString())); // ~1_oretype~ ~2_armortype~
+                list.Add(1053099, "#{0}\t{1}", CraftResources.GetLocalizationNumber(_Resource), $"#{LabelNumber.ToString()}"); // ~1_oretype~ ~2_armortype~
             }
             else
             {
@@ -984,10 +984,8 @@ namespace Server.Items
             if (!IsEmpty || !Fillable || !ValidateUse(from, false))
                 return;
 
-            if (targ is BaseBeverage)
+            if (targ is BaseBeverage bev)
             {
-                BaseBeverage bev = (BaseBeverage)targ;
-
                 if (bev.IsEmpty || !bev.ValidateUse(from, true))
                     return;
 
@@ -1025,9 +1023,8 @@ namespace Server.Items
                     }
                 }
             }
-            else if (targ is Item)
+            else if (targ is Item item)
             {
-                Item item = (Item)targ;
                 IWaterSource src;
 
                 src = (item as IWaterSource);
@@ -1076,10 +1073,8 @@ namespace Server.Items
                     from.SendLocalizedMessage(1010089); // You fill the container with water.
                 }
             }
-            else if (targ is Cow)
+            else if (targ is Cow cow)
             {
-                Cow cow = (Cow)targ;
-
                 if (cow.TryMilk(from))
                 {
                     Content = BeverageType.Milk;
@@ -1087,9 +1082,9 @@ namespace Server.Items
                     from.SendLocalizedMessage(1080197); // You fill the container with milk.
                 }
             }
-            else if (targ is LandTarget)
+            else if (targ is LandTarget landTarget)
             {
-                int tileID = ((LandTarget)targ).TileID;
+                int tileID = landTarget.TileID;
 
                 PlayerMobile player = from as PlayerMobile;
 
@@ -1241,10 +1236,8 @@ namespace Server.Items
             if (IsEmpty || !Pourable || !ValidateUse(from, false))
                 return;
 
-            if (targ is BaseBeverage)
+            if (targ is BaseBeverage bev)
             {
-                BaseBeverage bev = (BaseBeverage)targ;
-
                 if (!bev.ValidateUse(from, true))
                     return;
 
@@ -1276,10 +1269,8 @@ namespace Server.Items
                     from.PlaySound(0x4E);
                 }
             }
-            else if (targ is WaterContainerComponent)
+            else if (targ is WaterContainerComponent component)
             {
-                WaterContainerComponent component = (WaterContainerComponent)targ;
-
                 if (component.IsFull)
                 {
                     from.SendLocalizedMessage(500848); // Couldn't pour it there.  It was already full.
@@ -1357,13 +1348,13 @@ namespace Server.Items
                     }
                 }
             }
-            else if (targ is PlantItem)
+            else if (targ is PlantItem plantItem)
             {
-                ((PlantItem)targ).Pour(from, this);
+                plantItem.Pour(from, this);
             }
-            else if (targ is ChickenLizardEgg)
+            else if (targ is ChickenLizardEgg chickenLizardEgg)
             {
-                ((ChickenLizardEgg)targ).Pour(from, this);
+                chickenLizardEgg.Pour(from, this);
             }
             else if (targ is AddonComponent &&
                      (((AddonComponent)targ).Addon is WaterVatEast || ((AddonComponent)targ).Addon is WaterVatSouth) &&
@@ -1403,22 +1394,22 @@ namespace Server.Items
                     }
                 }
             }
-            else if (targ is WaterElemental)
+            else if (targ is WaterElemental waterElemental)
             {
                 if (this is Pitcher && Content == BeverageType.Water)
                 {
-                    EndlessDecanter.HandleThrow(this, (WaterElemental)targ, from);
+                    EndlessDecanter.HandleThrow(this, waterElemental, from);
                 }
             }
             else if (this is Pitcher && Content == BeverageType.Water)
             {
-                if (targ is FillableBarrel)
+                if (targ is FillableBarrel fillableBarrel)
                 {
-                    ((FillableBarrel)targ).Pour(from, this);
+                    fillableBarrel.Pour(from, this);
                 }
-                else if (targ is Barrel)
+                else if (targ is Barrel barrel)
                 {
-                    ((Barrel)targ).Pour(from, this);
+                    barrel.Pour(from, this);
                 }
             }
             else
@@ -1526,7 +1517,7 @@ namespace Server.Items
 
         protected bool CheckType(string name)
         {
-            return (World.LoadingType == string.Format("Server.Items.{0}", name));
+            return (World.LoadingType == $"Server.Items.{name}");
         }
 
         public override void Deserialize(GenericReader reader)
diff --git a/Scripts/Items/Consumables/Bola.cs b/Scripts/Items/Consumables/Bola.cs
index 5aaac130c..5abc28bde 100644
--- a/Scripts/Items/Consumables/Bola.cs
+++ b/Scripts/Items/Consumables/Bola.cs
@@ -192,10 +192,8 @@ namespace Server.Items
                     return;
                 }
 
-                if (obj is Mobile)
+                if (obj is Mobile to)
                 {
-                    Mobile to = (Mobile)obj;
-
                     if (!m_Bola.IsChildOf(from.Backpack))
                     {
                         m_Bola.PrivateOverheadMessage(MessageType.Regular, 946, 1040019, from.NetState); // The bola must be in your pack to use it.
diff --git a/Scripts/Items/Consumables/ClothingBlessDeed.cs b/Scripts/Items/Consumables/ClothingBlessDeed.cs
index e10dfee26..cf188a1f2 100644
--- a/Scripts/Items/Consumables/ClothingBlessDeed.cs
+++ b/Scripts/Items/Consumables/ClothingBlessDeed.cs
@@ -16,13 +16,10 @@ namespace Server.Items
             if (m_Deed.Deleted || m_Deed.RootParent != from)
                 return;
 
-            if (target is BaseClothing)
+            if (target is BaseClothing item)
             {
-                BaseClothing item = (BaseClothing)target;
-
-                if (item is IArcaneEquip)
+                if (item is IArcaneEquip eq)
                 {
-                    IArcaneEquip eq = (IArcaneEquip)item;
                     if (eq.IsArcane)
                     {
                         from.SendLocalizedMessage(1005019); // This bless deed is for Clothes only.
diff --git a/Scripts/Items/Consumables/CommodityDeed.cs b/Scripts/Items/Consumables/CommodityDeed.cs
index 3ce7965c4..cdc6fd5cb 100644
--- a/Scripts/Items/Consumables/CommodityDeed.cs
+++ b/Scripts/Items/Consumables/CommodityDeed.cs
@@ -135,20 +135,20 @@ namespace Server.Items
             {
             	if (c.Description.Number > 0)
 	            {
-	                list.Add(1115599, string.Format("{0}\t#{1}", Commodity.Amount, c.Description.Number));
+	                list.Add(1115599, $"{Commodity.Amount}\t#{c.Description.Number}");
 	            }
 	            else if (c.Description.String != null)
 	            {
-	                list.Add(1115599, string.Format("{0}\t{1}", Commodity.Amount, c.Description.String));
+	                list.Add(1115599, $"{Commodity.Amount}\t{c.Description.String}");
 	            }
 	            else
 	            {
-	                list.Add(1115599, string.Format("{0}\t#{1}", Commodity.Amount, Commodity.LabelNumber));
+	                list.Add(1115599, $"{Commodity.Amount}\t#{Commodity.LabelNumber}");
 	            }
             }
             else
             {
-                list.Add(1115599, string.Format("{0}\t#{1}", Commodity.Amount, Commodity.LabelNumber));
+                list.Add(1115599, $"{Commodity.Amount}\t#{Commodity.LabelNumber}");
             }
         }
 
@@ -309,11 +309,11 @@ namespace Server.Items
                 {
                     number = 1047028; // The commodity deed has already been filled.
                 }
-                else if (targeted is Item)
+                else if (targeted is Item item)
                 {
                     BankBox box = from.FindBankNoCreate();
                     CommodityDeedBox cox = CommodityDeedBox.Find(m_Deed);
-                    GalleonHold hold = ((Item)targeted).RootParent as GalleonHold;
+                    GalleonHold hold = item.RootParent as GalleonHold;
 
                     // Veteran Rewards mods
                     if (box != null && m_Deed.IsChildOf(box) && ((Item)targeted).IsChildOf(box) ||
diff --git a/Scripts/Items/Consumables/CommunicationCrystals.cs b/Scripts/Items/Consumables/CommunicationCrystals.cs
index f50ce5a7a..9362aba66 100644
--- a/Scripts/Items/Consumables/CommunicationCrystals.cs
+++ b/Scripts/Items/Consumables/CommunicationCrystals.cs
@@ -242,9 +242,7 @@ namespace Server.Items
                 }
                 else
                 {
-                    Item targItem = targeted as Item;
-
-                    if (targItem != null && targItem.VerifyMove(from))
+                    if (targeted is Item targItem && targItem.VerifyMove(from))
                     {
                         CrystalRechargeInfo info = CrystalRechargeInfo.Get(targItem.GetType());
 
@@ -346,7 +344,7 @@ namespace Server.Items
             if (!Active)
                 return;
 
-            string text = string.Format("{0} says {1}", from.Name, message);
+            string text = $"{from.Name} says {message}";
 
             if (RootParent is Mobile)
             {
@@ -438,9 +436,7 @@ namespace Server.Items
                 }
                 else
                 {
-                    Item targItem = targeted as Item;
-
-                    if (targItem != null && targItem.VerifyMove(from))
+                    if (targeted is Item targItem && targItem.VerifyMove(from))
                     {
                         CrystalRechargeInfo info = CrystalRechargeInfo.Get(targItem.GetType());
 
diff --git a/Scripts/Items/Consumables/Cooking.cs b/Scripts/Items/Consumables/Cooking.cs
index d14adea99..9a4478999 100644
--- a/Scripts/Items/Consumables/Cooking.cs
+++ b/Scripts/Items/Consumables/Cooking.cs
@@ -115,44 +115,44 @@ namespace Server.Items
                 if (m_Item.Deleted)
                     return;
 
-                if (targeted is Eggs)
+                if (targeted is Eggs eggs)
                 {
                     m_Item.Delete();
 
-                    ((Eggs)targeted).Consume();
+                    eggs.Consume();
 
                     from.AddToBackpack(new UnbakedQuiche());
                     from.AddToBackpack(new Eggshells());
                 }
-                else if (targeted is CheeseWheel)
+                else if (targeted is CheeseWheel cheeseWheel)
                 {
                     m_Item.Delete();
 
-                    ((CheeseWheel)targeted).Consume();
+                    cheeseWheel.Consume();
 
                     from.AddToBackpack(new CheesePizza());
                 }
-                else if (targeted is Sausage)
+                else if (targeted is Sausage sausage)
                 {
                     m_Item.Delete();
 
-                    ((Sausage)targeted).Consume();
+                    sausage.Consume();
 
                     from.AddToBackpack(new SausagePizza());
                 }
-                else if (targeted is Apple)
+                else if (targeted is Apple apple)
                 {
                     m_Item.Delete();
 
-                    ((Apple)targeted).Consume();
+                    apple.Consume();
 
                     from.AddToBackpack(new UnbakedApplePie());
                 }
-                else if (targeted is Peach)
+                else if (targeted is Peach peach)
                 {
                     m_Item.Delete();
 
-                    ((Peach)targeted).Consume();
+                    peach.Consume();
 
                     from.AddToBackpack(new UnbakedPeachCobbler());
                 }
@@ -239,18 +239,18 @@ namespace Server.Items
                 if (m_Item.Deleted)
                     return;
 
-                if (targeted is BowlFlour)
+                if (targeted is BowlFlour bowlFlour)
                 {
                     m_Item.Delete();
-                    ((BowlFlour)targeted).Delete();
+                    bowlFlour.Delete();
 
                     from.AddToBackpack(new CakeMix());
                 }
-                else if (targeted is Campfire)
+                else if (targeted is Campfire campfire)
                 {
                     from.PlaySound(0x225);
                     m_Item.Delete();
-                    InternalTimer t = new InternalTimer(from, (Campfire)targeted);
+                    InternalTimer t = new InternalTimer(from, campfire);
                     t.Start();
                 }
             }
@@ -343,18 +343,18 @@ namespace Server.Items
                 if (m_Item.Deleted)
                     return;
 
-                if (targeted is Dough)
+                if (targeted is Dough dough)
                 {
                     m_Item.Delete();
-                    ((Dough)targeted).Consume();
+                    dough.Consume();
 
                     from.AddToBackpack(new SweetDough());
                 }
 
-                if (targeted is BowlFlour)
+                if (targeted is BowlFlour bowlFlour)
                 {
                     m_Item.Consume();
-                    ((BowlFlour)targeted).Delete();
+                    bowlFlour.Delete();
 
                     from.AddToBackpack(new CookieMix());
                 }
@@ -458,9 +458,9 @@ namespace Server.Items
                 Location = Location
             };
 
-            if (Parent is Container)
+            if (Parent is Container container)
             {
-                ((Container)Parent).DropItem(flour);
+                container.DropItem(flour);
             }
             else
             {
@@ -616,9 +616,7 @@ namespace Server.Items
             if (obj is AddonComponent)
                 obj = (obj as AddonComponent).Addon;
 
-            IFlourMill mill = obj as IFlourMill;
-
-            if (mill != null)
+            if (obj is IFlourMill mill)
             {
                 int needs = mill.MaxFlour - mill.CurFlour;
 
diff --git a/Scripts/Items/Consumables/EndlessDecanter.cs b/Scripts/Items/Consumables/EndlessDecanter.cs
index 4d5598faf..dbb34784d 100644
--- a/Scripts/Items/Consumables/EndlessDecanter.cs
+++ b/Scripts/Items/Consumables/EndlessDecanter.cs
@@ -171,15 +171,15 @@ namespace Server.Items
                 Point3D location = new Point3D();
                 Map map = Map.Felucca;
 
-                if (targ is StaticTarget)
+                if (targ is StaticTarget staticTarget)
                 {
-                    itemID = ((StaticTarget)targ).ItemID;
+                    itemID = staticTarget.ItemID;
                     location = ((StaticTarget)targ).Location;
                     map = from.Map;
                 }
-                else if (targ is Item)
+                else if (targ is Item item)
                 {
-                    itemID = ((Item)targ).ItemID;
+                    itemID = item.ItemID;
                     location = ((Item)targ).Location;
                     map = ((Item)targ).Map;
                 }
diff --git a/Scripts/Items/Consumables/EngravingTools.cs b/Scripts/Items/Consumables/EngravingTools.cs
index 676611378..c36ef6c1b 100644
--- a/Scripts/Items/Consumables/EngravingTools.cs
+++ b/Scripts/Items/Consumables/EngravingTools.cs
@@ -108,9 +108,8 @@ namespace Server.Items
         {
             if (from.Backpack != null)
             {
-                BaseEngravingTool tool = from.Backpack.FindItemByType(typeof(BaseEngravingTool)) as BaseEngravingTool;
 
-                if (tool != null && !tool.DeletedItem && tool.UsesRemaining <= 0)
+                if (from.Backpack.FindItemByType(typeof(BaseEngravingTool)) is BaseEngravingTool tool && !tool.DeletedItem && tool.UsesRemaining <= 0)
                     return tool;
                 else
                     return null;
@@ -318,10 +317,8 @@ namespace Server.Items
                 if (m_Tool == null || m_Tool.Deleted)
                     return;
 
-                if (targeted is IEntity)
+                if (targeted is IEntity entity)
                 {
-                    IEntity entity = (IEntity)targeted;
-
                     if (m_Tool.IsValid(entity, from))
                     {
                         if (entity is IEngravable && m_Tool.CheckType(entity))
diff --git a/Scripts/Items/Consumables/FearEssence.cs b/Scripts/Items/Consumables/FearEssence.cs
index 2145e5446..d2a5e0bd1 100644
--- a/Scripts/Items/Consumables/FearEssence.cs
+++ b/Scripts/Items/Consumables/FearEssence.cs
@@ -38,13 +38,11 @@ namespace Server.Items
 
             if (delay > 0)
             {
-                from.SendLocalizedMessage(1072529, string.Format("{0}\t{1}", delay, delay > 1 ? "seconds." : "second.")); // You cannot use that for another ~1_NUM~ ~2_TIMEUNITS~
+                from.SendLocalizedMessage(1072529, $"{delay}\t{(delay > 1 ? "seconds." : "second.")}"); // You cannot use that for another ~1_NUM~ ~2_TIMEUNITS~
                 return;
             }
 
-            ThrowTarget targ = from.Target as ThrowTarget;
-
-            if (targ != null && targ.Potion == this)
+            if (from.Target is ThrowTarget targ && targ.Potion == this)
                 return;
 
             from.RevealingAction();
@@ -86,9 +84,7 @@ namespace Server.Items
             // Check if any other players are using this potion
             for (int i = 0; i < m_Users.Count; i++)
             {
-                ThrowTarget targ = m_Users[i].Target as ThrowTarget;
-
-                if (targ != null && targ.Potion == this)
+                if (m_Users[i].Target is ThrowTarget targ && targ.Potion == this)
                     Target.Cancel(from);
             }
 
@@ -144,9 +140,7 @@ namespace Server.Items
 
         public static void AddDelay(Mobile m)
         {
-            Timer timer = m_Delay[m] as Timer;
-
-            if (timer != null)
+            if (m_Delay[m] is Timer timer)
                 timer.Stop();
 
             m_Delay[m] = Timer.DelayCall(TimeSpan.FromSeconds(60), new TimerStateCallback(EndDelay_Callback), m);
@@ -154,9 +148,7 @@ namespace Server.Items
 
         public static int GetDelay(Mobile m)
         {
-            Timer timer = m_Delay[m] as Timer;
-
-            if (timer != null && timer.Next > DateTime.UtcNow)
+            if (m_Delay[m] is Timer timer && timer.Next > DateTime.UtcNow)
                 return (int)(timer.Next - DateTime.UtcNow).TotalSeconds;
 
             return 0;
@@ -164,15 +156,13 @@ namespace Server.Items
 
         private static void EndDelay_Callback(object obj)
         {
-            if (obj is Mobile)
-                EndDelay((Mobile)obj);
+            if (obj is Mobile mobile)
+                EndDelay(mobile);
         }
 
         public static void EndDelay(Mobile m)
         {
-            Timer timer = m_Delay[m] as Timer;
-
-            if (timer != null)
+            if (m_Delay[m] is Timer timer)
             {
                 timer.Stop();
                 m_Delay.Remove(m);
@@ -209,8 +199,8 @@ namespace Server.Items
 
                 IEntity to;
 
-                if (p is Mobile)
-                    to = (Mobile)p;
+                if (p is Mobile mobile)
+                    to = mobile;
                 else
                     to = new Entity(Serial.Zero, new Point3D(p), from.Map);
 
diff --git a/Scripts/Items/Consumables/Firebomb.cs b/Scripts/Items/Consumables/Firebomb.cs
index 588bef740..3df59dde5 100644
--- a/Scripts/Items/Consumables/Firebomb.cs
+++ b/Scripts/Items/Consumables/Firebomb.cs
@@ -103,8 +103,8 @@ namespace Server.Items
                             HeldBy.PublicOverheadMessage(MessageType.Regular, 957, false, m_Ticks.ToString());
                         else if (RootParent == null)
                             PublicOverheadMessage(MessageType.Regular, 957, false, m_Ticks.ToString());
-                        else if (RootParent is Mobile)
-                            ((Mobile)RootParent).PublicOverheadMessage(MessageType.Regular, 957, false, m_Ticks.ToString());
+                        else if (RootParent is Mobile mobile)
+                            mobile.PublicOverheadMessage(MessageType.Regular, 957, false, m_Ticks.ToString());
 
                         break;
                     }
@@ -117,9 +117,7 @@ namespace Server.Items
                         {
                             foreach (Mobile m in m_Users)
                             {
-                                ThrowTarget targ = m.Target as ThrowTarget;
-
-                                if (targ != null && targ.Bomb == this)
+                                if (m.Target is ThrowTarget targ && targ.Bomb == this)
                                     Target.Cancel(m);
                             }
 
@@ -127,9 +125,8 @@ namespace Server.Items
                             m_Users = null;
                         }
 
-                        if (RootParent is Mobile)
+                        if (RootParent is Mobile parent)
                         {
-                            Mobile parent = (Mobile)RootParent;
                             parent.SendLocalizedMessage(1060583); // The firebomb explodes in your hand!
                             AOS.Damage(parent, Utility.Random(3) + 4, 0, 100, 0, 0, 0);
                         }
@@ -189,8 +186,8 @@ namespace Server.Items
 
             IEntity to;
 
-            if (p is Mobile)
-                to = (Mobile)p;
+            if (p is Mobile mobile)
+                to = mobile;
             else
                 to = new Entity(Serial.Zero, new Point3D(p), Map);
 
diff --git a/Scripts/Items/Consumables/GorgonLens.cs b/Scripts/Items/Consumables/GorgonLens.cs
index 557104bf4..346db51fe 100644
--- a/Scripts/Items/Consumables/GorgonLens.cs
+++ b/Scripts/Items/Consumables/GorgonLens.cs
@@ -39,8 +39,8 @@ namespace Server.Items
 
         public override void OnAfterDuped(Item newItem)
         {
-            if (newItem is GorgonLense)
-                ((GorgonLense)newItem).LenseType = LenseType;
+            if (newItem is GorgonLense gorgonLense)
+                gorgonLense.LenseType = LenseType;
 
             base.OnAfterDuped(newItem);
         }
@@ -56,15 +56,14 @@ namespace Server.Items
 
         public void OnTarget(Mobile from, object targeted)
         {
-            if (targeted is Item)
+            if (targeted is Item item)
             {
-                if (!IsChildOf(from.Backpack) || !((Item)targeted).IsChildOf(from.Backpack))
+                if (!IsChildOf(from.Backpack) || !item.IsChildOf(from.Backpack))
                 {
                     from.SendLocalizedMessage(1054107); // This item must be in your backpack.
                 }
-                else if (targeted is BaseArmor)
+                else if (targeted is BaseArmor armor)
                 {
-                    BaseArmor armor = (BaseArmor)targeted;
                     if (armor.Layer == Layer.Neck || armor.Layer == Layer.Helm || armor is BaseShield || (Race.Gargoyle.ValidateEquipment(armor) && armor.Layer == Layer.Earrings))
                     {
                         if (armor.GorgonLenseCharges > 0 && armor.GorgonLenseType != LenseType)
@@ -80,9 +79,8 @@ namespace Server.Items
                     else
                         from.SendLocalizedMessage(1112594); //You cannot place gorgon lenses on this.
                 }
-                else if (targeted is BaseJewel)
+                else if (targeted is BaseJewel j)
                 {
-                    BaseJewel j = (BaseJewel)targeted;
                     if (j.Layer == Layer.Neck || j.Layer == Layer.Earrings)
                     {
                         if (j.GorgonLenseCharges > 0 && j.GorgonLenseType != LenseType)
@@ -98,9 +96,8 @@ namespace Server.Items
                     else
                         from.SendLocalizedMessage(1112594); //You cannot place gorgon lenses on this.
                 }
-                else if (targeted is BaseClothing)
+                else if (targeted is BaseClothing c)
                 {
-                    BaseClothing c = (BaseClothing)targeted;
                     if (c.Layer == Layer.Neck || c.Layer == Layer.Helm)
                     {
                         if (c.GorgonLenseCharges > 0 && c.GorgonLenseType != LenseType)
@@ -159,12 +156,12 @@ namespace Server.Items
             int charges = 0;
             m.Items.ForEach(i =>
             {
-                if (i is BaseArmor)
-                    charges += ((BaseArmor)i).GorgonLenseCharges;
-                else if (i is BaseJewel)
-                    charges += ((BaseJewel)i).GorgonLenseCharges;
-                else if (i is BaseClothing)
-                    charges += ((BaseClothing)i).GorgonLenseCharges;
+                if (i is BaseArmor baseArmor)
+                    charges += baseArmor.GorgonLenseCharges;
+                else if (i is BaseJewel baseJewel)
+                    charges += baseJewel.GorgonLenseCharges;
+                else if (i is BaseClothing baseClothing)
+                    charges += baseClothing.GorgonLenseCharges;
             });
 
             return charges;
@@ -219,23 +216,23 @@ namespace Server.Items
             }
             else if (m_Item is BaseShield || m_Item.Layer == Layer.Neck || m_Item.Layer == Layer.Earrings || m_Item.Layer == Layer.Helm)
             {
-                if (m_Item is BaseArmor)
+                if (m_Item is BaseArmor baseArmor)
                 {
-                    ((BaseArmor)m_Item).GorgonLenseCharges = m_Lense.Amount;
+                    baseArmor.GorgonLenseCharges = m_Lense.Amount;
                     ((BaseArmor)m_Item).GorgonLenseType = m_Lense.LenseType;
                     from.SendLocalizedMessage(1112595); //You enhance the item with Gorgon Lenses!
                     m_Lense.Delete();
                 }
-                else if (m_Item is BaseJewel)
+                else if (m_Item is BaseJewel baseJewel)
                 {
-                    ((BaseJewel)m_Item).GorgonLenseCharges = m_Lense.Amount;
+                    baseJewel.GorgonLenseCharges = m_Lense.Amount;
                     ((BaseJewel)m_Item).GorgonLenseType = m_Lense.LenseType;
                     from.SendLocalizedMessage(1112595); //You enhance the item with Gorgon Lenses!
                     m_Lense.Delete();
                 }
-                else if (m_Item is BaseClothing)
+                else if (m_Item is BaseClothing baseClothing)
                 {
-                    ((BaseClothing)m_Item).GorgonLenseCharges = m_Lense.Amount;
+                    baseClothing.GorgonLenseCharges = m_Lense.Amount;
                     ((BaseClothing)m_Item).GorgonLenseType = m_Lense.LenseType;
                     from.SendLocalizedMessage(1112595); //You enhance the item with Gorgon Lenses!
                     m_Lense.Delete();
diff --git a/Scripts/Items/Consumables/HairRestylingDeed.cs b/Scripts/Items/Consumables/HairRestylingDeed.cs
index 55c785491..e15d8dbfc 100644
--- a/Scripts/Items/Consumables/HairRestylingDeed.cs
+++ b/Scripts/Items/Consumables/HairRestylingDeed.cs
@@ -138,10 +138,8 @@ namespace Server.Items
 
                 int[][] RacialData = (m_From.Race == Race.Human) ? HumanArray : ElvenArray;
 
-                if (m_From is PlayerMobile)
+                if (m_From is PlayerMobile pm)
                 {
-                    PlayerMobile pm = (PlayerMobile)m_From;
-
                     pm.SetHairMods(-1, -1); // clear any hairmods (disguise kit, incognito)
                     m_From.HairItemID = (m_From.Female) ? RacialData[info.ButtonID][2] : RacialData[info.ButtonID][3];
                     m_Deed.Delete();
diff --git a/Scripts/Items/Consumables/HeritageToken.cs b/Scripts/Items/Consumables/HeritageToken.cs
index e8b63f5d5..10e810158 100644
--- a/Scripts/Items/Consumables/HeritageToken.cs
+++ b/Scripts/Items/Consumables/HeritageToken.cs
@@ -33,7 +33,7 @@ namespace Server.Items
         {
             base.GetProperties(list);
 
-            list.Add(1070998, string.Format("#{0}", 1076595));  // Use this to redeem<br>Your Heritage Items
+            list.Add(1070998, $"#{1076595}");  // Use this to redeem<br>Your Heritage Items
         }
 
         public override void Serialize(GenericWriter writer)
diff --git a/Scripts/Items/Consumables/HitchingRope.cs b/Scripts/Items/Consumables/HitchingRope.cs
index bc2ff71f3..b02014c5f 100644
--- a/Scripts/Items/Consumables/HitchingRope.cs
+++ b/Scripts/Items/Consumables/HitchingRope.cs
@@ -65,10 +65,8 @@ namespace Server.Items
                 {
                     from.LocalOverheadMessage(MessageType.Regular, 0x3B2, 1019045); // I can't reach that.
                 }
-                else if (targeted is HitchingPost)
+                else if (targeted is HitchingPost postItem)
                 {
-                    HitchingPost postItem = (HitchingPost)targeted;
-
                     if (postItem.UsesRemaining >= 1)
                     {
                         from.SendMessage("Hitching Rope cannot be applied at this time.", 0x59);
diff --git a/Scripts/Items/Consumables/HolidayTreeDeed.cs b/Scripts/Items/Consumables/HolidayTreeDeed.cs
index 0f83da171..fb3d073da 100644
--- a/Scripts/Items/Consumables/HolidayTreeDeed.cs
+++ b/Scripts/Items/Consumables/HolidayTreeDeed.cs
@@ -92,8 +92,8 @@ namespace Server.Items
 
             Point3D loc = new Point3D(p);
 
-            if (p is StaticTarget)
-                loc.Z -= TileData.ItemTable[((StaticTarget)p).ItemID].CalcHeight;	/* NOTE: OSI does not properly normalize Z positioning here.
+            if (p is StaticTarget staticTarget)
+                loc.Z -= TileData.ItemTable[staticTarget.ItemID].CalcHeight;	/* NOTE: OSI does not properly normalize Z positioning here.
             * A side affect is that you can only place on floors (due to the CanFit call).
             * That functionality may be desired. And so, it's included in this script.
             */
diff --git a/Scripts/Items/Consumables/ItemBlessDeed.cs b/Scripts/Items/Consumables/ItemBlessDeed.cs
index 3c0562657..026c4623b 100644
--- a/Scripts/Items/Consumables/ItemBlessDeed.cs
+++ b/Scripts/Items/Consumables/ItemBlessDeed.cs
@@ -16,10 +16,8 @@ namespace Server.Items
             if (m_Deed.Deleted || m_Deed.RootParent != from)
                 return;
 
-            if (target is Item)
+            if (target is Item item)
             {
-                Item item = (Item)target;
-
                 if (item.RootParent != from) // Make sure its in their pack or they are wearing it
                     from.SendLocalizedMessage(500508); // You may only bless objects that you are carrying.
                 else if (item.Stackable == true)
diff --git a/Scripts/Items/Consumables/LockPick.cs b/Scripts/Items/Consumables/LockPick.cs
index 2a5f631cb..aff15063e 100644
--- a/Scripts/Items/Consumables/LockPick.cs
+++ b/Scripts/Items/Consumables/LockPick.cs
@@ -153,10 +153,8 @@ namespace Server.Items
                 BrokeLockPickTest(from);
                 item.SendLocalizedMessageTo(from, 502075); // You are unable to pick the lock.
 
-                if (item is TreasureMapChest)
+                if (item is TreasureMapChest chest)
                 {
-                    TreasureMapChest chest = (TreasureMapChest)item;
-
                     if (TreasureMapInfo.NewSystem)
                     {
                         if (!chest.FailedLockpick)
@@ -194,9 +192,9 @@ namespace Server.Items
                 if (m_Item.Deleted)
                     return;
 
-                if (targeted is ILockpickable)
+                if (targeted is ILockpickable iLockpickable)
                 {
-                    m_Item.BeginLockpick(from, (ILockpickable)targeted);
+                    m_Item.BeginLockpick(from, iLockpickable);
                 }
                 else
                 {
diff --git a/Scripts/Items/Consumables/NameChangeDeed.cs b/Scripts/Items/Consumables/NameChangeDeed.cs
index d89a38e4c..dcc046240 100644
--- a/Scripts/Items/Consumables/NameChangeDeed.cs
+++ b/Scripts/Items/Consumables/NameChangeDeed.cs
@@ -62,12 +62,12 @@ namespace Server.Items
 
         public string Center(string text)
         {
-            return string.Format("<CENTER>{0}</CENTER>", text);
+            return $"<CENTER>{text}</CENTER>";
         }
 
         public string Color(string text, int color)
         {
-            return string.Format("<BASEFONT COLOR=#{0:X6}>{1}</BASEFONT>", color, text);
+            return $"<BASEFONT COLOR=#{color:X6}>{text}</BASEFONT>";
         }
 
         public void AddButtonLabeled(int x, int y, int buttonID, string text)
@@ -117,7 +117,7 @@ namespace Server.Items
             {
                 m.RawName = newName;
                 m.SendMessage("Your name has been changed!");
-                m.SendMessage(string.Format("You are now known as {0}", newName));
+                m.SendMessage($"You are now known as {newName}");
                 m_Sender.Delete();
             }
         }
diff --git a/Scripts/Items/Consumables/OilCloth.cs b/Scripts/Items/Consumables/OilCloth.cs
index 78e0e8796..15888d746 100644
--- a/Scripts/Items/Consumables/OilCloth.cs
+++ b/Scripts/Items/Consumables/OilCloth.cs
@@ -61,10 +61,8 @@ namespace Server.Items
             {
                 from.SendLocalizedMessage(1005425); // You may only wipe down items you are holding or carrying.
             }
-            else if (obj is BaseWeapon)
+            else if (obj is BaseWeapon weapon)
             {
-                BaseWeapon weapon = (BaseWeapon)obj;
-
                 if (weapon.Poison == null || weapon.PoisonCharges <= 0)
                 {
                     from.LocalOverheadMessage(Network.MessageType.Regular, 0x3B2, 1005422); // Hmmmm... this does not need to be cleaned.
@@ -103,10 +101,8 @@ namespace Server.Items
                 }
             }
             #region Firebomb
-            else if (obj is BaseBeverage)
+            else if (obj is BaseBeverage beverage)
             {
-                BaseBeverage beverage = (BaseBeverage)obj;
-
                 if (beverage.Content == BeverageType.Liquor)
                 {
                     Firebomb bomb = new Firebomb(beverage.ItemID)
diff --git a/Scripts/Items/Consumables/PersonalAttendantToken.cs b/Scripts/Items/Consumables/PersonalAttendantToken.cs
index 20da23608..a2b5f375d 100644
--- a/Scripts/Items/Consumables/PersonalAttendantToken.cs
+++ b/Scripts/Items/Consumables/PersonalAttendantToken.cs
@@ -34,7 +34,7 @@ namespace Server.Items
         {
             base.GetProperties(list);
 
-            list.Add(1070998, string.Format("#{0}", 1075997));  // Use this to redeem<br>Personal Attendant
+            list.Add(1070998, $"#{1075997}");  // Use this to redeem<br>Personal Attendant
         }
 
         public override void Serialize(GenericWriter writer)
diff --git a/Scripts/Items/Consumables/PoppiesDust.cs b/Scripts/Items/Consumables/PoppiesDust.cs
index 0d2d9bf78..4653b4e17 100644
--- a/Scripts/Items/Consumables/PoppiesDust.cs
+++ b/Scripts/Items/Consumables/PoppiesDust.cs
@@ -113,10 +113,8 @@ namespace Server.Items
 
                     from.SendLocalizedMessage(1158448); // You combine the charges on the items.
                 }
-                else if (targeted is Seed)
+                else if (targeted is Seed m_Seed)
                 {
-                    Seed m_Seed = (Seed)targeted;
-
                     if (m_Seed.ShowType)
                     {
                         from.SendLocalizedMessage(1114369, "", 946); // This seed has already been identified.
diff --git a/Scripts/Items/Consumables/Potions/BaseConflagrationPotion.cs b/Scripts/Items/Consumables/Potions/BaseConflagrationPotion.cs
index 8ed145891..d11d76ec8 100644
--- a/Scripts/Items/Consumables/Potions/BaseConflagrationPotion.cs
+++ b/Scripts/Items/Consumables/Potions/BaseConflagrationPotion.cs
@@ -36,13 +36,11 @@ namespace Server.Items
 
             if (delay > 0)
             {
-                from.SendLocalizedMessage(1072529, string.Format("{0}\t{1}", delay, delay > 1 ? "seconds." : "second.")); // You cannot use that for another ~1_NUM~ ~2_TIMEUNITS~
+                from.SendLocalizedMessage(1072529, $"{delay}\t{(delay > 1 ? "seconds." : "second.")}"); // You cannot use that for another ~1_NUM~ ~2_TIMEUNITS~
                 return;
             }
 
-            ThrowTarget targ = from.Target as ThrowTarget;
-
-            if (targ != null && targ.Potion == this)
+            if (from.Target is ThrowTarget targ && targ.Potion == this)
                 return;
 
             from.RevealingAction();
@@ -86,9 +84,7 @@ namespace Server.Items
             // Check if any other players are using this potion
             for (int i = 0; i < m_Users.Count; i++)
             {
-                ThrowTarget targ = m_Users[i].Target as ThrowTarget;
-
-                if (targ != null && targ.Potion == this)
+                if (m_Users[i].Target is ThrowTarget targ && targ.Potion == this)
                     Target.Cancel(from);
             }
 
@@ -113,9 +109,7 @@ namespace Server.Items
 
         public static void AddDelay(Mobile m)
         {
-            Timer timer = m_Delay[m] as Timer;
-
-            if (timer != null)
+            if (m_Delay[m] is Timer timer)
                 timer.Stop();
 
             m_Delay[m] = Timer.DelayCall(TimeSpan.FromSeconds(30), new TimerStateCallback(EndDelay_Callback), m);
@@ -123,9 +117,7 @@ namespace Server.Items
 
         public static int GetDelay(Mobile m)
         {
-            Timer timer = m_Delay[m] as Timer;
-
-            if (timer != null && timer.Next > DateTime.UtcNow)
+            if (m_Delay[m] is Timer timer && timer.Next > DateTime.UtcNow)
                 return (int)(timer.Next - DateTime.UtcNow).TotalSeconds;
 
             return 0;
@@ -133,15 +125,13 @@ namespace Server.Items
 
         private static void EndDelay_Callback(object obj)
         {
-            if (obj is Mobile)
-                EndDelay((Mobile)obj);
+            if (obj is Mobile mobile)
+                EndDelay(mobile);
         }
 
         public static void EndDelay(Mobile m)
         {
-            Timer timer = m_Delay[m] as Timer;
-
-            if (timer != null)
+            if (m_Delay[m] is Timer timer)
             {
                 timer.Stop();
                 m_Delay.Remove(m);
@@ -184,8 +174,8 @@ namespace Server.Items
 
                 IEntity to;
 
-                if (p is Mobile)
-                    to = (Mobile)p;
+                if (p is Mobile mobile)
+                    to = mobile;
                 else
                     to = new Entity(Serial.Zero, new Point3D(p), from.Map);
 
diff --git a/Scripts/Items/Consumables/Potions/BaseConfusionBlastPotion.cs b/Scripts/Items/Consumables/Potions/BaseConfusionBlastPotion.cs
index d225cadf1..e87ad5ce1 100644
--- a/Scripts/Items/Consumables/Potions/BaseConfusionBlastPotion.cs
+++ b/Scripts/Items/Consumables/Potions/BaseConfusionBlastPotion.cs
@@ -37,13 +37,11 @@ namespace Server.Items
 
             if (delay > 0)
             {
-                from.SendLocalizedMessage(1072529, string.Format("{0}\t{1}", delay, delay > 1 ? "seconds." : "second.")); // You cannot use that for another ~1_NUM~ ~2_TIMEUNITS~
+                from.SendLocalizedMessage(1072529, $"{delay}\t{(delay > 1 ? "seconds." : "second.")}"); // You cannot use that for another ~1_NUM~ ~2_TIMEUNITS~
                 return;
             }
 
-            ThrowTarget targ = from.Target as ThrowTarget;
-
-            if (targ != null && targ.Potion == this)
+            if (from.Target is ThrowTarget targ && targ.Potion == this)
                 return;
 
             from.RevealingAction();
@@ -87,9 +85,7 @@ namespace Server.Items
             // Check if any other players are using this potion
             for (int i = 0; i < m_Users.Count; i++)
             {
-                ThrowTarget targ = m_Users[i].Target as ThrowTarget;
-
-                if (targ != null && targ.Potion == this)
+                if (m_Users[i].Target is ThrowTarget targ && targ.Potion == this)
                     Target.Cancel(from);
             }
 
@@ -103,10 +99,8 @@ namespace Server.Items
 
             foreach (Mobile mobile in eable)
             {
-                if (mobile is BaseCreature)
+                if (mobile is BaseCreature mon)
                 {
-                    BaseCreature mon = (BaseCreature)mobile;
-
                     if (mon.Controlled || mon.Summoned)
                         continue;
 
@@ -137,9 +131,7 @@ namespace Server.Items
 
         public static void AddDelay(Mobile m)
         {
-            Timer timer = m_Delay[m] as Timer;
-
-            if (timer != null)
+            if (m_Delay[m] is Timer timer)
                 timer.Stop();
 
             m_Delay[m] = Timer.DelayCall(TimeSpan.FromSeconds(60), new TimerStateCallback(EndDelay_Callback), m);
@@ -147,9 +139,7 @@ namespace Server.Items
 
         public static int GetDelay(Mobile m)
         {
-            Timer timer = m_Delay[m] as Timer;
-
-            if (timer != null && timer.Next > DateTime.UtcNow)
+            if (m_Delay[m] is Timer timer && timer.Next > DateTime.UtcNow)
                 return (int)(timer.Next - DateTime.UtcNow).TotalSeconds;
 
             return 0;
@@ -157,15 +147,13 @@ namespace Server.Items
 
         private static void EndDelay_Callback(object obj)
         {
-            if (obj is Mobile)
-                EndDelay((Mobile)obj);
+            if (obj is Mobile mobile)
+                EndDelay(mobile);
         }
 
         public static void EndDelay(Mobile m)
         {
-            Timer timer = m_Delay[m] as Timer;
-
-            if (timer != null)
+            if (m_Delay[m] is Timer timer)
             {
                 timer.Stop();
                 m_Delay.Remove(m);
@@ -205,8 +193,8 @@ namespace Server.Items
 
                 IEntity to;
 
-                if (p is Mobile)
-                    to = (Mobile)p;
+                if (p is Mobile mobile)
+                    to = mobile;
                 else
                     to = new Entity(Serial.Zero, new Point3D(p), from.Map);
 
diff --git a/Scripts/Items/Consumables/Potions/BaseExplosionPotion.cs b/Scripts/Items/Consumables/Potions/BaseExplosionPotion.cs
index ce986349e..71c8870fd 100644
--- a/Scripts/Items/Consumables/Potions/BaseExplosionPotion.cs
+++ b/Scripts/Items/Consumables/Potions/BaseExplosionPotion.cs
@@ -70,11 +70,9 @@ namespace Server.Items
                 from.SendLocalizedMessage(1062725); // You can not use a purple potion while paralyzed.
                 return;
             }
-
-            ThrowTarget targ = from.Target as ThrowTarget;
             Stackable = false; // Scavenged explosion potions won't stack with those ones in backpack, and still will explode.
 
-            if (targ != null && targ.Potion == this)
+            if (from.Target is ThrowTarget targ && targ.Potion == this)
             {
                 return;
             }
@@ -178,17 +176,13 @@ namespace Server.Items
                 Point3D loc;
                 Map map;
 
-                if (parent is Item)
+                if (parent is Item item)
                 {
-                    Item item = (Item)parent;
-
                     loc = item.GetWorldLocation();
                     map = item.Map;
                 }
-                else if (parent is Mobile)
+                else if (parent is Mobile m)
                 {
-                    Mobile m = (Mobile)parent;
-
                     loc = m.Location;
                     map = m.Map;
                 }
@@ -202,13 +196,13 @@ namespace Server.Items
             }
             else
             {
-                if (parent is Item)
+                if (parent is Item item)
                 {
-                    ((Item)parent).PublicOverheadMessage(MessageType.Regular, 0x22, false, timer.ToString());
+                    item.PublicOverheadMessage(MessageType.Regular, 0x22, false, timer.ToString());
                 }
-                else if (parent is Mobile)
+                else if (parent is Mobile mobile)
                 {
-                    ((Mobile)parent).PublicOverheadMessage(MessageType.Regular, 0x22, false, timer.ToString());
+                    mobile.PublicOverheadMessage(MessageType.Regular, 0x22, false, timer.ToString());
                 }
 
                 states[1] = timer - 1;
diff --git a/Scripts/Items/Consumables/Potions/BasePotion.cs b/Scripts/Items/Consumables/Potions/BasePotion.cs
index 413347313..a16f14bb1 100644
--- a/Scripts/Items/Consumables/Potions/BasePotion.cs
+++ b/Scripts/Items/Consumables/Potions/BasePotion.cs
@@ -92,10 +92,8 @@ namespace Server.Items
 
             if (handTwo is BaseWeapon)
                 handOne = handTwo;
-            if (handTwo is BaseWeapon)
+            if (handTwo is BaseWeapon wep)
             {
-                BaseWeapon wep = (BaseWeapon)handTwo;
-
                 if (wep.Attributes.BalancedWeapon > 0)
                     return true;
             }
diff --git a/Scripts/Items/Consumables/Potions/ExplodingTarPotion.cs b/Scripts/Items/Consumables/Potions/ExplodingTarPotion.cs
index 0a7e86bfe..4a4633e9f 100644
--- a/Scripts/Items/Consumables/Potions/ExplodingTarPotion.cs
+++ b/Scripts/Items/Consumables/Potions/ExplodingTarPotion.cs
@@ -40,13 +40,11 @@ namespace Server.Items
 
             if (delay > 0)
             {
-                from.SendLocalizedMessage(1072529, string.Format("{0}\t{1}", delay, delay > 1 ? "seconds." : "second.")); // You cannot use that for another ~1_NUM~ ~2_TIMEUNITS~
+                from.SendLocalizedMessage(1072529, $"{delay}\t{(delay > 1 ? "seconds." : "second.")}"); // You cannot use that for another ~1_NUM~ ~2_TIMEUNITS~
                 return;
             }
 
-            ThrowTarget targ = from.Target as ThrowTarget;
-
-            if (targ != null && targ.Potion == this)
+            if (from.Target is ThrowTarget targ && targ.Potion == this)
                 return;
 
             from.RevealingAction();
@@ -158,10 +156,7 @@ namespace Server.Items
             {
                 Timer timer = _Delay[m];
 
-                if (timer != null)
-                {
-                    timer.Stop();
-                }
+                timer?.Stop();
             }
 
             _Delay[m] = Timer.DelayCall(TimeSpan.FromSeconds(120), EndDelay_Callback, m);
@@ -235,8 +230,8 @@ namespace Server.Items
 
                 IEntity to;
 
-                if (p is Mobile)
-                    to = (Mobile)p;
+                if (p is Mobile mobile)
+                    to = mobile;
                 else
                     to = new Entity(Serial.Zero, new Point3D(p), from.Map);
 
diff --git a/Scripts/Items/Consumables/Potions/InvisibilityPotion.cs b/Scripts/Items/Consumables/Potions/InvisibilityPotion.cs
index 56e85ce4c..e52344aa1 100644
--- a/Scripts/Items/Consumables/Potions/InvisibilityPotion.cs
+++ b/Scripts/Items/Consumables/Potions/InvisibilityPotion.cs
@@ -97,14 +97,14 @@ namespace Server.Items
 
         private static void Hide_Callback(object obj)
         {
-            if (obj is Mobile)
-                Hide((Mobile)obj);
+            if (obj is Mobile mobile)
+                Hide(mobile);
         }
 
         private static void EndHide_Callback(object obj)
         {
-            if (obj is Mobile)
-                EndHide((Mobile)obj);
+            if (obj is Mobile mobile)
+                EndHide(mobile);
         }
     }
 }
\ No newline at end of file
diff --git a/Scripts/Items/Consumables/Potions/ShatterPotion.cs b/Scripts/Items/Consumables/Potions/ShatterPotion.cs
index 300b065a0..387850504 100644
--- a/Scripts/Items/Consumables/Potions/ShatterPotion.cs
+++ b/Scripts/Items/Consumables/Potions/ShatterPotion.cs
@@ -37,13 +37,11 @@ namespace Server.Items
 
             if (delay > 0)
             {
-                from.SendLocalizedMessage(1072529, string.Format("{0}\t{1}", delay, delay > 1 ? "seconds." : "second.")); // You cannot use that for another ~1_NUM~ ~2_TIMEUNITS~
+                from.SendLocalizedMessage(1072529, $"{delay}\t{(delay > 1 ? "seconds." : "second.")}"); // You cannot use that for another ~1_NUM~ ~2_TIMEUNITS~
                 return;
             }
 
-            ThrowTarget targ = from.Target as ThrowTarget;
-
-            if (targ != null && targ.Potion == this)
+            if (from.Target is ThrowTarget targ && targ.Potion == this)
                 return;
 
             from.RevealingAction();
@@ -85,9 +83,7 @@ namespace Server.Items
             // Check if any other players are using this potion
             for (int i = 0; i < m_Users.Count; i++)
             {
-                ThrowTarget targ = m_Users[i].Target as ThrowTarget;
-
-                if (targ != null && targ.Potion == this)
+                if (m_Users[i].Target is ThrowTarget targ && targ.Potion == this)
                     Target.Cancel(from);
             }
 
@@ -117,7 +113,7 @@ namespace Server.Items
 
                 if (p > 1)
                 {
-                    from.SendLocalizedMessage(1115762, string.Format("{0}\t{1}", from.Name, p)); // ~1_NAME~'s shatter potion destroys ~2_NUM~ potions in your inventory.                    
+                    from.SendLocalizedMessage(1115762, $"{from.Name}\t{p}"); // ~1_NAME~'s shatter potion destroys ~2_NUM~ potions in your inventory.                    
                 }
                 else
                 {
@@ -137,9 +133,7 @@ namespace Server.Items
 
         public static void AddDelay(Mobile m)
         {
-            Timer timer = m_Delay[m] as Timer;
-
-            if (timer != null)
+            if (m_Delay[m] is Timer timer)
                 timer.Stop();
 
             m_Delay[m] = Timer.DelayCall(TimeSpan.FromSeconds(60), new TimerStateCallback(EndDelay_Callback), m);
@@ -147,9 +141,7 @@ namespace Server.Items
 
         public static int GetDelay(Mobile m)
         {
-            Timer timer = m_Delay[m] as Timer;
-
-            if (timer != null && timer.Next > DateTime.UtcNow)
+            if (m_Delay[m] is Timer timer && timer.Next > DateTime.UtcNow)
                 return (int)(timer.Next - DateTime.UtcNow).TotalSeconds;
 
             return 0;
@@ -157,15 +149,13 @@ namespace Server.Items
 
         private static void EndDelay_Callback(object obj)
         {
-            if (obj is Mobile)
-                EndDelay((Mobile)obj);
+            if (obj is Mobile mobile)
+                EndDelay(mobile);
         }
 
         public static void EndDelay(Mobile m)
         {
-            Timer timer = m_Delay[m] as Timer;
-
-            if (timer != null)
+            if (m_Delay[m] is Timer timer)
             {
                 timer.Stop();
                 m_Delay.Remove(m);
diff --git a/Scripts/Items/Consumables/PowderOfTranslocation.cs b/Scripts/Items/Consumables/PowderOfTranslocation.cs
index cf76b3bcd..ff9640ab6 100644
--- a/Scripts/Items/Consumables/PowderOfTranslocation.cs
+++ b/Scripts/Items/Consumables/PowderOfTranslocation.cs
@@ -81,10 +81,8 @@ namespace Server.Items
                 {
                     from.LocalOverheadMessage(MessageType.Regular, 0x3B2, 1019045); // I can't reach that.
                 }
-                else if (targeted is TranslocationItem)
+                else if (targeted is TranslocationItem transItem)
                 {
-                    TranslocationItem transItem = (TranslocationItem)targeted;
-
                     if (transItem.Charges >= transItem.MaxCharges)
                     {
                         MessageHelper.SendLocalizedMessageTo(m_Powder, from, 1054137, 0x59); // This item cannot absorb any more powder of translocation.
@@ -110,10 +108,10 @@ namespace Server.Items
                             m_Powder.Delete();
                         }
 
-                        if (transItem is Item)
+                        if (transItem is Item item)
                         {
                             // The ~1_translocationItem~ glows with green energy and absorbs magical power from the powder.
-                            MessageHelper.SendLocalizedMessageTo((Item)transItem, from, 1054139, transItem.TranslocationItemName, 0x43);
+                            MessageHelper.SendLocalizedMessageTo(item, from, 1054139, transItem.TranslocationItemName, 0x43);
                         }
                     }
                 }
diff --git a/Scripts/Items/Consumables/PowerScroll.cs b/Scripts/Items/Consumables/PowerScroll.cs
index b479e8dee..87fc8f738 100644
--- a/Scripts/Items/Consumables/PowerScroll.cs
+++ b/Scripts/Items/Consumables/PowerScroll.cs
@@ -94,7 +94,7 @@ namespace Server.Items
                 return 0;
             }
         }
-        public override string DefaultTitle => string.Format("<basefont color=#FFFFFF>Power Scroll ({0} Skill):</basefont>", Value);
+        public override string DefaultTitle => $"<basefont color=#FFFFFF>Power Scroll ({Value} Skill):</basefont>";
         public static PowerScroll CreateRandom(int min, int max)
         {
             min /= 5;
diff --git a/Scripts/Items/Consumables/PromotionalToken.cs b/Scripts/Items/Consumables/PromotionalToken.cs
index d215ffcac..af1c06208 100644
--- a/Scripts/Items/Consumables/PromotionalToken.cs
+++ b/Scripts/Items/Consumables/PromotionalToken.cs
@@ -59,10 +59,10 @@ namespace Server.Items
         {
             Mobile m = null;
 
-            if (parent is Item)
-                m = ((Item)parent).RootParent as Mobile;
-            else if (parent is Mobile)
-                m = (Mobile)parent;
+            if (parent is Item item)
+                m = item.RootParent as Mobile;
+            else if (parent is Mobile mobile)
+                m = mobile;
 
             if (m != null)
                 m.CloseGump(typeof(PromotionalTokenGump));
diff --git a/Scripts/Items/Consumables/RepairDeed.cs b/Scripts/Items/Consumables/RepairDeed.cs
index 6fcfa292a..228bc5535 100644
--- a/Scripts/Items/Consumables/RepairDeed.cs
+++ b/Scripts/Items/Consumables/RepairDeed.cs
@@ -117,7 +117,7 @@ namespace Server.Items
 
         public override void AddNameProperty(ObjectPropertyList list)
         {
-            list.Add(1061133, string.Format("{0}\t{1}", GetSkillTitle(m_SkillLevel).ToString(), RepairSkillInfo.GetInfo(m_Skill).Name)); // A repair service contract from ~1_SKILL_TITLE~ ~2_SKILL_NAME~.
+            list.Add(1061133, $"{GetSkillTitle(m_SkillLevel).ToString()}\t{RepairSkillInfo.GetInfo(m_Skill).Name}"); // A repair service contract from ~1_SKILL_TITLE~ ~2_SKILL_NAME~.
         }
 
         public override void AddWeightProperty(ObjectPropertyList list)
@@ -134,7 +134,7 @@ namespace Server.Items
         {
             base.GetProperties(list);
 
-            list.Add(1071345, string.Format("{0:F1}", m_SkillLevel)); // Skill: ~1_val~
+            list.Add(1071345, $"{m_SkillLevel:F1}"); // Skill: ~1_val~
 
             TextDefinition desc = RepairSkillInfo.GetInfo(m_Skill).Description;
 
diff --git a/Scripts/Items/Consumables/RunedSwitch.cs b/Scripts/Items/Consumables/RunedSwitch.cs
index f805b1d4d..44bdf4ef1 100644
--- a/Scripts/Items/Consumables/RunedSwitch.cs
+++ b/Scripts/Items/Consumables/RunedSwitch.cs
@@ -56,10 +56,8 @@ namespace Server.Items
                 if (m_Item == null || m_Item.Deleted)
                     return;
 
-                if (o is BaseTalisman)
+                if (o is BaseTalisman talisman)
                 {
-                    BaseTalisman talisman = (BaseTalisman)o;
-
                     if (talisman.Charges == 0)
                     {
                         int toCharge = talisman is MasterCraftsmanTalisman ? Utility.RandomMinMax(1, ((MasterCraftsmanTalisman)talisman).Type) : talisman.MaxCharges;
@@ -72,13 +70,13 @@ namespace Server.Items
                 }
                 else if (o is HarvestersAxe || o is GargishHarvestersAxe)
                 {
-                    if (o is HarvestersAxe)
+                    if (o is HarvestersAxe harvestersAxe)
                     {
-                        ((HarvestersAxe)o).Charges = 1000;
+                        harvestersAxe.Charges = 1000;
                     }
-                    else if (o is GargishHarvestersAxe)
+                    else if (o is GargishHarvestersAxe gargishHarvestersAxe)
                     {
-                        ((GargishHarvestersAxe)o).Charges = 1000;
+                        gargishHarvestersAxe.Charges = 1000;
                     }
 
                     from.SendLocalizedMessage(1075100); // The item has been recharged.
diff --git a/Scripts/Items/Consumables/SOS.cs b/Scripts/Items/Consumables/SOS.cs
index ca767116a..5ed5707b4 100644
--- a/Scripts/Items/Consumables/SOS.cs
+++ b/Scripts/Items/Consumables/SOS.cs
@@ -307,7 +307,7 @@ namespace Server.Items
                 string fmt;
 
                 if (Sextant.Format(loc, map, ref xLong, ref yLat, ref xMins, ref yMins, ref xEast, ref ySouth))
-                    fmt = string.Format("{0}o {1}'{2}, {3}o {4}'{5}", yLat, yMins, ySouth ? "S" : "N", xLong, xMins, xEast ? "E" : "W");
+                    fmt = $"{yLat}o {yMins}'{(ySouth ? "S" : "N")}, {xLong}o {xMins}'{(xEast ? "E" : "W")}";
                 else
                     fmt = "?????";
 
diff --git a/Scripts/Items/Consumables/ScrollBinderDeed.cs b/Scripts/Items/Consumables/ScrollBinderDeed.cs
index 7d8bc61da..6c52de2f0 100644
--- a/Scripts/Items/Consumables/ScrollBinderDeed.cs
+++ b/Scripts/Items/Consumables/ScrollBinderDeed.cs
@@ -58,17 +58,17 @@ namespace Server.Items
                     {
                         string skillName = SkillInfo.Table[(int)Skill].Name;
 
-                        list.Add(1113149, string.Format("{0}\t{1}\t{2}\t{3}", v.ToString(), skillName, ((int)Has).ToString(), Needed.ToString())); // ~1_bonus~ ~2_type~: ~3_given~/~4_needed~
+                        list.Add(1113149, $"{v.ToString()}\t{skillName}\t{((int)Has).ToString()}\t{Needed.ToString()}"); // ~1_bonus~ ~2_type~: ~3_given~/~4_needed~
                         break;
                     }
                 case BinderType.StatScroll:
                     {
-                        list.Add(1113149, string.Format("+{0}\t#{1}\t{2}\t{3}", v - 225, 1049477, ((int)Has).ToString(), Needed.ToString())); // ~1_bonus~ ~2_type~: ~3_given~/~4_needed~
+                        list.Add(1113149, $"+{v - 225}\t#{1049477}\t{((int)Has).ToString()}\t{Needed.ToString()}"); // ~1_bonus~ ~2_type~: ~3_given~/~4_needed~
                         break;
                     }
                 case BinderType.SOT:
                     {
-                        string value = string.Format("{0:0.##}", Has);
+                        string value = $"{Has:0.##}";
                         string skillName = SkillInfo.Table[(int)Skill].Name;
                         int number;
 
@@ -77,7 +77,7 @@ namespace Server.Items
                         else
                             number = 1113620; // ~1_type~ transcendence: ~2_given~/5.0
 
-                        list.Add(number, string.Format("{0}\t{1}", skillName, value));
+                        list.Add(number, $"{skillName}\t{value}");
                         break;
                     }
             }
@@ -119,10 +119,8 @@ namespace Server.Items
             {
                 case BinderType.None:
                     {
-                        if (targeted is PowerScroll)
+                        if (targeted is PowerScroll ps)
                         {
-                            PowerScroll ps = (PowerScroll)targeted;
-
                             if (ps.Value >= 120)
                             {
                                 from.SendLocalizedMessage(1113144); // This scroll is already the highest of its type and cannot be bound.
@@ -148,10 +146,8 @@ namespace Server.Items
                             BinderType = BinderType.PowerScroll;
                             ps.Delete();
                         }
-                        else if (targeted is StatCapScroll)
+                        else if (targeted is StatCapScroll ss)
                         {
-                            StatCapScroll ss = (StatCapScroll)targeted;
-
                             if (ss.Value >= 250)
                             {
                                 from.SendLocalizedMessage(1113144); //This scroll is already the highest of its type and cannot be bound.
@@ -178,10 +174,8 @@ namespace Server.Items
                             BinderType = BinderType.StatScroll;
                             ss.Delete();
                         }
-                        else if (targeted is ScrollOfTranscendence)
+                        else if (targeted is ScrollOfTranscendence sot)
                         {
-                            ScrollOfTranscendence sot = (ScrollOfTranscendence)targeted;
-
                             if (sot.Value >= 5.0)
                             {
                                 from.SendLocalizedMessage(1113144); //This scroll is already the highest of its type and cannot be bound.
@@ -203,10 +197,8 @@ namespace Server.Items
                     }
                 case BinderType.PowerScroll:
                     {
-                        if (targeted is PowerScroll)
+                        if (targeted is PowerScroll ps)
                         {
-                            PowerScroll ps = (PowerScroll)targeted;
-
                             if (ps.Skill != Skill || ps.Value != Value)
                             {
                                 from.SendLocalizedMessage(1113143); // This scroll does not match the type currently being bound.
@@ -227,10 +219,8 @@ namespace Server.Items
                                 ps.Delete();
                             }
                         }
-                        else if (targeted is ScrollBinderDeed)
+                        else if (targeted is ScrollBinderDeed sb)
                         {
-                            ScrollBinderDeed sb = (ScrollBinderDeed)targeted;
-
                             if (sb == this)
                                 return;
 
@@ -260,10 +250,8 @@ namespace Server.Items
                     }
                 case BinderType.StatScroll:
                     {
-                        if (targeted is StatCapScroll)
+                        if (targeted is StatCapScroll ss)
                         {
-                            StatCapScroll ss = (StatCapScroll)targeted;
-
                             if (ss.Value != Value)
                             {
                                 from.SendLocalizedMessage(1113143); // This scroll does not match the type currently being bound.
@@ -284,10 +272,8 @@ namespace Server.Items
                                 ss.Delete();
                             }
                         }
-                        else if (targeted is ScrollBinderDeed)
+                        else if (targeted is ScrollBinderDeed sb)
                         {
-                            ScrollBinderDeed sb = (ScrollBinderDeed)targeted;
-
                             if (sb == this)
                                 return;
 
@@ -317,10 +303,8 @@ namespace Server.Items
                     }
                 case BinderType.SOT:
                     {
-                        if (targeted is ScrollOfTranscendence)
+                        if (targeted is ScrollOfTranscendence sot)
                         {
-                            ScrollOfTranscendence sot = (ScrollOfTranscendence)targeted;
-
                             if (sot.Skill != Skill)
                             {
                                 from.SendLocalizedMessage(1113143); // This scroll does not match the type currently being bound.
@@ -354,10 +338,8 @@ namespace Server.Items
                                 sot.Delete();
                             }
                         }
-                        else if (targeted is ScrollBinderDeed)
+                        else if (targeted is ScrollBinderDeed sb)
                         {
-                            ScrollBinderDeed sb = (ScrollBinderDeed)targeted;
-
                             if (sb == this)
                                 return;
 
diff --git a/Scripts/Items/Consumables/ScrollofTranscendence.cs b/Scripts/Items/Consumables/ScrollofTranscendence.cs
index 5d4eedc49..07e272090 100644
--- a/Scripts/Items/Consumables/ScrollofTranscendence.cs
+++ b/Scripts/Items/Consumables/ScrollofTranscendence.cs
@@ -13,7 +13,7 @@ namespace Server.Items
         *level in that skill by the amount of points displayed on the scroll.
         *As you may not gain skills beyond your maximum skill cap, any excess points will be lost.*/
 
-        public override string DefaultTitle => string.Format("<basefont color=#FFFFFF>Scroll of Transcendence ({0} Skill):</basefont>", Value);
+        public override string DefaultTitle => $"<basefont color=#FFFFFF>Scroll of Transcendence ({Value} Skill):</basefont>";
 
         public static ScrollOfTranscendence CreateRandom(int min, int max)
         {
diff --git a/Scripts/Items/Consumables/SoulStone.cs b/Scripts/Items/Consumables/SoulStone.cs
index 48aca6eda..8902303d2 100644
--- a/Scripts/Items/Consumables/SoulStone.cs
+++ b/Scripts/Items/Consumables/SoulStone.cs
@@ -174,7 +174,7 @@ namespace Server.Items
             string name = LastUserName;
 
             if (name == null)
-                name = string.Format("#{0}", 1074235); // Unknown
+                name = $"#{1074235}"; // Unknown
 
             list.Add(1041602, "{0}", name); // Owner: ~1_val~
         }
@@ -485,7 +485,7 @@ namespace Server.Items
                 {
                     PlayerMobile owner = from as PlayerMobile;
 
-                    if (owner != null && owner.AllFollowers != null && owner.AllFollowers.Count > 0)
+                    if (owner?.AllFollowers != null && owner.AllFollowers.Count > 0)
                     {
                         foreach (BaseCreature bc in owner.AllFollowers.OfType<BaseCreature>())
                         {
diff --git a/Scripts/Items/Consumables/SoulstonePromotionalTokens.cs b/Scripts/Items/Consumables/SoulstonePromotionalTokens.cs
index bc9d866ee..f05a3bd63 100644
--- a/Scripts/Items/Consumables/SoulstonePromotionalTokens.cs
+++ b/Scripts/Items/Consumables/SoulstonePromotionalTokens.cs
@@ -30,7 +30,7 @@ namespace Server.Items
         public override TextDefinition ItemReceiveMessage => 1070976;// A soulstone fragment has been created in your bank box.
         public override Item CreateItemFor(Mobile from)
         {
-            if (from != null && from.Account != null)
+            if (from?.Account != null)
 
                 return new SoulstoneFragment(from.Account.ToString());
             else
@@ -114,7 +114,7 @@ namespace Server.Items
         public override TextDefinition ItemReceiveMessage => 1070743;// A soulstone has been created in your bank box.
         public override Item CreateItemFor(Mobile from)
         {
-            if (from != null && from.Account != null)
+            if (from?.Account != null)
             {
                 switch (Type)
                 {
diff --git a/Scripts/Items/Consumables/SpringDecorToken.cs b/Scripts/Items/Consumables/SpringDecorToken.cs
index 9c60e3164..f0c6be5e5 100644
--- a/Scripts/Items/Consumables/SpringDecorToken.cs
+++ b/Scripts/Items/Consumables/SpringDecorToken.cs
@@ -34,7 +34,7 @@ namespace Server.Items
         {
             base.GetProperties(list);
 
-            list.Add(1070998, string.Format("#{0}", 1075553));  // Spring Decor Collection Item
+            list.Add(1070998, $"#{1075553}");  // Spring Decor Collection Item
         }
 
         public override void Serialize(GenericWriter writer)
diff --git a/Scripts/Items/Consumables/StatScroll.cs b/Scripts/Items/Consumables/StatScroll.cs
index 3f8de6983..dfc9a88e0 100644
--- a/Scripts/Items/Consumables/StatScroll.cs
+++ b/Scripts/Items/Consumables/StatScroll.cs
@@ -42,7 +42,7 @@ namespace Server.Items
                 return 0;
             }
         }
-        public override string DefaultTitle => string.Format("<basefont color=#FFFFFF>Power Scroll ({0}{1} Maximum Stats):</basefont>", ((int)Value - m_StatCap) >= 0 ? "+" : "", (int)Value - m_StatCap);
+        public override string DefaultTitle => $"<basefont color=#FFFFFF>Power Scroll ({(((int)Value - m_StatCap) >= 0 ? "+" : "")}{(int)Value - m_StatCap} Maximum Stats):</basefont>";
         public override void AddNameProperty(ObjectPropertyList list)
         {
             int level = ((int)Value - (m_StatCap + 5)) / 5;
diff --git a/Scripts/Items/Consumables/TastyTreat.cs b/Scripts/Items/Consumables/TastyTreat.cs
index e576be415..036d45355 100644
--- a/Scripts/Items/Consumables/TastyTreat.cs
+++ b/Scripts/Items/Consumables/TastyTreat.cs
@@ -59,9 +59,9 @@ namespace Server.Items
             {
                 m.BeginTarget(2, false, TargetFlags.Beneficial, (from, targeted) =>
                     {
-                        if (targeted is Mobile)
+                        if (targeted is Mobile mobile)
                         {
-                            TryFeed(from, (Mobile)targeted);
+                            TryFeed(from, mobile);
                         }
                     });
             }
diff --git a/Scripts/Items/Consumables/TaxidermyKit.cs b/Scripts/Items/Consumables/TaxidermyKit.cs
index b0bbecc63..5697d73b9 100644
--- a/Scripts/Items/Consumables/TaxidermyKit.cs
+++ b/Scripts/Items/Consumables/TaxidermyKit.cs
@@ -358,7 +358,7 @@ namespace Server.Items
 
             if (DateCaught != DateTime.MinValue)
             {
-                list.Add(string.Format("[{0}]", DateCaught.ToShortDateString()));
+                list.Add($"[{DateCaught.ToShortDateString()}]");
             }
         }
 
diff --git a/Scripts/Items/Consumables/TribalPaint.cs b/Scripts/Items/Consumables/TribalPaint.cs
index a14274fc1..965afbf0b 100644
--- a/Scripts/Items/Consumables/TribalPaint.cs
+++ b/Scripts/Items/Consumables/TribalPaint.cs
@@ -50,8 +50,8 @@ namespace Server.Items
                     from.BodyMod = (from.Female ? 184 : 183);
                     from.HueMod = 0;
 
-                    if (from is PlayerMobile)
-                        ((PlayerMobile)from).SavagePaintExpiration = TimeSpan.FromDays(7.0);
+                    if (from is PlayerMobile playerMobile)
+                        playerMobile.SavagePaintExpiration = TimeSpan.FromDays(7.0);
 
                     from.SendLocalizedMessage(1042537); // You now bear the markings of the savage tribe.  Your body paint will last about a week or you can remove it with an oil cloth.
 
diff --git a/Scripts/Items/Containers/BaseBoard.cs b/Scripts/Items/Containers/BaseBoard.cs
index 4c7b6172b..6d60cc3d1 100644
--- a/Scripts/Items/Containers/BaseBoard.cs
+++ b/Scripts/Items/Containers/BaseBoard.cs
@@ -101,16 +101,14 @@ namespace Server.Items
 
         public override bool OnDragDrop(Mobile from, Item dropped)
         {
-            BasePiece piece = dropped as BasePiece;
 
-            return (piece != null && piece.Board == this && base.OnDragDrop(from, dropped));
+            return (dropped is BasePiece piece && piece.Board == this && base.OnDragDrop(from, dropped));
         }
 
         public override bool OnDragDropInto(Mobile from, Item dropped, Point3D point)
         {
-            BasePiece piece = dropped as BasePiece;
 
-            if (piece != null && piece.Board == this && base.OnDragDropInto(from, dropped, point))
+            if (dropped is BasePiece piece && piece.Board == this && base.OnDragDropInto(from, dropped, point))
             {
                 Packet p = new PlaySound(0x127, GetWorldLocation());
 
diff --git a/Scripts/Items/Containers/FelineBlessedStatue.cs b/Scripts/Items/Containers/FelineBlessedStatue.cs
index 83865f54c..068558409 100644
--- a/Scripts/Items/Containers/FelineBlessedStatue.cs
+++ b/Scripts/Items/Containers/FelineBlessedStatue.cs
@@ -164,9 +164,7 @@ namespace Server.Items
 
         private void DropResource()
         {            
-            var item = Activator.CreateInstance(m_ResourceTypes[Utility.Random(m_ResourceTypes.Length)]) as Item;           
-
-            if (item != null)
+            if (Activator.CreateInstance(m_ResourceTypes[Utility.Random(m_ResourceTypes.Length)]) is Item item)
             {
                 item.Amount = Utility.RandomMinMax(10, 20);
 
diff --git a/Scripts/Items/Containers/FillableContainers.cs b/Scripts/Items/Containers/FillableContainers.cs
index 5c127fdb4..4c01ade98 100644
--- a/Scripts/Items/Containers/FillableContainers.cs
+++ b/Scripts/Items/Containers/FillableContainers.cs
@@ -855,8 +855,8 @@ namespace Server.Items
         {
             Item item = Loot.Construct(m_Types);
 
-            if (item is Key)
-                ((Key)item).ItemID = Utility.RandomList((int)KeyType.Copper, (int)KeyType.Gold, (int)KeyType.Iron, (int)KeyType.Rusty);
+            if (item is Key key)
+                key.ItemID = Utility.RandomList((int)KeyType.Copper, (int)KeyType.Gold, (int)KeyType.Iron, (int)KeyType.Rusty);
             else if (item is Arrow || item is Bolt)
                 item.Amount = Utility.RandomMinMax(2, 6);
             else if (item is Bandage || item is Lockpick)
@@ -899,10 +899,8 @@ namespace Server.Items
             {
                 item = base.Construct();
 
-                if (item is BaseBeverage)
+                if (item is BaseBeverage bev)
                 {
-                    BaseBeverage bev = (BaseBeverage)item;
-
                     bev.Content = m_Content;
                     bev.Quantity = bev.MaxQuantity;
                 }
@@ -1654,9 +1652,7 @@ namespace Server.Items
                 if (nearest != null && mob.GetDistanceToSqrt(loc) > nearest.GetDistanceToSqrt(loc) && !(nearest is Cobbler && mob is Provisioner))
                     continue;
 
-                FillableContent check = m_AcquireTable[mob.GetType()] as FillableContent;
-
-                if (check != null)
+                if (m_AcquireTable[mob.GetType()] is FillableContent check)
                 {
                     nearest = mob;
                     content = check;
diff --git a/Scripts/Items/Containers/Mahjong/MahjongDices.cs b/Scripts/Items/Containers/Mahjong/MahjongDices.cs
index 854356018..e2feb32cf 100644
--- a/Scripts/Items/Containers/Mahjong/MahjongDices.cs
+++ b/Scripts/Items/Containers/Mahjong/MahjongDices.cs
@@ -33,7 +33,7 @@ namespace Server.Engines.Mahjong
             m_Game.Players.SendGeneralPacket(true, true);
 
             if (from != null)
-                m_Game.Players.SendLocalizedMessage(1062695, string.Format("{0}\t{1}\t{2}", from.Name, m_First, m_Second)); // ~1_name~ rolls the dice and gets a ~2_number~ and a ~3_number~!
+                m_Game.Players.SendLocalizedMessage(1062695, $"{from.Name}\t{m_First}\t{m_Second}"); // ~1_name~ rolls the dice and gets a ~2_number~ and a ~3_number~!
         }
 
         public void Save(GenericWriter writer)
diff --git a/Scripts/Items/Containers/Mahjong/MahjongPlayers.cs b/Scripts/Items/Containers/Mahjong/MahjongPlayers.cs
index 99d370bb4..71f2df8ec 100644
--- a/Scripts/Items/Containers/Mahjong/MahjongPlayers.cs
+++ b/Scripts/Items/Containers/Mahjong/MahjongPlayers.cs
@@ -291,7 +291,7 @@ namespace Server.Engines.Mahjong
                 to.Send(new MahjongPlayersInfo(m_Game, to));
             }
 
-            SendLocalizedMessage(1062774, string.Format("{0}\t{1}\t{2}", from.Name, to.Name, amount)); // ~1_giver~ gives ~2_receiver~ ~3_number~ points.
+            SendLocalizedMessage(1062774, $"{from.Name}\t{to.Name}\t{amount}"); // ~1_giver~ gives ~2_receiver~ ~3_number~ points.
         }
 
         public void OpenSeat(int index)
diff --git a/Scripts/Items/Containers/MarkContainer.cs b/Scripts/Items/Containers/MarkContainer.cs
index 57b5c91b2..332cfd529 100644
--- a/Scripts/Items/Containers/MarkContainer.cs
+++ b/Scripts/Items/Containers/MarkContainer.cs
@@ -184,9 +184,7 @@ namespace Server.Items
 
         public override bool OnDragDrop(Mobile from, Item dropped)
         {
-            RecallRune rune = dropped as RecallRune;
-
-            if (rune != null && base.OnDragDrop(from, dropped))
+            if (dropped is RecallRune rune && base.OnDragDrop(from, dropped))
             {
                 Mark(rune);
 
@@ -200,9 +198,7 @@ namespace Server.Items
 
         public override bool OnDragDropInto(Mobile from, Item dropped, Point3D p)
         {
-            RecallRune rune = dropped as RecallRune;
-
-            if (rune != null && base.OnDragDropInto(from, dropped, p))
+            if (dropped is RecallRune rune && base.OnDragDropInto(from, dropped, p))
             {
                 Mark(rune);
 
diff --git a/Scripts/Items/Containers/ParagonChest.cs b/Scripts/Items/Containers/ParagonChest.cs
index a5940a17c..194726936 100644
--- a/Scripts/Items/Containers/ParagonChest.cs
+++ b/Scripts/Items/Containers/ParagonChest.cs
@@ -158,10 +158,8 @@ namespace Server.Items
                     continue;
                 }
 
-                if (item is BaseWeapon)
+                if (item is BaseWeapon weapon)
                 {
-                    BaseWeapon weapon = (BaseWeapon)item;
-
                     int attributeCount;
                     int min, max;
 
@@ -171,10 +169,8 @@ namespace Server.Items
 
                     DropItem(item);
                 }
-                else if (item is BaseArmor)
+                else if (item is BaseArmor armor)
                 {
-                    BaseArmor armor = (BaseArmor)item;
-
                     int attributeCount;
                     int min, max;
 
@@ -184,10 +180,8 @@ namespace Server.Items
 
                     DropItem(item);
                 }
-                else if (item is BaseHat)
+                else if (item is BaseHat hat)
                 {
-                    BaseHat hat = (BaseHat)item;
-
                     int attributeCount;
                     int min, max;
 
@@ -197,14 +191,14 @@ namespace Server.Items
 
                     DropItem(item);
                 }
-                else if (item is BaseJewel)
+                else if (item is BaseJewel baseJewel)
                 {
                     int attributeCount;
                     int min, max;
 
                     GetRandomAOSStats(out attributeCount, out min, out max);
 
-                    BaseRunicTool.ApplyAttributesTo((BaseJewel)item, attributeCount, min, max);
+                    BaseRunicTool.ApplyAttributesTo(baseJewel, attributeCount, min, max);
 
                     DropItem(item);
                 }
diff --git a/Scripts/Items/Containers/PlagueBeastBackpack.cs b/Scripts/Items/Containers/PlagueBeastBackpack.cs
index df95eb402..04da1020e 100644
--- a/Scripts/Items/Containers/PlagueBeastBackpack.cs
+++ b/Scripts/Items/Containers/PlagueBeastBackpack.cs
@@ -137,9 +137,7 @@ namespace Server.Items
 
                 for (int i = Items.Count - 1; i >= 0; i--)
                 {
-                    PlagueBeastComponent innard = Items[i] as PlagueBeastComponent;
-
-                    if (innard != null)
+                    if (Items[i] is PlagueBeastComponent innard)
                     {
                         Rectangle2D r = ItemBounds.Table[innard.ItemID];
 
diff --git a/Scripts/Items/Containers/SalvageBag.cs b/Scripts/Items/Containers/SalvageBag.cs
index bfe887b90..a6ecc0677 100644
--- a/Scripts/Items/Containers/SalvageBag.cs
+++ b/Scripts/Items/Containers/SalvageBag.cs
@@ -46,14 +46,14 @@ namespace Server.Items
             {
                 if (i != null && !i.Deleted)
                 {
-                    if (i is BaseWeapon)
+                    if (i is BaseWeapon baseWeapon)
                     {
-                        if (CraftResources.GetType(((BaseWeapon)i).Resource) == CraftResourceType.Metal)
+                        if (CraftResources.GetType(baseWeapon.Resource) == CraftResourceType.Metal)
                             return true;
                     }
-                    if (i is BaseArmor)
+                    if (i is BaseArmor baseArmor)
                     {
-                        if (CraftResources.GetType(((BaseArmor)i).Resource) == CraftResourceType.Metal)
+                        if (CraftResources.GetType(baseArmor.Resource) == CraftResourceType.Metal)
                             return true;
                     }
                     if (i is DragonBardingDeed)
@@ -201,23 +201,23 @@ namespace Server.Items
             {
                 Item item = Smeltables[i];
 
-                if (item is BaseArmor)
+                if (item is BaseArmor baseArmor)
                 {
-                    if (Resmelt(from, item, ((BaseArmor)item).Resource))
+                    if (Resmelt(from, item, baseArmor.Resource))
                         salvaged++;
                     else
                         notSalvaged++;
                 }
-                else if (item is BaseWeapon)
+                else if (item is BaseWeapon baseWeapon)
                 {
-                    if (Resmelt(from, item, ((BaseWeapon)item).Resource))
+                    if (Resmelt(from, item, baseWeapon.Resource))
                         salvaged++;
                     else
                         notSalvaged++;
                 }
-                else if (item is DragonBardingDeed)
+                else if (item is DragonBardingDeed dragonBardingDeed)
                 {
-                    if (Resmelt(from, item, ((DragonBardingDeed)item).Resource))
+                    if (Resmelt(from, item, dragonBardingDeed.Resource))
                         salvaged++;
 
                     else
@@ -230,7 +230,7 @@ namespace Server.Items
                 m_Failure = false;
             }
             else
-                from.SendLocalizedMessage(1079973, string.Format("{0}\t{1}", salvaged, salvaged + notSalvaged)); // Salvaged: ~1_COUNT~/~2_NUM~ blacksmithed items
+                from.SendLocalizedMessage(1079973, $"{salvaged}\t{salvaged + notSalvaged}"); // Salvaged: ~1_COUNT~/~2_NUM~ blacksmithed items
         }
 
         private void SalvageCloth(Mobile from)
@@ -252,9 +252,9 @@ namespace Server.Items
             for (int i = Scissorables.Count - 1; i >= 0; i--)
             {
                 Item item = Scissorables[i];
-                if (item is IScissorable)
+                if (item is IScissorable iScissorable)
                 {
-                    if (((IScissorable)item).Scissor(from, scissors))
+                    if (iScissorable.Scissor(from, scissors))
                     {
                         salvaged++;
                     }
@@ -265,7 +265,7 @@ namespace Server.Items
                 }
             }
 
-            from.SendLocalizedMessage(1079974, string.Format("{0}\t{1}", salvaged, salvaged + notSalvaged)); // Salvaged: ~1_COUNT~/~2_NUM~ tailored items
+            from.SendLocalizedMessage(1079974, $"{salvaged}\t{salvaged + notSalvaged}"); // Salvaged: ~1_COUNT~/~2_NUM~ tailored items
 
             Container pack = from.Backpack;
 
diff --git a/Scripts/Items/Containers/TrashBarrel.cs b/Scripts/Items/Containers/TrashBarrel.cs
index 79a96020f..07ea4cdb5 100644
--- a/Scripts/Items/Containers/TrashBarrel.cs
+++ b/Scripts/Items/Containers/TrashBarrel.cs
@@ -143,7 +143,7 @@ namespace Server.Items
                         if (m_Cleanup.Find(x => x.mobiles == m && x.confirm) != null)
                         {
                             double point = m_Cleanup.Where(x => x.mobiles == m && x.confirm).Sum(x => x.points);
-                            m.SendLocalizedMessage(1151280, string.Format("{0}\t{1}", point.ToString(), m_Cleanup.Count(r => r.mobiles == m))); // You have received approximately ~1_VALUE~points for turning in ~2_COUNT~items for Clean Up Britannia.
+                            m.SendLocalizedMessage(1151280, $"{point.ToString()}\t{m_Cleanup.Count(r => r.mobiles == m)}"); // You have received approximately ~1_VALUE~points for turning in ~2_COUNT~items for Clean Up Britannia.
                             PointsSystem.CleanUpBritannia.AwardPoints(m, point);
                         }
                     }
diff --git a/Scripts/Items/Containers/TrashChest.cs b/Scripts/Items/Containers/TrashChest.cs
index 6b6f90231..e67d37a79 100644
--- a/Scripts/Items/Containers/TrashChest.cs
+++ b/Scripts/Items/Containers/TrashChest.cs
@@ -104,7 +104,7 @@ namespace Server.Items
                         if (m_Cleanup.Find(x => x.mobiles == m && x.confirm) != null)
                         {
                             double point = m_Cleanup.Where(x => x.mobiles == m && x.confirm).Sum(x => x.points);
-                            m.SendLocalizedMessage(1151280, string.Format("{0}\t{1}", point.ToString(), m_Cleanup.Count(r => r.mobiles == m))); // You have received approximately ~1_VALUE~points for turning in ~2_COUNT~items for Clean Up Britannia.
+                            m.SendLocalizedMessage(1151280, $"{point.ToString()}\t{m_Cleanup.Count(r => r.mobiles == m)}"); // You have received approximately ~1_VALUE~points for turning in ~2_COUNT~items for Clean Up Britannia.
                             PointsSystem.CleanUpBritannia.AwardPoints(m, point);
                         }
                     }
diff --git a/Scripts/Items/Corpses/Head.cs b/Scripts/Items/Corpses/Head.cs
index 07e4f4185..86b4a5deb 100644
--- a/Scripts/Items/Corpses/Head.cs
+++ b/Scripts/Items/Corpses/Head.cs
@@ -70,13 +70,13 @@ namespace Server.Items
                 switch (m_HeadType)
                 {
                     default:
-                        return string.Format("the head of {0}", m_PlayerName);
+                        return $"the head of {m_PlayerName}";
 
                     case HeadType.Duel:
-                        return string.Format("the head of {0}, taken in a duel", m_PlayerName);
+                        return $"the head of {m_PlayerName}, taken in a duel";
 
                     case HeadType.Tournament:
-                        return string.Format("the head of {0}, taken in a tournament", m_PlayerName);
+                        return $"the head of {m_PlayerName}, taken in a tournament";
                 }
             }
         }
diff --git a/Scripts/Items/Damageable/Beacon.cs b/Scripts/Items/Damageable/Beacon.cs
index c45f1560d..9dde5d50b 100644
--- a/Scripts/Items/Damageable/Beacon.cs
+++ b/Scripts/Items/Damageable/Beacon.cs
@@ -94,10 +94,7 @@ namespace Server.Items
 
             DoEffects(Location, Map);
 
-            if (Component != null)
-            {
-                Component.Delete();
-            }
+            Component?.Delete();
 
             ColUtility.Free(delete);
 
@@ -273,9 +270,7 @@ namespace Server.Items
 
             for (int i = 0; i < count; i++)
             {
-                BeaconRubble item = reader.ReadItem() as BeaconRubble;
-
-                if (item != null)
+                if (reader.ReadItem() is BeaconRubble item)
                 {
                     if (Rubble == null)
                         Rubble = new List<BeaconRubble>();
diff --git a/Scripts/Items/Decorative/BaseLight.cs b/Scripts/Items/Decorative/BaseLight.cs
index a3389760c..2ddb8898a 100644
--- a/Scripts/Items/Decorative/BaseLight.cs
+++ b/Scripts/Items/Decorative/BaseLight.cs
@@ -208,7 +208,7 @@ namespace Server.Items
         {
             if (_Resource > CraftResource.Iron)
             {
-                list.Add(1053099, "#{0}\t{1}", CraftResources.GetLocalizationNumber(_Resource), string.Format("#{0}", LabelNumber.ToString())); // ~1_oretype~ ~2_armortype~
+                list.Add(1053099, "#{0}\t{1}", CraftResources.GetLocalizationNumber(_Resource), $"#{LabelNumber.ToString()}"); // ~1_oretype~ ~2_armortype~
             }
             else
             {
diff --git a/Scripts/Items/Decorative/BasePaintedMask.cs b/Scripts/Items/Decorative/BasePaintedMask.cs
index 04d84ab11..099935581 100644
--- a/Scripts/Items/Decorative/BasePaintedMask.cs
+++ b/Scripts/Items/Decorative/BasePaintedMask.cs
@@ -39,7 +39,7 @@ namespace Server.Items.Holiday
             {
                 if (m_Staffer != null)
                 {
-                    return string.Format("{0} hand painted by {1}", MaskName, m_Staffer);
+                    return $"{MaskName} hand painted by {m_Staffer}";
                 }
 
                 return MaskName;
diff --git a/Scripts/Items/Decorative/CustomizableRoundedDoorMat.cs b/Scripts/Items/Decorative/CustomizableRoundedDoorMat.cs
index 6354afeba..5603c605b 100644
--- a/Scripts/Items/Decorative/CustomizableRoundedDoorMat.cs
+++ b/Scripts/Items/Decorative/CustomizableRoundedDoorMat.cs
@@ -39,8 +39,8 @@ namespace Server.Items
         {
             if (IsChildOf(from.Backpack))
             {
-                if (from is PlayerMobile)
-                    BaseGump.SendGump(new AddCustomizableMessageGump((PlayerMobile)from, this));
+                if (from is PlayerMobile playerMobile)
+                    BaseGump.SendGump(new AddCustomizableMessageGump(playerMobile, this));
             }
             else
             {
diff --git a/Scripts/Items/Decorative/CustomizableSquaredDoorMat.cs b/Scripts/Items/Decorative/CustomizableSquaredDoorMat.cs
index e162b2cf5..4348d42cd 100644
--- a/Scripts/Items/Decorative/CustomizableSquaredDoorMat.cs
+++ b/Scripts/Items/Decorative/CustomizableSquaredDoorMat.cs
@@ -71,9 +71,7 @@ namespace Server.Items
         {
             base.GetProperties(list);
 
-            CustomizableSquaredDoorMatAddon addon = Addon as CustomizableSquaredDoorMatAddon;
-
-            if (addon != null)
+            if (Addon is CustomizableSquaredDoorMatAddon addon)
             {
                 if (addon.Lines != null)
                 {
diff --git a/Scripts/Items/Decorative/CustomizableWallSign.cs b/Scripts/Items/Decorative/CustomizableWallSign.cs
index 65c4a730b..b1b0d6b2f 100644
--- a/Scripts/Items/Decorative/CustomizableWallSign.cs
+++ b/Scripts/Items/Decorative/CustomizableWallSign.cs
@@ -23,8 +23,8 @@ namespace Server.Items
         {
             if (IsChildOf(from.Backpack))
             {
-                if (from is PlayerMobile)
-                    BaseGump.SendGump(new AddCustomizableMessageGump((PlayerMobile)from, this));
+                if (from is PlayerMobile playerMobile)
+                    BaseGump.SendGump(new AddCustomizableMessageGump(playerMobile, this));
             }
             else
             {
diff --git a/Scripts/Items/Decorative/DecorativeCarpet.cs b/Scripts/Items/Decorative/DecorativeCarpet.cs
index 98a295000..0183ce857 100644
--- a/Scripts/Items/Decorative/DecorativeCarpet.cs
+++ b/Scripts/Items/Decorative/DecorativeCarpet.cs
@@ -44,9 +44,7 @@ namespace Server.Items
 
         public override void OnDoubleClick(Mobile from)
         {
-            HouseRegion region = Region.Find(Location, Map) as HouseRegion;
-
-            if (region != null)
+            if (Region.Find(Location, Map) is HouseRegion region)
             {
                 BaseHouse house = region.House;
 
diff --git a/Scripts/Items/Decorative/EnchantedWheelbarrow.cs b/Scripts/Items/Decorative/EnchantedWheelbarrow.cs
index 8d1f64f26..165c5d95e 100644
--- a/Scripts/Items/Decorative/EnchantedWheelbarrow.cs
+++ b/Scripts/Items/Decorative/EnchantedWheelbarrow.cs
@@ -123,9 +123,7 @@ namespace Server.Items
                 {
                     if (Harvest)
                     {
-                        Item i = Activator.CreateInstance(DecorativePlants[Utility.Random(DecorativePlants.Length)]) as Item;
-
-                        if (i != null)
+                        if (Activator.CreateInstance(DecorativePlants[Utility.Random(DecorativePlants.Length)]) is Item i)
                         {
                             m.LocalOverheadMessage(Network.MessageType.Regular, 0x3B2, 1158330); // *You collect a plant from the wheelbarrow*
                             m.AddToBackpack(i);
diff --git a/Scripts/Items/Decorative/Globe.cs b/Scripts/Items/Decorative/Globe.cs
index 66280d67a..3dc178df8 100644
--- a/Scripts/Items/Decorative/Globe.cs
+++ b/Scripts/Items/Decorative/Globe.cs
@@ -44,7 +44,7 @@ namespace Server.Items
         {
             if (_Resource != CraftResource.None)
             {
-                list.Add(1053099, "#{0}\t{1}", CraftResources.GetLocalizationNumber(_Resource), string.Format("#{0}", LabelNumber.ToString())); // ~1_oretype~ ~2_armortype~
+                list.Add(1053099, "#{0}\t{1}", CraftResources.GetLocalizationNumber(_Resource), $"#{LabelNumber.ToString()}"); // ~1_oretype~ ~2_armortype~
             }
             else
             {
diff --git a/Scripts/Items/Decorative/HalloweenPumpkin.cs b/Scripts/Items/Decorative/HalloweenPumpkin.cs
index 1d2c79f75..ac30b9432 100644
--- a/Scripts/Items/Decorative/HalloweenPumpkin.cs
+++ b/Scripts/Items/Decorative/HalloweenPumpkin.cs
@@ -53,7 +53,7 @@ namespace Server.Items
 
         private void AssignRandomName()
         {
-            Name = string.Format("{0}'s Jack-O-Lantern", m_Staff[Utility.Random(m_Staff.Length)]);
+            Name = $"{m_Staff[Utility.Random(m_Staff.Length)]}'s Jack-O-Lantern";
         }
 
         public override bool OnDragLift(Mobile from)
diff --git a/Scripts/Items/Decorative/HolidayBell.cs b/Scripts/Items/Decorative/HolidayBell.cs
index a981b376e..46f7ad68a 100644
--- a/Scripts/Items/Decorative/HolidayBell.cs
+++ b/Scripts/Items/Decorative/HolidayBell.cs
@@ -80,7 +80,7 @@
                 m_Maker = value;
             }
         }
-        public override string DefaultName => string.Format("A Holiday Bell From {0}", Giver);
+        public override string DefaultName => $"A Holiday Bell From {Giver}";
         public override void OnDoubleClick(Mobile from)
         {
             if (!from.InRange(GetWorldLocation(), 2))
diff --git a/Scripts/Items/Decorative/HolidaysSign.cs b/Scripts/Items/Decorative/HolidaysSign.cs
index bef54beb4..e0e90a697 100644
--- a/Scripts/Items/Decorative/HolidaysSign.cs
+++ b/Scripts/Items/Decorative/HolidaysSign.cs
@@ -86,7 +86,7 @@ namespace Server.Items
                 else
                     Sign.GumpID++;
 
-                _From.SendLocalizedMessage(1158830, string.Format("{0}", SingType.ToList().Find(x => x.Key == Sign.GumpID).Value)); // The sign text has been set to: ~1_TEXT~
+                _From.SendLocalizedMessage(1158830, $"{SingType.ToList().Find(x => x.Key == Sign.GumpID).Value}"); // The sign text has been set to: ~1_TEXT~
             }
         }
 
diff --git a/Scripts/Items/Decorative/Mistletoe.cs b/Scripts/Items/Decorative/Mistletoe.cs
index 7fc485294..8d1a033db 100644
--- a/Scripts/Items/Decorative/Mistletoe.cs
+++ b/Scripts/Items/Decorative/Mistletoe.cs
@@ -113,9 +113,9 @@ namespace Server.Items
             {
                 Item deed = Deed;
 
-                if (Parent is Item)
+                if (Parent is Item item)
                 {
-                    ((Item)Parent).AddItem(deed);
+                    item.AddItem(deed);
                     deed.Location = Location;
                 }
                 else
diff --git a/Scripts/Items/Decorative/PileOfGlacialSnow.cs b/Scripts/Items/Decorative/PileOfGlacialSnow.cs
index bdc5dc989..f2802871a 100644
--- a/Scripts/Items/Decorative/PileOfGlacialSnow.cs
+++ b/Scripts/Items/Decorative/PileOfGlacialSnow.cs
@@ -92,9 +92,8 @@ namespace Server.Items
                 {
                     from.SendLocalizedMessage(1005576); // You can't throw this at yourself.
                 }
-                else if (target is Mobile)
+                else if (target is Mobile targ)
                 {
-                    Mobile targ = (Mobile)target;
                     Container pack = targ.Backpack;
 
                     if (pack != null && pack.FindItemByType(new Type[] { typeof(SnowPile), typeof(PileOfGlacialSnow) }) != null)
diff --git a/Scripts/Items/Decorative/ShipwreckedItem.cs b/Scripts/Items/Decorative/ShipwreckedItem.cs
index 293fa1ec8..78169d77c 100644
--- a/Scripts/Items/Decorative/ShipwreckedItem.cs
+++ b/Scripts/Items/Decorative/ShipwreckedItem.cs
@@ -27,7 +27,7 @@ namespace Server.Items
             if (m_IsBarnacleItem)
             {
                 if (LabelNumber > 0)
-                    list.Add(1151075, string.Format("#{0}", LabelNumber)); //barnacle covered ~1_token~
+                    list.Add(1151075, $"#{LabelNumber}"); //barnacle covered ~1_token~
                 else
                     list.Add(1151075, ItemData.Name); //barnacle covered ~1_token~
 
diff --git a/Scripts/Items/Decorative/SnowGlobes.cs b/Scripts/Items/Decorative/SnowGlobes.cs
index 07d215049..bff1040ad 100644
--- a/Scripts/Items/Decorative/SnowGlobes.cs
+++ b/Scripts/Items/Decorative/SnowGlobes.cs
@@ -220,7 +220,7 @@ namespace Server.Items
                 if (idx < 0 || idx >= m_PlaceNames.Length)
                     return "a snowy scene";
 
-                return string.Format("a snowy scene of {0}", m_PlaceNames[idx]);
+                return $"a snowy scene of {m_PlaceNames[idx]}";
             }
         }
         public override void Serialize(GenericWriter writer)
diff --git a/Scripts/Items/Decorative/SnowPile.cs b/Scripts/Items/Decorative/SnowPile.cs
index d61e5027b..60eff3a4a 100644
--- a/Scripts/Items/Decorative/SnowPile.cs
+++ b/Scripts/Items/Decorative/SnowPile.cs
@@ -92,9 +92,8 @@ namespace Server.Items
                 {
                     from.SendLocalizedMessage(1005576); // You can't throw this at yourself.
                 }
-                else if (target is Mobile)
+                else if (target is Mobile targ)
                 {
-                    Mobile targ = (Mobile)target;
                     Container pack = targ.Backpack;
 
                     if (pack != null && pack.FindItemByType(new Type[] { typeof(SnowPile), typeof(PileOfGlacialSnow) }) != null)
diff --git a/Scripts/Items/Decorative/SpikedEggNog.cs b/Scripts/Items/Decorative/SpikedEggNog.cs
index 3ee8be4f9..53b1e26c9 100644
--- a/Scripts/Items/Decorative/SpikedEggNog.cs
+++ b/Scripts/Items/Decorative/SpikedEggNog.cs
@@ -74,7 +74,7 @@ namespace Server.Items
                 return;
             }
 
-            BuffInfo.AddBuff(m, new BuffInfo(BuffIcon.Bleed, 1075829, 1075830, TimeSpan.FromSeconds(12), m, string.Format("{0}\t{1}\t{2}", "1", "10", "2")));
+            BuffInfo.AddBuff(m, new BuffInfo(BuffIcon.Bleed, 1075829, 1075830, TimeSpan.FromSeconds(12), m, $"{"1"}\t{"10"}\t{"2"}"));
 
             m_Timer = new BleedTimer(m, this);
             m_Timer.Start();
diff --git a/Scripts/Items/Decorative/StaghornFern.cs b/Scripts/Items/Decorative/StaghornFern.cs
index 1287ca696..b75fc636b 100644
--- a/Scripts/Items/Decorative/StaghornFern.cs
+++ b/Scripts/Items/Decorative/StaghornFern.cs
@@ -65,9 +65,9 @@ namespace Server.Items
             {
                 Item deed = Deed;
 
-                if (Parent is Item)
+                if (Parent is Item item)
                 {
-                    ((Item)Parent).AddItem(deed);
+                    item.AddItem(deed);
                     deed.Location = Location;
                 }
                 else
diff --git a/Scripts/Items/Decorative/Utensils.cs b/Scripts/Items/Decorative/Utensils.cs
index a4c09b193..d595f1c2f 100644
--- a/Scripts/Items/Decorative/Utensils.cs
+++ b/Scripts/Items/Decorative/Utensils.cs
@@ -49,7 +49,7 @@ namespace Server.Items
         {
             if (_Resource > CraftResource.Iron)
             {
-                list.Add(1053099, "#{0}\t{1}", CraftResources.GetLocalizationNumber(_Resource), string.Format("#{0}", LabelNumber.ToString())); // ~1_oretype~ ~2_armortype~
+                list.Add(1053099, "#{0}\t{1}", CraftResources.GetLocalizationNumber(_Resource), $"#{LabelNumber.ToString()}"); // ~1_oretype~ ~2_armortype~
             }
             else
             {
diff --git a/Scripts/Items/Decorative/ValentinesCard.cs b/Scripts/Items/Decorative/ValentinesCard.cs
index b55026af1..b69306d98 100644
--- a/Scripts/Items/Decorative/ValentinesCard.cs
+++ b/Scripts/Items/Decorative/ValentinesCard.cs
@@ -59,7 +59,7 @@ namespace Server.Items
         */
         public override void AddNameProperty(ObjectPropertyList list)
         {
-            list.Add(m_LabelNumber, string.Format("{0}\t{1}", (m_To != null) ? m_To : Unsigned, (m_From != null) ? m_From : Unsigned));
+            list.Add(m_LabelNumber, $"{((m_To != null) ? m_To : Unsigned)}\t{((m_From != null) ? m_From : Unsigned)}");
         }
 
         public override void OnDoubleClick(Mobile from)
@@ -83,7 +83,7 @@ namespace Server.Items
         {
             if (!Deleted)
             {
-                if (targeted != null && targeted is Mobile)
+                if (targeted is Mobile)
                 {
                     Mobile to = targeted as Mobile;
 
diff --git a/Scripts/Items/Decorative/Wreath.cs b/Scripts/Items/Decorative/Wreath.cs
index 872269545..c6003669d 100644
--- a/Scripts/Items/Decorative/Wreath.cs
+++ b/Scripts/Items/Decorative/Wreath.cs
@@ -21,7 +21,7 @@ namespace Server.Items
         {
             base.GetProperties(list);
 
-            list.Add(1158828, string.Format("#{0}", MadeID)); // Made From Handpicked Trees Near ~1_WHERE~
+            list.Add(1158828, $"#{MadeID}"); // Made From Handpicked Trees Near ~1_WHERE~
         }
 
         public HolidayWreath(Serial serial)
diff --git a/Scripts/Items/Equipment/Armor/BaseArmor.cs b/Scripts/Items/Equipment/Armor/BaseArmor.cs
index 306a4e656..0937bd990 100644
--- a/Scripts/Items/Equipment/Armor/BaseArmor.cs
+++ b/Scripts/Items/Equipment/Armor/BaseArmor.cs
@@ -376,7 +376,7 @@ namespace Server.Items
             if (PhysicalResistance != 0 || m_RefinedPhysical != 0)
             {
                 if (m_RefinedPhysical != 0)
-                    list.Add(1153735, string.Format("{0}\t{1}\t{2}", PhysicalResistance.ToString(), "", m_RefinedPhysical.ToString()));// physical resist ~1_val~% / ~2_symb~~3_val~% Max
+                    list.Add(1153735, $"{PhysicalResistance.ToString()}\t{""}\t{m_RefinedPhysical.ToString()}");// physical resist ~1_val~% / ~2_symb~~3_val~% Max
                 else
                     list.Add(1060448, PhysicalResistance.ToString()); // physical resist ~1_val~%
             }
@@ -384,7 +384,7 @@ namespace Server.Items
             if (FireResistance != 0 || m_RefinedFire != 0)
             {
                 if (m_RefinedFire != 0)
-                    list.Add(1153737, string.Format("{0}\t{1}\t{2}", FireResistance.ToString(), "", m_RefinedFire.ToString()));// physical resist ~1_val~% / ~2_symb~~3_val~% Max
+                    list.Add(1153737, $"{FireResistance.ToString()}\t{""}\t{m_RefinedFire.ToString()}");// physical resist ~1_val~% / ~2_symb~~3_val~% Max
                 else
                     list.Add(1060447, FireResistance.ToString()); // physical resist ~1_val~%
             }
@@ -392,7 +392,7 @@ namespace Server.Items
             if (ColdResistance != 0 || m_RefinedCold != 0)
             {
                 if (m_RefinedCold != 0)
-                    list.Add(1153739, string.Format("{0}\t{1}\t{2}", ColdResistance.ToString(), "", m_RefinedCold.ToString()));// physical resist ~1_val~% / ~2_symb~~3_val~% Max
+                    list.Add(1153739, $"{ColdResistance.ToString()}\t{""}\t{m_RefinedCold.ToString()}");// physical resist ~1_val~% / ~2_symb~~3_val~% Max
                 else
                     list.Add(1060445, ColdResistance.ToString()); // physical resist ~1_val~%
             }
@@ -400,7 +400,7 @@ namespace Server.Items
             if (PoisonResistance != 0 || m_RefinedPoison != 0)
             {
                 if (m_RefinedPoison != 0)
-                    list.Add(1153736, string.Format("{0}\t{1}\t{2}", PoisonResistance.ToString(), "", m_RefinedPoison.ToString()));// physical resist ~1_val~% / ~2_symb~~3_val~% Max
+                    list.Add(1153736, $"{PoisonResistance.ToString()}\t{""}\t{m_RefinedPoison.ToString()}");// physical resist ~1_val~% / ~2_symb~~3_val~% Max
                 else
                     list.Add(1060449, PoisonResistance.ToString()); // physical resist ~1_val~%
             }
@@ -408,13 +408,13 @@ namespace Server.Items
             if (EnergyResistance != 0 || m_RefinedEnergy != 0)
             {
                 if (m_RefinedEnergy != 0)
-                    list.Add(1153738, string.Format("{0}\t{1}\t{2}", EnergyResistance.ToString(), "", m_RefinedEnergy.ToString()));// physical resist ~1_val~% / ~2_symb~~3_val~% Max
+                    list.Add(1153738, $"{EnergyResistance.ToString()}\t{""}\t{m_RefinedEnergy.ToString()}");// physical resist ~1_val~% / ~2_symb~~3_val~% Max
                 else
                     list.Add(1060446, EnergyResistance.ToString()); // physical resist ~1_val~%
             }
 
             if (RefinedDefenseChance != 0)
-                list.Add(1153733, string.Format("{0}\t{1}", "", RefinedDefenseChance.ToString()));
+                list.Add(1153733, $"{""}\t{RefinedDefenseChance.ToString()}");
         }
 
         public static int GetInherentLowerManaCost(Mobile from)
@@ -2070,7 +2070,7 @@ namespace Server.Items
             string name = Name;
 
             if (name == null)
-                name = string.Format("#{0}", LabelNumber);
+                name = $"#{LabelNumber}";
 
             return name;
         }
@@ -2128,9 +2128,9 @@ namespace Server.Items
                     int prefix = RunicReforging.GetPrefixName(m_ReforgedPrefix);
 
                     if (m_ReforgedSuffix == ReforgedSuffix.None)
-                        list.Add(1151757, string.Format("#{0}\t{1}", prefix, GetNameString())); // ~1_PREFIX~ ~2_ITEM~
+                        list.Add(1151757, $"#{prefix}\t{GetNameString()}"); // ~1_PREFIX~ ~2_ITEM~
                     else
-                        list.Add(1151756, string.Format("#{0}\t{1}\t#{2}", prefix, GetNameString(), RunicReforging.GetSuffixName(m_ReforgedSuffix))); // ~1_PREFIX~ ~2_ITEM~ of ~3_SUFFIX~
+                        list.Add(1151756, $"#{prefix}\t{GetNameString()}\t#{RunicReforging.GetSuffixName(m_ReforgedSuffix)}"); // ~1_PREFIX~ ~2_ITEM~ of ~3_SUFFIX~
                 }
                 else if (m_ReforgedSuffix != ReforgedSuffix.None)
                 {
diff --git a/Scripts/Items/Equipment/Armor/BaseShield.cs b/Scripts/Items/Equipment/Armor/BaseShield.cs
index 9258ea364..f93dd66de 100644
--- a/Scripts/Items/Equipment/Armor/BaseShield.cs
+++ b/Scripts/Items/Equipment/Armor/BaseShield.cs
@@ -117,8 +117,8 @@ namespace Server.Items
                         {
                             MaxHitPoints -= wear;
 
-                            if (Parent is Mobile)
-                                ((Mobile)Parent).LocalOverheadMessage(MessageType.Regular, 0x3B2, 1061121); // Your equipment is severely damaged.
+                            if (Parent is Mobile mobile)
+                                mobile.LocalOverheadMessage(MessageType.Regular, 0x3B2, 1061121); // Your equipment is severely damaged.
                         }
                         else
                         {
diff --git a/Scripts/Items/Equipment/Clothing/Arms.cs b/Scripts/Items/Equipment/Clothing/Arms.cs
index 848088443..65c3cea6b 100644
--- a/Scripts/Items/Equipment/Clothing/Arms.cs
+++ b/Scripts/Items/Equipment/Clothing/Arms.cs
@@ -24,9 +24,9 @@ namespace Server.Items
         {
             base.OnAdded(parent);
 
-            if (parent is Mobile)
+            if (parent is Mobile mobile)
             {
-                if (((Mobile)parent).Female)
+                if (mobile.Female)
                     ItemID = 0x0403;
                 else
                     ItemID = 0x0404;
diff --git a/Scripts/Items/Equipment/Clothing/BaseClothing.cs b/Scripts/Items/Equipment/Clothing/BaseClothing.cs
index 1e191985c..1a2623fc4 100644
--- a/Scripts/Items/Equipment/Clothing/BaseClothing.cs
+++ b/Scripts/Items/Equipment/Clothing/BaseClothing.cs
@@ -518,10 +518,8 @@ namespace Server.Items
 
                 Item item = m.Items[i];
 
-                if (item is BaseClothing)
+                if (item is BaseClothing clothing)
                 {
-                    BaseClothing clothing = (BaseClothing)item;
-
                     if (!RaceDefinitions.ValidateEquipment(m, clothing))
                     {
                         m.AddToBackpack(clothing);
@@ -555,9 +553,7 @@ namespace Server.Items
 
         public override void OnAdded(object parent)
         {
-            Mobile mob = parent as Mobile;
-
-            if (mob != null)
+            if (parent is Mobile mob)
             {
                 m_AosSkillBonuses.AddTo(mob);
 
@@ -581,9 +577,7 @@ namespace Server.Items
 
         public override void OnRemoved(object parent)
         {
-            Mobile mob = parent as Mobile;
-
-            if (mob != null)
+            if (parent is Mobile mob)
             {
                 m_AosSkillBonuses.Remove();
 
@@ -654,8 +648,8 @@ namespace Server.Items
                             {
                                 MaxHitPoints -= wear;
 
-                                if (Parent is Mobile)
-                                    ((Mobile)Parent).LocalOverheadMessage(MessageType.Regular, 0x3B2, 1061121); // Your equipment is severely damaged.
+                                if (Parent is Mobile mobile)
+                                    mobile.LocalOverheadMessage(MessageType.Regular, 0x3B2, 1061121); // Your equipment is severely damaged.
                             }
                             else
                             {
@@ -776,7 +770,7 @@ namespace Server.Items
             string name = Name;
 
             if (name == null)
-                name = string.Format("#{0}", LabelNumber);
+                name = $"#{LabelNumber}";
 
             return name;
         }
@@ -850,9 +844,9 @@ namespace Server.Items
                     int prefix = RunicReforging.GetPrefixName(m_ReforgedPrefix);
 
                     if (m_ReforgedSuffix == ReforgedSuffix.None)
-                        list.Add(1151757, string.Format("#{0}\t{1}", prefix, GetNameString())); // ~1_PREFIX~ ~2_ITEM~
+                        list.Add(1151757, $"#{prefix}\t{GetNameString()}"); // ~1_PREFIX~ ~2_ITEM~
                     else
-                        list.Add(1151756, string.Format("#{0}\t{1}\t#{2}", prefix, GetNameString(), RunicReforging.GetSuffixName(m_ReforgedSuffix))); // ~1_PREFIX~ ~2_ITEM~ of ~3_SUFFIX~
+                        list.Add(1151756, $"#{prefix}\t{GetNameString()}\t#{RunicReforging.GetSuffixName(m_ReforgedSuffix)}"); // ~1_PREFIX~ ~2_ITEM~ of ~3_SUFFIX~
                 }
                 else if (m_ReforgedSuffix != ReforgedSuffix.None)
                 {
@@ -1626,9 +1620,7 @@ namespace Server.Items
             if (m_MaxHitPoints == 0 && m_HitPoints == 0)
                 m_HitPoints = m_MaxHitPoints = Utility.RandomMinMax(InitMinHits, InitMaxHits);
 
-            Mobile parent = Parent as Mobile;
-
-            if (parent != null)
+            if (Parent is Mobile parent)
             {
                 m_AosSkillBonuses.AddTo(parent);
 
diff --git a/Scripts/Items/Equipment/Clothing/FirstAidBelt.cs b/Scripts/Items/Equipment/Clothing/FirstAidBelt.cs
index 4fb8826e5..68021ed98 100644
--- a/Scripts/Items/Equipment/Clothing/FirstAidBelt.cs
+++ b/Scripts/Items/Equipment/Clothing/FirstAidBelt.cs
@@ -56,9 +56,7 @@ namespace Server.Items
 
         public override void OnAfterDuped(Item newItem)
         {
-            FirstAidBelt belt = newItem as FirstAidBelt;
-
-            if (belt != null)
+            if (newItem is FirstAidBelt belt)
             {
                 belt.m_Attributes = new AosAttributes(newItem, m_Attributes);
             }
@@ -317,10 +315,8 @@ namespace Server.Items
 
         public void InvalidateWeight()
         {
-            if (RootParent is Mobile)
+            if (RootParent is Mobile m)
             {
-                Mobile m = (Mobile)RootParent;
-
                 m.UpdateTotals();
             }
         }
diff --git a/Scripts/Items/Equipment/Clothing/Hats.cs b/Scripts/Items/Equipment/Clothing/Hats.cs
index 667da652d..e6c0465fe 100644
--- a/Scripts/Items/Equipment/Clothing/Hats.cs
+++ b/Scripts/Items/Equipment/Clothing/Hats.cs
@@ -1003,8 +1003,8 @@ namespace Server.Items
         {
             base.OnAdded(parent);
 
-            if (parent is Mobile)
-                Misc.Titles.AwardKarma((Mobile)parent, -20, true);
+            if (parent is Mobile mobile)
+                Misc.Titles.AwardKarma(mobile, -20, true);
         }
 
         public OrcishKinMask(Serial serial)
diff --git a/Scripts/Items/Equipment/Clothing/OuterLegs.cs b/Scripts/Items/Equipment/Clothing/OuterLegs.cs
index d31bbf3bd..1c914560b 100644
--- a/Scripts/Items/Equipment/Clothing/OuterLegs.cs
+++ b/Scripts/Items/Equipment/Clothing/OuterLegs.cs
@@ -200,9 +200,9 @@ namespace Server.Items
         {
             base.OnAdded(parent);
 
-            if (parent is Mobile)
+            if (parent is Mobile mobile)
             {
-                if (((Mobile)parent).Female)
+                if (mobile.Female)
                     ItemID = 0x0407;
                 else
                     ItemID = 0x0408;
diff --git a/Scripts/Items/Equipment/Clothing/Pants.cs b/Scripts/Items/Equipment/Clothing/Pants.cs
index 4954744fb..a89f160af 100644
--- a/Scripts/Items/Equipment/Clothing/Pants.cs
+++ b/Scripts/Items/Equipment/Clothing/Pants.cs
@@ -301,9 +301,9 @@ namespace Server.Items
         {
             base.OnAdded(parent);
 
-            if (parent is Mobile)
+            if (parent is Mobile mobile)
             {
-                if (((Mobile)parent).Female)
+                if (mobile.Female)
                     ItemID = 0x0409;
                 else
                     ItemID = 0x040A;
diff --git a/Scripts/Items/Equipment/Clothing/Shirts.cs b/Scripts/Items/Equipment/Clothing/Shirts.cs
index f1a300a27..6dd376504 100644
--- a/Scripts/Items/Equipment/Clothing/Shirts.cs
+++ b/Scripts/Items/Equipment/Clothing/Shirts.cs
@@ -235,9 +235,9 @@ namespace Server.Items
         {
             base.OnAdded(parent);
 
-            if (parent is Mobile)
+            if (parent is Mobile mobile)
             {
-                if (((Mobile)parent).Female)
+                if (mobile.Female)
                     ItemID = 0x0405;
                 else
                     ItemID = 0x0406;
diff --git a/Scripts/Items/Equipment/Instruments/BaseInstrument.cs b/Scripts/Items/Equipment/Instruments/BaseInstrument.cs
index ae16126a7..24450dc8f 100644
--- a/Scripts/Items/Equipment/Instruments/BaseInstrument.cs
+++ b/Scripts/Items/Equipment/Instruments/BaseInstrument.cs
@@ -336,7 +336,7 @@ namespace Server.Items
 
         public static bool IsPoisonImmune(BaseCreature bc)
         {
-            return (bc != null && bc.PoisonImmune != null);
+            return (bc?.PoisonImmune != null);
         }
 
         public static int GetPoisonLevel(BaseCreature bc)
diff --git a/Scripts/Items/Equipment/Instruments/FireHorn.cs b/Scripts/Items/Equipment/Instruments/FireHorn.cs
index 95e039b98..221b0c4e0 100644
--- a/Scripts/Items/Equipment/Instruments/FireHorn.cs
+++ b/Scripts/Items/Equipment/Instruments/FireHorn.cs
@@ -172,8 +172,8 @@ namespace Server.Items
                     return;
 
                 IPoint3D loc;
-                if (targeted is Item)
-                    loc = ((Item)targeted).GetWorldLocation();
+                if (targeted is Item item)
+                    loc = item.GetWorldLocation();
                 else
                     loc = targeted as IPoint3D;
 
diff --git a/Scripts/Items/Equipment/Instruments/Lute.cs b/Scripts/Items/Equipment/Instruments/Lute.cs
index 23563eb0b..fddd3a0fc 100644
--- a/Scripts/Items/Equipment/Instruments/Lute.cs
+++ b/Scripts/Items/Equipment/Instruments/Lute.cs
@@ -55,9 +55,7 @@ namespace Server.Items
 
         public override void PlayInstrumentWell(Mobile from)
         {
-            var smfs = from.Backpack.FindItemByType(typeof(SheetMusicForStones)) as SheetMusicForStones;
-
-            if (smfs != null && !smfs.Active)
+            if (from.Backpack.FindItemByType(typeof(SheetMusicForStones)) is SheetMusicForStones smfs && !smfs.Active)
             {
                 var box = from.Map.GetItemsInRange(from.Location, 3).FirstOrDefault(x => x.ItemID == 19724 && x.Hue == 1111);
 
diff --git a/Scripts/Items/Equipment/Instruments/SnakeCharmerFlute.cs b/Scripts/Items/Equipment/Instruments/SnakeCharmerFlute.cs
index a7b249df2..49db5e863 100644
--- a/Scripts/Items/Equipment/Instruments/SnakeCharmerFlute.cs
+++ b/Scripts/Items/Equipment/Instruments/SnakeCharmerFlute.cs
@@ -50,9 +50,7 @@ namespace Server.Items
 
             protected override void OnTarget(Mobile from, object targeted)
             {
-                BaseCreature bc = targeted as BaseCreature;
-
-                if (bc != null && IsSnake(bc))
+                if (targeted is BaseCreature bc && IsSnake(bc))
                 {
                     if (bc.CharmMaster != null)
                     {
@@ -84,9 +82,9 @@ namespace Server.Items
 
                 protected override void OnTarget(Mobile from, object targ)
                 {
-                    if (targ is IPoint2D)
+                    if (targ is IPoint2D iPoint2D)
                     {
-                        Point2D p = new Point2D((IPoint2D)targ);
+                        Point2D p = new Point2D(iPoint2D);
 
                         if (!m_Snake.InRange(p, 10))
                         {
diff --git a/Scripts/Items/Equipment/Jewelry/BaseJewel.cs b/Scripts/Items/Equipment/Jewelry/BaseJewel.cs
index 6b39f2c2f..0249bfd60 100644
--- a/Scripts/Items/Equipment/Jewelry/BaseJewel.cs
+++ b/Scripts/Items/Equipment/Jewelry/BaseJewel.cs
@@ -657,9 +657,9 @@ namespace Server.Items
                     int prefix = RunicReforging.GetPrefixName(m_ReforgedPrefix);
 
                     if (m_ReforgedSuffix == ReforgedSuffix.None)
-                        list.Add(1151757, string.Format("#{0}\t{1}", prefix, GetNameString())); // ~1_PREFIX~ ~2_ITEM~
+                        list.Add(1151757, $"#{prefix}\t{GetNameString()}"); // ~1_PREFIX~ ~2_ITEM~
                     else
-                        list.Add(1151756, string.Format("#{0}\t{1}\t#{2}", prefix, GetNameString(), RunicReforging.GetSuffixName(m_ReforgedSuffix))); // ~1_PREFIX~ ~2_ITEM~ of ~3_SUFFIX~
+                        list.Add(1151756, $"#{prefix}\t{GetNameString()}\t#{RunicReforging.GetSuffixName(m_ReforgedSuffix)}"); // ~1_PREFIX~ ~2_ITEM~ of ~3_SUFFIX~
                 }
                 else if (m_ReforgedSuffix != ReforgedSuffix.None)
                 {
@@ -677,7 +677,7 @@ namespace Server.Items
             string name = Name;
 
             if (name == null)
-                name = string.Format("#{0}", LabelNumber);
+                name = $"#{LabelNumber}";
 
             return name;
         }
diff --git a/Scripts/Items/Equipment/Jewelry/Necklace.cs b/Scripts/Items/Equipment/Jewelry/Necklace.cs
index 913281b1b..255720808 100644
--- a/Scripts/Items/Equipment/Jewelry/Necklace.cs
+++ b/Scripts/Items/Equipment/Jewelry/Necklace.cs
@@ -213,7 +213,7 @@ namespace Server.Items
         {
             if (GemType != GemType.None)
             {
-                list.Add(1159018, string.Format("#{0}", GemLocalization())); // ~1_type~ octopus necklace
+                list.Add(1159018, $"#{GemLocalization()}"); // ~1_type~ octopus necklace
             }
             else
             {
diff --git a/Scripts/Items/Equipment/Quivers/BaseQuiver.cs b/Scripts/Items/Equipment/Quivers/BaseQuiver.cs
index 6e665a148..49aa1969c 100644
--- a/Scripts/Items/Equipment/Quivers/BaseQuiver.cs
+++ b/Scripts/Items/Equipment/Quivers/BaseQuiver.cs
@@ -250,9 +250,7 @@ namespace Server.Items
 
         public override void OnAfterDuped(Item newItem)
         {
-            BaseQuiver quiver = newItem as BaseQuiver;
-
-            if (quiver != null)
+            if (newItem is BaseQuiver quiver)
             {
                 quiver.m_Attributes = new AosAttributes(newItem, m_Attributes);
                 quiver.m_AosSkillBonuses = new AosSkillBonuses(newItem, m_AosSkillBonuses);
@@ -261,9 +259,7 @@ namespace Server.Items
                 quiver.m_SetSkillBonuses = new AosSkillBonuses(newItem, m_SetSkillBonuses);
             }
 
-            GargishLeatherWingArmor wing = newItem as GargishLeatherWingArmor;
-
-            if (wing != null)
+            if (newItem is GargishLeatherWingArmor wing)
             {
                 int phys, fire, cold, pois, nrgy, chaos, direct;
                 phys = fire = cold = pois = nrgy = chaos = direct = 0;
@@ -400,16 +396,12 @@ namespace Server.Items
 
         public override void OnAdded(object parent)
         {
-            if (parent is Mobile)
+            if (parent is Mobile mob)
             {
-                Mobile mob = (Mobile)parent;
-
                 m_Attributes.AddStatBonuses(mob);
                 m_AosSkillBonuses.AddTo(mob);
 
-                BaseRanged ranged = mob.Weapon as BaseRanged;
-
-                if (ranged != null)
+                if (mob.Weapon is BaseRanged ranged)
                     ranged.InvalidateProperties();
 
                 if (IsSetItem)
@@ -427,10 +419,8 @@ namespace Server.Items
 
         public override void OnRemoved(object parent)
         {
-            if (parent is Mobile)
+            if (parent is Mobile mob)
             {
-                Mobile mob = (Mobile)parent;
-
                 m_Attributes.RemoveStatBonuses(mob);
                 m_AosSkillBonuses.Remove();
 
@@ -961,9 +951,9 @@ namespace Server.Items
                     m.AddStatMod(new StatMod(StatType.Int, modName + "Int", intBonus, TimeSpan.Zero));
             }
 
-            if (Parent is Mobile)
+            if (Parent is Mobile mobile)
             {
-                m_AosSkillBonuses.AddTo((Mobile)Parent);
+                m_AosSkillBonuses.AddTo(mobile);
                 ((Mobile)Parent).CheckStatTimers();
             }
         }
@@ -991,10 +981,8 @@ namespace Server.Items
 
         public void InvalidateWeight()
         {
-            if (RootParent is Mobile)
+            if (RootParent is Mobile m)
             {
-                Mobile m = (Mobile)RootParent;
-
                 m.UpdateTotals();
             }
         }
@@ -1224,9 +1212,9 @@ namespace Server.Items
                 {
                     if (owner is Mobile)
                         break;
-                    if (owner is Item)
+                    if (owner is Item item)
                     {
-                        owner = ((Item)owner).Parent;
+                        owner = item.Parent;
                         continue;
                     }
                     owner = null;
diff --git a/Scripts/Items/Equipment/Spellbooks/BookOfMasteries.cs b/Scripts/Items/Equipment/Spellbooks/BookOfMasteries.cs
index c27f65037..a9e1906be 100644
--- a/Scripts/Items/Equipment/Spellbooks/BookOfMasteries.cs
+++ b/Scripts/Items/Equipment/Spellbooks/BookOfMasteries.cs
@@ -95,9 +95,9 @@ namespace Server.Items
         {
             base.AddProperty(list);
 
-            if (RootParent is Mobile)
+            if (RootParent is Mobile mobile)
             {
-                SkillName sk = ((Mobile)RootParent).Skills.CurrentMastery;
+                SkillName sk = mobile.Skills.CurrentMastery;
 
                 if (sk > 0)
                 {
diff --git a/Scripts/Items/Equipment/Spellbooks/Runebook.cs b/Scripts/Items/Equipment/Spellbooks/Runebook.cs
index 8ef5b7a87..b68b76e99 100644
--- a/Scripts/Items/Equipment/Spellbooks/Runebook.cs
+++ b/Scripts/Items/Equipment/Spellbooks/Runebook.cs
@@ -279,7 +279,7 @@ namespace Server.Items
             if (m_Crafter != null)
                 list.Add(1050043, m_Crafter.TitleName); // crafted by ~1_NAME~
 
-            if (m_Description != null && m_Description.Length > 0)
+            if (!string.IsNullOrEmpty(m_Description))
                 list.Add(m_Description);
         }
 
@@ -365,7 +365,7 @@ namespace Server.Items
 
         public override bool OnDragDrop(Mobile from, Item dropped)
         {
-            if (dropped is RecallRune)
+            if (dropped is RecallRune rune)
             {
                 if (IsLockedDown && from.AccessLevel < AccessLevel.GameMaster)
                 {
@@ -379,7 +379,6 @@ namespace Server.Items
                 {
                     if (dropped is RecallRune)
                     {
-                        RecallRune rune = (RecallRune)dropped;
 
                         if (rune.Marked)
                         {
@@ -543,7 +542,7 @@ namespace Server.Items
                         }
                     }
 
-                    return string.Format("{0}'s ship, the {1}", ownername, shipname);
+                    return $"{ownername}'s ship, the {shipname}";
                 }
 
                 return m_Description;
diff --git a/Scripts/Items/Equipment/Spellbooks/Spellbook.cs b/Scripts/Items/Equipment/Spellbooks/Spellbook.cs
index 74b111826..3c1794a6e 100644
--- a/Scripts/Items/Equipment/Spellbooks/Spellbook.cs
+++ b/Scripts/Items/Equipment/Spellbooks/Spellbook.cs
@@ -778,10 +778,7 @@ namespace Server.Items
                 list.Add(1153213, OwnerName);
             }
 
-            if (m_NegativeAttributes != null)
-            {
-                m_NegativeAttributes.GetProperties(list, this);
-            }
+            m_NegativeAttributes?.GetProperties(list, this);
 
             m_AosSkillBonuses.GetProperties(list);
 
@@ -1253,10 +1250,7 @@ namespace Server.Items
 
             Spellbook book = Find(from, -1, type);
 
-            if (book != null)
-            {
-                book.DisplayTo(from);
-            }
+            book?.DisplayTo(from);
         }
 
         private static void EventSink_CastSpellRequest(CastSpellRequestEventArgs e)
diff --git a/Scripts/Items/Equipment/Suits/BaseCostume.cs b/Scripts/Items/Equipment/Suits/BaseCostume.cs
index ec7c02d0d..5391fde8e 100644
--- a/Scripts/Items/Equipment/Suits/BaseCostume.cs
+++ b/Scripts/Items/Equipment/Suits/BaseCostume.cs
@@ -115,9 +115,7 @@ namespace Server.Items
 
         public static void OnDamaged(Mobile m)
         {
-            BaseCostume costume = m.FindItemOnLayer(Layer.FirstValid) as BaseCostume;
-
-            if (costume != null)
+            if (m.FindItemOnLayer(Layer.FirstValid) is BaseCostume costume)
             {
                 m.AddToBackpack(costume);
             }
diff --git a/Scripts/Items/Equipment/Talismans/BaseTalisman.cs b/Scripts/Items/Equipment/Talismans/BaseTalisman.cs
index dc119f022..94ccf964a 100644
--- a/Scripts/Items/Equipment/Talismans/BaseTalisman.cs
+++ b/Scripts/Items/Equipment/Talismans/BaseTalisman.cs
@@ -476,8 +476,8 @@ namespace Server.Items
                 {
                     MaxHitPoints--;
 
-                    if (Parent is Mobile)
-                        ((Mobile)Parent).LocalOverheadMessage(Network.MessageType.Regular, 0x3B2, 1061121); // Your equipment is severely damaged.
+                    if (Parent is Mobile mobile)
+                        mobile.LocalOverheadMessage(Network.MessageType.Regular, 0x3B2, 1061121); // Your equipment is severely damaged.
 
                     if (m_MaxHitPoints == 0)
                     {
@@ -554,10 +554,8 @@ namespace Server.Items
 
         public override void OnAdded(object parent)
         {
-            if (parent is Mobile)
+            if (parent is Mobile from)
             {
-                Mobile from = (Mobile)parent;
-
                 m_AosSkillBonuses.AddTo(from);
                 m_AosAttributes.AddStatBonuses(from);
 
@@ -579,10 +577,8 @@ namespace Server.Items
 
         public override void OnRemoved(object parent)
         {
-            if (parent is Mobile)
+            if (parent is Mobile from)
             {
-                Mobile from = (Mobile)parent;
-
                 m_AosSkillBonuses.Remove();
                 m_AosAttributes.RemoveStatBonuses(from);
 
@@ -629,9 +625,8 @@ namespace Server.Items
                         Diagnostics.ExceptionLogging.LogException(e);
                     }
 
-                    if (obj is Item)
+                    if (obj is Item item)
                     {
-                        Item item = (Item)obj;
                         int count = 1;
 
                         if (m_Summoner != null && m_Summoner.Amount > 1)
@@ -667,10 +662,8 @@ namespace Server.Items
                         else if (m_Summoner != null && m_Summoner.Name != null)
                             from.SendLocalizedMessage(1074853, m_Summoner.Name.ToString()); // You have been given ~1_name~
                     }
-                    else if (obj is BaseCreature)
+                    else if (obj is BaseCreature mob)
                     {
-                        BaseCreature mob = (BaseCreature)obj;
-
                         if ((m_Creature != null && !m_Creature.Deleted) || from.Followers + mob.ControlSlots > from.FollowersMax)
                         {
                             from.SendLocalizedMessage(1074270); // You have too many followers to summon another one.
@@ -1141,10 +1134,8 @@ namespace Server.Items
                     }
             }
 
-            if (Parent is Mobile)
+            if (Parent is Mobile m)
             {
-                Mobile m = (Mobile)Parent;
-
                 m_AosAttributes.AddStatBonuses(m);
                 m_AosSkillBonuses.AddTo(m);
 
diff --git a/Scripts/Items/Equipment/Talismans/TalismanSummons.cs b/Scripts/Items/Equipment/Talismans/TalismanSummons.cs
index 81facc1ad..70a1ef013 100644
--- a/Scripts/Items/Equipment/Talismans/TalismanSummons.cs
+++ b/Scripts/Items/Equipment/Talismans/TalismanSummons.cs
@@ -765,9 +765,7 @@ namespace Server.Mobiles
                     }
                 }
 
-                GuardedRegion r = Region as GuardedRegion;
-
-                if (r != null && mob.Alive)
+                if (Region is GuardedRegion r && mob.Alive)
                 {
                     IPooledEnumerable eable = GetMobilesInRange(2);
                     foreach (Mobile m in eable)
diff --git a/Scripts/Items/Equipment/Talismans/Talismans.cs b/Scripts/Items/Equipment/Talismans/Talismans.cs
index 727473bae..af16e4978 100644
--- a/Scripts/Items/Equipment/Talismans/Talismans.cs
+++ b/Scripts/Items/Equipment/Talismans/Talismans.cs
@@ -45,7 +45,7 @@ namespace Server.Items
 
         public override void AddNameProperty(ObjectPropertyList list)
         {
-            list.Add(1075200, string.Format("#{0}", (int)Form));
+            list.Add(1075200, $"#{(int)Form}");
         }
 
         public override void Serialize(GenericWriter writer)
@@ -64,10 +64,8 @@ namespace Server.Items
         {
             base.OnRemoved(parent);
 
-            if (parent is Mobile)
+            if (parent is Mobile m)
             {
-                Mobile m = (Mobile)parent;
-
                 AnimalForm.RemoveContext(m, true);
             }
         }
diff --git a/Scripts/Items/Equipment/Weapons/BaseBashing.cs b/Scripts/Items/Equipment/Weapons/BaseBashing.cs
index 5344f60c7..8140799f3 100644
--- a/Scripts/Items/Equipment/Weapons/BaseBashing.cs
+++ b/Scripts/Items/Equipment/Weapons/BaseBashing.cs
@@ -37,8 +37,8 @@ namespace Server.Items
         {
             base.OnHit(attacker, defender, damageBonus);
 
-            if (defender is Mobile)
-                ((Mobile)defender).Stam -= Utility.Random(3, 5); // 3-5 points of stamina loss
+            if (defender is Mobile mobile)
+                mobile.Stam -= Utility.Random(3, 5); // 3-5 points of stamina loss
         }
     }
 }
\ No newline at end of file
diff --git a/Scripts/Items/Equipment/Weapons/BaseRanged.cs b/Scripts/Items/Equipment/Weapons/BaseRanged.cs
index 933748304..374bb1f35 100644
--- a/Scripts/Items/Equipment/Weapons/BaseRanged.cs
+++ b/Scripts/Items/Equipment/Weapons/BaseRanged.cs
@@ -59,8 +59,8 @@ namespace Server.Items
         {
             long nextShoot;
 
-            if (attacker is PlayerMobile)
-                nextShoot = ((PlayerMobile)attacker).NextMovementTime + 250;
+            if (attacker is PlayerMobile playerMobile)
+                nextShoot = playerMobile.NextMovementTime + 250;
             else
                 nextShoot = attacker.LastMoveTime + attacker.ComputeMovementSpeed();
 
diff --git a/Scripts/Items/Equipment/Weapons/BaseStaff.cs b/Scripts/Items/Equipment/Weapons/BaseStaff.cs
index ee5777048..ec4e18f21 100644
--- a/Scripts/Items/Equipment/Weapons/BaseStaff.cs
+++ b/Scripts/Items/Equipment/Weapons/BaseStaff.cs
@@ -37,8 +37,8 @@ namespace Server.Items
         {
             base.OnHit(attacker, defender, damageBonus);
 
-            if (defender is Mobile)
-                ((Mobile)defender).Stam -= Utility.Random(3, 5); // 3-5 points of stamina loss
+            if (defender is Mobile mobile)
+                mobile.Stam -= Utility.Random(3, 5); // 3-5 points of stamina loss
         }
     }
 }
\ No newline at end of file
diff --git a/Scripts/Items/Equipment/Weapons/BaseWeapon.cs b/Scripts/Items/Equipment/Weapons/BaseWeapon.cs
index 54ce52ad2..c8bad26be 100644
--- a/Scripts/Items/Equipment/Weapons/BaseWeapon.cs
+++ b/Scripts/Items/Equipment/Weapons/BaseWeapon.cs
@@ -867,10 +867,7 @@ namespace Server.Items
 
             if (m_AosWeaponAttributes.MageWeapon != 0 && m_AosWeaponAttributes.MageWeapon != 30)
             {
-                if (m_MageMod != null)
-                {
-                    m_MageMod.Remove();
-                }
+                m_MageMod?.Remove();
 
                 m_MageMod = new DefaultSkillMod(SkillName.Magery, true, -30 + m_AosWeaponAttributes.MageWeapon);
                 from.AddSkillMod(m_MageMod);
@@ -1788,10 +1785,7 @@ namespace Server.Items
                 {
                     IRangeDamage rangeDamage = attacker.FindItemOnLayer(Layer.Cloak) as IRangeDamage;
 
-                    if (rangeDamage != null)
-                    {
-                        rangeDamage.AlterRangedDamage(ref phys, ref fire, ref cold, ref pois, ref nrgy, ref chaos, ref direct);
-                    }
+                    rangeDamage?.AlterRangedDamage(ref phys, ref fire, ref cold, ref pois, ref nrgy, ref chaos, ref direct);
                 }
             }
 
@@ -2423,17 +2417,11 @@ namespace Server.Items
                 ((BaseCreature)defender).OnGotMeleeAttack(attacker);
             }
 
-            if (a != null)
-            {
-                a.OnHit(attacker, defender, damage);
-            }
+            a?.OnHit(attacker, defender, damage);
 
             ForceOfNature.OnHit(attacker, defender);
 
-            if (move != null)
-            {
-                move.OnHit(attacker, defender, damage);
-            }
+            move?.OnHit(attacker, defender, damage);
 
             if (defender is IHonorTarget && ((IHonorTarget)defender).ReceivedHonorContext != null)
             {
@@ -2692,14 +2680,14 @@ namespace Server.Items
             TimeSpan duration = TimeSpan.FromSeconds(30);
 
             defender.AddStatMod(
-                new StatMod(StatType.Str, string.Format("[Magic] {0} Curse", StatType.Str), -10, duration));
+                new StatMod(StatType.Str, $"[Magic] {StatType.Str} Curse", -10, duration));
             defender.AddStatMod(
-                new StatMod(StatType.Dex, string.Format("[Magic] {0} Curse", StatType.Dex), -10, duration));
+                new StatMod(StatType.Dex, $"[Magic] {StatType.Dex} Curse", -10, duration));
             defender.AddStatMod(
-                new StatMod(StatType.Int, string.Format("[Magic] {0} Curse", StatType.Int), -10, duration));
+                new StatMod(StatType.Int, $"[Magic] {StatType.Int} Curse", -10, duration));
 
             int percentage = -10; //(int)(SpellHelper.GetOffsetScalar(Caster, m, true) * 100);
-            string args = string.Format("{0}\t{1}\t{2}\t{3}\t{4}\t{5}\t{6}", percentage, percentage, percentage, 10, 10, 10, 10);
+            string args = $"{percentage}\t{percentage}\t{percentage}\t{10}\t{10}\t{10}\t{10}";
 
             Spells.Fourth.CurseSpell.AddEffect(defender, duration, 10, 10, 10);
             BuffInfo.AddBuff(defender, new BuffInfo(BuffIcon.Curse, 1075835, 1075836, duration, defender, args));
@@ -2918,10 +2906,7 @@ namespace Server.Items
 
             BaseWeapon w = m.Weapon as BaseWeapon ?? Fists;
 
-            if (w != null)
-            {
-                w.GetDamageTypes(m, out o[0], out o[1], out o[2], out o[3], out o[4], out o[5], out o[6]);
-            }
+            w?.GetDamageTypes(m, out o[0], out o[1], out o[2], out o[3], out o[4], out o[5], out o[6]);
 
             return o;
         }
@@ -3017,17 +3002,11 @@ namespace Server.Items
 
             WeaponAbility ability = WeaponAbility.GetCurrentAbility(attacker);
 
-            if (ability != null)
-            {
-                ability.OnMiss(attacker, defender);
-            }
+            ability?.OnMiss(attacker, defender);
 
             SpecialMove move = SpecialMove.GetCurrentMove(attacker);
 
-            if (move != null)
-            {
-                move.OnMiss(attacker, defender);
-            }
+            move?.OnMiss(attacker, defender);
 
             if (defender is IHonorTarget && ((IHonorTarget)defender).ReceivedHonorContext != null)
             {
@@ -4174,7 +4153,7 @@ namespace Server.Items
 
             if (name == null)
             {
-                name = string.Format("#{0}", LabelNumber);
+                name = $"#{LabelNumber}";
             }
 
             return name;
@@ -4324,9 +4303,9 @@ namespace Server.Items
                     int prefix = RunicReforging.GetPrefixName(m_ReforgedPrefix);
 
                     if (m_ReforgedSuffix == ReforgedSuffix.None)
-                        list.Add(1151757, string.Format("#{0}\t{1}", prefix, GetNameString())); // ~1_PREFIX~ ~2_ITEM~
+                        list.Add(1151757, $"#{prefix}\t{GetNameString()}"); // ~1_PREFIX~ ~2_ITEM~
                     else
-                        list.Add(1151756, string.Format("#{0}\t{1}\t#{2}", prefix, GetNameString(), RunicReforging.GetSuffixName(m_ReforgedSuffix))); // ~1_PREFIX~ ~2_ITEM~ of ~3_SUFFIX~
+                        list.Add(1151756, $"#{prefix}\t{GetNameString()}\t#{RunicReforging.GetSuffixName(m_ReforgedSuffix)}"); // ~1_PREFIX~ ~2_ITEM~ of ~3_SUFFIX~
                 }
                 else if (m_ReforgedSuffix != ReforgedSuffix.None)
                 {
@@ -4340,7 +4319,7 @@ namespace Server.Items
             #region High Seas
             else if (SearingWeapon)
             {
-                list.Add(1151318, string.Format("#{0}", LabelNumber));
+                list.Add(1151318, $"#{LabelNumber}");
             }
             #endregion
             else if (Name == null)
@@ -4500,10 +4479,7 @@ namespace Server.Items
             if (m_NegativeAttributes != null)
                 m_NegativeAttributes.GetProperties(list, this);
 
-            if (m_AosSkillBonuses != null)
-            {
-                m_AosSkillBonuses.GetProperties(list);
-            }
+            m_AosSkillBonuses?.GetProperties(list);
 
             if (RaceDefinitions.GetRequiredRace(this) == Race.Elf)
             {
@@ -5062,7 +5038,7 @@ namespace Server.Items
 
             list.Add(1061168, "{0}\t{1}", MinDamage.ToString(), MaxDamage.ToString()); // weapon damage ~1_val~ - ~2_val~
 
-            list.Add(1061167, string.Format("{0}s", Speed)); // weapon speed ~1_val~
+            list.Add(1061167, $"{Speed}s"); // weapon speed ~1_val~
 
             if (MaxRange > 1)
             {
diff --git a/Scripts/Items/Equipment/Weapons/IDWand.cs b/Scripts/Items/Equipment/Weapons/IDWand.cs
index b8b773cb7..8d01901e9 100644
--- a/Scripts/Items/Equipment/Weapons/IDWand.cs
+++ b/Scripts/Items/Equipment/Weapons/IDWand.cs
@@ -32,10 +32,10 @@ namespace Server.Items
 
         public override bool OnWandTarget(Mobile from, object o)
         {
-            if (o is BaseWeapon)
-                ((BaseWeapon)o).Identified = true;
-            else if (o is BaseArmor)
-                ((BaseArmor)o).Identified = true;
+            if (o is BaseWeapon baseWeapon)
+                baseWeapon.Identified = true;
+            else if (o is BaseArmor baseArmor)
+                baseArmor.Identified = true;
 
             return (o is Item);
         }
diff --git a/Scripts/Items/Equipment/Weapons/ShepherdsCrook.cs b/Scripts/Items/Equipment/Weapons/ShepherdsCrook.cs
index 82ef2489d..6cd7bc9dd 100644
--- a/Scripts/Items/Equipment/Weapons/ShepherdsCrook.cs
+++ b/Scripts/Items/Equipment/Weapons/ShepherdsCrook.cs
@@ -70,10 +70,8 @@ namespace Server.Items
 
             protected override void OnTarget(Mobile from, object targ)
             {
-                if (targ is BaseCreature)
+                if (targ is BaseCreature bc)
                 {
-                    BaseCreature bc = (BaseCreature)targ;
-
                     if (IsHerdable(bc))
                     {
                         if (bc.Controlled)
@@ -107,9 +105,7 @@ namespace Server.Items
 
                 Map map = bc.Map;
 
-                ChampionSpawnRegion region = Region.Find(bc.Home, map) as ChampionSpawnRegion;
-
-                if (region != null)
+                if (Region.Find(bc.Home, map) is ChampionSpawnRegion region)
                 {
                     ChampionSpawn spawn = region.ChampionSpawn;
 
@@ -140,7 +136,7 @@ namespace Server.Items
 
                 protected override void OnTarget(Mobile from, object targ)
                 {
-                    if (targ is IPoint2D)
+                    if (targ is IPoint2D p)
                     {
                         double min = m_Creature.CurrentTameSkill - 30;
                         double max = m_Creature.CurrentTameSkill + 30 + Utility.Random(10);
@@ -150,7 +146,6 @@ namespace Server.Items
 
                         if (from.CheckTargetSkill(SkillName.Herding, m_Creature, min, max))
                         {
-                            IPoint2D p = (IPoint2D)targ;
 
                             if (targ != from)
                                 p = new Point2D(p.X, p.Y);
diff --git a/Scripts/Items/Functional/Ankhs.cs b/Scripts/Items/Functional/Ankhs.cs
index 6cb962804..d48039287 100644
--- a/Scripts/Items/Functional/Ankhs.cs
+++ b/Scripts/Items/Functional/Ankhs.cs
@@ -12,8 +12,8 @@ namespace Server.Items
         public const int LockRange = 2;
         public static void GetContextMenuEntries(Mobile from, Item item, List<ContextMenuEntry> list)
         {
-            if (from is PlayerMobile)
-                list.Add(new LockKarmaEntry((PlayerMobile)from));
+            if (from is PlayerMobile playerMobile)
+                list.Add(new LockKarmaEntry(playerMobile));
 
             list.Add(new ResurrectEntry(from, item));
 
diff --git a/Scripts/Items/Functional/AuctionSafe/Auction.cs b/Scripts/Items/Functional/AuctionSafe/Auction.cs
index 9b35269fb..38ce19e95 100644
--- a/Scripts/Items/Functional/AuctionSafe/Auction.cs
+++ b/Scripts/Items/Functional/AuctionSafe/Auction.cs
@@ -225,9 +225,7 @@ namespace Server.Engines.Auction
             if (!OnGoing || InClaimPeriod || Buyout <= 0)
                 return false;
 
-            Account acct = m.Account as Account;
-
-            if (acct != null)
+            if (m.Account is Account acct)
             {
                 if (!acct.WithdrawGold(Buyout))
                 {
@@ -267,10 +265,7 @@ namespace Server.Engines.Auction
                 name = "the item you bid on";
             }
 
-            NewMaginciaMessage message = new NewMaginciaMessage(null, 1156427, string.Format("{0}\t{1}\t{2}",
-                                                    name,
-                                                    CurrentPlatBid.ToString("N0", CultureInfo.GetCultureInfo("en-US")),
-                                                    CurrentGoldBid.ToString("N0", CultureInfo.GetCultureInfo("en-US"))));
+            NewMaginciaMessage message = new NewMaginciaMessage(null, 1156427, $"{name}\t{CurrentPlatBid.ToString("N0", CultureInfo.GetCultureInfo("en-US"))}\t{CurrentGoldBid.ToString("N0", CultureInfo.GetCultureInfo("en-US"))}");
             /*  You have been out bid in an auction for ~1_ITEMNAME~. The current winning bid amount is 
              * ~2_BIDAMT~plat and ~3_BIDAMT~gp.*/
             MaginciaLottoSystem.SendMessageTo(to, message);
@@ -315,10 +310,7 @@ namespace Server.Engines.Auction
                     name = "the item you bid on";
                 }
 
-                NewMaginciaMessage message = new NewMaginciaMessage(null, isPublic ? 1158078 : 1156426, TimeSpan.FromHours(72), string.Format("{0}\t{1}\t{2}",
-                                                        name,
-                                                        CurrentPlatBid.ToString("N0", CultureInfo.GetCultureInfo("en-US")),
-                                                        CurrentGoldBid.ToString("N0", CultureInfo.GetCultureInfo("en-US"))));
+                NewMaginciaMessage message = new NewMaginciaMessage(null, isPublic ? 1158078 : 1156426, TimeSpan.FromHours(72), $"{name}\t{CurrentPlatBid.ToString("N0", CultureInfo.GetCultureInfo("en-US"))}\t{CurrentGoldBid.ToString("N0", CultureInfo.GetCultureInfo("en-US"))}");
                 /*  You have won an auction for ~1_ITEMNAME~! Your bid amount of ~2_BIDAMT~plat and ~3_BIDAMT~gp won the auction. 
                  *  You have 3 days from the end of the auction to claim your item or it will be lost.*/
 
@@ -328,12 +320,10 @@ namespace Server.Engines.Auction
                 {
                     VaultLogging.WinAuction(this, m, CurrentBid, HighestBid.CurrentBid);
                 }
-
-                Account a = m.Account as Account;
                 Account b = isPublic ? null : Owner.Account as Account;
                 long dif = HighestBid.CurrentBid - CurrentBid;
 
-                if (a != null && dif > 0)
+                if (m.Account is Account a && dif > 0)
                     a.DepositGold(dif);
 
                 if (b != null)
@@ -341,10 +331,7 @@ namespace Server.Engines.Auction
 
                 if (!isPublic)
                 {
-                    message = new NewMaginciaMessage(null, new TextDefinition(1156428), TimeSpan.FromHours(24), string.Format("{0}\t{1}\t{2}",
-                                                            name,
-                                                            CurrentPlatBid.ToString("N0", CultureInfo.GetCultureInfo("en-US")),
-                                                            CurrentGoldBid.ToString("N0", CultureInfo.GetCultureInfo("en-US"))));
+                    message = new NewMaginciaMessage(null, new TextDefinition(1156428), TimeSpan.FromHours(24), $"{name}\t{CurrentPlatBid.ToString("N0", CultureInfo.GetCultureInfo("en-US"))}\t{CurrentGoldBid.ToString("N0", CultureInfo.GetCultureInfo("en-US"))}");
                     /*Your auction for ~1_ITEMNAME~ has ended with a winning bid of ~2_BIDAMT~plat and ~3_BIDAMT~gp. The winning bid has 
                      *been deposited into your currency account.*/
                     MaginciaLottoSystem.SendMessageTo(Owner, message);
@@ -385,16 +372,11 @@ namespace Server.Engines.Auction
                         name = "the item you bid on";
                     }
 
-                    NewMaginciaMessage mes = new NewMaginciaMessage(null, new TextDefinition(1156454), string.Format("{0}\t{1}\t{2}",
-                                                                CurrentPlatBid.ToString("N0", CultureInfo.GetCultureInfo("en-US")),
-                                                                CurrentGoldBid.ToString("N0", CultureInfo.GetCultureInfo("en-US")),
-                                                                name));
+                    NewMaginciaMessage mes = new NewMaginciaMessage(null, new TextDefinition(1156454), $"{CurrentPlatBid.ToString("N0", CultureInfo.GetCultureInfo("en-US"))}\t{CurrentGoldBid.ToString("N0", CultureInfo.GetCultureInfo("en-US"))}\t{name}");
                     /*Your winning bid amount of ~1_BIDAMT~plat and ~2_BIDAMT~gp for ~3_ITEMNAME~ has been refunded to you due to house collapse.*/
                     MaginciaLottoSystem.SendMessageTo(bid.Mobile, mes);
 
-                    Account a = bid.Mobile.Account as Account;
-
-                    if (a != null)
+                    if (bid.Mobile.Account is Account a)
                         a.DepositGold(bid.CurrentBid);
                 });
 
@@ -414,10 +396,7 @@ namespace Server.Engines.Auction
 
         public void ClaimPrize(Mobile m)
         {
-            if (Safe != null)
-            {
-                Safe.ClaimPrize(m);
-            }
+            Safe?.ClaimPrize(m);
         }
 
         public void EndClaimPeriod()
@@ -437,7 +416,7 @@ namespace Server.Engines.Auction
 
             if (AuctionItem.LabelNumber != 0)
             {
-                return string.Format("#{0}", AuctionItem.LabelNumber.ToString());
+                return $"#{AuctionItem.LabelNumber.ToString()}";
             }
 
             return AuctionItem.Name;
diff --git a/Scripts/Items/Functional/AuctionSafe/AuctionMap.cs b/Scripts/Items/Functional/AuctionSafe/AuctionMap.cs
index 1ece9a880..0e1a432f4 100644
--- a/Scripts/Items/Functional/AuctionSafe/AuctionMap.cs
+++ b/Scripts/Items/Functional/AuctionSafe/AuctionMap.cs
@@ -79,15 +79,15 @@ namespace Server.Items
         {
             if (AuctionItem == null)
             {
-                list.Add(1156474, string.Format("{0}\t{1}", HouseName, "Unknown")); // Map to Auction ~1_ITEMNAME~: ~2_HOUSE~
+                list.Add(1156474, $"{HouseName}\t{"Unknown"}"); // Map to Auction ~1_ITEMNAME~: ~2_HOUSE~
             }
             else if (AuctionItem.LabelNumber != 0)
             {
-                list.Add(1156474, string.Format("{0}\t#{1}", HouseName, AuctionItem.LabelNumber)); // Map to Auction ~1_ITEMNAME~: ~2_HOUSE~
+                list.Add(1156474, $"{HouseName}\t#{AuctionItem.LabelNumber}"); // Map to Auction ~1_ITEMNAME~: ~2_HOUSE~
             }
             else
             {
-                list.Add(1156474, string.Format("{0}\t{1}", HouseName, AuctionItem.Name)); // Map to Auction ~1_ITEMNAME~: ~2_HOUSE~
+                list.Add(1156474, $"{HouseName}\t{AuctionItem.Name}"); // Map to Auction ~1_ITEMNAME~: ~2_HOUSE~
             }
         }
 
@@ -97,7 +97,7 @@ namespace Server.Items
 
             string[] coord = GetCoords();
 
-            list.Add(1154639, string.Format("{0}\t{1}", coord[0], coord[1])); //  Vendor Located at ~1_loc~ (~2_facet~)
+            list.Add(1154639, $"{coord[0]}\t{coord[1]}"); //  Vendor Located at ~1_loc~ (~2_facet~)
 
             if (!CheckItem())
             {
@@ -138,7 +138,7 @@ namespace Server.Items
 
                 if (Sextant.Format(new Point3D(x, y, z), map, ref xLong, ref yLat, ref xMins, ref yMins, ref xEast, ref ySouth))
                 {
-                    return new string[] { string.Format("{0}° {1}'{2}, {3}° {4}'{5}", yLat, yMins, ySouth ? "S" : "N", xLong, xMins, xEast ? "E" : "W"), map.ToString() };
+                    return new string[] { $"{yLat}° {yMins}'{(ySouth ? "S" : "N")}, {xLong}° {xMins}'{(xEast ? "E" : "W")}", map.ToString() };
                 }
             }
 
@@ -254,9 +254,9 @@ namespace Server.Items
 
             public override void OnClick()
             {
-                if (Clicker is PlayerMobile)
+                if (Clicker is PlayerMobile playerMobile)
                 {
-                    BaseGump.SendGump(new ConfirmTeleportGump(VendorMap, (PlayerMobile)Clicker));
+                    BaseGump.SendGump(new ConfirmTeleportGump(VendorMap, playerMobile));
                 }
             }
         }
@@ -310,7 +310,7 @@ namespace Server.Items
 
                 AddBackground(0, 0, 414, 214, 0x7752);
 
-                AddHtmlLocalized(27, 47, 380, 80, 1156475, string.Format("@{0}@{1}@{2}", AuctionMap.TeleportCost.ToString(), AuctionMap.HouseName, AuctionMap.DeleteDelayMinutes.ToString()), 0xFFFF, false, false); // Please select 'Accept' if you would like to pay ~1_cost~ gold to teleport to auction house ~2_name~. For this price you will also be able to teleport back to this location within the next ~3_minutes~ minutes.
+                AddHtmlLocalized(27, 47, 380, 80, 1156475, $"@{AuctionMap.TeleportCost.ToString()}@{AuctionMap.HouseName}@{AuctionMap.DeleteDelayMinutes.ToString()}", 0xFFFF, false, false); // Please select 'Accept' if you would like to pay ~1_cost~ gold to teleport to auction house ~2_name~. For this price you will also be able to teleport back to this location within the next ~3_minutes~ minutes.
 
                 AddButton(7, 167, 0x7747, 0x7747, 0, GumpButtonType.Reply, 0);
                 AddHtmlLocalized(47, 167, 100, 40, 1150300, 0x4E73, false, false); // CANCEL
diff --git a/Scripts/Items/Functional/AuctionSafe/BidEntry.cs b/Scripts/Items/Functional/AuctionSafe/BidEntry.cs
index 8bdca1165..b81ab55b0 100644
--- a/Scripts/Items/Functional/AuctionSafe/BidEntry.cs
+++ b/Scripts/Items/Functional/AuctionSafe/BidEntry.cs
@@ -36,9 +36,7 @@ namespace Server.Engines.Auction
 
         public void Refund(Auction auction, long amount)
         {
-            Account a = Mobile.Account as Account;
-
-            if (a != null)
+            if (Mobile.Account is Account a)
             {
                 a.DepositGold(amount);
                 VaultLogging.LogRefund(auction, Mobile, amount);
diff --git a/Scripts/Items/Functional/AuctionSafe/Gumps.cs b/Scripts/Items/Functional/AuctionSafe/Gumps.cs
index 60c4aeb12..042c515b6 100644
--- a/Scripts/Items/Functional/AuctionSafe/Gumps.cs
+++ b/Scripts/Items/Functional/AuctionSafe/Gumps.cs
@@ -47,7 +47,7 @@ namespace Server.Engines.Auction
 
         public string Color(string color, string str)
         {
-            return string.Format("<basefont color=#{0}>{1}", color, str);
+            return $"<basefont color=#{color}>{str}";
         }
 
         public virtual void AddGumpLayout()
@@ -183,11 +183,11 @@ namespace Server.Engines.Auction
 
                 if (ts.TotalMinutes > 60)
                 {
-                    AddHtmlLocalized(200, y, 175, 18, 1153091, string.Format("{0}", ts.TotalDays), Gray, false, false); // Lifespan: ~1_val~ days
+                    AddHtmlLocalized(200, y, 175, 18, 1153091, $"{ts.TotalDays}", Gray, false, false); // Lifespan: ~1_val~ days
                 }
                 else
                 {
-                    AddHtmlLocalized(200, y, 175, 18, 1153089, string.Format("{0}", ts.TotalMinutes), Gray, false, false); // Lifespan: ~1_val~ minutes
+                    AddHtmlLocalized(200, y, 175, 18, 1153089, $"{ts.TotalMinutes}", Gray, false, false); // Lifespan: ~1_val~ minutes
                 }
             }
 
@@ -359,7 +359,7 @@ namespace Server.Engines.Auction
                             {
                                 if (Auction.AuctionItem.LabelNumber != 0)
                                 {
-                                    from.SendLocalizedMessage(1152339, string.Format("#{0}", Auction.AuctionItem.LabelNumber)); // A reward of ~1_ITEM~ has been placed in your backpack.
+                                    from.SendLocalizedMessage(1152339, $"#{Auction.AuctionItem.LabelNumber}"); // A reward of ~1_ITEM~ has been placed in your backpack.
                                 }
                                 else
                                 {
@@ -752,10 +752,10 @@ namespace Server.Engines.Auction
                 long plat = bid >= Account.CurrencyThreshold ? bid / Account.CurrencyThreshold : 0;
                 long gold = bid >= Account.CurrencyThreshold ? bid - ((bid / Account.CurrencyThreshold) * Account.CurrencyThreshold) : bid;
 
-                AddHtml(50, y, 58, 22, Color(HGray, string.Format("{0}*****", h.Mobile != null ? h.Mobile.Name.Trim()[0].ToString() : "?")), false, false);
+                AddHtml(50, y, 58, 22, Color(HGray, $"{(h.Mobile != null ? h.Mobile.Name.Trim()[0].ToString() : "?")}*****"), false, false);
                 AddHtml(118, y, 117, 22, Color(HGray, plat.ToString("N0", CultureInfo.GetCultureInfo("en-US"))), false, false);
                 AddHtml(245, y, 117, 22, Color(HGray, gold.ToString("N0", CultureInfo.GetCultureInfo("en-US"))), false, false);
-                AddHtml(372, y, 176, 22, Color(HGray, string.Format("{0}-{1}-{2} {3}", h.BidTime.Year, h.BidTime.Month, h.BidTime.Day, h.BidTime.ToShortTimeString())), false, false);
+                AddHtml(372, y, 176, 22, Color(HGray, $"{h.BidTime.Year}-{h.BidTime.Month}-{h.BidTime.Day} {h.BidTime.ToShortTimeString()}"), false, false);
 
                 y += 24;
             }
@@ -763,7 +763,7 @@ namespace Server.Engines.Auction
 
         public string Color(string color, string str)
         {
-            return string.Format("<basefont color=#{0}>{1}", color, str);
+            return $"<basefont color=#{color}>{str}";
         }
     }
 }
diff --git a/Scripts/Items/Functional/AuctionSafe/Logging.cs b/Scripts/Items/Functional/AuctionSafe/Logging.cs
index 93ffb43f1..18a9eba2e 100644
--- a/Scripts/Items/Functional/AuctionSafe/Logging.cs
+++ b/Scripts/Items/Functional/AuctionSafe/Logging.cs
@@ -23,46 +23,40 @@ namespace Server.Engines.Auction
 
             using (StreamWriter sw = new StreamWriter(path, true))
             {
-                sw.WriteLine(string.Format("{0}: {1}", DateTime.Now, text));
+                sw.WriteLine($"{DateTime.Now}: {text}");
             }
         }
 
         public static void LogRefund(Auction auction, Mobile from, long refund)
         {
-            LogAuctionEvent(auction, string.Format("Refund of {0} to {1}", refund, from));
+            LogAuctionEvent(auction, $"Refund of {refund} to {from}");
         }
 
         public static void NewHighBid(Auction auction, Mobile topBid, Mobile oldBid, long amount)
         {
             if (oldBid != null)
             {
-                LogAuctionEvent(auction, string.Format("{0} has outbid {1} with a high bid of {2}.", topBid, oldBid, amount));
+                LogAuctionEvent(auction, $"{topBid} has outbid {oldBid} with a high bid of {amount}.");
             }
             else
             {
-                LogAuctionEvent(auction, string.Format("{0} has placed a top bid of {1}", topBid, amount));
+                LogAuctionEvent(auction, $"{topBid} has placed a top bid of {amount}");
             }
         }
 
         public static void Buyout(Auction auction, Mobile buyout, long amount)
         {
-            LogAuctionEvent(auction, string.Format("{0} payed {1} buyout to win the auction.", buyout, amount));
+            LogAuctionEvent(auction, $"{buyout} payed {amount} buyout to win the auction.");
         }
 
         public static void WinAuction(Auction auction, Mobile winner, long bid, long reserveBid)
         {
-            LogAuctionEvent(auction, string.Format("{0} has won the auction with a winning bid of {1} [{2} reserve refunded].", winner, bid, reserveBid - bid));
+            LogAuctionEvent(auction, $"{winner} has won the auction with a winning bid of {bid} [{reserveBid - bid} reserve refunded].");
         }
 
         private static string GetTimeStamp(DateTime time)
         {
-            return string.Format(" [{0}-{1}-{2}-{3}-{4}-{5}]",
-                time.Day,
-                time.Month,
-                time.Year,
-                time.Hour,
-                time.Minute,
-                time.Second);
+            return $" [{time.Day}-{time.Month}-{time.Year}-{time.Hour}-{time.Minute}-{time.Second}]";
         }
     }
 }
diff --git a/Scripts/Items/Functional/Automaton/BrokenAutomatonHead.cs b/Scripts/Items/Functional/Automaton/BrokenAutomatonHead.cs
index bee4fbb4e..47ad57e33 100644
--- a/Scripts/Items/Functional/Automaton/BrokenAutomatonHead.cs
+++ b/Scripts/Items/Functional/Automaton/BrokenAutomatonHead.cs
@@ -40,9 +40,9 @@ namespace Server.Items
             if (_Automaton != null)
             {
                 if (_Automaton is BlackrockAutomaton)
-                    list.Add(1157046, string.Format("{0}\t#{1}", _Automaton.Name, "1157178")); // ~1_NAME~'s Broken ~2_TYPE~ Automaton Head
+                    list.Add(1157046, $"{_Automaton.Name}\t#{"1157178"}"); // ~1_NAME~'s Broken ~2_TYPE~ Automaton Head
                 else
-                    list.Add(1157046, string.Format("{0}\t#{1}", _Automaton.Name, CraftResources.GetLocalizationNumber(_Automaton.Resource).ToString())); // ~1_NAME~'s Broken ~2_TYPE~ Automaton Head
+                    list.Add(1157046, $"{_Automaton.Name}\t#{CraftResources.GetLocalizationNumber(_Automaton.Resource).ToString()}"); // ~1_NAME~'s Broken ~2_TYPE~ Automaton Head
             }
             else
             {
@@ -63,9 +63,9 @@ namespace Server.Items
                 else if (from.Backpack.GetAmount(res) < RepairAmount)
                 {
                     if (res == typeof(CrystallineBlackrock))
-                        from.SendLocalizedMessage(1157179, string.Format("\t{0}", _Automaton.Name));
+                        from.SendLocalizedMessage(1157179, $"\t{_Automaton.Name}");
                     else
-                        from.SendLocalizedMessage(1157050, string.Format("#{0}\t{1}", CraftResources.GetLocalizationNumber(_Automaton.Resource).ToString(), _Automaton.Name)); // You need 75 ~1_MATERIAL~ ingots to repair the ~2_CREATURE~.
+                        from.SendLocalizedMessage(1157050, $"#{CraftResources.GetLocalizationNumber(_Automaton.Resource).ToString()}\t{_Automaton.Name}"); // You need 75 ~1_MATERIAL~ ingots to repair the ~2_CREATURE~.
                 }
                 else
                 {
diff --git a/Scripts/Items/Functional/Automaton/KotlAutomatonHead.cs b/Scripts/Items/Functional/Automaton/KotlAutomatonHead.cs
index c392a228e..92ff1e132 100644
--- a/Scripts/Items/Functional/Automaton/KotlAutomatonHead.cs
+++ b/Scripts/Items/Functional/Automaton/KotlAutomatonHead.cs
@@ -23,7 +23,7 @@ namespace Server.Items
 
         public override void AddNameProperty(ObjectPropertyList list)
         {
-            list.Add(1157022, string.Format("#{0}", CraftResources.GetLocalizationNumber(_Resource))); // Rebuilt ~1_MATTYPE~ Automaton Head
+            list.Add(1157022, $"#{CraftResources.GetLocalizationNumber(_Resource)}"); // Rebuilt ~1_MATTYPE~ Automaton Head
         }
 
         public override void OnDoubleClick(Mobile from)
diff --git a/Scripts/Items/Functional/BaseDecayingItem.cs b/Scripts/Items/Functional/BaseDecayingItem.cs
index f9b37d383..1f66adfcf 100644
--- a/Scripts/Items/Functional/BaseDecayingItem.cs
+++ b/Scripts/Items/Functional/BaseDecayingItem.cs
@@ -58,10 +58,8 @@ namespace Server.Items
 
         public virtual void Decay()
         {
-            if (RootParent is Mobile)
+            if (RootParent is Mobile parent)
             {
-                Mobile parent = (Mobile)RootParent;
-
                 if (Name == null)
                     parent.SendLocalizedMessage(1072515, "#" + LabelNumber); // The ~1_name~ expired...
                 else
@@ -85,7 +83,7 @@ namespace Server.Items
 
             if (socket != null && socket.Expires > DateTime.UtcNow)
             {
-                to.SendLocalizedMessage(1072516, string.Format("{0}\t{1}", (Name == null ? string.Format("#{0}", LabelNumber) : Name), socket.Remaining)); // ~1_name~ will expire in ~2_val~ seconds!
+                to.SendLocalizedMessage(1072516, $"{(Name == null ? string.Format("#{0}", LabelNumber) : Name)}\t{socket.Remaining}"); // ~1_name~ will expire in ~2_val~ seconds!
             }
         }
 
diff --git a/Scripts/Items/Functional/BulletinBoards.cs b/Scripts/Items/Functional/BulletinBoards.cs
index a983427b8..cd8dee82a 100644
--- a/Scripts/Items/Functional/BulletinBoards.cs
+++ b/Scripts/Items/Functional/BulletinBoards.cs
@@ -89,11 +89,11 @@ namespace Server.Items
             int minutes = totalSeconds / 60;
 
             if (minutes != 0 && seconds != 0)
-                return string.Format("{0} minute{1} and {2} second{3}", minutes, minutes == 1 ? "" : "s", seconds, seconds == 1 ? "" : "s");
+                return $"{minutes} minute{(minutes == 1 ? "" : "s")} and {seconds} second{(seconds == 1 ? "" : "s")}";
             else if (minutes != 0)
-                return string.Format("{0} minute{1}", minutes, minutes == 1 ? "" : "s");
+                return $"{minutes} minute{(minutes == 1 ? "" : "s")}";
             else
-                return string.Format("{0} second{1}", seconds, seconds == 1 ? "" : "s");
+                return $"{seconds} second{(seconds == 1 ? "" : "s")}";
         }
 
         public static void Initialize()
@@ -157,7 +157,7 @@ namespace Server.Items
 
             int breakout = 0;
 
-            while (thread != null && thread.Thread != null && breakout++ < 10)
+            while (thread?.Thread != null && breakout++ < 10)
                 thread = thread.Thread;
 
             DateTime lastPostTime = DateTime.MinValue;
diff --git a/Scripts/Items/Functional/Campfire.cs b/Scripts/Items/Functional/Campfire.cs
index 115d87b4f..06459ba07 100644
--- a/Scripts/Items/Functional/Campfire.cs
+++ b/Scripts/Items/Functional/Campfire.cs
@@ -145,9 +145,7 @@ namespace Server.Items
 
             foreach (NetState state in eable)
             {
-                PlayerMobile pm = state.Mobile as PlayerMobile;
-
-                if (pm != null && GetEntry(pm) == null)
+                if (state.Mobile is PlayerMobile pm && GetEntry(pm) == null)
                 {
                     CampfireEntry entry = new CampfireEntry(pm, this);
 
diff --git a/Scripts/Items/Functional/ChickenCoop.cs b/Scripts/Items/Functional/ChickenCoop.cs
index 25a3fd3e6..73241d383 100644
--- a/Scripts/Items/Functional/ChickenCoop.cs
+++ b/Scripts/Items/Functional/ChickenCoop.cs
@@ -160,7 +160,7 @@ namespace Server.Items
                         continue;
 
                     AddButton(15, 39 + (i * 20), 10006, 10006, i + 1, GumpButtonType.Reply, 0);
-                    AddHtml(32, 35 + (i * 20), 275, 18, string.Format("<BASEFONT COLOR=#C0C0EE>{0}</BASEFONT>", pet.Name), false, false);
+                    AddHtml(32, 35 + (i * 20), 275, 18, $"<BASEFONT COLOR=#C0C0EE>{pet.Name}</BASEFONT>", false, false);
                 }
             }
 
@@ -494,7 +494,7 @@ namespace Server.Items
                 {
                     Mobile chicken = reader.ReadMobile();
 
-                    if (chicken != null && chicken is BaseCreature)
+                    if (chicken is BaseCreature)
                     {
                         BaseCreature bc = chicken as BaseCreature;
                         bc.IsStabled = true;
diff --git a/Scripts/Items/Functional/CircuitTrapTrainingKit.cs b/Scripts/Items/Functional/CircuitTrapTrainingKit.cs
index 57b175554..47e7cd87b 100644
--- a/Scripts/Items/Functional/CircuitTrapTrainingKit.cs
+++ b/Scripts/Items/Functional/CircuitTrapTrainingKit.cs
@@ -36,7 +36,7 @@ namespace Server.Items
 
         public void OnRemoveTrap(Mobile m)
         {
-            if (m is PlayerMobile)
+            if (m is PlayerMobile playerMobile)
             {
                 if (Path == null || Path.Count == 0)
                 {
@@ -56,16 +56,13 @@ namespace Server.Items
                     }
                 }
 
-                BaseGump.SendGump(new CircuitTrapGump((PlayerMobile)m, this));
+                BaseGump.SendGump(new CircuitTrapGump(playerMobile, this));
             }
         }
 
         public void OnSelfClose(Mobile m)
         {
-            if (Progress != null)
-            {
-                Progress.Clear();
-            }
+            Progress?.Clear();
         }
 
         public void OnProgress(Mobile m, int pick)
@@ -87,9 +84,7 @@ namespace Server.Items
 
         public override void OnDelete()
         {
-            Mobile m = RootParent as Mobile;
-
-            if (m != null)
+            if (RootParent is Mobile m)
             {
                 if (m.HasGump(typeof(CircuitTrapGump)))
                 {
diff --git a/Scripts/Items/Functional/GoblinFloorTrap.cs b/Scripts/Items/Functional/GoblinFloorTrap.cs
index 4e4a7072c..ed6837355 100644
--- a/Scripts/Items/Functional/GoblinFloorTrap.cs
+++ b/Scripts/Items/Functional/GoblinFloorTrap.cs
@@ -167,9 +167,9 @@ namespace Server.Items
 
             protected override void OnTarget(Mobile from, object targeted)
             {
-                if (targeted is IPoint3D)
+                if (targeted is IPoint3D iPoint3D)
                 {
-                    Point3D p = new Point3D((IPoint3D)targeted);
+                    Point3D p = new Point3D(iPoint3D);
                     Region r = Region.Find(p, from.Map);
 
                     if (from.Skills[SkillName.Tinkering].Value < 80)
diff --git a/Scripts/Items/Functional/Grinder.cs b/Scripts/Items/Functional/Grinder.cs
index a735466a0..fa1a8fcc8 100644
--- a/Scripts/Items/Functional/Grinder.cs
+++ b/Scripts/Items/Functional/Grinder.cs
@@ -78,10 +78,8 @@ namespace Server.Items
 
             protected override void OnTarget(Mobile from, object targeted)
             {
-                if (targeted is CoffeePod)
+                if (targeted is CoffeePod pod)
                 {
-                    CoffeePod pod = (CoffeePod)targeted;
-
                     if (!pod.IsChildOf(from.Backpack))
                     {
                         from.SendLocalizedMessage(1042001); // That must be in your pack for you to use it.
diff --git a/Scripts/Items/Functional/HouseCraftables.cs b/Scripts/Items/Functional/HouseCraftables.cs
index cf9c52336..91e867fe3 100644
--- a/Scripts/Items/Functional/HouseCraftables.cs
+++ b/Scripts/Items/Functional/HouseCraftables.cs
@@ -182,7 +182,7 @@ namespace Server.Items
         {
             if (!CraftResources.IsStandard(_Resource))
             {
-                list.Add(1050039, string.Format("#{0}\t{1}", CraftResources.GetLocalizationNumber(_Resource).ToString(), GetNameString())); // ~1_NUMBER~ ~2_ITEMNAME~
+                list.Add(1050039, $"#{CraftResources.GetLocalizationNumber(_Resource).ToString()}\t{GetNameString()}"); // ~1_NUMBER~ ~2_ITEMNAME~
             }
             else
             {
@@ -196,7 +196,7 @@ namespace Server.Items
 
             if (name == null)
             {
-                name = string.Format("#{0}", LabelNumber);
+                name = $"#{LabelNumber}";
             }
 
             return name;
@@ -346,8 +346,8 @@ namespace Server.Items
 
             Timer.DelayCall(TimeSpan.FromSeconds(30), () =>
             {
-                if (Addon is CraftableHouseAddon)
-                    CraftableHouseItem.Replace(this, ((CraftableHouseAddon)Addon).ItemType);
+                if (Addon is CraftableHouseAddon craftableHouseAddon)
+                    CraftableHouseItem.Replace(this, craftableHouseAddon.ItemType);
             });
         }
     }
@@ -502,12 +502,12 @@ namespace Server.Items
             else
                 door = new CraftableMetalHouseDoor(Type, CraftableMetalHouseDoor.GetDoorFacing(Type));
 
-            if (door is IResource)
-                ((IResource)door).Resource = _Resource;
+            if (door is IResource iResource)
+                iResource.Resource = _Resource;
 
-            if (Parent is Container)
+            if (Parent is Container container)
             {
-                ((Container)Parent).DropItem(door);
+                container.DropItem(door);
             }
             else
             {
@@ -714,7 +714,7 @@ namespace Server.Items
         {
             if (!CraftResources.IsStandard(_Resource))
             {
-                list.Add(1050039, string.Format("#{0}\t{1}", CraftResources.GetLocalizationNumber(_Resource).ToString(), GetNameString())); // ~1_NUMBER~ ~2_ITEMNAME~
+                list.Add(1050039, $"#{CraftResources.GetLocalizationNumber(_Resource).ToString()}\t{GetNameString()}"); // ~1_NUMBER~ ~2_ITEMNAME~
             }
             else
             {
@@ -728,7 +728,7 @@ namespace Server.Items
 
             if (name == null)
             {
-                name = string.Format("#{0}", LabelNumber);
+                name = $"#{LabelNumber}";
             }
 
             return name;
@@ -899,7 +899,7 @@ namespace Server.Items
         {
             if (!CraftResources.IsStandard(_Resource))
             {
-                list.Add(1050039, string.Format("#{0}\t{1}", CraftResources.GetLocalizationNumber(_Resource).ToString(), GetNameString())); // ~1_NUMBER~ ~2_ITEMNAME~
+                list.Add(1050039, $"#{CraftResources.GetLocalizationNumber(_Resource).ToString()}\t{GetNameString()}"); // ~1_NUMBER~ ~2_ITEMNAME~
             }
             else
             {
@@ -913,7 +913,7 @@ namespace Server.Items
 
             if (name == null)
             {
-                name = string.Format("#{0}", LabelNumber);
+                name = $"#{LabelNumber}";
             }
 
             return name;
diff --git a/Scripts/Items/Functional/HouseRaffleStone.cs b/Scripts/Items/Functional/HouseRaffleStone.cs
index 6cad2b2e8..de098e4ad 100644
--- a/Scripts/Items/Functional/HouseRaffleStone.cs
+++ b/Scripts/Items/Functional/HouseRaffleStone.cs
@@ -347,7 +347,7 @@ namespace Server.Items
             if (m_TicketPrice == 0)
                 return "FREE";
             else
-                return string.Format("{0} gold", m_TicketPrice);
+                return $"{m_TicketPrice} gold";
         }
 
         public override void GetProperties(ObjectPropertyList list)
@@ -409,7 +409,7 @@ namespace Server.Items
             }
             else
             {
-                from.SendGump(new WarningGump(1150470, 0x7F00, string.Format("You are about to purchase a raffle ticket for the house plot located at {0}.  The ticket price is {1}.  Tickets are non-refundable and you can only purchase one ticket per account.  Do you wish to continue?", FormatLocation(), FormatPrice()), 0xFFFFFF, 420, 280, Purchase_Callback, null)); // CONFIRM TICKET PURCHASE
+                from.SendGump(new WarningGump(1150470, 0x7F00, $"You are about to purchase a raffle ticket for the house plot located at {FormatLocation()}.  The ticket price is {FormatPrice()}.  Tickets are non-refundable and you can only purchase one ticket per account.  Do you wish to continue?", 0xFFFFFF, 420, 280, Purchase_Callback, null)); // CONFIRM TICKET PURCHASE
             }
         }
 
diff --git a/Scripts/Items/Functional/Incubator.cs b/Scripts/Items/Functional/Incubator.cs
index acf0275c6..a33b0f6a1 100644
--- a/Scripts/Items/Functional/Incubator.cs
+++ b/Scripts/Items/Functional/Incubator.cs
@@ -100,8 +100,8 @@ namespace Server.Items
 
             foreach (Item item in Items)
             {
-                if (item is ChickenLizardEgg)
-                    ((ChickenLizardEgg)item).CheckStatus();
+                if (item is ChickenLizardEgg chickenLizardEgg)
+                    chickenLizardEgg.CheckStatus();
             }
         }
 
@@ -118,9 +118,9 @@ namespace Server.Items
 
         public static void IncreaseStage_OnTarget(Mobile from, object targeted)
         {
-            if (targeted is ChickenLizardEgg)
+            if (targeted is ChickenLizardEgg chickenLizardEgg)
             {
-                ((ChickenLizardEgg)targeted).TotalIncubationTime += TimeSpan.FromHours(24);
+                chickenLizardEgg.TotalIncubationTime += TimeSpan.FromHours(24);
                 ((ChickenLizardEgg)targeted).CheckStatus();
             }
         }
diff --git a/Scripts/Items/Functional/JewelryBox/JewelryBoxGump.cs b/Scripts/Items/Functional/JewelryBox/JewelryBoxGump.cs
index 73dd2f5c5..1881e77f1 100644
--- a/Scripts/Items/Functional/JewelryBox/JewelryBoxGump.cs
+++ b/Scripts/Items/Functional/JewelryBox/JewelryBoxGump.cs
@@ -138,8 +138,8 @@ namespace Server.Items
 
             AddHtmlLocalized(50, 30, 100, 20, 1157695, 0x7FF0, false, false); // Select Filter:
 
-            AddHtmlLocalized(41, 350, 123, 20, 1157698, string.Format("{0}@{1}", m_List.Count, m_Box.DefaultMaxItems), 0x7FF0, false, false); // Items: ~1_NUM~ of ~2_MAX~
-            AddHtmlLocalized(212, 350, 123, 20, 1153561, string.Format("{0}@{1}", currentpage, pageCount), 0x7FF0, false, false); // Page ~1_CUR~ of ~2_MAX~
+            AddHtmlLocalized(41, 350, 123, 20, 1157698, $"{m_List.Count}@{m_Box.DefaultMaxItems}", 0x7FF0, false, false); // Items: ~1_NUM~ of ~2_MAX~
+            AddHtmlLocalized(212, 350, 123, 20, 1153561, $"{currentpage}@{pageCount}", 0x7FF0, false, false); // Page ~1_CUR~ of ~2_MAX~
             AddHtmlLocalized(416, 350, 100, 20, 1153562, 0x7FF0, false, false); // <DIV ALIGN="CENTER">PAGE</DIV>
 
             JewelryBoxFilter f = box.Filter;
diff --git a/Scripts/Items/Functional/ParoxysmusAltar.cs b/Scripts/Items/Functional/ParoxysmusAltar.cs
index 1bdf208df..5314cfb72 100644
--- a/Scripts/Items/Functional/ParoxysmusAltar.cs
+++ b/Scripts/Items/Functional/ParoxysmusAltar.cs
@@ -55,10 +55,7 @@ namespace Server.Items
 
             if (ProtectionTable.TryGetValue(m, out t))
             {
-                if (t != null)
-                {
-                    t.Stop();
-                }
+                t?.Stop();
 
                 ProtectionTable.Remove(m);
             }
diff --git a/Scripts/Items/Functional/PowerGenerator.cs b/Scripts/Items/Functional/PowerGenerator.cs
index ba678391a..70508b29d 100644
--- a/Scripts/Items/Functional/PowerGenerator.cs
+++ b/Scripts/Items/Functional/PowerGenerator.cs
@@ -219,7 +219,7 @@ namespace Server.Items
             to.Send(new UnicodeMessage(Serial, ItemID, MessageType.Regular, 0x3B2, 3, "", "", "The generator shoots an arc of electricity at you!"));
             to.BoltEffect(0);
             to.LocalOverheadMessage(MessageType.Regular, 0xC9, true, "* Your body convulses from electric shock *");
-            to.NonlocalOverheadMessage(MessageType.Regular, 0xC9, true, string.Format("* {0} spasms from electric shock *", to.Name));
+            to.NonlocalOverheadMessage(MessageType.Regular, 0xC9, true, $"* {to.Name} spasms from electric shock *");
 
             AOS.Damage(to, to, 60, 0, 0, 0, 0, 100);
 
@@ -567,7 +567,7 @@ namespace Server.Items
                 m_To.PlaySound(0x28);
 
                 m_To.LocalOverheadMessage(MessageType.Regular, 0xC9, true, "* Your body convulses from electric shock *");
-                m_To.NonlocalOverheadMessage(MessageType.Regular, 0xC9, true, string.Format("* {0} spasms from electric shock *", m_To.Name));
+                m_To.NonlocalOverheadMessage(MessageType.Regular, 0xC9, true, $"* {m_To.Name} spasms from electric shock *");
 
                 AOS.Damage(m_To, m_To, 20, 0, 0, 0, 0, 100);
 
diff --git a/Scripts/Items/Functional/PrimevalLichPuzzle.cs b/Scripts/Items/Functional/PrimevalLichPuzzle.cs
index 6193ea207..dbb3610dc 100644
--- a/Scripts/Items/Functional/PrimevalLichPuzzle.cs
+++ b/Scripts/Items/Functional/PrimevalLichPuzzle.cs
@@ -199,39 +199,27 @@ namespace Server.Engines.CannedEvil
         {
             if (null != m_Instance)
             {
-                if (m != null)
-                {
-                    m.SendMessage("Primeval Lich lever puzzle already exists: please delete the existing one first ...");
-                }
+                m?.SendMessage("Primeval Lich lever puzzle already exists: please delete the existing one first ...");
 
                 Utility.WriteConsoleColor(ConsoleColor.Green, "Primeval Lich lever puzzle already exists: please delete the existing one first ...");
 
                 return;
             }
 
-            if (m != null)
-            {
-                m.SendMessage("Generating Primeval Lich lever puzzle...");
-            }
+            m?.SendMessage("Generating Primeval Lich lever puzzle...");
 
             Utility.WriteConsoleColor(ConsoleColor.Green, "Generating Primeval Lich lever puzzle...");
 
             PrimevalLichPuzzle control = new PrimevalLichPuzzle(m);
             if (null == control || control.Deleted)
             {
-                if (m != null)
-                {
-                    m.SendMessage(33, "There was a problem generating the puzzle.");
-                }
+                m?.SendMessage(33, "There was a problem generating the puzzle.");
 
                 Utility.WriteConsoleColor(ConsoleColor.Green, "There was a problem generating the puzzle.");
             }
             else
             {
-                if (m != null)
-                {
-                    m.SendMessage("The puzzle was successfully generated.");
-                }
+                m?.SendMessage("The puzzle was successfully generated.");
 
                 Utility.WriteConsoleColor(ConsoleColor.Green, "The puzzle was successfully generated.");
                 WeakEntityCollection.Add("primevallich", control);
@@ -346,9 +334,8 @@ namespace Server.Engines.CannedEvil
         {
             foreach (Item item in Map.Felucca.GetItemsInRange(altarLoc, 10))
             {
-                if (item is ChampionSpawn)
+                if (item is ChampionSpawn champ)
                 {
-                    ChampionSpawn champ = (ChampionSpawn)item;
                     if (ChampionSpawnType.Infuse == champ.Type)
                         return champ;
                 }
diff --git a/Scripts/Items/Functional/SeedBox/SeedBox.cs b/Scripts/Items/Functional/SeedBox/SeedBox.cs
index 32aea9f20..c59408da1 100644
--- a/Scripts/Items/Functional/SeedBox/SeedBox.cs
+++ b/Scripts/Items/Functional/SeedBox/SeedBox.cs
@@ -42,7 +42,7 @@ namespace Server.Engines.Plants
         }
 
         [CommandProperty(AccessLevel.GameMaster)]
-        public int UniqueCount => Entries == null ? 0 : Entries.Where(e => e != null && e.Seed != null && e.Seed.Amount > 0).Count();
+        public int UniqueCount => Entries == null ? 0 : Entries.Count(e => e?.Seed != null && e.Seed.Amount > 0);
 
         public override int DefaultMaxWeight => 0;
         public override double DefaultWeight => 10.0;
@@ -67,8 +67,8 @@ namespace Server.Engines.Plants
         {
             if (IsChildOf(m.Backpack) || (CheckAccessible(m) && m.InRange(GetWorldLocation(), 3)))
             {
-                if (m is PlayerMobile)
-                    BaseGump.SendGump(new SeedBoxGump((PlayerMobile)m, this));
+                if (m is PlayerMobile playerMobile)
+                    BaseGump.SendGump(new SeedBoxGump(playerMobile, this));
             }
 
             if (m.AccessLevel > AccessLevel.Player)
@@ -106,9 +106,9 @@ namespace Server.Engines.Plants
 
         public override bool OnDragDrop(Mobile from, Item dropped)
         {
-            if (dropped is Seed)
+            if (dropped is Seed seed)
             {
-                return TryAddSeed(from, (Seed)dropped);
+                return TryAddSeed(from, seed);
             }
             else
             {
@@ -178,7 +178,7 @@ namespace Server.Engines.Plants
 
                     from.SendLocalizedMessage(1151846); // You put the seed in the seedbox.
 
-                    if (from is PlayerMobile)
+                    if (from is PlayerMobile playerMobile)
                     {
                         var gump = from.FindGump<SeedBoxGump>();
 
@@ -189,7 +189,7 @@ namespace Server.Engines.Plants
                         }
                         else
                         {
-                            gump = new SeedBoxGump((PlayerMobile)from, this);
+                            gump = new SeedBoxGump(playerMobile, this);
                             gump.CheckPage(entry);
 
                             BaseGump.SendGump(gump);
@@ -299,7 +299,7 @@ namespace Server.Engines.Plants
 
         public SeedEntry GetExisting(Seed seed)
         {
-            return Entries.FirstOrDefault(e => e != null && e.Seed != null && e.Seed.PlantType == seed.PlantType && e.Seed.PlantHue == seed.PlantHue);
+            return Entries.FirstOrDefault(e => e?.Seed != null && e.Seed.PlantType == seed.PlantType && e.Seed.PlantHue == seed.PlantHue);
         }
 
         public override void GetProperties(ObjectPropertyList list)
@@ -311,8 +311,8 @@ namespace Server.Engines.Plants
                 list.Add(1076220); // 4th Year Veteran Reward
             }
 
-            list.Add(1151847, string.Format("{0}\t{1}", TotalCount.ToString(), MaxSeeds.ToString())); // Seeds in Box: ~1_val~ / ~2_val~
-            list.Add(1151848, string.Format("{0}\t{1}", UniqueCount.ToString(), MaxUnique.ToString())); // Unique Seeds In Box: ~1_val~ / ~2_val~
+            list.Add(1151847, $"{TotalCount.ToString()}\t{MaxSeeds.ToString()}"); // Seeds in Box: ~1_val~ / ~2_val~
+            list.Add(1151848, $"{UniqueCount.ToString()}\t{MaxUnique.ToString()}"); // Unique Seeds In Box: ~1_val~ / ~2_val~
         }
 
         private void CheckEntries()
diff --git a/Scripts/Items/Functional/SeedBox/SeedBoxGump.cs b/Scripts/Items/Functional/SeedBox/SeedBoxGump.cs
index c099c2a99..e8f6140fc 100644
--- a/Scripts/Items/Functional/SeedBox/SeedBoxGump.cs
+++ b/Scripts/Items/Functional/SeedBox/SeedBoxGump.cs
@@ -79,7 +79,7 @@ namespace Server.Engines.Plants
 
             if (Pages > 1)
             {
-                AddHtmlLocalized(136, 373, 100, 25, 1151850, string.Format("@{0}@{1}", Page.ToString(), Pages.ToString()), 0x6F7B, false, false);
+                AddHtmlLocalized(136, 373, 100, 25, 1151850, $"@{Page.ToString()}@{Pages.ToString()}", 0x6F7B, false, false);
 
                 if (Page > 1)
                 {
@@ -279,9 +279,7 @@ namespace Server.Engines.Plants
                     User.SendLocalizedMessage(1151849); // Click this button and target a seed to add it here.
                     User.BeginTarget(-1, false, TargetFlags.None, (from, targeted) =>
                         {
-                            Seed seed = targeted as Seed;
-
-                            if (seed != null)
+                            if (targeted is Seed seed)
                             {
                                 if (Box != null && !Box.Deleted && index >= 0)
                                 {
@@ -300,9 +298,7 @@ namespace Server.Engines.Plants
                         User.SendLocalizedMessage(1151849); // Click this button and target a seed to add it here.
                         User.BeginTarget(-1, false, TargetFlags.None, (from, targeted) =>
                             {
-                                Seed seed = targeted as Seed;
-
-                                if (seed != null)
+                                if (targeted is Seed seed)
                                 {
                                     if (Box != null && !Box.Deleted && index >= 0)
                                     {
@@ -321,8 +317,8 @@ namespace Server.Engines.Plants
                     {
                         Box.Entries.Insert(index, null);
 
-                        if (Parent is SeedBoxGump)
-                            ((SeedBoxGump)Parent).CheckPage(Entry);
+                        if (Parent is SeedBoxGump seedBoxGump)
+                            seedBoxGump.CheckPage(Entry);
 
                         RefreshParent(false);
                     }
@@ -334,8 +330,8 @@ namespace Server.Engines.Plants
 
                         Box.TrimEntries();
 
-                        if (Parent is SeedBoxGump)
-                            ((SeedBoxGump)Parent).CheckPage(Entry);
+                        if (Parent is SeedBoxGump seedBoxGump)
+                            seedBoxGump.CheckPage(Entry);
 
                         RefreshParent(false);
                     }
diff --git a/Scripts/Items/Functional/SerpentNest.cs b/Scripts/Items/Functional/SerpentNest.cs
index fbabdb639..d02cc7cc4 100644
--- a/Scripts/Items/Functional/SerpentNest.cs
+++ b/Scripts/Items/Functional/SerpentNest.cs
@@ -112,7 +112,7 @@ namespace Server.Items
         {
             BaseCreature snake = m as BaseCreature;
 
-            if (snake != null && snake.CharmMaster != null)
+            if (snake?.CharmMaster != null)
             {
                 snake.CharmMaster.SendLocalizedMessage(1112588); // The snake begins searching for rare eggs.
                 snake.Frozen = true;
diff --git a/Scripts/Items/Functional/SliderTrapTrainingKit.cs b/Scripts/Items/Functional/SliderTrapTrainingKit.cs
index f84db41f9..19170b659 100644
--- a/Scripts/Items/Functional/SliderTrapTrainingKit.cs
+++ b/Scripts/Items/Functional/SliderTrapTrainingKit.cs
@@ -131,9 +131,9 @@ namespace Server.Items
 
         public void OnRemoveTrap(Mobile from)
         {
-            if (from is PlayerMobile)
+            if (from is PlayerMobile playerMobile)
             {
-                BaseGump.SendGump(new SliderTrapGump((PlayerMobile)from, this));
+                BaseGump.SendGump(new SliderTrapGump(playerMobile, this));
             }
         }
 
diff --git a/Scripts/Items/Functional/WallSafe.cs b/Scripts/Items/Functional/WallSafe.cs
index 1e721616b..a18133704 100644
--- a/Scripts/Items/Functional/WallSafe.cs
+++ b/Scripts/Items/Functional/WallSafe.cs
@@ -275,7 +275,7 @@ namespace Server.Items
                 secureAmount = acct.GetSecureAccountAmount(User);
 
             AddHtmlLocalized(20, 35, 380, 16, 1155859, Safe.HoldAmount.ToString("N0", CultureInfo.GetCultureInfo("en-US")), 0xFFFF, false, false); // Gold Deposited: ~1_AMOUNT~
-            AddHtmlLocalized(20, 65, 380, 16, 1155864, string.Format("{0}\t{1}", User.Name, secureAmount.ToString("N0", CultureInfo.GetCultureInfo("en-US"))), 0xFFFF, false, false); // ~1_NAME~'s Secure Account: ~2_AMOUNT~
+            AddHtmlLocalized(20, 65, 380, 16, 1155864, $"{User.Name}\t{secureAmount.ToString("N0", CultureInfo.GetCultureInfo("en-US"))}", 0xFFFF, false, false); // ~1_NAME~'s Secure Account: ~2_AMOUNT~
 
             AddHtmlLocalized(20, 125, 100, 16, 1155861, 0xFFFF, false, false); // Deposit
             AddButton(75, 125, 4005, 4006, 1, GumpButtonType.Reply, 0);
@@ -327,13 +327,13 @@ namespace Server.Items
                                 {
                                     Safe.HoldAmount = WallSafe.MaxGold;
                                     acct.WithdrawFromSecure(User, left);
-                                    Safe.AddHistory(string.Format("<basefont color=green>{0} +{1}", User.Name, left.ToString("N0", CultureInfo.GetCultureInfo("en-US"))));
+                                    Safe.AddHistory($"<basefont color=green>{User.Name} +{left.ToString("N0", CultureInfo.GetCultureInfo("en-US"))}");
                                 }
                                 else
                                 {
                                     Safe.HoldAmount += v;
                                     acct.WithdrawFromSecure(User, v);
-                                    Safe.AddHistory(string.Format("<basefont color=green>{0} +{1}", User.Name, v.ToString("N0", CultureInfo.GetCultureInfo("en-US"))));
+                                    Safe.AddHistory($"<basefont color=green>{User.Name} +{v.ToString("N0", CultureInfo.GetCultureInfo("en-US"))}");
                                 }
 
                                 from.SendGump(new WallSafeGump(User, Safe));
@@ -368,13 +368,13 @@ namespace Server.Items
                                 {
                                     acct.DepositToSecure(User, left);
                                     Safe.HoldAmount -= left;
-                                    Safe.AddHistory(string.Format("<basefont color=red>{0} -{1}", User.Name, left.ToString("N0", CultureInfo.GetCultureInfo("en-US"))));
+                                    Safe.AddHistory($"<basefont color=red>{User.Name} -{left.ToString("N0", CultureInfo.GetCultureInfo("en-US"))}");
                                 }
                                 else
                                 {
                                     acct.DepositToSecure(User, v);
                                     Safe.HoldAmount -= v;
-                                    Safe.AddHistory(string.Format("<basefont color=red>{0} -{1}", User.Name, v.ToString("N0", CultureInfo.GetCultureInfo("en-US"))));
+                                    Safe.AddHistory($"<basefont color=red>{User.Name} -{v.ToString("N0", CultureInfo.GetCultureInfo("en-US"))}");
                                 }
 
                                 from.SendGump(new WallSafeGump(User, Safe));
diff --git a/Scripts/Items/Internal/AbyssBarrier.cs b/Scripts/Items/Internal/AbyssBarrier.cs
index 34cca27f6..deace2fac 100644
--- a/Scripts/Items/Internal/AbyssBarrier.cs
+++ b/Scripts/Items/Internal/AbyssBarrier.cs
@@ -14,11 +14,10 @@ namespace Server.Items
 
         public override bool OnMoveOver(Mobile m)
         {
-            PlayerMobile mobile = m as PlayerMobile;
 
             if (m.IsStaff())
                 return true;
-            else if (mobile != null)
+            else if (m is PlayerMobile mobile)
             {
 
                 if (mobile.AbyssEntry == false)
diff --git a/Scripts/Items/Internal/BedlamTeleporters.cs b/Scripts/Items/Internal/BedlamTeleporters.cs
index 26a58463a..3e709b74b 100644
--- a/Scripts/Items/Internal/BedlamTeleporters.cs
+++ b/Scripts/Items/Internal/BedlamTeleporters.cs
@@ -31,10 +31,8 @@ namespace Server.Items
                 return;
             }
 
-            if (from is PlayerMobile)
+            if (from is PlayerMobile player)
             {
-                PlayerMobile player = (PlayerMobile)from;
-
                 if (player.Bedlam)
                 {
                     BaseCreature.TeleportPets(player, new Point3D(121, 1682, 0), Map);
diff --git a/Scripts/Items/Internal/CitadelTeleporters.cs b/Scripts/Items/Internal/CitadelTeleporters.cs
index b74c34789..adc017ee5 100644
--- a/Scripts/Items/Internal/CitadelTeleporters.cs
+++ b/Scripts/Items/Internal/CitadelTeleporters.cs
@@ -25,10 +25,8 @@ namespace Server.Items
                 return;
             }
 
-            if (from is PlayerMobile)
+            if (from is PlayerMobile player)
             {
-                PlayerMobile player = (PlayerMobile)from;
-
                 if (QuestHelper.GetQuest(player, typeof(BlackOrderBadgesQuest)) != null || QuestHelper.GetQuest(player, typeof(EvidenceQuest)) != null)
                 {
                     BaseCreature.TeleportPets(player, new Point3D(107, 1883, 0), Map.Malas);
diff --git a/Scripts/Items/Internal/DespiseTeleporter.cs b/Scripts/Items/Internal/DespiseTeleporter.cs
index add001317..cc0195138 100644
--- a/Scripts/Items/Internal/DespiseTeleporter.cs
+++ b/Scripts/Items/Internal/DespiseTeleporter.cs
@@ -210,21 +210,15 @@ namespace Server.Items
 
         public override void OnMapChange()
         {
-            if (Teleporters != null)
-            {
-                Teleporters.ForEach(t => t.Map = Map);
-            }
+            Teleporters?.ForEach(t => t.Map = Map);
         }
 
         public override void OnLocationChange(Point3D old)
         {
-            if (Teleporters != null)
-            {
-                Teleporters.ForEach(t =>
-                    {
-                        t.Location = new Point3D(X + (t.X - old.X), Y + (t.Y - old.Y), Z + (t.Z - old.Z));
-                    });
-            }
+            Teleporters?.ForEach(t =>
+{
+    t.Location = new Point3D(X + (t.X - old.X), Y + (t.Y - old.Y), Z + (t.Z - old.Z));
+});
         }
 
         public override void Delete()
@@ -254,10 +248,7 @@ namespace Server.Items
 
             writer.Write(Teleporters == null ? 0 : Teleporters.Count);
 
-            if (Teleporters != null)
-            {
-                Teleporters.ForEach(t => writer.Write(t));
-            }
+            Teleporters?.ForEach(t => writer.Write(t));
         }
 
         public override void Deserialize(GenericReader reader)
@@ -274,9 +265,7 @@ namespace Server.Items
                 if (Teleporters == null)
                     Teleporters = new List<InternalTeleporter>();
 
-                InternalTeleporter tele = reader.ReadItem() as InternalTeleporter;
-
-                if (tele != null)
+                if (reader.ReadItem() is InternalTeleporter tele)
                 {
                     Teleporters.Add(tele);
                     tele.Master = this;
diff --git a/Scripts/Items/Internal/FlipableAttribute.cs b/Scripts/Items/Internal/FlipableAttribute.cs
index 594cb0cd7..aa17799f9 100644
--- a/Scripts/Items/Internal/FlipableAttribute.cs
+++ b/Scripts/Items/Internal/FlipableAttribute.cs
@@ -28,10 +28,8 @@ namespace Server.Items
 
             protected override void OnTarget(Mobile from, object targeted)
             {
-                if (targeted is Item)
+                if (targeted is Item item)
                 {
-                    Item item = (Item)targeted;
-
                     if (item.Movable == false && from.IsPlayer())
                         return;
 
diff --git a/Scripts/Items/Internal/ItemSockets/Caddellite.cs b/Scripts/Items/Internal/ItemSockets/Caddellite.cs
index 44626dcea..cefa8663d 100644
--- a/Scripts/Items/Internal/ItemSockets/Caddellite.cs
+++ b/Scripts/Items/Internal/ItemSockets/Caddellite.cs
@@ -23,9 +23,9 @@ namespace Server.Items
 
         public static bool CheckDamage(Mobile from, Server.DamageType type)
         {
-            if (from is BaseCreature)
+            if (from is BaseCreature baseCreature)
             {
-                if (KhaldunTastyTreat.UnderInfluence((BaseCreature)from))
+                if (KhaldunTastyTreat.UnderInfluence(baseCreature))
                 {
                     return true;
                 }
@@ -79,10 +79,7 @@ namespace Server.Items
         {
             if (IsCaddellite(from, tool))
             {
-                if (resource != null)
-                {
-                    resource.AttachSocket(new Caddellite());
-                }
+                resource?.AttachSocket(new Caddellite());
 
                 if (0.005 > Utility.RandomDouble())
                 {
@@ -173,15 +170,13 @@ namespace Server.Items
             else
             {
                 BuffInfo.AddBuff(m, new BuffInfo(BuffIcon.CaddelliteInfused, 1158662, 1158677,
-                    string.Format("{0}\t{1}\t{2}\t{3}", equipped != null && equipped.Owner is BaseWeapon ? "100" : "0", equipped != null && equipped.Owner is Spellbook ? "100" : "0", pet != null ? pet.Name : "", pet != null ? "100" : "0")));
+                    $"{(equipped != null && equipped.Owner is BaseWeapon ? "100" : "0")}\t{(equipped != null && equipped.Owner is Spellbook ? "100" : "0")}\t{(pet != null ? pet.Name : "")}\t{(pet != null ? "100" : "0")}"));
             }
         }
 
         public static void OnLogin(LoginEventArgs e)
         {
-            PlayerMobile pm = e.Mobile as PlayerMobile;
-
-            if (pm != null)
+            if (e.Mobile is PlayerMobile pm)
             {
                 UpdateBuff(pm);
             }
diff --git a/Scripts/Items/Internal/ItemSockets/DecayingItemSocket.cs b/Scripts/Items/Internal/ItemSockets/DecayingItemSocket.cs
index 05d9e92b3..1eb9efdbc 100644
--- a/Scripts/Items/Internal/ItemSockets/DecayingItemSocket.cs
+++ b/Scripts/Items/Internal/ItemSockets/DecayingItemSocket.cs
@@ -55,9 +55,7 @@ namespace Server.Items
         {
             if (Expires < DateTime.UtcNow && !Owner.Deleted)
             {
-                var item = Owner as BaseDecayingItem;
-
-                if (item != null)
+                if (Owner is BaseDecayingItem item)
                 {
                     item.Decay();
                 }
diff --git a/Scripts/Items/Internal/ItemSockets/EnchantedHotItem.cs b/Scripts/Items/Internal/ItemSockets/EnchantedHotItem.cs
index 75803c557..6145fd13b 100644
--- a/Scripts/Items/Internal/ItemSockets/EnchantedHotItem.cs
+++ b/Scripts/Items/Internal/ItemSockets/EnchantedHotItem.cs
@@ -47,9 +47,9 @@ namespace Server.Items
 
         public override void OnRemoved()
         {
-            if (Owner is BaseWeapon)
+            if (Owner is BaseWeapon baseWeapon)
             {
-                Owner.Hue = ((BaseWeapon)Owner).GetElementalDamageHue();
+                Owner.Hue = baseWeapon.GetElementalDamageHue();
             }
             else
             {
@@ -59,9 +59,9 @@ namespace Server.Items
 
         public override void OnAfterDuped(ItemSocket oldSocket)
         {
-            if (oldSocket is EnchantedHotItemSocket)
+            if (oldSocket is EnchantedHotItemSocket enchantedHotItemSocket)
             {
-                Container = ((EnchantedHotItemSocket)oldSocket).Container;
+                Container = enchantedHotItemSocket.Container;
             }
         }
 
diff --git a/Scripts/Items/Internal/ItemSockets/HonestyItem.cs b/Scripts/Items/Internal/ItemSockets/HonestyItem.cs
index d378ec111..f35182fa2 100644
--- a/Scripts/Items/Internal/ItemSockets/HonestyItem.cs
+++ b/Scripts/Items/Internal/ItemSockets/HonestyItem.cs
@@ -130,10 +130,7 @@ namespace Server.Items
                     if (honestySocket.HonestyOwner == null)
                         HonestyVirtue.AssignOwner(honestySocket);
 
-                    if (from != null)
-                    {
-                        from.SendLocalizedMessage(1151536); // You have three hours to turn this item in for Honesty credit, otherwise it will cease to be a quest item.
-                    }
+                    from?.SendLocalizedMessage(1151536);
                 }
             }
         }
diff --git a/Scripts/Items/Internal/ItemSockets/SearingWeapon.cs b/Scripts/Items/Internal/ItemSockets/SearingWeapon.cs
index 521c82599..04d9c88c7 100644
--- a/Scripts/Items/Internal/ItemSockets/SearingWeapon.cs
+++ b/Scripts/Items/Internal/ItemSockets/SearingWeapon.cs
@@ -21,9 +21,9 @@ namespace Server.Items
 
         public override void OnRemoved()
         {
-            if (Owner is BaseWeapon)
+            if (Owner is BaseWeapon baseWeapon)
             {
-                ((BaseWeapon)Owner).NegativeAttributes.Brittle = 0;
+                baseWeapon.NegativeAttributes.Brittle = 0;
                 Owner.Hue = ((BaseWeapon)Owner).GetElementalDamageHue();
             }
         }
@@ -98,10 +98,7 @@ namespace Server.Items
                 {
                     SearingWeapon socket = Weapon.GetSocket<SearingWeapon>();
 
-                    if (socket != null)
-                    {
-                        socket.ToggleExtinguish(From);
-                    }
+                    socket?.ToggleExtinguish(From);
                 }
             }
         }
diff --git a/Scripts/Items/Internal/ItemSockets/SlayerSocket.cs b/Scripts/Items/Internal/ItemSockets/SlayerSocket.cs
index b773701ca..1ae05548d 100644
--- a/Scripts/Items/Internal/ItemSockets/SlayerSocket.cs
+++ b/Scripts/Items/Internal/ItemSockets/SlayerSocket.cs
@@ -25,7 +25,7 @@ namespace Server.Items
         {
             if (Owner != null && !Owner.Deleted && Owner.RootParent is Mobile)
             {
-                ((Mobile)Owner.RootParent).SendLocalizedMessage(1155618, string.IsNullOrEmpty(Owner.Name) ? string.Format("#{0}", Owner.LabelNumber) : Owner.Name); // Your ~1_name~'s Tincture of Silver has worn off.
+                ((Mobile)Owner.RootParent).SendLocalizedMessage(1155618, string.IsNullOrEmpty(Owner.Name) ? $"#{Owner.LabelNumber}" : Owner.Name); // Your ~1_name~'s Tincture of Silver has worn off.
             }
         }
 
@@ -48,9 +48,9 @@ namespace Server.Items
 
         public override void OnAfterDuped(ItemSocket oldSocket)
         {
-            if (oldSocket is SlayerSocket)
+            if (oldSocket is SlayerSocket slayerSocket)
             {
-                Slayer = ((SlayerSocket)oldSocket).Slayer;
+                Slayer = slayerSocket.Slayer;
             }
         }
 
diff --git a/Scripts/Items/Internal/MacawSpawner.cs b/Scripts/Items/Internal/MacawSpawner.cs
index e6610def1..7f67b07d0 100644
--- a/Scripts/Items/Internal/MacawSpawner.cs
+++ b/Scripts/Items/Internal/MacawSpawner.cs
@@ -136,14 +136,12 @@ namespace Server.Items
 
             for (int i = 0; i < count; i++)
             {
-                BaseCreature bc = reader.ReadMobile() as BaseCreature;
-
-                if (bc != null)
+                if (reader.ReadMobile() is BaseCreature bc)
                 {
                     Spawn.Add(bc);
 
-                    if (bc is Macaw)
-                        ((Macaw)bc).MacawSpawner = this;
+                    if (bc is Macaw macaw)
+                        macaw.MacawSpawner = this;
                 }
             }
 
diff --git a/Scripts/Items/Internal/PvPWarnTeleporter.cs b/Scripts/Items/Internal/PvPWarnTeleporter.cs
index dfb95778e..bb7c546a2 100644
--- a/Scripts/Items/Internal/PvPWarnTeleporter.cs
+++ b/Scripts/Items/Internal/PvPWarnTeleporter.cs
@@ -18,9 +18,7 @@ namespace Server.Items
 
         public override bool OnMoveOver(Mobile m)
         {
-            PlayerMobile pm = m as PlayerMobile;
-
-            if (pm != null)
+            if (m is PlayerMobile pm)
             {
                 if (pm.DisabledPvpWarning)
                     return base.OnMoveOver(m);
@@ -111,10 +109,7 @@ namespace Server.Items
                     {
                         //BaseCreature.TeleportPets(pm, m_Owner.PointDest, m_Owner.MapDest);
                         //pm.MoveToWorld(m_Owner.PointDest, m_Owner.MapDest);
-                        if (Teleporter != null)
-                        {
-                            Teleporter.DoTeleport(pm);
-                        }
+                        Teleporter?.DoTeleport(pm);
 
                         break;
                     }
diff --git a/Scripts/Items/Internal/Teleporter.cs b/Scripts/Items/Internal/Teleporter.cs
index 944c4f404..8c8e7047d 100644
--- a/Scripts/Items/Internal/Teleporter.cs
+++ b/Scripts/Items/Internal/Teleporter.cs
@@ -760,16 +760,16 @@ namespace Server.Items
             if (ts.TotalHours >= 1)
             {
                 int h = (int)Math.Round(ts.TotalHours);
-                return string.Format("{0} hour{1}", h, (h == 1) ? "" : "s");
+                return $"{h} hour{((h == 1) ? "" : "s")}";
             }
             else if (ts.TotalMinutes >= 1)
             {
                 int m = (int)Math.Round(ts.TotalMinutes);
-                return string.Format("{0} minute{1}", m, (m == 1) ? "" : "s");
+                return $"{m} minute{((m == 1) ? "" : "s")}";
             }
 
             int s = Math.Max((int)Math.Round(ts.TotalSeconds), 0);
-            return string.Format("{0} second{1}", s, (s == 1) ? "" : "s");
+            return $"{s} second{((s == 1) ? "" : "s")}";
         }
 
         public override void StartTeleport(Mobile m)
@@ -1021,10 +1021,7 @@ namespace Server.Items
 
         public override bool OnMoveOver(Mobile m)
         {
-            if (m_Teleporter != null)
-            {
-                m_Teleporter.StopTimer(m);
-            }
+            m_Teleporter?.StopTimer(m);
 
             return true;
         }
diff --git a/Scripts/Items/Internal/TwistedWealdTeleporters.cs b/Scripts/Items/Internal/TwistedWealdTeleporters.cs
index f41857b38..d019b72a1 100644
--- a/Scripts/Items/Internal/TwistedWealdTeleporters.cs
+++ b/Scripts/Items/Internal/TwistedWealdTeleporters.cs
@@ -24,10 +24,8 @@ namespace Server.Items
                 return true;
             }
 
-            if (m is PlayerMobile)
+            if (m is PlayerMobile player)
             {
-                PlayerMobile player = (PlayerMobile)m;
-
                 if (QuestHelper.GetQuest(player, typeof(DreadhornQuest)) != null)
                     return base.OnMoveOver(m);
 
diff --git a/Scripts/Items/Internal/UnderworldTele.cs b/Scripts/Items/Internal/UnderworldTele.cs
index 0c01a2c3c..466a03776 100644
--- a/Scripts/Items/Internal/UnderworldTele.cs
+++ b/Scripts/Items/Internal/UnderworldTele.cs
@@ -16,10 +16,8 @@ namespace Server.Items
 
         public override bool OnMoveOver(Mobile m)
         {
-            if (m is PlayerMobile)
+            if (m is PlayerMobile player)
             {
-                PlayerMobile player = (PlayerMobile)m;
-
                 if (player.AbyssEntry)
                 {
                     return base.OnMoveOver(m);
diff --git a/Scripts/Items/Internal/Waypoint.cs b/Scripts/Items/Internal/Waypoint.cs
index 95a6d51be..3f4a50fbe 100644
--- a/Scripts/Items/Internal/Waypoint.cs
+++ b/Scripts/Items/Internal/Waypoint.cs
@@ -122,14 +122,14 @@ namespace Server.Items
 
         protected override void OnTarget(Mobile from, object targeted)
         {
-            if (targeted is WayPoint)
+            if (targeted is WayPoint wayPoint)
             {
                 if (m_Last != null)
-                    m_Last.NextPoint = (WayPoint)targeted;
+                    m_Last.NextPoint = wayPoint;
             }
-            else if (targeted is IPoint3D)
+            else if (targeted is IPoint3D iPoint3D)
             {
-                Point3D p = new Point3D((IPoint3D)targeted);
+                Point3D p = new Point3D(iPoint3D);
 
                 WayPoint point = new WayPoint(m_Last);
                 point.MoveToWorld(p, from.Map);
diff --git a/Scripts/Items/Quest/AbyssKey.cs b/Scripts/Items/Quest/AbyssKey.cs
index 01586ae86..113e3551d 100644
--- a/Scripts/Items/Quest/AbyssKey.cs
+++ b/Scripts/Items/Quest/AbyssKey.cs
@@ -75,10 +75,8 @@ namespace Server.Items
 
         public virtual void Decay()
         {
-            if (RootParent is Mobile)
+            if (RootParent is Mobile parent)
             {
-                Mobile parent = (Mobile)RootParent;
-
                 if (Name == null)
                     parent.SendLocalizedMessage(1072515, "#" + LabelNumber); // The ~1_name~ expired...
                 else
diff --git a/Scripts/Items/Quest/EnchantedPaints.cs b/Scripts/Items/Quest/EnchantedPaints.cs
index 3854d3126..f78ae327d 100644
--- a/Scripts/Items/Quest/EnchantedPaints.cs
+++ b/Scripts/Items/Quest/EnchantedPaints.cs
@@ -33,9 +33,7 @@ namespace Server.Engines.Quests.Collector
 
         public override void OnDoubleClick(Mobile from)
         {
-            PlayerMobile player = from as PlayerMobile;
-
-            if (player != null)
+            if (from is PlayerMobile player)
             {
                 QuestSystem qs = player.Quest;
 
@@ -83,17 +81,13 @@ namespace Server.Engines.Quests.Collector
                 if (m_Paints.Deleted || !m_Paints.IsChildOf(from.Backpack))
                     return;
 
-                PlayerMobile player = from as PlayerMobile;
-
-                if (player != null)
+                if (from is PlayerMobile player)
                 {
                     QuestSystem qs = player.Quest;
 
                     if (qs is CollectorQuest)
                     {
-                        CaptureImagesObjective obj = qs.FindObjective(typeof(CaptureImagesObjective)) as CaptureImagesObjective;
-
-                        if (obj != null && !obj.Completed)
+                        if (qs.FindObjective(typeof(CaptureImagesObjective)) is CaptureImagesObjective obj && !obj.Completed)
                         {
                             if (targeted is Mobile)
                             {
diff --git a/Scripts/Items/Quest/HagApprenticeCorpse.cs b/Scripts/Items/Quest/HagApprenticeCorpse.cs
index 9f67fda1b..f91e3a235 100644
--- a/Scripts/Items/Quest/HagApprenticeCorpse.cs
+++ b/Scripts/Items/Quest/HagApprenticeCorpse.cs
@@ -33,17 +33,13 @@ namespace Server.Engines.Quests.Hag
             if (!from.InRange(GetWorldLocation(), 2))
                 return;
 
-            PlayerMobile player = from as PlayerMobile;
-
-            if (player != null)
+            if (from is PlayerMobile player)
             {
                 QuestSystem qs = player.Quest;
 
                 if (qs is WitchApprenticeQuest)
                 {
-                    FindApprenticeObjective obj = qs.FindObjective(typeof(FindApprenticeObjective)) as FindApprenticeObjective;
-
-                    if (obj != null && !obj.Completed)
+                    if (qs.FindObjective(typeof(FindApprenticeObjective)) is FindApprenticeObjective obj && !obj.Completed)
                     {
                         if (obj.Corpse == this)
                         {
diff --git a/Scripts/Items/Quest/MagicFlute.cs b/Scripts/Items/Quest/MagicFlute.cs
index 8f0c298bb..a8b2c1bce 100644
--- a/Scripts/Items/Quest/MagicFlute.cs
+++ b/Scripts/Items/Quest/MagicFlute.cs
@@ -27,17 +27,13 @@ namespace Server.Engines.Quests.Hag
 
             from.PlaySound(0x3D);
 
-            PlayerMobile player = from as PlayerMobile;
-
-            if (player != null)
+            if (from is PlayerMobile player)
             {
                 QuestSystem qs = player.Quest;
 
                 if (qs is WitchApprenticeQuest)
                 {
-                    FindZeefzorpulObjective obj = qs.FindObjective(typeof(FindZeefzorpulObjective)) as FindZeefzorpulObjective;
-
-                    if (obj != null && !obj.Completed)
+                    if (qs.FindObjective(typeof(FindZeefzorpulObjective)) is FindZeefzorpulObjective obj && !obj.Completed)
                     {
                         if ((player.Map != Map.Trammel && player.Map != Map.Felucca) || !player.InRange(obj.ImpLocation, 8))
                         {
diff --git a/Scripts/Items/Quest/PlagueBeastBlood.cs b/Scripts/Items/Quest/PlagueBeastBlood.cs
index 64bce4fe8..29baa22c3 100644
--- a/Scripts/Items/Quest/PlagueBeastBlood.cs
+++ b/Scripts/Items/Quest/PlagueBeastBlood.cs
@@ -58,9 +58,7 @@ namespace Server.Items
                     {
                         for (int i = 0; i < pack.Items.Count; i++)
                         {
-                            PlagueBeastMainOrgan main = pack.Items[i] as PlagueBeastMainOrgan;
-
-                            if (main != null && main.Complete)
+                            if (pack.Items[i] is PlagueBeastMainOrgan main && main.Complete)
                                 main.FinishOpening(from);
                         }
                     }
diff --git a/Scripts/Items/Quest/PlagueBeastInnard.cs b/Scripts/Items/Quest/PlagueBeastInnard.cs
index 76d9f9b3b..03e64b80e 100644
--- a/Scripts/Items/Quest/PlagueBeastInnard.cs
+++ b/Scripts/Items/Quest/PlagueBeastInnard.cs
@@ -135,8 +135,8 @@ namespace Server.Items
         {
             if (m_Organ != null && m_Organ.OnDropped(from, dropped, this))
             {
-                if (dropped is PlagueBeastComponent)
-                    m_Organ.Components.Add((PlagueBeastComponent)dropped);
+                if (dropped is PlagueBeastComponent plagueBeastComponent)
+                    m_Organ.Components.Add(plagueBeastComponent);
             }
 
             return true;
diff --git a/Scripts/Items/Quest/PlagueBeastMutationCore.cs b/Scripts/Items/Quest/PlagueBeastMutationCore.cs
index 6f6e2c07d..d09e5d23d 100644
--- a/Scripts/Items/Quest/PlagueBeastMutationCore.cs
+++ b/Scripts/Items/Quest/PlagueBeastMutationCore.cs
@@ -40,7 +40,6 @@ namespace Server.Items
         {
             if (!m_Cut)
             {
-                PlagueBeastLord owner = RootParent as PlagueBeastLord;
 
                 m_Cut = true;
                 Movable = true;
@@ -48,7 +47,7 @@ namespace Server.Items
                 from.AddToBackpack(this);
                 from.LocalOverheadMessage(MessageType.Regular, 0x34, 1071906); // * You remove the plague mutation core from the plague beast, causing it to dissolve into a pile of goo *				
 
-                if (owner != null)
+                if (RootParent is PlagueBeastLord owner)
                     Timer.DelayCall(TimeSpan.FromSeconds(1), KillParent, owner);
 
                 return true;
diff --git a/Scripts/Items/Quest/PlagueBeastOrgans.cs b/Scripts/Items/Quest/PlagueBeastOrgans.cs
index 34124ba59..12eff7dae 100644
--- a/Scripts/Items/Quest/PlagueBeastOrgans.cs
+++ b/Scripts/Items/Quest/PlagueBeastOrgans.cs
@@ -62,9 +62,7 @@ namespace Server.Items
 
         public void AddComponent(PlagueBeastComponent c, int x, int y)
         {
-            Container pack = Parent as Container;
-
-            if (pack != null)
+            if (Parent is Container pack)
                 pack.DropItem(c);
 
             c.Organ = this;
diff --git a/Scripts/Items/Quest/PlagueBeastVein.cs b/Scripts/Items/Quest/PlagueBeastVein.cs
index 1e3b8d68b..3095f64c2 100644
--- a/Scripts/Items/Quest/PlagueBeastVein.cs
+++ b/Scripts/Items/Quest/PlagueBeastVein.cs
@@ -72,9 +72,7 @@ namespace Server.Items
             if (Owner != null)
                 Owner.PlaySound(0x199);
 
-            PlagueBeastRubbleOrgan organ = Organ as PlagueBeastRubbleOrgan;
-
-            if (organ != null)
+            if (Organ is PlagueBeastRubbleOrgan organ)
                 organ.OnVeinCut(from, this);
         }
     }
diff --git a/Scripts/Items/Quest/SAQuestItems.cs b/Scripts/Items/Quest/SAQuestItems.cs
index 52f2d8d0d..db8bf2122 100644
--- a/Scripts/Items/Quest/SAQuestItems.cs
+++ b/Scripts/Items/Quest/SAQuestItems.cs
@@ -64,10 +64,8 @@ namespace Server.Items
                 if (m_Item.Deleted)
                     return;
 
-                if (targeted is AddonComponent)
+                if (targeted is AddonComponent addoncomponent)
                 {
-                    AddonComponent addoncomponent = (AddonComponent)targeted;
-
                     if (addoncomponent is MagicVinesComponent || addoncomponent is StoneWallComponent || addoncomponent is DungeonWallComponent)
                     {
                         int Xs = addoncomponent.X;
diff --git a/Scripts/Items/Quest/WispOrb.cs b/Scripts/Items/Quest/WispOrb.cs
index a50633b90..a06adbf36 100644
--- a/Scripts/Items/Quest/WispOrb.cs
+++ b/Scripts/Items/Quest/WispOrb.cs
@@ -186,25 +186,25 @@ namespace Server.Engines.Despise
         {
             base.GetProperties(list);
 
-            list.Add(1153329, string.Format("#{0}", GetAlignment())); // Alignment: ~1_VAL~
-            list.Add(1153306, string.Format("{0}", GetArmyPower())); // Army Power: ~1_VAL~
+            list.Add(1153329, $"#{GetAlignment()}"); // Alignment: ~1_VAL~
+            list.Add(1153306, $"{GetArmyPower()}"); // Army Power: ~1_VAL~
             list.Add(1153272, m_Pet != null ? m_Pet.Name : "None"); // Controlling: ~1_VAL~
 
             object name = GetAnchorName();
 
             if (name != null)                   //Anchor: ~1_NAME~
             {
-                if (name is int)
-                    list.Add(1153265, string.Format("#{0}", (int)name));
-                else if (name is string)
-                    list.Add(1153265, (string)name);
+                if (name is int i)
+                    list.Add(1153265, $"#{i}");
+                else if (name is string s)
+                    list.Add(1153265, s);
             }
 
             int leash = 1153262 + (int)m_LeashLength;
             int aggr = 1153269 + (int)m_Aggression;
 
-            list.Add(1153260, string.Format("#{0}", leash.ToString())); // Leash: ~1_VAL~
-            list.Add(1153267, string.Format("#{0}", aggr.ToString())); // Aggression: ~1_VAL~
+            list.Add(1153260, $"#{leash.ToString()}"); // Leash: ~1_VAL~
+            list.Add(1153267, $"#{aggr.ToString()}"); // Aggression: ~1_VAL~
         }
 
         public override bool DropToWorld(Mobile m, Point3D p)
@@ -257,9 +257,9 @@ namespace Server.Engines.Despise
             if (m_Anchor == null)
                 m_Anchor = m_Pet.ControlMaster;
 
-            if (m_Anchor is Item)
+            if (m_Anchor is Item item)
             {
-                if (((Item)m_Anchor).HeldBy != null)
+                if (item.HeldBy != null)
                     return ((Item)m_Anchor).HeldBy.Location;
 
                 return ((Item)m_Anchor).GetWorldLocation();
@@ -347,7 +347,7 @@ namespace Server.Engines.Despise
 
             protected override void OnTarget(Mobile from, object targeted)
             {
-                if (targeted is BaseCreature)
+                if (targeted is BaseCreature baseCreature)
                 {
                     DespiseCreature creature = targeted as DespiseCreature;
 
@@ -355,7 +355,7 @@ namespace Server.Engines.Despise
                         from.SendLocalizedMessage(1153286); // That cannot be possessed by a Wisp Orb.
                     else if (m_Orb.Pet == null)
                     {
-                        if (((BaseCreature)targeted).Controlled)
+                        if (baseCreature.Controlled)
                             from.SendLocalizedMessage(1153287); // That creature is already under the control of a Wisp Orb.
                         else if (creature.Power > 5)
                             from.SendLocalizedMessage(1153336); // That creature is too powerful for you to coerce.
@@ -409,22 +409,22 @@ namespace Server.Engines.Despise
             if (m_Anchor == null)
                 return "None";
 
-            if (m_Anchor is Mobile)
-                return ((Mobile)m_Anchor).Name;
+            if (m_Anchor is Mobile mobile)
+                return mobile.Name;
 
-            if (m_Anchor is Item)
+            if (m_Anchor is Item item)
             {
-                if (((Item)m_Anchor).Name != null)
+                if (item.Name != null)
                     return ((Item)m_Anchor).Name;
 
                 return ((Item)m_Anchor).LabelNumber;
             }
 
-            if (m_Anchor is StaticTarget)
-                return string.Format("{0} {1}", ((StaticTarget)m_Anchor).Name, ((StaticTarget)m_Anchor).Location.ToString());
+            if (m_Anchor is StaticTarget staticTarget)
+                return $"{staticTarget.Name} {((StaticTarget)m_Anchor).Location.ToString()}";
 
-            if (m_Anchor is LandTarget)
-                return string.Format("{0} {1}", ((LandTarget)m_Anchor).Name, ((LandTarget)m_Anchor).Location.ToString());
+            if (m_Anchor is LandTarget landTarget)
+                return $"{landTarget.Name} {((LandTarget)m_Anchor).Location.ToString()}";
 
             Point3D p = new Point3D(m_Anchor);
 
@@ -455,10 +455,10 @@ namespace Server.Engines.Despise
 
                 object name = GetAnchorName(); // Your possessed creature is now anchored to ~1_NAME~
 
-                if (name is int)
-                    from.SendLocalizedMessage(1153280, string.Format("#{0}", (int)name));
-                else if (name is string)
-                    from.SendLocalizedMessage(1153280, (string)name);
+                if (name is int i)
+                    from.SendLocalizedMessage(1153280, $"#{i}");
+                else if (name is string s)
+                    from.SendLocalizedMessage(1153280, s);
 
                 m_Pet.ControlTarget = m_Pet.ControlMaster;
                 m_Pet.ControlOrder = OrderType.Follow;
@@ -528,9 +528,9 @@ namespace Server.Engines.Despise
 
             Item item = owner.Backpack.FindItemByType(typeof(WispOrb));
 
-            if (item != null && item is WispOrb)
+            if (item is WispOrb wispOrb)
             {
-                Mobile pet = ((WispOrb)item).Pet;
+                Mobile pet = wispOrb.Pet;
 
                 if (pet != null)
                     pet.MoveToWorld(owner.Location, owner.Map);
@@ -553,15 +553,15 @@ namespace Server.Engines.Despise
             writer.Write((int)m_Alignment);
             writer.Write(m_Conscripted);
 
-            if (m_Anchor is Mobile)
+            if (m_Anchor is Mobile mobile)
             {
                 writer.Write(1);
-                writer.Write((Mobile)m_Anchor);
+                writer.Write(mobile);
             }
-            else if (m_Anchor is Item)
+            else if (m_Anchor is Item item)
             {
                 writer.Write(2);
-                writer.Write((Item)m_Anchor);
+                writer.Write(item);
             }
             else
             {
diff --git a/Scripts/Items/Resource/Bandage.cs b/Scripts/Items/Resource/Bandage.cs
index 0734766cb..16ccf785a 100644
--- a/Scripts/Items/Resource/Bandage.cs
+++ b/Scripts/Items/Resource/Bandage.cs
@@ -128,11 +128,11 @@ namespace Server.Items
                     return;
                 }
 
-                if (targeted is Mobile)
+                if (targeted is Mobile mobile)
                 {
                     if (from.InRange(m_Bandage.GetWorldLocation(), Bandage.Range))
                     {
-                        if (BandageContext.BeginHeal(from, (Mobile)targeted, m_Bandage is EnhancedBandage) != null)
+                        if (BandageContext.BeginHeal(from, mobile, m_Bandage is EnhancedBandage) != null)
                         {
                             NegativeAttributes.OnCombatAction(from);
                             m_Bandage.Consume();
@@ -143,9 +143,9 @@ namespace Server.Items
                         from.SendLocalizedMessage(500295); // You are too far away to do that.
                     }
                 }
-                else if (targeted is PlagueBeastInnard)
+                else if (targeted is PlagueBeastInnard plagueBeastInnard)
                 {
-                    if (((PlagueBeastInnard)targeted).OnBandage(from))
+                    if (plagueBeastInnard.OnBandage(from))
                     {
                         NegativeAttributes.OnCombatAction(from);
                         m_Bandage.Consume();
@@ -159,9 +159,9 @@ namespace Server.Items
 
             protected override void OnNonlocalTarget(Mobile from, object targeted)
             {
-                if (targeted is PlagueBeastInnard)
+                if (targeted is PlagueBeastInnard plagueBeastInnard)
                 {
-                    if (((PlagueBeastInnard)targeted).OnBandage(from))
+                    if (plagueBeastInnard.OnBandage(from))
                     {
                         m_Bandage.Consume();
                     }
@@ -216,10 +216,7 @@ namespace Server.Items
         {
             m_Table.Remove(m_Healer);
 
-            if (m_Timer != null)
-            {
-                m_Timer.Stop();
-            }
+            m_Timer?.Stop();
 
             m_Timer = null;
         }
@@ -637,17 +634,14 @@ namespace Server.Items
 
                 BandageContext context = GetContext(healer);
 
-                if (context != null)
-                {
-                    context.StopHeal();
-                }
+                context?.StopHeal();
 
                 TimeSpan delay = GetDelay(healer, patient);
 
                 if (patient is PlayerMobile)
-                    BuffInfo.AddBuff(healer, new BuffInfo(BuffIcon.Healing, 1002082, 1151400, delay, healer, string.Format("{0}", patient.Name)));
+                    BuffInfo.AddBuff(healer, new BuffInfo(BuffIcon.Healing, 1002082, 1151400, delay, healer, $"{patient.Name}"));
                 else
-                    BuffInfo.AddBuff(healer, new BuffInfo(BuffIcon.Veterinary, 1002167, 1151400, delay, healer, string.Format("{0}", patient.Name)));
+                    BuffInfo.AddBuff(healer, new BuffInfo(BuffIcon.Veterinary, 1002167, 1151400, delay, healer, $"{patient.Name}"));
 
                 context = new BandageContext(healer, patient, delay, enhanced);
 
diff --git a/Scripts/Items/Resource/Cloth.cs b/Scripts/Items/Resource/Cloth.cs
index 55c12f369..323f72974 100644
--- a/Scripts/Items/Resource/Cloth.cs
+++ b/Scripts/Items/Resource/Cloth.cs
@@ -95,9 +95,7 @@ namespace Server.Items
 
             for (int i = 0; i < items.Length; i++)
             {
-                BoltOfCloth boc = items[i] as BoltOfCloth;
-
-                if (boc != null)
+                if (items[i] is BoltOfCloth boc)
                     boc.Scissor(from, null);
             }
         }
@@ -160,9 +158,7 @@ namespace Server.Items
 
             for (int i = 0; i < items.Length; i++)
             {
-                Cloth c = items[i] as Cloth;
-
-                if (c != null)
+                if (items[i] is Cloth c)
                 {
                     int count;
 
diff --git a/Scripts/Items/Resource/Cooking Ingrediants.cs b/Scripts/Items/Resource/Cooking Ingrediants.cs
index 8ed00c2fd..f367594bd 100644
--- a/Scripts/Items/Resource/Cooking Ingrediants.cs	
+++ b/Scripts/Items/Resource/Cooking Ingrediants.cs	
@@ -142,9 +142,9 @@ namespace Server.Items
 
             protected override void OnTarget(Mobile from, object targeted)
             {
-                if (targeted is OracleOfTheSea)
+                if (targeted is OracleOfTheSea oracleOfTheSea)
                 {
-                    if (((OracleOfTheSea)targeted).UsesRemaining >= 5)
+                    if (oracleOfTheSea.UsesRemaining >= 5)
                         from.SendMessage("That is already fully charged!");
                     else
                     {
diff --git a/Scripts/Items/Resource/Cotton.cs b/Scripts/Items/Resource/Cotton.cs
index 370a440ea..2580a5ce7 100644
--- a/Scripts/Items/Resource/Cotton.cs
+++ b/Scripts/Items/Resource/Cotton.cs
@@ -94,10 +94,8 @@ namespace Server.Items
                 if (wheel == null && targeted is AddonComponent)
                     wheel = ((AddonComponent)targeted).Addon as ISpinningWheel;
 
-                if (wheel is Item)
+                if (wheel is Item item)
                 {
-                    Item item = (Item)wheel;
-
                     if (!m_Cotton.IsChildOf(from.Backpack))
                     {
                         from.SendLocalizedMessage(1042001); // That must be in your pack for you to use it.
diff --git a/Scripts/Items/Resource/Flax.cs b/Scripts/Items/Resource/Flax.cs
index 315b69964..04fa2534f 100644
--- a/Scripts/Items/Resource/Flax.cs
+++ b/Scripts/Items/Resource/Flax.cs
@@ -81,10 +81,8 @@ namespace Server.Items
                 if (wheel == null && targeted is AddonComponent)
                     wheel = ((AddonComponent)targeted).Addon as ISpinningWheel;
 
-                if (wheel is Item)
+                if (wheel is Item item)
                 {
-                    Item item = (Item)wheel;
-
                     if (!m_Flax.IsChildOf(from.Backpack))
                     {
                         from.SendLocalizedMessage(1042001); // That must be in your pack for you to use it.
diff --git a/Scripts/Items/Resource/FocusingGemOfVirtueBane.cs b/Scripts/Items/Resource/FocusingGemOfVirtueBane.cs
index f98f63630..59357c50e 100644
--- a/Scripts/Items/Resource/FocusingGemOfVirtueBane.cs
+++ b/Scripts/Items/Resource/FocusingGemOfVirtueBane.cs
@@ -50,10 +50,8 @@ namespace Server.Items
                 return;
             }
 
-            if (obj is Item)
+            if (obj is Item item)
             {
-                Item item = (Item)obj;
-
                 if (!item.IsChildOf(from.Backpack))
                 {
                     from.SendLocalizedMessage(1042001); // That must be in your pack for you to use it.
diff --git a/Scripts/Items/Resource/Niter.cs b/Scripts/Items/Resource/Niter.cs
index 54b99d551..7dcd2e9ae 100644
--- a/Scripts/Items/Resource/Niter.cs
+++ b/Scripts/Items/Resource/Niter.cs
@@ -111,10 +111,8 @@ namespace Server.Items
 
         public void CheckTool(Item tool)
         {
-            if (tool != null && tool is IUsesRemaining)
+            if (tool is IUsesRemaining toolWithUses)
             {
-                IUsesRemaining toolWithUses = (IUsesRemaining)tool;
-
                 toolWithUses.ShowUsesRemaining = true;
 
                 if (toolWithUses.UsesRemaining > 0)
diff --git a/Scripts/Items/Resource/Ore.cs b/Scripts/Items/Resource/Ore.cs
index f5e54e902..edf25a70f 100644
--- a/Scripts/Items/Resource/Ore.cs
+++ b/Scripts/Items/Resource/Ore.cs
@@ -204,10 +204,10 @@ namespace Server.Items
 
                 int itemID = 0;
 
-                if (obj is Item)
-                    itemID = ((Item)obj).ItemID;
-                else if (obj is StaticTarget)
-                    itemID = ((StaticTarget)obj).ItemID;
+                if (obj is Item item)
+                    itemID = item.ItemID;
+                else if (obj is StaticTarget staticTarget)
+                    itemID = staticTarget.ItemID;
 
                 return (itemID == 4017 || (itemID >= 6522 && itemID <= 6569));
             }
@@ -224,10 +224,8 @@ namespace Server.Items
                 }
 
                 #region Combine Ore
-                if (targeted is BaseOre)
+                if (targeted is BaseOre ore)
                 {
-                    BaseOre ore = (BaseOre)targeted;
-
                     if (!ore.Movable)
                     {
                         return;
diff --git a/Scripts/Items/Resource/PlantClippings.cs b/Scripts/Items/Resource/PlantClippings.cs
index 8c9affb33..1019a13fd 100644
--- a/Scripts/Items/Resource/PlantClippings.cs
+++ b/Scripts/Items/Resource/PlantClippings.cs
@@ -46,9 +46,9 @@ namespace Server.Items
             PlantHueInfo info = PlantHueInfo.GetInfo(m_PlantHue);
 
             if (Amount > 1)
-                list.Add(info.IsBright() ? 1113272 : 1113274, string.Format("{0}\t#{1}", Amount.ToString(), info.Name)); //~1_AMOUNT~ bright ~2_COLOR~ plant clippings
+                list.Add(info.IsBright() ? 1113272 : 1113274, $"{Amount.ToString()}\t#{info.Name}"); //~1_AMOUNT~ bright ~2_COLOR~ plant clippings
             else
-                list.Add(info.IsBright() ? 1112121 : 1112122, string.Format("#{0}", info.Name)); //bright ~1_COLOR~ plant clippings
+                list.Add(info.IsBright() ? 1112121 : 1112122, $"#{info.Name}"); //bright ~1_COLOR~ plant clippings
         }
 
         public override bool WillStack(Mobile from, Item dropped)
@@ -58,8 +58,8 @@ namespace Server.Items
 
         public override void OnAfterDuped(Item newItem)
         {
-            if (newItem is IPlantHue)
-                ((IPlantHue)newItem).PlantHue = PlantHue;
+            if (newItem is IPlantHue iPlantHue)
+                iPlantHue.PlantHue = PlantHue;
 
             base.OnAfterDuped(newItem);
         }
diff --git a/Scripts/Items/Resource/ScouringToxin.cs b/Scripts/Items/Resource/ScouringToxin.cs
index 68480a2a9..8509e72b6 100644
--- a/Scripts/Items/Resource/ScouringToxin.cs
+++ b/Scripts/Items/Resource/ScouringToxin.cs
@@ -47,10 +47,8 @@ namespace Server.Items
 
         public void OnTarget(Mobile from, object targeted)
         {
-            if (targeted is Item)
+            if (targeted is Item item)
             {
-                Item item = (Item)targeted;
-
                 if (item.Parent is Mobile)
                 {
                     from.SendLocalizedMessage(1112350); // You cannot scour items that are being worn!
@@ -86,10 +84,8 @@ namespace Server.Items
 
                             foreach (Item it in items)
                             {
-                                if (it is DryReeds)
+                                if (it is DryReeds check)
                                 {
-                                    DryReeds check = (DryReeds)it;
-
                                     if (reed1.PlantHue == check.PlantHue)
                                     {
                                         total += it.Amount;
diff --git a/Scripts/Items/Resource/Seed.cs b/Scripts/Items/Resource/Seed.cs
index 7788971de..9ff158a98 100644
--- a/Scripts/Items/Resource/Seed.cs
+++ b/Scripts/Items/Resource/Seed.cs
@@ -117,12 +117,12 @@ namespace Server.Engines.Plants
             {
                 if (m_ShowType)
                 {
-                    args = string.Format("#{0}\t#{1}", title, typeInfo.Name);
+                    args = $"#{title}\t#{typeInfo.Name}";
                     return typeInfo.GetSeedLabel(hueInfo);
                 }
                 else
                 {
-                    args = string.Format("#{0}", title);
+                    args = $"#{title}";
                     return hueInfo.IsBright() ? 1060839 : 1060838; // [bright] ~1_val~ seed
                 }
             }
@@ -130,12 +130,12 @@ namespace Server.Engines.Plants
             {
                 if (m_ShowType)
                 {
-                    args = string.Format("{0}\t#{1}\t#{2}", Amount, title, typeInfo.Name);
+                    args = $"{Amount}\t#{title}\t#{typeInfo.Name}";
                     return typeInfo.GetSeedLabelPlural(hueInfo);
                 }
                 else
                 {
-                    args = string.Format("{0}\t#{1}", Amount, title);
+                    args = $"{Amount}\t#{title}";
                     return hueInfo.IsBright() ? 1113491 : 1113490; // ~1_amount~ [bright] ~2_val~ seeds
                 }
             }
@@ -160,10 +160,8 @@ namespace Server.Engines.Plants
 
         public override bool WillStack(Mobile from, Item dropped)
         {
-            if (dropped is Seed)
+            if (dropped is Seed other)
             {
-                Seed other = (Seed)dropped;
-
                 if (other.PlantType == m_PlantType && other.PlantHue == m_PlantHue && other.ShowType == m_ShowType)
                     return base.WillStack(from, dropped);
             }
@@ -236,9 +234,9 @@ namespace Server.Engines.Plants
                         }
                     }
                 }
-                else if (targeted is Item)
+                else if (targeted is Item item)
                 {
-                    ((Item)targeted).LabelTo(from, 1061919); // You must use a seed on a bowl of dirt!
+                    item.LabelTo(from, 1061919); // You must use a seed on a bowl of dirt!
                 }
                 else
                 {
diff --git a/Scripts/Items/Resource/Wool.cs b/Scripts/Items/Resource/Wool.cs
index e5c3cbab8..af6319200 100644
--- a/Scripts/Items/Resource/Wool.cs
+++ b/Scripts/Items/Resource/Wool.cs
@@ -94,10 +94,8 @@ namespace Server.Items
                 if (wheel == null && targeted is AddonComponent)
                     wheel = ((AddonComponent)targeted).Addon as ISpinningWheel;
 
-                if (wheel is Item)
+                if (wheel is Item item)
                 {
-                    Item item = (Item)wheel;
-
                     if (!m_Wool.IsChildOf(from.Backpack))
                     {
                         from.SendLocalizedMessage(1042001); // That must be in your pack for you to use it.
diff --git a/Scripts/Items/Resource/YarnsAndThreads.cs b/Scripts/Items/Resource/YarnsAndThreads.cs
index 01fe0f9dd..0baabae0b 100644
--- a/Scripts/Items/Resource/YarnsAndThreads.cs
+++ b/Scripts/Items/Resource/YarnsAndThreads.cs
@@ -91,8 +91,8 @@ namespace Server.Items
                     {
                         m_Material.Consume();
 
-                        if (targeted is Item)
-                            ((Item)targeted).SendLocalizedMessageTo(from, 1010001 + loom.Phase++);
+                        if (targeted is Item item)
+                            item.SendLocalizedMessageTo(from, 1010001 + loom.Phase++);
                     }
                     else
                     {
diff --git a/Scripts/Items/StoreBought/BulkOrderBookCover.cs b/Scripts/Items/StoreBought/BulkOrderBookCover.cs
index 1eb8a453e..e5f9f561a 100644
--- a/Scripts/Items/StoreBought/BulkOrderBookCover.cs
+++ b/Scripts/Items/StoreBought/BulkOrderBookCover.cs
@@ -179,10 +179,8 @@ namespace Server.Items
                 from.SendLocalizedMessage(1071121); // Select the bulk order book you want to replace a cover.
                 from.BeginTarget(-1, false, Targeting.TargetFlags.None, (m, targeted) =>
                     {
-                        if (targeted is BulkOrderBook)
+                        if (targeted is BulkOrderBook bob)
                         {
-                            BulkOrderBook bob = (BulkOrderBook)targeted;
-
                             if (bob.IsChildOf(m.Backpack))
                             {
                                 if (bob.Hue != Hue)
diff --git a/Scripts/Items/StoreBought/DecorativeGuildStone.cs b/Scripts/Items/StoreBought/DecorativeGuildStone.cs
index 71856f14a..0089eaf3b 100644
--- a/Scripts/Items/StoreBought/DecorativeGuildStone.cs
+++ b/Scripts/Items/StoreBought/DecorativeGuildStone.cs
@@ -121,8 +121,8 @@ namespace Server.Items
 
             if (Guild != null)
             {
-                list.Add(string.Format("{0}", Guild.Name));
-                list.Add(string.Format("{0}", Guild.Abbreviation));
+                list.Add($"{Guild.Name}");
+                list.Add($"{Guild.Abbreviation}");
             }
 
             list.Add(1155536); // Shard Bound
@@ -156,7 +156,7 @@ namespace Server.Items
                 AddBackground(0, 0, 520, 245, 0x6DB);
                 AddHtmlLocalized(10, 10, 500, 18, 1114513, g.Name, 0x7FFF, false, false); // <DIV ALIGN=CENTER>~1_TOKEN~</DIV>
                 AddHtmlLocalized(10, 30, 500, 18, 1114513, g.Abbreviation, 0x7FFF, false, false); // <DIV ALIGN=CENTER>~1_TOKEN~</DIV>
-                AddHtmlLocalized(10, 50, 500, 18, 1114513, string.Format("A Guild Created On {0}", ServerList.ServerName), 0x7FFF, false, false); // <DIV ALIGN=CENTER>~1_TOKEN~</DIV>
+                AddHtmlLocalized(10, 50, 500, 18, 1114513, $"A Guild Created On {ServerList.ServerName}", 0x7FFF, false, false); // <DIV ALIGN=CENTER>~1_TOKEN~</DIV>
                 AddHtmlLocalized(10, 150, 500, 18, 1114513, g.Leader != null ? g.Leader.Name : "Unknown", 0x1745, false, false); // <DIV ALIGN=CENTER>~1_TOKEN~</DIV>
 
                 int[] itemIDs = null;
diff --git a/Scripts/Items/StoreBought/GenderChangeToken.cs b/Scripts/Items/StoreBought/GenderChangeToken.cs
index f012e16b8..1626e62b3 100644
--- a/Scripts/Items/StoreBought/GenderChangeToken.cs
+++ b/Scripts/Items/StoreBought/GenderChangeToken.cs
@@ -28,13 +28,13 @@ namespace Server.Items
             {
                 from.SendLocalizedMessage(1073648); // You may only proceed while in your original state...
             }
-            else if (from is PlayerMobile)
+            else if (from is PlayerMobile playerMobile)
             {
                 _HairID = 0;
                 _BeardID = 0;
 
                 from.CloseGump(typeof(GenderChangeConfirmGump));
-                BaseGump.SendGump(new GenderChangeConfirmGump((PlayerMobile)from, this));
+                BaseGump.SendGump(new GenderChangeConfirmGump(playerMobile, this));
             }
         }
 
diff --git a/Scripts/Items/StoreBought/HABPromotionalToken.cs b/Scripts/Items/StoreBought/HABPromotionalToken.cs
index 8d3ab85d6..bcccdf335 100644
--- a/Scripts/Items/StoreBought/HABPromotionalToken.cs
+++ b/Scripts/Items/StoreBought/HABPromotionalToken.cs
@@ -30,7 +30,7 @@ namespace Server.Items
         {
             base.GetProperties(list);
 
-            list.Add(1070998, string.Format("#{0}", 1158657)); // Use this to redeem<br>your ~1_PROMO~
+            list.Add(1070998, $"#{1158657}"); // Use this to redeem<br>your ~1_PROMO~
         }
 
         public override void OnDoubleClick(Mobile from)
diff --git a/Scripts/Items/StoreBought/MysticalPolymorphTotem.cs b/Scripts/Items/StoreBought/MysticalPolymorphTotem.cs
index e64e3a5a8..ef87ce37c 100644
--- a/Scripts/Items/StoreBought/MysticalPolymorphTotem.cs
+++ b/Scripts/Items/StoreBought/MysticalPolymorphTotem.cs
@@ -51,7 +51,7 @@ namespace Server.Items
 
             if (CostumeCreatureName != null)
             {
-                list.Add(1158707, string.Format("{0}", CostumeCreatureName)); // a ~1_name~ costume
+                list.Add(1158707, $"{CostumeCreatureName}"); // a ~1_name~ costume
             }
         }
 
diff --git a/Scripts/Items/StoreBought/NameChangeToken.cs b/Scripts/Items/StoreBought/NameChangeToken.cs
index 47d549155..5466ac911 100644
--- a/Scripts/Items/StoreBought/NameChangeToken.cs
+++ b/Scripts/Items/StoreBought/NameChangeToken.cs
@@ -25,10 +25,10 @@ namespace Server.Items
             {
                 from.SendLocalizedMessage(1062334); // This item must be in your backpack to be used.
             }
-            else if (from is PlayerMobile)
+            else if (from is PlayerMobile playerMobile)
             {
                 from.CloseGump(typeof(NameChangeConfirmGump));
-                BaseGump.SendGump(new NameChangeConfirmGump((PlayerMobile)from, this));
+                BaseGump.SendGump(new NameChangeConfirmGump(playerMobile, this));
             }
         }
 
diff --git a/Scripts/Items/StoreBought/RaceChangeToken.cs b/Scripts/Items/StoreBought/RaceChangeToken.cs
index 99172d97e..519c86d81 100644
--- a/Scripts/Items/StoreBought/RaceChangeToken.cs
+++ b/Scripts/Items/StoreBought/RaceChangeToken.cs
@@ -25,10 +25,10 @@ namespace Server.Items
             {
                 from.SendLocalizedMessage(1062334); // This item must be in your backpack to be used.
             }
-            else if (from is PlayerMobile)
+            else if (from is PlayerMobile playerMobile)
             {
                 from.CloseGump(typeof(RaceChangeConfirmGump));
-                BaseGump.SendGump(new RaceChangeConfirmGump((PlayerMobile)from, this));
+                BaseGump.SendGump(new RaceChangeConfirmGump(playerMobile, this));
             }
         }
 
diff --git a/Scripts/Items/StoreBought/SecretChest.cs b/Scripts/Items/StoreBought/SecretChest.cs
index 8369badfd..ba5e153d1 100644
--- a/Scripts/Items/StoreBought/SecretChest.cs
+++ b/Scripts/Items/StoreBought/SecretChest.cs
@@ -78,7 +78,7 @@ namespace Server.Items
                 {
                     from.SendLocalizedMessage(501747); // It appears to be locked.
                     from.SendLocalizedMessage(1151527); // Enter the key number to open.
-                    from.SendLocalizedMessage(1152346, string.Format("{0}", l.TrialsNumber)); // Number of tries left: ~1_times~
+                    from.SendLocalizedMessage(1152346, $"{l.TrialsNumber}"); // Number of tries left: ~1_times~
                     from.SendGump(new SecretChestGump(this, false));
                 }
                 else
@@ -348,7 +348,7 @@ namespace Server.Items
                             if (l.TrialsNumber > 0)
                             {
                                 from.SendLocalizedMessage(1151590); // The number which you have entered is wrong. You still can't open this chest...                                
-                                from.SendLocalizedMessage(1152346, string.Format("{0}", l.TrialsNumber)); // Number of tries left: ~1_times~
+                                from.SendLocalizedMessage(1152346, $"{l.TrialsNumber}"); // Number of tries left: ~1_times~
                                 Timer.DelayCall(TimeSpan.FromSeconds(0.2), () => from.SendGump(new SecretChestGump(Chest, TempSecretKey, SetEdit)));
                             }
                             else
diff --git a/Scripts/Items/StoreBought/SmugglersEdge.cs b/Scripts/Items/StoreBought/SmugglersEdge.cs
index f778b47eb..b2a65cd4d 100644
--- a/Scripts/Items/StoreBought/SmugglersEdge.cs
+++ b/Scripts/Items/StoreBought/SmugglersEdge.cs
@@ -38,15 +38,15 @@ namespace Server.Items
         {
             base.OnHit(attacker, damageable, damageBonus);
 
-            if (damageable is BaseCreature)
+            if (damageable is BaseCreature baseCreature)
             {
                 if (attacker.FindItemOnLayer(Layer.TwoHanded) != null)
                 {
                     attacker.SendLocalizedMessage(1071501); // Your left hand must be free to steal an item from the creature.
                 }
-                else if (attacker is PlayerMobile)
+                else if (attacker is PlayerMobile playerMobile)
                 {
-                    StealingHandler.HandleSmugglersEdgeSteal((BaseCreature)damageable, (PlayerMobile)attacker);
+                    StealingHandler.HandleSmugglersEdgeSteal(baseCreature, playerMobile);
                 }
             }
         }
@@ -103,15 +103,15 @@ namespace Server.Items
         {
             base.OnHit(attacker, damageable, damageBonus);
 
-            if (damageable is BaseCreature)
+            if (damageable is BaseCreature baseCreature)
             {
                 if (attacker.FindItemOnLayer(Layer.TwoHanded) != null)
                 {
                     attacker.SendLocalizedMessage(1071501); // Your left hand must be free to steal an item from the creature.
                 }
-                else if (attacker is PlayerMobile)
+                else if (attacker is PlayerMobile playerMobile)
                 {
-                    StealingHandler.HandleSmugglersEdgeSteal((BaseCreature)damageable, (PlayerMobile)attacker);
+                    StealingHandler.HandleSmugglersEdgeSteal(baseCreature, playerMobile);
                 }
             }
         }
diff --git a/Scripts/Items/StoreBought/StableSlotIncreaseToken.cs b/Scripts/Items/StoreBought/StableSlotIncreaseToken.cs
index 3efdaec7c..fab90a260 100644
--- a/Scripts/Items/StoreBought/StableSlotIncreaseToken.cs
+++ b/Scripts/Items/StoreBought/StableSlotIncreaseToken.cs
@@ -66,9 +66,7 @@ namespace Server.Items
 
         public void OnUsed(Mobile from)
         {
-            PlayerMobile pm = from as PlayerMobile;
-
-            if (pm != null)
+            if (from is PlayerMobile pm)
             {
                 if (pm.RewardStableSlots >= 21)
                 {
diff --git a/Scripts/Items/StoreBought/UndertakersStaff.cs b/Scripts/Items/StoreBought/UndertakersStaff.cs
index 919806ffa..103a13c65 100644
--- a/Scripts/Items/StoreBought/UndertakersStaff.cs
+++ b/Scripts/Items/StoreBought/UndertakersStaff.cs
@@ -37,7 +37,7 @@ namespace Server.Items
         public override void GetProperties(ObjectPropertyList list)
         {
             base.GetProperties(list);
-            list.Add(1071518, string.Format("#{0}", _SummonAll ? "1071508" : "1071507"));
+            list.Add(1071518, $"#{(_SummonAll ? "1071508" : "1071507")}");
             list.Add(1060584, _Charges.ToString());
         }
 
diff --git a/Scripts/Items/StoreBought/WoodworkersBench.cs b/Scripts/Items/StoreBought/WoodworkersBench.cs
index 3b28cdfc9..ff200c711 100644
--- a/Scripts/Items/StoreBought/WoodworkersBench.cs
+++ b/Scripts/Items/StoreBought/WoodworkersBench.cs
@@ -44,7 +44,7 @@ namespace Server.Items
             {
                 TimeSpan tsRem = (_Table[m].Item2 + TimeSpan.FromMinutes(BonusDuration) - DateTime.UtcNow);
 
-                m.SendLocalizedMessage(1071522, string.Format("{0}\t{1}", tsRem.Minutes.ToString(), tsRem.Seconds.ToString())); // You already have the bench's buff. Time remaining of the buff: ~1_VAL~ min ~2_VAL~ sec
+                m.SendLocalizedMessage(1071522, $"{tsRem.Minutes.ToString()}\t{tsRem.Seconds.ToString()}"); // You already have the bench's buff. Time remaining of the buff: ~1_VAL~ min ~2_VAL~ sec
             }
             else
             {
diff --git a/Scripts/Items/Tools/BagOfSending.cs b/Scripts/Items/Tools/BagOfSending.cs
index 1bb64dfe6..5c044f57a 100644
--- a/Scripts/Items/Tools/BagOfSending.cs
+++ b/Scripts/Items/Tools/BagOfSending.cs
@@ -247,9 +247,8 @@ namespace Server.Items
                 {
                     MessageHelper.SendLocalizedMessageTo(m_Bag, from, 1042544, 0x59); // This item is out of charges.
                 }
-                else if (targeted is Item)
+                else if (targeted is Item item)
                 {
-                    Item item = (Item)targeted;
                     int reqCharges = 1; // (int)Math.Max(1, Math.Ceiling(item.TotalWeight / 10.0));
                                         // change was ML, however reverted during ML period so we can put it at 1
 
diff --git a/Scripts/Items/Tools/BaseRunicTool.cs b/Scripts/Items/Tools/BaseRunicTool.cs
index 529ceb47e..00060f445 100644
--- a/Scripts/Items/Tools/BaseRunicTool.cs
+++ b/Scripts/Items/Tools/BaseRunicTool.cs
@@ -124,29 +124,29 @@ namespace Server.Items
 
         public static void ApplyAttributesTo(Item item, int attributeCount, int min, int max)
         {
-            if (item is FishingPole)
+            if (item is FishingPole fishingPole)
             {
-                ApplyAttributesTo((FishingPole)item, attributeCount, min, max);
+                ApplyAttributesTo(fishingPole, attributeCount, min, max);
             }
-            else if (item is BaseWeapon)
+            else if (item is BaseWeapon baseWeapon)
             {
-                ApplyAttributesTo((BaseWeapon)item, attributeCount, min, max);
+                ApplyAttributesTo(baseWeapon, attributeCount, min, max);
             }
-            else if (item is BaseArmor)
+            else if (item is BaseArmor baseArmor)
             {
-                ApplyAttributesTo((BaseArmor)item, attributeCount, min, max);
+                ApplyAttributesTo(baseArmor, attributeCount, min, max);
             }
-            else if (item is BaseHat)
+            else if (item is BaseHat baseHat)
             {
-                ApplyAttributesTo((BaseHat)item, attributeCount, min, max);
+                ApplyAttributesTo(baseHat, attributeCount, min, max);
             }
-            else if (item is BaseJewel)
+            else if (item is BaseJewel baseJewel)
             {
-                ApplyAttributesTo((BaseJewel)item, attributeCount, min, max);
+                ApplyAttributesTo(baseJewel, attributeCount, min, max);
             }
-            else if (item is Spellbook)
+            else if (item is Spellbook spellbook)
             {
-                ApplyAttributesTo((Spellbook)item, attributeCount, min, max);
+                ApplyAttributesTo(spellbook, attributeCount, min, max);
             }
         }
 
@@ -158,29 +158,29 @@ namespace Server.Items
             int min,
             int max)
         {
-            if (item is FishingPole)
+            if (item is FishingPole fishingPole)
             {
-                ApplyAttributesTo((FishingPole)item, isRunicTool, luckChance, attributeCount, min, max);
+                ApplyAttributesTo(fishingPole, isRunicTool, luckChance, attributeCount, min, max);
             }
-            else if (item is BaseWeapon)
+            else if (item is BaseWeapon baseWeapon)
             {
-                ApplyAttributesTo((BaseWeapon)item, isRunicTool, luckChance, attributeCount, min, max);
+                ApplyAttributesTo(baseWeapon, isRunicTool, luckChance, attributeCount, min, max);
             }
-            else if (item is BaseArmor)
+            else if (item is BaseArmor baseArmor)
             {
-                ApplyAttributesTo((BaseArmor)item, isRunicTool, luckChance, attributeCount, min, max);
+                ApplyAttributesTo(baseArmor, isRunicTool, luckChance, attributeCount, min, max);
             }
-            else if (item is BaseHat)
+            else if (item is BaseHat baseHat)
             {
-                ApplyAttributesTo((BaseHat)item, isRunicTool, luckChance, attributeCount, min, max);
+                ApplyAttributesTo(baseHat, isRunicTool, luckChance, attributeCount, min, max);
             }
-            else if (item is BaseJewel)
+            else if (item is BaseJewel baseJewel)
             {
-                ApplyAttributesTo((BaseJewel)item, isRunicTool, luckChance, attributeCount, min, max);
+                ApplyAttributesTo(baseJewel, isRunicTool, luckChance, attributeCount, min, max);
             }
-            else if (item is Spellbook)
+            else if (item is Spellbook spellbook)
             {
-                ApplyAttributesTo((Spellbook)item, isRunicTool, luckChance, attributeCount, min, max);
+                ApplyAttributesTo(spellbook, isRunicTool, luckChance, attributeCount, min, max);
             }
         }
 
diff --git a/Scripts/Items/Tools/BaseTool.cs b/Scripts/Items/Tools/BaseTool.cs
index e968b6ea1..594520059 100644
--- a/Scripts/Items/Tools/BaseTool.cs
+++ b/Scripts/Items/Tools/BaseTool.cs
@@ -170,9 +170,9 @@ namespace Server.Items
 
             bool res;
 
-            if (tool is ITool)
+            if (tool is ITool iTool)
             {
-                res = ((ITool)tool).CheckAccessible(m, ref num);
+                res = iTool.CheckAccessible(m, ref num);
             }
             else
             {
diff --git a/Scripts/Items/Tools/BraceletOfBinding.cs b/Scripts/Items/Tools/BraceletOfBinding.cs
index 709a1cc7b..be62a416e 100644
--- a/Scripts/Items/Tools/BraceletOfBinding.cs
+++ b/Scripts/Items/Tools/BraceletOfBinding.cs
@@ -379,9 +379,7 @@ namespace Server.Items
 
                 if (m_Bracelet.CheckUse(m_From, false))
                 {
-                    Mobile boundRoot = m_Bracelet.Bound.RootParent as Mobile;
-
-                    if (boundRoot != null)
+                    if (m_Bracelet.Bound.RootParent is Mobile boundRoot)
                     {
                         m_Bracelet.Charges--;
                         Point3D loc = boundRoot.Location;
diff --git a/Scripts/Items/Tools/DisguiseKit.cs b/Scripts/Items/Tools/DisguiseKit.cs
index 95f9211a1..aaf9f28b5 100644
--- a/Scripts/Items/Tools/DisguiseKit.cs
+++ b/Scripts/Items/Tools/DisguiseKit.cs
@@ -206,10 +206,8 @@ namespace Server.Items
 
                 m_From.NameMod = NameList.RandomName(m_From.Female ? "female" : "male");
 
-                if (m_From is PlayerMobile)
+                if (m_From is PlayerMobile pm)
                 {
-                    PlayerMobile pm = (PlayerMobile)m_From;
-
                     if (hair)
                     {
                         pm.SetHairMods(entry.m_ItemID, -2);
@@ -306,10 +304,7 @@ namespace Server.Items
             {
                 InternalTimer t = m_Timers[m];
 
-                if (t != null)
-                {
-                    t.Start();
-                }
+                t?.Start();
             }
         }
 
@@ -324,10 +319,7 @@ namespace Server.Items
             {
                 InternalTimer t = m_Timers[m];
 
-                if (t != null)
-                {
-                    t.Stop();
-                }
+                t?.Stop();
 
                 return true;
             }
@@ -387,9 +379,9 @@ namespace Server.Items
             {
                 m_Player.NameMod = null;
 
-                if (m_Player is PlayerMobile)
+                if (m_Player is PlayerMobile playerMobile)
                 {
-                    ((PlayerMobile)m_Player).SetHairMods(-1, -1);
+                    playerMobile.SetHairMods(-1, -1);
                 }
 
                 RemoveTimer(m_Player);
diff --git a/Scripts/Items/Tools/DyeTubs/DyeTub.cs b/Scripts/Items/Tools/DyeTubs/DyeTub.cs
index 0a9550129..3a3a74478 100644
--- a/Scripts/Items/Tools/DyeTubs/DyeTub.cs
+++ b/Scripts/Items/Tools/DyeTubs/DyeTub.cs
@@ -130,10 +130,8 @@ namespace Server.Items
 
             protected override void OnTarget(Mobile from, object targeted)
             {
-                if (targeted is Item)
+                if (targeted is Item item)
                 {
-                    Item item = (Item)targeted;
-
                     if (item is IDyable && m_Tub.AllowDyables)
                     {
                         if (!from.InRange(m_Tub.GetWorldLocation(), 1) || !from.InRange(item.GetWorldLocation(), 1))
@@ -215,12 +213,10 @@ namespace Server.Items
                     }
                     else if (m_Tub.AllowLeather)
                     {
-                        var armor = item as BaseArmor;
-                        var clothing = item as BaseClothing;
 
-                        if ((armor != null && (armor.MaterialType == ArmorMaterialType.Leather ||
+                        if ((item is BaseArmor armor && (armor.MaterialType == ArmorMaterialType.Leather ||
                             armor.MaterialType == ArmorMaterialType.Studded)) ||
-                            (clothing != null && (clothing.DefaultResource == CraftResource.RegularLeather)) ||
+                            (item is BaseClothing clothing && (clothing.DefaultResource == CraftResource.RegularLeather)) ||
                             m_Tub.CanForceDye(item))
                         {
                             if (!from.InRange(m_Tub.GetWorldLocation(), 1) || !from.InRange(item.GetWorldLocation(), 1))
@@ -248,9 +244,8 @@ namespace Server.Items
                     }
                     else if (m_Tub.AllowMetal)
                     {
-                        var armor = item as BaseArmor;
 
-                        if ((armor != null && armor.MaterialType >= ArmorMaterialType.Ringmail && armor.MaterialType <= ArmorMaterialType.Plate) || m_Tub.CanForceDye(item))
+                        if ((item is BaseArmor armor && armor.MaterialType >= ArmorMaterialType.Ringmail && armor.MaterialType <= ArmorMaterialType.Plate) || m_Tub.CanForceDye(item))
                         {
                             if (!from.InRange(m_Tub.GetWorldLocation(), 1) || !from.InRange(item.GetWorldLocation(), 1))
                             {
diff --git a/Scripts/Items/Tools/DyeTubs/Dyes.cs b/Scripts/Items/Tools/DyeTubs/Dyes.cs
index 920626945..a364c495f 100644
--- a/Scripts/Items/Tools/DyeTubs/Dyes.cs
+++ b/Scripts/Items/Tools/DyeTubs/Dyes.cs
@@ -44,10 +44,8 @@ namespace Server.Items
 
             protected override void OnTarget(Mobile from, object targeted)
             {
-                if (targeted is DyeTub)
+                if (targeted is DyeTub tub)
                 {
-                    DyeTub tub = (DyeTub)targeted;
-
                     if (tub.Redyable)
                     {
                         if (tub.CustomHuePicker == null)
diff --git a/Scripts/Items/Tools/FishingPole.cs b/Scripts/Items/Tools/FishingPole.cs
index f12bbf5af..45b5591d8 100644
--- a/Scripts/Items/Tools/FishingPole.cs
+++ b/Scripts/Items/Tools/FishingPole.cs
@@ -457,15 +457,15 @@ namespace Server.Items
 
             if (m_HookType > HookType.None && hookCliloc > 0)
             {
-                list.Add(1150885, string.Format("#{0}", hookCliloc)); //special hook: ~1_token~
-                list.Add(1150889, string.Format("#{0}", BaseFishingHook.GetCondition(m_HookUses))); //Hook condition: ~1_val~
+                list.Add(1150885, $"#{hookCliloc}"); //special hook: ~1_token~
+                list.Add(1150889, $"#{BaseFishingHook.GetCondition(m_HookUses)}"); //Hook condition: ~1_val~
             }
 
             if (m_BaitType != null)
             {
                 object label = FishInfo.GetFishLabel(m_BaitType);
                 if (label is int)
-                    list.Add(1116468, string.Format("#{0}", (int)label)); //baited to attract: ~1_val~
+                    list.Add(1116468, $"#{(int)label}"); //baited to attract: ~1_val~
                 else if (label is string)
                     list.Add(1116468, (string)label);
 
diff --git a/Scripts/Items/Tools/GMHidingStone.cs b/Scripts/Items/Tools/GMHidingStone.cs
index 468d7a6da..d5ebd84b7 100644
--- a/Scripts/Items/Tools/GMHidingStone.cs
+++ b/Scripts/Items/Tools/GMHidingStone.cs
@@ -412,9 +412,9 @@ namespace Server.Items
         private static void InternalHideGate(object arg)
         {
             object[] args = arg as object[];
-            Mobile m = args[0] as Mobile;
             int hue = (int)args[1];
-            if (m != null)
+
+            if (args[0] is Mobile m)
             {
                 m.Hidden = !m.Hidden;
                 Effects.SendLocationParticles(EffectItem.Create(m.Location, m.Map, EffectItem.DefaultDuration), 0x376A, 9, 20, hue, 0, 5042, 0);
diff --git a/Scripts/Items/Tools/GreaterBraceletOfBinding.cs b/Scripts/Items/Tools/GreaterBraceletOfBinding.cs
index 8524374db..3998fa116 100644
--- a/Scripts/Items/Tools/GreaterBraceletOfBinding.cs
+++ b/Scripts/Items/Tools/GreaterBraceletOfBinding.cs
@@ -107,10 +107,8 @@ namespace Server.Items
 
         public override void OnRemoved(object parent)
         {
-            if (RootParent is Mobile)
+            if (RootParent is Mobile m)
             {
-                Mobile m = (Mobile)RootParent;
-
                 m.CloseGump(typeof(GreaterBraceletOfBindingGump));
                 m.CloseGump(typeof(ConfirmBindGump));
             }
@@ -309,9 +307,7 @@ namespace Server.Items
                     case 1:
                         if (RemoveFromBracelet)
                         {
-                            GreaterBraceletOfBinding bracelet = User.FindItemOnLayer(Layer.Bracelet) as GreaterBraceletOfBinding;
-
-                            if (bracelet != null && bracelet.Friends[Index] != null)
+                            if (User.FindItemOnLayer(Layer.Bracelet) is GreaterBraceletOfBinding bracelet && bracelet.Friends[Index] != null)
                             {
                                 BindEntry entry = bracelet.Friends[Index];
 
@@ -322,14 +318,11 @@ namespace Server.Items
 
                                     gbr.Remove(User);
 
-                                    if (pm != null && pm.NetState != null)
+                                    if (pm?.NetState != null)
                                     {
                                         GreaterBraceletOfBindingGump gump = pm.FindGump<GreaterBraceletOfBindingGump>();
 
-                                        if (gump != null)
-                                        {
-                                            gump.Refresh();
-                                        }
+                                        gump?.Refresh();
                                     }
                                 }
 
@@ -339,19 +332,14 @@ namespace Server.Items
                         }
                         else
                         {
-                            BraceletOfBinding brac = User.FindItemOnLayer(Layer.Bracelet) as BraceletOfBinding;
-
-                            if (brac != null)
+                            if (User.FindItemOnLayer(Layer.Bracelet) is BraceletOfBinding brac)
                             {
                                 BindEntry entry = new BindEntry(User, brac);
                                 Bracelet.Add(entry, Index);
 
                                 GreaterBraceletOfBindingGump g = From.FindGump<GreaterBraceletOfBindingGump>();
 
-                                if (g != null)
-                                {
-                                    g.Refresh();
-                                }
+                                g?.Refresh();
 
                                 if (brac is GreaterBraceletOfBinding && !((GreaterBraceletOfBinding)brac).IsBound(From))
                                 {
diff --git a/Scripts/Items/Tools/InteriorDecorator.cs b/Scripts/Items/Tools/InteriorDecorator.cs
index 842c40074..edd9ba5d1 100644
--- a/Scripts/Items/Tools/InteriorDecorator.cs
+++ b/Scripts/Items/Tools/InteriorDecorator.cs
@@ -201,7 +201,7 @@ namespace Server.Items
                         return;
                     }
 
-                    from.SendLocalizedMessage(1158862, string.Format("{0}", hue)); // That object is hue ~1_HUE~
+                    from.SendLocalizedMessage(1158862, $"{hue}"); // That object is hue ~1_HUE~
                 }
                 else if (targeted is Item && CheckUse(m_Decorator, from))
                 {
diff --git a/Scripts/Items/Tools/Key.cs b/Scripts/Items/Tools/Key.cs
index f4b1738f5..fc19417b3 100644
--- a/Scripts/Items/Tools/Key.cs
+++ b/Scripts/Items/Tools/Key.cs
@@ -314,7 +314,7 @@ namespace Server.Items
         {
             if (_Resource > CraftResource.Iron)
             {
-                list.Add(1053099, "#{0}\t{1}", CraftResources.GetLocalizationNumber(_Resource), string.Format("#{0}", LabelNumber.ToString())); // ~1_oretype~ ~2_armortype~
+                list.Add(1053099, "#{0}\t{1}", CraftResources.GetLocalizationNumber(_Resource), $"#{LabelNumber.ToString()}"); // ~1_oretype~ ~2_armortype~
             }
             else
             {
diff --git a/Scripts/Items/Tools/KeyRing.cs b/Scripts/Items/Tools/KeyRing.cs
index 6cf3c07d4..aa3912dd3 100644
--- a/Scripts/Items/Tools/KeyRing.cs
+++ b/Scripts/Items/Tools/KeyRing.cs
@@ -164,7 +164,7 @@ namespace Server.Items
         {
             if (_Resource > CraftResource.Iron)
             {
-                list.Add(1053099, "#{0}\t{1}", CraftResources.GetLocalizationNumber(_Resource), string.Format("#{0}", LabelNumber.ToString())); // ~1_oretype~ ~2_armortype~
+                list.Add(1053099, "#{0}\t{1}", CraftResources.GetLocalizationNumber(_Resource), $"#{LabelNumber.ToString()}"); // ~1_oretype~ ~2_armortype~
             }
             else
             {
@@ -256,10 +256,8 @@ namespace Server.Items
                     m_KeyRing.Open(from);
                     from.SendLocalizedMessage(501685); // You open the keyring.
                 }
-                else if (targeted is ILockable)
+                else if (targeted is ILockable o)
                 {
-                    ILockable o = (ILockable)targeted;
-
                     foreach (Key key in m_KeyRing.Keys)
                     {
                         if (key.UseOn(from, o))
diff --git a/Scripts/Items/Tools/PenOfWisdom.cs b/Scripts/Items/Tools/PenOfWisdom.cs
index f05badfc7..2d1da4952 100644
--- a/Scripts/Items/Tools/PenOfWisdom.cs
+++ b/Scripts/Items/Tools/PenOfWisdom.cs
@@ -225,7 +225,7 @@ namespace Server.Items
             AddBackground(4, 39, 391, 313 + y, 9200);
             AddImageTiled(8, 45, 380, 53, 2624);
 
-            AddHtmlLocalized(7, 50, 380, 53, 1115428, string.Format("@{0}@{1}@{2}@{3}", MarkScrollAmount.ToString(), RuneAmount.ToString(), Checked.Count, Blank.ToString()), EntryColor, false, false); // <CENTER>Pen of Wisdom<br>(Mark Scrolls: ~1_VAL~, Runes: ~2_VAL~ | Selected: ~3_VAL~, Blank: ~4_VAL~)</CENTER>
+            AddHtmlLocalized(7, 50, 380, 53, 1115428, $"@{MarkScrollAmount.ToString()}@{RuneAmount.ToString()}@{Checked.Count}@{Blank.ToString()}", EntryColor, false, false); // <CENTER>Pen of Wisdom<br>(Mark Scrolls: ~1_VAL~, Runes: ~2_VAL~ | Selected: ~3_VAL~, Blank: ~4_VAL~)</CENTER>
 
             AddImageTiled(8, 101, 188, 220, 2624);
             AddImageTiled(199, 101, 188, 220, 2624);
@@ -271,12 +271,12 @@ namespace Server.Items
                 if (yy < 8)
                 {
                     AddButton(15, 110 + (yy * 25), Checked.Contains(SourceBook.Entries[i]) ? 211 : 210, Checked.Contains(SourceBook.Entries[i]) ? 210 : 211, i, GumpButtonType.Reply, 0);
-                    AddLabelCropped(45, 110 + (yy * 25), 115, 17, RunebookGump.GetMapHue(SourceBook.Entries[i].Map), string.Format("{0}", description));
+                    AddLabelCropped(45, 110 + (yy * 25), 115, 17, RunebookGump.GetMapHue(SourceBook.Entries[i].Map), $"{description}");
                 }
                 else
                 {
                     AddButton(205, 110 + ((yy - 8) * 25), Checked.Contains(SourceBook.Entries[i]) ? 211 : 210, Checked.Contains(SourceBook.Entries[i]) ? 210 : 211, i, GumpButtonType.Reply, 0);
-                    AddLabelCropped(235, 110 + ((yy - 8) * 25), 115, 17, RunebookGump.GetMapHue(SourceBook.Entries[i].Map), string.Format("{0}", description));
+                    AddLabelCropped(235, 110 + ((yy - 8) * 25), 115, 17, RunebookGump.GetMapHue(SourceBook.Entries[i].Map), $"{description}");
                 }
 
                 yy++;
diff --git a/Scripts/Items/Tools/PetBondingPotion.cs b/Scripts/Items/Tools/PetBondingPotion.cs
index 76552cb45..4c76d4283 100644
--- a/Scripts/Items/Tools/PetBondingPotion.cs
+++ b/Scripts/Items/Tools/PetBondingPotion.cs
@@ -59,10 +59,8 @@ namespace Server.Items
             if (m_Potion == null || m_Potion.Deleted || !m_Potion.IsChildOf(from.Backpack))
                 return;
 
-            if (target is BaseCreature)
+            if (target is BaseCreature t)
             {
-                BaseCreature t = (BaseCreature)target;
-
                 if (t.IsBonded == true)
                 {
                     from.SendLocalizedMessage(1152925); // That pet is already bonded to you.
diff --git a/Scripts/Items/Tools/RunicSewingKit.cs b/Scripts/Items/Tools/RunicSewingKit.cs
index 7a471c55b..53a235d37 100644
--- a/Scripts/Items/Tools/RunicSewingKit.cs
+++ b/Scripts/Items/Tools/RunicSewingKit.cs
@@ -35,7 +35,7 @@ namespace Server.Items
                 int num = CraftResources.GetLocalizationNumber(Resource);
 
                 if (num > 0)
-                    v = string.Format("#{0}", num);
+                    v = $"#{num}";
                 else
                     v = CraftResources.GetName(Resource);
             }
diff --git a/Scripts/Items/Tools/Scales.cs b/Scripts/Items/Tools/Scales.cs
index 0fcb78378..c35d87c47 100644
--- a/Scripts/Items/Tools/Scales.cs
+++ b/Scripts/Items/Tools/Scales.cs
@@ -50,7 +50,7 @@ namespace Server.Items
         {
             if (_Resource > CraftResource.Iron)
             {
-                list.Add(1053099, "#{0}\t{1}", CraftResources.GetLocalizationNumber(_Resource), string.Format("#{0}", LabelNumber.ToString())); // ~1_oretype~ ~2_armortype~
+                list.Add(1053099, "#{0}\t{1}", CraftResources.GetLocalizationNumber(_Resource), $"#{LabelNumber.ToString()}"); // ~1_oretype~ ~2_armortype~
             }
             else
             {
@@ -128,9 +128,8 @@ namespace Server.Items
                 {
                     message = "It cannot weight itself.";
                 }
-                else if (targeted is Item)
+                else if (targeted is Item item)
                 {
-                    Item item = (Item)targeted;
                     object root = item.RootParent;
 
                     if ((root != null && root != from) || item.Parent == from)
@@ -149,7 +148,7 @@ namespace Server.Items
                         if (weight <= 0.0)
                             message += "It is lighter than a feather.";
                         else
-                            message += string.Format("It weighs {0} stones.", weight);
+                            message += $"It weighs {weight} stones.";
                     }
                     else
                     {
diff --git a/Scripts/Items/Tools/Scissors.cs b/Scripts/Items/Tools/Scissors.cs
index 10103e03a..221ac5559 100644
--- a/Scripts/Items/Tools/Scissors.cs
+++ b/Scripts/Items/Tools/Scissors.cs
@@ -192,10 +192,8 @@ namespace Server.Items
                         }
                     }
                 }
-                else if (targeted is IScissorable)
+                else if (targeted is IScissorable obj)
                 {
-                    IScissorable obj = (IScissorable)targeted;
-
                     if (obj.Scissor(from, m_Item))
                     {
                         from.PlaySound(0x248);
diff --git a/Scripts/Items/Tools/Sextant.cs b/Scripts/Items/Tools/Sextant.cs
index 7b13f9281..4a09ef4a5 100644
--- a/Scripts/Items/Tools/Sextant.cs
+++ b/Scripts/Items/Tools/Sextant.cs
@@ -202,7 +202,7 @@ namespace Server.Items
 
             if (Format(location, map, ref xLong, ref yLat, ref xMins, ref yMins, ref xEast, ref ySouth))
             {
-                return string.Format("{0}° {1}'{2}, {3}° {4}'{5}", yLat, yMins, ySouth ? "S" : "N", xLong, xMins, xEast ? "E" : "W");
+                return $"{yLat}° {yMins}'{(ySouth ? "S" : "N")}, {xLong}° {xMins}'{(xEast ? "E" : "W")}";
             }
 
             return string.Empty;
diff --git a/Scripts/Items/Tools/Spyglass.cs b/Scripts/Items/Tools/Spyglass.cs
index 396ac3d37..40ff50acc 100644
--- a/Scripts/Items/Tools/Spyglass.cs
+++ b/Scripts/Items/Tools/Spyglass.cs
@@ -44,17 +44,14 @@ namespace Server.Items
             from.Send(new MessageLocalizedAffix(from.NetState, from.Serial, from.Body, MessageType.Regular, 0x3B2, 3, 1008146 + (int)Clock.GetMoonPhase(Map.Trammel, from.X, from.Y), "", AffixType.Prepend, "Trammel : ", ""));
             from.Send(new MessageLocalizedAffix(from.NetState, from.Serial, from.Body, MessageType.Regular, 0x3B2, 3, 1008146 + (int)Clock.GetMoonPhase(Map.Felucca, from.X, from.Y), "", AffixType.Prepend, "Felucca : ", ""));
 
-            PlayerMobile player = from as PlayerMobile;
-
-            if (player != null)
+            if (from is PlayerMobile player)
             {
                 QuestSystem qs = player.Quest;
 
                 if (qs is WitchApprenticeQuest)
                 {
-                    FindIngredientObjective obj = qs.FindObjective(typeof(FindIngredientObjective)) as FindIngredientObjective;
 
-                    if (obj != null && !obj.Completed && obj.Ingredient == Ingredient.StarChart)
+                    if (qs.FindObjective(typeof(FindIngredientObjective)) is FindIngredientObjective obj && !obj.Completed && obj.Ingredient == Ingredient.StarChart)
                     {
                         int hours, minutes;
                         Clock.GetTime(from.Map, from.X, from.Y, out hours, out minutes);
@@ -91,7 +88,7 @@ namespace Server.Items
         {
             if (_Resource > CraftResource.Iron)
             {
-                list.Add(1053099, "#{0}\t{1}", CraftResources.GetLocalizationNumber(_Resource), string.Format("#{0}", LabelNumber.ToString())); // ~1_oretype~ ~2_armortype~
+                list.Add(1053099, "#{0}\t{1}", CraftResources.GetLocalizationNumber(_Resource), $"#{LabelNumber.ToString()}"); // ~1_oretype~ ~2_armortype~
             }
             else
             {
diff --git a/Scripts/Misc/AOS.cs b/Scripts/Misc/AOS.cs
index 7f03be617..3960807b5 100644
--- a/Scripts/Misc/AOS.cs
+++ b/Scripts/Misc/AOS.cs
@@ -294,10 +294,7 @@ namespace Server
                 {
                     TrainingProfile profile = PetTrainingHelper.GetTrainingProfile((BaseCreature)from);
 
-                    if (profile != null)
-                    {
-                        profile.CheckProgress(toCreature);
-                    }
+                    profile?.CheckProgress(toCreature);
 
                     profile = PetTrainingHelper.GetTrainingProfile(toCreature);
 
@@ -551,20 +548,18 @@ namespace Server
 
                 if (attribute == AosAttribute.Luck)
                 {
-                    if (obj is BaseWeapon)
-                        value += ((BaseWeapon)obj).GetLuckBonus();
+                    if (obj is BaseWeapon baseWeapon)
+                        value += baseWeapon.GetLuckBonus();
 
-                    if (obj is BaseArmor)
-                        value += ((BaseArmor)obj).GetLuckBonus();
+                    if (obj is BaseArmor baseArmor)
+                        value += baseArmor.GetLuckBonus();
 
-                    if (obj is FishingPole)
-                        value += ((FishingPole)obj).GetLuckBonus();
+                    if (obj is FishingPole fishingPole)
+                        value += fishingPole.GetLuckBonus();
                 }
 
-                if (obj is ISetItem)
+                if (obj is ISetItem item)
                 {
-                    ISetItem item = (ISetItem)obj;
-
                     attrs = item.SetAttributes;
 
                     if (attrs != null && item.LastEquipped)
@@ -1859,9 +1854,9 @@ namespace Server
             {
                 Item obj = m.Items[i];
 
-                if (obj is BaseWeapon)
+                if (obj is BaseWeapon baseWeapon)
                 {
-                    ExtendedWeaponAttributes attrs = ((BaseWeapon)obj).ExtendedWeaponAttributes;
+                    ExtendedWeaponAttributes attrs = baseWeapon.ExtendedWeaponAttributes;
 
                     if (attrs != null)
                         value += attrs[attribute];
@@ -2050,13 +2045,13 @@ namespace Server
         {
             if (bitmask == (int)AosArmorAttribute.DurabilityBonus)
             {
-                if (Owner is BaseArmor)
+                if (Owner is BaseArmor baseArmor)
                 {
-                    ((BaseArmor)Owner).UnscaleDurability();
+                    baseArmor.UnscaleDurability();
                 }
-                else if (Owner is BaseClothing)
+                else if (Owner is BaseClothing baseClothing)
                 {
-                    ((BaseClothing)Owner).UnscaleDurability();
+                    baseClothing.UnscaleDurability();
                 }
             }
 
@@ -2064,13 +2059,13 @@ namespace Server
 
             if (bitmask == (int)AosArmorAttribute.DurabilityBonus)
             {
-                if (Owner is BaseArmor)
+                if (Owner is BaseArmor baseArmor)
                 {
-                    ((BaseArmor)Owner).ScaleDurability();
+                    baseArmor.ScaleDurability();
                 }
-                else if (Owner is BaseClothing)
+                else if (Owner is BaseClothing baseClothing)
                 {
-                    ((BaseClothing)Owner).ScaleDurability();
+                    baseClothing.ScaleDurability();
                 }
             }
         }
@@ -2421,8 +2416,8 @@ namespace Server
             }
             if (!m.CanBeginAction(typeof(IncognitoSpell)) && m.Skills[SkillName.Magery].Value < 38.1)
             {
-                if (m is PlayerMobile)
-                    ((PlayerMobile)m).SetHairMods(-1, -1);
+                if (m is PlayerMobile playerMobile)
+                    playerMobile.SetHairMods(-1, -1);
                 m.BodyMod = 0;
                 m.HueMod = -1;
                 m.NameMod = null;
diff --git a/Scripts/Misc/ArchivedSaves.cs b/Scripts/Misc/ArchivedSaves.cs
index 152806509..3ace2839b 100644
--- a/Scripts/Misc/ArchivedSaves.cs
+++ b/Scripts/Misc/ArchivedSaves.cs
@@ -173,13 +173,13 @@ namespace Server.Misc
 
                 switch (Merge)
                 {
-                    case MergeType.Months: date = string.Format("{0}-{1}", now.Month, now.Year); break;
-                    case MergeType.Days: date = string.Format("{0}-{1}-{2}", now.Day, now.Month, now.Year); break;
-                    case MergeType.Hours: date = string.Format("{0}-{1}-{2} {3:D2} {4}", now.Day, now.Month, now.Year, hour12, ampm); break;
-                    case MergeType.Minutes: default: date = string.Format("{0}-{1}-{2} {3:D2}-{4:D2} {5}", now.Day, now.Month, now.Year, hour12, now.Minute, ampm); break;
+                    case MergeType.Months: date = $"{now.Month}-{now.Year}"; break;
+                    case MergeType.Days: date = $"{now.Day}-{now.Month}-{now.Year}"; break;
+                    case MergeType.Hours: date = $"{now.Day}-{now.Month}-{now.Year} {hour12:D2} {ampm}"; break;
+                    case MergeType.Minutes: default: date = $"{now.Day}-{now.Month}-{now.Year} {hour12:D2}-{now.Minute:D2} {ampm}"; break;
                 }
 
-                string file = string.Format("{0} Saves ({1}).zip", ServerList.ServerName, date);
+                string file = $"{ServerList.ServerName} Saves ({date}).zip";
                 string dest = Path.Combine(Destination, file);
 
                 try { File.Delete(dest); }
diff --git a/Scripts/Misc/AutoRestart.cs b/Scripts/Misc/AutoRestart.cs
index 99a76eb14..29a3579bb 100644
--- a/Scripts/Misc/AutoRestart.cs
+++ b/Scripts/Misc/AutoRestart.cs
@@ -159,7 +159,7 @@ namespace Server.Misc
 
         private static void TimedShutdown(bool restart, bool recompile)
         {
-            World.Broadcast(0x22, true, string.Format("The server will be going down in about {0} seconds!", RestartDelay.TotalSeconds.ToString()));
+            World.Broadcast(0x22, true, $"The server will be going down in about {RestartDelay.TotalSeconds.ToString()} seconds!");
             DelayCall(RestartDelay, (rest, recomp) =>
                 {
                     if (recomp)
diff --git a/Scripts/Misc/BuffIcons.cs b/Scripts/Misc/BuffIcons.cs
index 91d4b7aa3..b4aabc5ea 100644
--- a/Scripts/Misc/BuffIcons.cs
+++ b/Scripts/Misc/BuffIcons.cs
@@ -10,9 +10,7 @@ namespace Server
         {
             EventSink.ClientVersionReceived += delegate (ClientVersionReceivedArgs args)
             {
-                PlayerMobile pm = args.State.Mobile as PlayerMobile;
-
-                if (pm != null)
+                if (args.State.Mobile is PlayerMobile pm)
                     Timer.DelayCall(TimeSpan.Zero, pm.ResendBuffs);
             };
         }
@@ -152,25 +150,19 @@ namespace Server
         #region Convenience Methods
         public static void AddBuff(Mobile m, BuffInfo b)
         {
-            PlayerMobile pm = m as PlayerMobile;
-
-            if (pm != null)
+            if (m is PlayerMobile pm)
                 pm.AddBuff(b);
         }
 
         public static void RemoveBuff(Mobile m, BuffInfo b)
         {
-            PlayerMobile pm = m as PlayerMobile;
-
-            if (pm != null)
+            if (m is PlayerMobile pm)
                 pm.RemoveBuff(b);
         }
 
         public static void RemoveBuff(Mobile m, BuffIcon b)
         {
-            PlayerMobile pm = m as PlayerMobile;
-
-            if (pm != null)
+            if (m is PlayerMobile pm)
                 pm.RemoveBuff(b);
         }
         #endregion
@@ -413,7 +405,7 @@ namespace Server
                 m_Stream.Fill(2);
 
                 //m_Stream.WriteLittleUniNull( "\t#1018280" );
-                m_Stream.WriteLittleUniNull(string.Format("\t{0}", args.ToString()));
+                m_Stream.WriteLittleUniNull($"\t{args.ToString()}");
 
                 m_Stream.Write((short)0x1);	//Even more Unknown -> Possibly something saying 'hey, I have more data!'?
                 m_Stream.Fill(2);
diff --git a/Scripts/Misc/CharacterCreation.cs b/Scripts/Misc/CharacterCreation.cs
index 3ba8510b7..d0c7a7541 100644
--- a/Scripts/Misc/CharacterCreation.cs
+++ b/Scripts/Misc/CharacterCreation.cs
@@ -175,10 +175,8 @@ namespace Server.Misc
 
             bool young = false;
 
-            if (newChar is PlayerMobile)
+            if (newChar is PlayerMobile pm)
             {
-                PlayerMobile pm = (PlayerMobile)newChar;
-
                 pm.AutoRenewInsurance = true;
 
                 double skillcap = Config.Get("PlayerCaps.SkillCap", 1000.0d) / 10;
diff --git a/Scripts/Misc/Cleanup.cs b/Scripts/Misc/Cleanup.cs
index ed1ed577b..5ce7eead7 100644
--- a/Scripts/Misc/Cleanup.cs
+++ b/Scripts/Misc/Cleanup.cs
@@ -28,19 +28,15 @@ namespace Server.Misc
                     items.Add(item);
                     continue;
                 }
-                else if (item is CommodityDeed)
+                else if (item is CommodityDeed deed)
                 {
-                    CommodityDeed deed = (CommodityDeed)item;
-
                     if (deed.Commodity != null)
                         validItems.Add(deed.Commodity);
 
                     continue;
                 }
-                else if (item is BaseHouse)
+                else if (item is BaseHouse house)
                 {
-                    BaseHouse house = (BaseHouse)item;
-
                     foreach (RelocatedEntity relEntity in house.RelocatedEntities)
                     {
                         if (relEntity.Entity is Item)
@@ -53,9 +49,8 @@ namespace Server.Misc
                             validItems.Add(subItem);
                     }
                 }
-                else if (item is BankBox)
+                else if (item is BankBox box)
                 {
-                    BankBox box = (BankBox)item;
                     Mobile owner = box.Owner;
 
                     if (owner == null)
@@ -75,9 +70,8 @@ namespace Server.Misc
                 {
                     object rootParent = item.RootParent;
 
-                    if (rootParent is Mobile)
+                    if (rootParent is Mobile rootMobile)
                     {
-                        Mobile rootMobile = (Mobile)rootParent;
                         if (item.Parent != rootMobile && rootMobile.IsPlayer())
                         {
                             items.Add(item);
diff --git a/Scripts/Misc/ClientVerification.cs b/Scripts/Misc/ClientVerification.cs
index b3d7346a4..1292979a1 100644
--- a/Scripts/Misc/ClientVerification.cs
+++ b/Scripts/Misc/ClientVerification.cs
@@ -106,7 +106,7 @@ namespace Server.Misc
 
             if (required != null && version < required && (m_OldClientResponse == OldClientResponse.Kick || (m_OldClientResponse == OldClientResponse.LenientKick && (DateTime.UtcNow - state.Mobile.CreationTime) > m_AgeLeniency && state.Mobile is PlayerMobile && ((PlayerMobile)state.Mobile).GameTime > m_GameTimeLeniency)))
             {
-                kickMessage = string.Format("This server requires your client version be at least {0}.", required);
+                kickMessage = $"This server requires your client version be at least {required}.";
             }
             else if (!AllowGod || !AllowRegular || !AllowUOTD)
             {
@@ -220,7 +220,7 @@ namespace Server.Misc
         {
             if (m.NetState != null && m.NetState.Version < Required)
             {
-                Gump g = new WarningGump(1060637, 30720, string.Format("Your client is out of date. Please update your client.<br>This server recommends that your client version be at least {0}.<br> <br>You are currently using version {1}.<br> <br>To patch, run UOPatch.exe inside your Ultima Online folder.", Required, m.NetState.Version), 0xFFC000, 480, 360,
+                Gump g = new WarningGump(1060637, 30720, $"Your client is out of date. Please update your client.<br>This server recommends that your client version be at least {Required}.<br> <br>You are currently using version {m.NetState.Version}.<br> <br>To patch, run UOPatch.exe inside your Ultima Online folder.", 0xFFC000, 480, 360,
                     delegate (Mobile mob, bool selection, object o)
                     {
                         m.SendMessage("You will be reminded of this again.");
diff --git a/Scripts/Misc/ConsoleCommands.cs b/Scripts/Misc/ConsoleCommands.cs
index 620a2bb42..ae509d079 100644
--- a/Scripts/Misc/ConsoleCommands.cs
+++ b/Scripts/Misc/ConsoleCommands.cs
@@ -113,7 +113,7 @@ namespace Server.Misc
             {
                 string sub = input.Substring(2).Trim();
 
-                BroadcastMessage(AccessLevel.Player, 0x35, string.Format("[Admin] {0}", sub));
+                BroadcastMessage(AccessLevel.Player, 0x35, $"[Admin] {sub}");
 
                 Console.WriteLine("[World]: {0}", sub);
                 return;
@@ -123,7 +123,7 @@ namespace Server.Misc
             {
                 string sub = input.Substring(2).Trim();
 
-                BroadcastMessage(AccessLevel.Counselor, 0x32, string.Format("[Admin] {0}", sub));
+                BroadcastMessage(AccessLevel.Counselor, 0x32, $"[Admin] {sub}");
 
                 Console.WriteLine("[Staff]: {0}", sub);
                 return;
diff --git a/Scripts/Misc/CrashGuard.cs b/Scripts/Misc/CrashGuard.cs
index 5da913d3f..e3c4100e4 100644
--- a/Scripts/Misc/CrashGuard.cs
+++ b/Scripts/Misc/CrashGuard.cs
@@ -129,7 +129,7 @@ namespace Server.Misc
                 string timeStamp = GetTimeStamp();
 
                 string root = GetRoot();
-                string rootBackup = Combine(root, string.Format("Backups/Crashed/{0}/", timeStamp));
+                string rootBackup = Combine(root, $"Backups/Crashed/{timeStamp}/");
                 string rootOrigin = Combine(root, string.Format("Saves/"));
 
                 // Create new directories
@@ -172,7 +172,7 @@ namespace Server.Misc
             try
             {
                 string timeStamp = GetTimeStamp();
-                string fileName = string.Format("Crash {0}.log", timeStamp);
+                string fileName = $"Crash {timeStamp}.log";
 
                 string root = GetRoot();
                 string filePath = Combine(root, fileName);
@@ -225,9 +225,7 @@ namespace Server.Misc
 
                             op.Write("+ {0}:", state);
 
-                            Account a = state.Account as Account;
-
-                            if (a != null)
+                            if (state.Account is Account a)
                                 op.Write(" (account = {0})", a.Username);
 
                             Mobile m = state.Mobile;
@@ -259,13 +257,7 @@ namespace Server.Misc
         {
             DateTime now = DateTime.UtcNow;
 
-            return string.Format("{0}-{1}-{2}-{3}-{4}-{5}",
-                now.Day,
-                now.Month,
-                now.Year,
-                now.Hour,
-                now.Minute,
-                now.Second);
+            return $"{now.Day}-{now.Month}-{now.Year}-{now.Hour}-{now.Minute}-{now.Second}";
         }
     }
 }
diff --git a/Scripts/Misc/Emitter.cs b/Scripts/Misc/Emitter.cs
index 6ab766ec8..85e8f4ede 100644
--- a/Scripts/Misc/Emitter.cs
+++ b/Scripts/Misc/Emitter.cs
@@ -27,7 +27,7 @@ namespace Server
             {
                 m_ModuleBuilder = m_AssemblyBuilder.DefineDynamicModule(
                     assemblyName,
-                    string.Format("{0}.dll", assemblyName.ToLower()),
+                    $"{assemblyName.ToLower()}.dll",
                     false);
             }
             else
@@ -46,7 +46,7 @@ namespace Server
         public void Save()
         {
             m_AssemblyBuilder.Save(
-                string.Format("{0}.dll", m_AssemblyName.ToLower()));
+                $"{m_AssemblyName.ToLower()}.dll");
         }
     }
 
diff --git a/Scripts/Misc/HardwareInfo.cs b/Scripts/Misc/HardwareInfo.cs
index 2654c88a6..d29ed94cf 100644
--- a/Scripts/Misc/HardwareInfo.cs
+++ b/Scripts/Misc/HardwareInfo.cs
@@ -123,9 +123,8 @@ namespace Server
             if (obj is Mobile && ((Mobile)obj).Player)
             {
                 Mobile m = (Mobile)obj;
-                Account acct = m.Account as Account;
 
-                if (acct != null)
+                if (m.Account is Account acct)
                 {
                     HardwareInfo hwInfo = acct.HardwareInfo;
 
@@ -194,9 +193,7 @@ namespace Server
                 m_TimeReceived = DateTime.UtcNow
             };
 
-            Account acct = state.Account as Account;
-
-            if (acct != null)
+            if (state.Account is Account acct)
             {
                 acct.HardwareInfo = info;
             }
diff --git a/Scripts/Misc/LanguageStatistics.cs b/Scripts/Misc/LanguageStatistics.cs
index a2f006765..7c36d17ae 100644
--- a/Scripts/Misc/LanguageStatistics.cs
+++ b/Scripts/Misc/LanguageStatistics.cs
@@ -226,7 +226,7 @@ namespace Server.Misc
                     }
                 }
 
-                writer.WriteLine(string.Format("Language statistics. Numbers show how many {0} use the specified language.", CountAccounts ? "accounts" : "playermobile"));
+                writer.WriteLine($"Language statistics. Numbers show how many {(CountAccounts ? "accounts" : "playermobile")} use the specified language.");
                 writer.WriteLine("====================================================================================================");
                 writer.WriteLine();
 
@@ -235,7 +235,7 @@ namespace Server.Misc
                 list.Sort(InternationalCodeComparer.Instance);
 
                 foreach (InternationalCodeCounter c in list)
-                    writer.WriteLine(string.Format("{0}‎ : {1}", GetFormattedInfo(c.Code), c.Count));
+                    writer.WriteLine($"{GetFormattedInfo(c.Code)}‎ : {c.Count}");
 
                 e.Mobile.SendMessage("Languages list generated.");
             }
@@ -244,17 +244,17 @@ namespace Server.Misc
         private static string GetFormattedInfo(string code)
         {
             if (code == null || code.Length != 3)
-                return string.Format("Unknown code {0}", code);
+                return $"Unknown code {code}";
 
             for (int i = 0; i < InternationalCodes.Length; i++)
             {
                 if (code == InternationalCodes[i].Code)
                 {
-                    return string.Format("{0}", InternationalCodes[i].GetName());
+                    return $"{InternationalCodes[i].GetName()}";
                 }
             }
 
-            return string.Format("Unknown code {0}", code);
+            return $"Unknown code {code}";
         }
 
         struct InternationalCode
@@ -292,14 +292,14 @@ namespace Server.Misc
 
                 if (m_HasLocalInfo)
                 {
-                    s = string.Format("{0}‎ - {1}", DefaultLocalNames ? m_Language_LocalName : m_Language, DefaultLocalNames ? m_Country_LocalName : m_Country);
+                    s = $"{(DefaultLocalNames ? m_Language_LocalName : m_Language)}‎ - {(DefaultLocalNames ? m_Country_LocalName : m_Country)}";
 
                     if (ShowAlternatives)
-                        s += string.Format("‎ 【{0}‎ - {1}‎】", DefaultLocalNames ? m_Language : m_Language_LocalName, DefaultLocalNames ? m_Country : m_Country_LocalName);
+                        s += $"‎ 【{(DefaultLocalNames ? m_Language : m_Language_LocalName)}‎ - {(DefaultLocalNames ? m_Country : m_Country_LocalName)}‎】";
                 }
                 else
                 {
-                    s = string.Format("{0}‎ - {1}", m_Language, m_Country);
+                    s = $"{m_Language}‎ - {m_Country}";
                 }
 
                 return s;
diff --git a/Scripts/Misc/LootPack.cs b/Scripts/Misc/LootPack.cs
index cb51d8648..2fb85b841 100644
--- a/Scripts/Misc/LootPack.cs
+++ b/Scripts/Misc/LootPack.cs
@@ -14,7 +14,7 @@ namespace Server
 
             PlayerMobile pmKiller = killer as PlayerMobile;
 
-            if (pmKiller != null && pmKiller.SentHonorContext != null && pmKiller.SentHonorContext.Target == victim)
+            if (pmKiller?.SentHonorContext != null && pmKiller.SentHonorContext.Target == victim)
             {
                 luck += pmKiller.SentHonorContext.PerfectionLuckBonus;
             }
@@ -81,10 +81,8 @@ namespace Server
             bool hasBeenStolenFrom = false;
             Mobile from = e as Mobile;
 
-            if (e is BaseCreature)
+            if (e is BaseCreature bc)
             {
-                var bc = (BaseCreature)e;
-
                 cont = bc.Backpack as BaseContainer;
                 stage = bc.LootStage;
                 luckChance = bc.KillersLuck;
@@ -916,24 +914,24 @@ namespace Server
                     }
 
                     // Use the older style random generation
-                    if (item is BaseWeapon)
+                    if (item is BaseWeapon baseWeapon)
                     {
-                        BaseRunicTool.ApplyAttributesTo((BaseWeapon)item, false, luckChance, props, MinIntensity, MaxIntensity);
+                        BaseRunicTool.ApplyAttributesTo(baseWeapon, false, luckChance, props, MinIntensity, MaxIntensity);
                     }
-                    else if (item is BaseArmor)
+                    else if (item is BaseArmor baseArmor)
                     {
-                        BaseRunicTool.ApplyAttributesTo((BaseArmor)item, false, luckChance, props, MinIntensity, MaxIntensity);
+                        BaseRunicTool.ApplyAttributesTo(baseArmor, false, luckChance, props, MinIntensity, MaxIntensity);
                     }
-                    else if (item is BaseJewel)
+                    else if (item is BaseJewel baseJewel)
                     {
-                        BaseRunicTool.ApplyAttributesTo((BaseJewel)item, false, luckChance, props, MinIntensity, MaxIntensity);
+                        BaseRunicTool.ApplyAttributesTo(baseJewel, false, luckChance, props, MinIntensity, MaxIntensity);
                     }
-                    else if (item is BaseHat)
+                    else if (item is BaseHat baseHat)
                     {
-                        BaseRunicTool.ApplyAttributesTo((BaseHat)item, false, luckChance, props, MinIntensity, MaxIntensity);
+                        BaseRunicTool.ApplyAttributesTo(baseHat, false, luckChance, props, MinIntensity, MaxIntensity);
                     }
                 }
-                else if (item is BaseInstrument)
+                else if (item is BaseInstrument instr)
                 {
                     SlayerName slayer = SlayerName.None;
 
@@ -945,8 +943,6 @@ namespace Server
                         return null;
                     }
 
-                    BaseInstrument instr = (BaseInstrument)item;
-
                     instr.Quality = ItemQuality.Normal;
                     instr.Slayer = slayer;
                 }
diff --git a/Scripts/Misc/Notoriety.cs b/Scripts/Misc/Notoriety.cs
index 24195dd6c..d213acea5 100644
--- a/Scripts/Misc/Notoriety.cs
+++ b/Scripts/Misc/Notoriety.cs
@@ -142,9 +142,9 @@ namespace Server.Misc
             if (ViceVsVirtueSystem.Enabled && ViceVsVirtueSystem.EnhancedRules && ViceVsVirtueSystem.IsEnemy(from, damageable))
                 return true;
 
-            if (target is BaseCreature)
+            if (target is BaseCreature baseCreature)
             {
-                if (((BaseCreature)target).Controlled)
+                if (baseCreature.Controlled)
                     return false; // Cannot harm other controlled mobiles
 
                 if (((BaseCreature)target).Summoned && from != ((BaseCreature)target).SummonMaster)
@@ -409,9 +409,9 @@ namespace Server.Misc
                 }
             }
 
-            if (source is BaseCreature)
+            if (source is BaseCreature baseCreature)
             {
-                Mobile master = ((BaseCreature)source).GetMaster();
+                Mobile master = baseCreature.GetMaster();
 
                 if (master != null)
                 {
diff --git a/Scripts/Misc/Poison.cs b/Scripts/Misc/Poison.cs
index 83c0f2bd2..ce01a4855 100644
--- a/Scripts/Misc/Poison.cs
+++ b/Scripts/Misc/Poison.cs
@@ -149,7 +149,7 @@ namespace Server
 
                 int damage = 1 + (int)(m.Hits * p.m_Scalar);
 
-                BuffInfo.AddBuff(m, new BuffInfo(BuffIcon.Poison, 1017383, 1075633, TimeSpan.FromSeconds((int)((p.m_Count + 1) * p.m_Interval.TotalSeconds)), m, string.Format("{0}\t{1}", damage, (int)p.m_Interval.TotalSeconds)));
+                BuffInfo.AddBuff(m, new BuffInfo(BuffIcon.Poison, 1017383, 1075633, TimeSpan.FromSeconds((int)((p.m_Count + 1) * p.m_Interval.TotalSeconds)), m, $"{damage}\t{(int)p.m_Interval.TotalSeconds}"));
             }
 
             protected override void OnTick()
@@ -184,8 +184,8 @@ namespace Server
                     m_Mobile.SendLocalizedMessage(502136); // The poison seems to have worn off.
                     m_Mobile.Poison = null;
 
-                    if (m_Mobile is PlayerMobile)
-                        BuffInfo.RemoveBuff((PlayerMobile)m_Mobile, BuffIcon.Poison);
+                    if (m_Mobile is PlayerMobile playerMobile)
+                        BuffInfo.RemoveBuff(playerMobile, BuffIcon.Poison);
 
                     Stop();
                     return;
@@ -214,7 +214,7 @@ namespace Server
 
                 IHonorTarget honorTarget = m_Mobile as IHonorTarget;
 
-                if (honorTarget != null && honorTarget.ReceivedHonorContext != null)
+                if (honorTarget?.ReceivedHonorContext != null)
                     honorTarget.ReceivedHonorContext.OnTargetPoisoned();
 
                 if (m_From != null && m_Mobile != m_From && !m_From.InRange(m_Mobile.Location, 1) && m_Poison.m_Level >= 10 && m_Poison.m_Level <= 13) // darkglow
diff --git a/Scripts/Misc/ProtocolExtensions.cs b/Scripts/Misc/ProtocolExtensions.cs
index cc1ba4ad3..bfd5a03c1 100644
--- a/Scripts/Misc/ProtocolExtensions.cs
+++ b/Scripts/Misc/ProtocolExtensions.cs
@@ -33,9 +33,8 @@ namespace Server.Misc
         private static void QueryGuildsLocations(NetState state, PacketReader pvSrc)
         {
             Mobile from = state.Mobile;
-            Guild guild = from.Guild as Guild;
 
-            if (guild != null)
+            if (from.Guild is Guild guild)
             {
                 bool locations = pvSrc.ReadByte() != 0;
 
diff --git a/Scripts/Misc/RaceDefinitions.cs b/Scripts/Misc/RaceDefinitions.cs
index 19b2f20c7..78280db03 100644
--- a/Scripts/Misc/RaceDefinitions.cs
+++ b/Scripts/Misc/RaceDefinitions.cs
@@ -123,9 +123,7 @@ namespace Server.Misc
 
             public override bool ValidateEquipment(Item item)
             {
-                var elfOrHuman = item as ICanBeElfOrHuman;
-
-                if (elfOrHuman != null)
+                if (item is ICanBeElfOrHuman elfOrHuman)
                 {
                     return !elfOrHuman.ElfOnly;
                 }
@@ -281,9 +279,7 @@ namespace Server.Misc
 
             public override bool ValidateEquipment(Item item)
             {
-                var elfOrHuman = item as ICanBeElfOrHuman;
-
-                if (elfOrHuman != null && elfOrHuman.ElfOnly)
+                if (item is ICanBeElfOrHuman elfOrHuman && elfOrHuman.ElfOnly)
                 {
                     return true;
                 }
@@ -537,9 +533,7 @@ namespace Server.Misc
 
         public static bool ValidateElfOrHuman(Mobile from, Item equipment)
         {
-            var elfOrHuman = equipment as ICanBeElfOrHuman;
-
-            if (elfOrHuman != null)
+            if (equipment is ICanBeElfOrHuman elfOrHuman)
             {
                 return from.Race == Race.Elf || !elfOrHuman.ElfOnly;
             }
@@ -556,9 +550,7 @@ namespace Server.Misc
                 return Race.Gargoyle;
             }
 
-            var elfOrHuman = item as ICanBeElfOrHuman;
-
-            if (elfOrHuman != null)
+            if (item is ICanBeElfOrHuman elfOrHuman)
             {
                 return elfOrHuman.ElfOnly ? Race.Elf : Race.Human;
             }
diff --git a/Scripts/Misc/RegenRates.cs b/Scripts/Misc/RegenRates.cs
index c112ced13..601a40441 100644
--- a/Scripts/Misc/RegenRates.cs
+++ b/Scripts/Misc/RegenRates.cs
@@ -149,8 +149,8 @@ namespace Server.Misc
         {
             double points = AosAttributes.GetValue(from, AosAttribute.RegenHits);
 
-            if (from is BaseCreature)
-                points += ((BaseCreature)from).DefaultHitsRegen;
+            if (from is BaseCreature baseCreature)
+                points += baseCreature.DefaultHitsRegen;
 
             if (from is PlayerMobile && from.Race == Race.Human)	//Is this affected by the cap?
                 points += 2;
@@ -182,8 +182,8 @@ namespace Server.Misc
         {
             double points = AosAttributes.GetValue(from, AosAttribute.RegenStam);
 
-            if (from is BaseCreature)
-                points += ((BaseCreature)from).DefaultStamRegen;
+            if (from is BaseCreature baseCreature)
+                points += baseCreature.DefaultStamRegen;
 
             if (CheckTransform(from, typeof(VampiricEmbraceSpell)))
                 points += 15;
@@ -210,8 +210,8 @@ namespace Server.Misc
         {
             double points = AosAttributes.GetValue(from, AosAttribute.RegenMana);
 
-            if (from is BaseCreature)
-                points += ((BaseCreature)from).DefaultManaRegen;
+            if (from is BaseCreature baseCreature)
+                points += baseCreature.DefaultManaRegen;
 
             if (CheckTransform(from, typeof(VampiricEmbraceSpell)))
                 points += 3;
diff --git a/Scripts/Misc/RenameRequests.cs b/Scripts/Misc/RenameRequests.cs
index 766caa0c2..e58aabf22 100644
--- a/Scripts/Misc/RenameRequests.cs
+++ b/Scripts/Misc/RenameRequests.cs
@@ -41,7 +41,7 @@ namespace Server.Misc
                         }
                     }
 
-                    from.SendLocalizedMessage(1072623, string.Format("{0}\t{1}", targ.Name, name)); // Pet ~1_OLDPETNAME~ renamed to ~2_NEWPETNAME~.
+                    from.SendLocalizedMessage(1072623, $"{targ.Name}\t{name}"); // Pet ~1_OLDPETNAME~ renamed to ~2_NEWPETNAME~.
 
                     targ.Name = name;
                 }
diff --git a/Scripts/Misc/Replacer.cs b/Scripts/Misc/Replacer.cs
index c0326ddbe..5dead0d23 100644
--- a/Scripts/Misc/Replacer.cs
+++ b/Scripts/Misc/Replacer.cs
@@ -38,15 +38,15 @@ namespace Server
                 {
                     newItem.Movable = oldItem.Movable;
 
-                    if (parent is Container)
+                    if (parent is Container container)
                     {
                         oldItem.Delete();
-                        ((Container)parent).DropItem(newItem);
+                        container.DropItem(newItem);
                     }
-                    else if (parent is Mobile)
+                    else if (parent is Mobile mobile)
                     {
                         oldItem.Delete();
-                        ((Mobile)parent).AddItem(newItem);
+                        mobile.AddItem(newItem);
                     }
                     else
                     {
diff --git a/Scripts/Misc/ShardPoller.cs b/Scripts/Misc/ShardPoller.cs
index b4d4ec6ac..c892066c2 100644
--- a/Scripts/Misc/ShardPoller.cs
+++ b/Scripts/Misc/ShardPoller.cs
@@ -486,7 +486,7 @@ namespace Server.Misc
 
             if (editing)
             {
-                AddHtml(22, 22, 294, 20, Color(string.Format("{0} total", totalVotes), LabelColor32), false, false);
+                AddHtml(22, 22, 294, 20, Color($"{totalVotes} total", LabelColor32), false, false);
                 AddButton(287, 23, 0x2622, 0x2623, 2, GumpButtonType.Reply, 0);
             }
 
@@ -506,7 +506,7 @@ namespace Server.Misc
                 {
                     double perc = option.Votes / (double)totalVotes;
 
-                    text = string.Format("[{1}: {2}%] {0}", text, option.Votes, (int)(perc * 100));
+                    text = $"[{text}: {option.Votes}%] {(int)(perc * 100)}";
                 }
 
                 int optHeight = option.ComputeHeight();
@@ -545,12 +545,12 @@ namespace Server.Misc
 
         public string Center(string text)
         {
-            return string.Format("<CENTER>{0}</CENTER>", text);
+            return $"<CENTER>{text}</CENTER>";
         }
 
         public string Color(string text, int color)
         {
-            return string.Format("<BASEFONT COLOR=#{0:X6}>{1}</BASEFONT>", color, text);
+            return $"<BASEFONT COLOR=#{color:X6}>{text}</BASEFONT>";
         }
 
         public override void OnResponse(NetState sender, RelayInfo info)
@@ -663,7 +663,7 @@ namespace Server.Misc
             if (m.Groups[1].Success)
             {
                 if (m.Groups[2].Success)
-                    return string.Format("<a href=\"{0}\">{1}</a>", m.Groups[1].Value, m.Groups[2].Value);
+                    return $"<a href=\"{m.Groups[1].Value}\">{m.Groups[2].Value}</a>";
             }
             else if (m.Groups[2].Success)
             {
diff --git a/Scripts/Misc/Siege.cs b/Scripts/Misc/Siege.cs
index d2d8cd638..f4f482443 100644
--- a/Scripts/Misc/Siege.cs
+++ b/Scripts/Misc/Siege.cs
@@ -129,9 +129,8 @@ namespace Server
 
         public static void OnLogin(LoginEventArgs e)
         {
-            PlayerMobile pm = e.Mobile as PlayerMobile;
 
-            if (pm != null && pm.Map == Map.Trammel && pm.AccessLevel == AccessLevel.Player)
+            if (e.Mobile is PlayerMobile pm && pm.Map == Map.Trammel && pm.AccessLevel == AccessLevel.Player)
             {
                 pm.MoveToWorld(new Point3D(989, 519, -50), Map.Malas);
                 pm.SendMessage("You have been removed from Trammel.");
@@ -426,9 +425,7 @@ namespace Server
 
         public static void TryBlessItem(PlayerMobile pm, object targeted)
         {
-            Item item = targeted as Item;
-
-            if (item != null)
+            if (targeted is Item item)
             {
                 if (CanBlessItem(pm, item))
                 {
@@ -476,9 +473,7 @@ namespace Server
 
         public static void CheckUsesRemaining(Mobile from, Item item)
         {
-            IUsesRemaining uses = item as IUsesRemaining;
-
-            if (uses != null)
+            if (item is IUsesRemaining uses)
             {
                 uses.ShowUsesRemaining = true;
                 uses.UsesRemaining--;
diff --git a/Scripts/Misc/SkillCheck.cs b/Scripts/Misc/SkillCheck.cs
index 4811408d2..c327ebf78 100644
--- a/Scripts/Misc/SkillCheck.cs
+++ b/Scripts/Misc/SkillCheck.cs
@@ -313,7 +313,7 @@ namespace Server.Misc
             if (Engines.VvV.ViceVsVirtueSystem.InSkillLoss(from)) //Changed some time between the introduction of AoS and SE.
                 return false;
 
-            if (from is PlayerMobile)
+            if (from is PlayerMobile playerMobile)
             {
                 if (skill.Info.SkillID == (int)SkillName.Archery && from.Race == Race.Gargoyle)
                     return false;
@@ -322,7 +322,7 @@ namespace Server.Misc
                     return false;
 
                 if (_AntiMacroCode && UseAntiMacro[skill.Info.SkillID])
-                    return ((PlayerMobile)from).AntiMacroCheck(skill, obj);
+                    return playerMobile.AntiMacroCheck(skill, obj);
             }
             return true;
         }
@@ -402,9 +402,8 @@ namespace Server.Misc
 
                     if (master != null)
                     {
-                        WhisperingSpell spell = SkillMasterySpell.GetSpell(master, typeof(WhisperingSpell)) as WhisperingSpell;
 
-                        if (spell != null && master.InRange(from.Location, spell.PartyRange) && master.Map == from.Map &&
+                        if (SkillMasterySpell.GetSpell(master, typeof(WhisperingSpell)) is WhisperingSpell spell && master.InRange(from.Location, spell.PartyRange) && master.Map == from.Map &&
                             spell.EnhancedGainChance >= Utility.Random(100))
                         {
                             toGain = Utility.RandomMinMax(2, 5);
@@ -431,9 +430,9 @@ namespace Server.Misc
                 }
             }
 
-            if (from is PlayerMobile)
+            if (from is PlayerMobile playerMobile)
             {
-                QuestHelper.CheckSkill((PlayerMobile)from, skill);
+                QuestHelper.CheckSkill(playerMobile, skill);
             }
 
             if (skill.Lock == SkillLock.Up && (!Siege.SiegeShard || !(from is PlayerMobile) || Siege.CanGainStat((PlayerMobile)from)))
diff --git a/Scripts/Misc/SpawnerPersistence.cs b/Scripts/Misc/SpawnerPersistence.cs
index 0ae4ff82a..23b630080 100644
--- a/Scripts/Misc/SpawnerPersistence.cs
+++ b/Scripts/Misc/SpawnerPersistence.cs
@@ -337,7 +337,7 @@ namespace Server
                     }
                 }
 
-                ToConsole(string.Format("{0} additional Teleporters deleted.", delCount));
+                ToConsole($"{delCount} additional Teleporters deleted.");
             });
         }
         #endregion
@@ -428,7 +428,7 @@ namespace Server
                     teleporters++;
                 }
 
-                ToConsole(string.Format("Copied {0} khaldun spawners, {1} teleporters and placed in trammel!", spawners, teleporters));
+                ToConsole($"Copied {spawners} khaldun spawners, {teleporters} teleporters and placed in trammel!");
             }
             else
             {
@@ -474,7 +474,7 @@ namespace Server
                 }
             }
 
-            ToConsole(string.Format("Converted {0} honesty items and attached Honesty Item Socket!", convert));
+            ToConsole($"Converted {convert} honesty items and attached Honesty Item Socket!");
         }
         #endregion
 
@@ -573,7 +573,7 @@ namespace Server
                         count++;
                     }
 
-                    ToConsole(string.Format("Honesty items given magical properties: {0}", count.ToString()));
+                    ToConsole($"Honesty items given magical properties: {count.ToString()}");
                 });
         }
         #endregion
@@ -679,7 +679,7 @@ namespace Server
                 }
             }
 
-            ToConsole(string.Format("Quester Re-assignment: {0} quests re-assigned quester type. Some quester types may still be null. These quests will need to be quit.", count.ToString()), ConsoleColor.DarkRed);
+            ToConsole($"Quester Re-assignment: {count.ToString()} quests re-assigned quester type. Some quester types may still be null. These quests will need to be quit.", ConsoleColor.DarkRed);
         }
 
         /// <summary>
@@ -701,7 +701,7 @@ namespace Server
 
             ColUtility.Free(spawners);
 
-            ToConsole(string.Format("Smart Spawn Removal: {0} spawners [type {1}] smart spawning disabled.", count.ToString(), check.Name));
+            ToConsole($"Smart Spawn Removal: {count.ToString()} spawners [type {check.Name}] smart spawning disabled.");
         }
 
         private static bool CheckSmartSpawn(XmlSpawner spawner, Type check, bool subclasses)
@@ -759,7 +759,7 @@ namespace Server
                 spawner.Delete();
             }
 
-            ToConsole(string.Format("Spawner Deletion: deleted {0} spawners containing -{1}-.", toDelete.Count.ToString(), current));
+            ToConsole($"Spawner Deletion: deleted {toDelete.Count.ToString()} spawners containing -{current}-.");
 
             ColUtility.Free(toDelete);
         }
@@ -780,7 +780,7 @@ namespace Server
                     count++;
             }
 
-            ToConsole(string.Format("Spawn Replacement: {0} spawners replaced [{1} replaced with {2}].", count.ToString(), current, replace));
+            ToConsole($"Spawn Replacement: {count.ToString()} spawners replaced [{current} replaced with {replace}].");
         }
 
         /// <summary>
@@ -800,7 +800,7 @@ namespace Server
                     count++;
             }
 
-            ToConsole(string.Format("Spawn Replacement: {0} spawners named {1} replaced [{2} replaced with {3}].", count.ToString(), name, current, replace));
+            ToConsole($"Spawn Replacement: {count.ToString()} spawners named {name} replaced [{current} replaced with {replace}].");
         }
 
         public static bool Replace(ISpawner spwner, string current, string replace, string check)
@@ -878,7 +878,7 @@ namespace Server
             }
 
             ColUtility.Free(list);
-            ToConsole(string.Format("Spawn Removal: {0} spawn lines removed containing -{1}-. [{2} deleted].", count.ToString(), toRemove, deleted));
+            ToConsole($"Spawn Removal: {count.ToString()} spawn lines removed containing -{toRemove}-. [{deleted} deleted].");
         }
 
         public static int Remove(XmlSpawner spawner, string toRemove, ref int deleted)
@@ -1008,8 +1008,7 @@ namespace Server
                 ColUtility.Free(list);
             }
 
-            ToConsole(string.Format("Spawner Action: Performed action to {0} spawners{1}",
-                count.ToString(), lineCheck != null ? " containing " + lineCheck + "." : typeCheck != null ? " containing " + typeCheck.Name + "." : "."));
+            ToConsole($"Spawner Action: Performed action to {count.ToString()} spawners{(lineCheck != null ? " containing " + lineCheck + "." : typeCheck != null ? " containing " + typeCheck.Name + "." : ".")}");
         }
 
         public static bool ActionOnSpawner(ISpawner spawner, Type typeCheck, string lineCheck, string exempt, Action<ISpawner> action, bool inherits)
@@ -1089,11 +1088,11 @@ namespace Server
 
             if (file != null)
             {
-                path = string.Format("Spawns/{0}.xml", file);
+                path = $"Spawns/{file}.xml";
 
                 if (!File.Exists(path))
                 {
-                    ToConsole(string.Format("Cannot proceed. {0} does not exist.", file), ConsoleColor.Red);
+                    ToConsole($"Cannot proceed. {file} does not exist.", ConsoleColor.Red);
                     return;
                 }
             }
@@ -1107,7 +1106,7 @@ namespace Server
                     item.Delete();
                 }
 
-                ToConsole(string.Format("Deleted {0} Spawners in {1}.", list.Count, region));
+                ToConsole($"Deleted {list.Count} Spawners in {region}.");
                 ColUtility.Free(list);
             }
 
@@ -1123,11 +1122,11 @@ namespace Server
 
             if (file != null)
             {
-                path = string.Format("Spawns/{0}.xml", file);
+                path = $"Spawns/{file}.xml";
 
                 if (!File.Exists(path))
                 {
-                    ToConsole(string.Format("Cannot proceed. {0} does not exist.", file), ConsoleColor.Red);
+                    ToConsole($"Cannot proceed. {file} does not exist.", ConsoleColor.Red);
                     return;
                 }
             }
@@ -1146,7 +1145,7 @@ namespace Server
             foreach (Item item in list)
                 item.Delete();
 
-            ToConsole(string.Format("Deleted {0} Spawners in {1}.", list.Count, map.ToString()));
+            ToConsole($"Deleted {list.Count} Spawners in {map.ToString()}.");
 
             ColUtility.Free(list);
             eable.Free();
@@ -1167,7 +1166,7 @@ namespace Server
 
             XmlSpawner.XmlLoadFromFile(filename, SpawnerPrefix, null, Point3D.Zero, map, false, 0, false, out processedmaps, out processedspawners);
 
-            ToConsole(string.Format("Created {0} spawners from {1} with -{2}- prefix.", processedspawners, location, SpawnerPrefix == string.Empty ? "NO" : SpawnerPrefix));
+            ToConsole($"Created {processedspawners} spawners from {location} with -{(SpawnerPrefix == string.Empty ? "NO" : SpawnerPrefix)}- prefix.");
         }
 
         #region XmlSpawner to Spawner Conversion
@@ -1206,7 +1205,7 @@ namespace Server
                     }
                 }
 
-                ToConsole(string.Format("Found {0} Xmlspawner files for conversion.", files.Count), files != null && files.Count > 0 ? ConsoleColor.Green : ConsoleColor.Red);
+                ToConsole($"Found {files.Count} Xmlspawner files for conversion.", files != null && files.Count > 0 ? ConsoleColor.Green : ConsoleColor.Red);
 
                 if (files != null && files.Count > 0)
                 {
@@ -1229,7 +1228,7 @@ namespace Server
 
                         if (fs == null)
                         {
-                            ToConsole(string.Format("Unable to open {0} for loading", filename), ConsoleColor.Red);
+                            ToConsole($"Unable to open {filename} for loading", ConsoleColor.Red);
                             continue;
                         }
 
@@ -1242,7 +1241,7 @@ namespace Server
                         catch
                         {
                             fs.Close();
-                            ToConsole(string.Format("Error reading xml file {0}", filename), ConsoleColor.Red);
+                            ToConsole($"Error reading xml file {filename}", ConsoleColor.Red);
                             continue;
                         }
 
@@ -1304,16 +1303,16 @@ namespace Server
                     }
 
                     if (converted > 0)
-                        ToConsole(string.Format("Converted {0} XmlSpawners to standard spawners.", converted), ConsoleColor.Green);
+                        ToConsole($"Converted {converted} XmlSpawners to standard spawners.", ConsoleColor.Green);
 
                     if (failed > 0)
-                        ToConsole(string.Format("Failed to convert {0} XmlSpawners to standard spawners. {1} kept due to XmlSpawner Functionality", failed, keep), ConsoleColor.Red);
+                        ToConsole($"Failed to convert {failed} XmlSpawners to standard spawners. {keep} kept due to XmlSpawner Functionality", ConsoleColor.Red);
 
                     _SpawnsConverted = true;
                 }
                 else
                 {
-                    ToConsole(string.Format("Directory Not Found: {0}", filename), ConsoleColor.Red);
+                    ToConsole($"Directory Not Found: {filename}", ConsoleColor.Red);
                 }
             }
         }
@@ -1447,7 +1446,7 @@ namespace Server
                     }
                 }
 
-                ToConsole(string.Format("Found {0} Xmlspawner files for removal.", files == null ? 0 : files.Count), files != null && files.Count > 0 ? ConsoleColor.Green : ConsoleColor.Red);
+                ToConsole($"Found {(files == null ? 0 : files.Count)} Xmlspawner files for removal.", files != null && files.Count > 0 ? ConsoleColor.Green : ConsoleColor.Red);
                 ToConsole("Deleting spawners...", ConsoleColor.Cyan);
                 long start = Core.TickCount;
 
@@ -1471,7 +1470,7 @@ namespace Server
 
                         if (fs == null)
                         {
-                            ToConsole(string.Format("Unable to open {0} for loading", filename), ConsoleColor.Red);
+                            ToConsole($"Unable to open {filename} for loading", ConsoleColor.Red);
                             continue;
                         }
 
@@ -1484,7 +1483,7 @@ namespace Server
                         catch
                         {
                             fs.Close();
-                            ToConsole(string.Format("Error reading xml file {0}", filename), ConsoleColor.Red);
+                            ToConsole($"Error reading xml file {filename}", ConsoleColor.Red);
                             continue;
                         }
 
@@ -1520,11 +1519,11 @@ namespace Server
                         fs.Close();
                     }
 
-                    ToConsole(string.Format("Deleted {0} XmlSpawners [{1} no id] in {2} seconds.", deletedxml, nospawner, ((Core.TickCount - start) / 1000).ToString()), ConsoleColor.Cyan);
+                    ToConsole($"Deleted {deletedxml} XmlSpawners [{nospawner} no id] in {((Core.TickCount - start) / 1000).ToString()} seconds.", ConsoleColor.Cyan);
                 }
                 else
                 {
-                    ToConsole(string.Format("Directory Not Found: {0}", filename), ConsoleColor.Red);
+                    ToConsole($"Directory Not Found: {filename}", ConsoleColor.Red);
                 }
             }
         }
@@ -1551,7 +1550,7 @@ namespace Server
                     Diagnostics.ExceptionLogging.LogException(e);
                 }
 
-                ToConsole(string.Format("Found {0} Xmlspawner files for removal.", files == null ? "0" : files.Count.ToString()), files != null && files.Count > 0 ? ConsoleColor.Green : ConsoleColor.Red);
+                ToConsole($"Found {(files == null ? "0" : files.Count.ToString())} Xmlspawner files for removal.", files != null && files.Count > 0 ? ConsoleColor.Green : ConsoleColor.Red);
                 ToConsole("Deleting spawners...", ConsoleColor.Cyan);
 
                 if (files != null && files.Count > 0)
@@ -1573,7 +1572,7 @@ namespace Server
 
                         if (fs == null)
                         {
-                            ToConsole(string.Format("Unable to open {0} for loading", filename), ConsoleColor.Red);
+                            ToConsole($"Unable to open {filename} for loading", ConsoleColor.Red);
                             continue;
                         }
 
@@ -1586,7 +1585,7 @@ namespace Server
                         catch
                         {
                             fs.Close();
-                            ToConsole(string.Format("Error reading xml file {0}", filename), ConsoleColor.Red);
+                            ToConsole($"Error reading xml file {filename}", ConsoleColor.Red);
                             continue;
                         }
 
@@ -1618,11 +1617,11 @@ namespace Server
                         fs.Close();
                     }
 
-                    ToConsole(string.Format("Deleted {0} XmlSpawners from {1}/{2}.xml.", deletedxml, directory, filename), ConsoleColor.Cyan);
+                    ToConsole($"Deleted {deletedxml} XmlSpawners from {directory}/{filename}.xml.", ConsoleColor.Cyan);
                 }
                 else
                 {
-                    ToConsole(string.Format("File Not Found: {0}", filename), ConsoleColor.Red);
+                    ToConsole($"File Not Found: {filename}", ConsoleColor.Red);
                 }
             }
         }
@@ -1667,7 +1666,7 @@ namespace Server
                     }
                 }
 
-                ToConsole(string.Format("Found {0} Xmlspawner files for conversion.", files.Count), files != null && files.Count > 0 ? ConsoleColor.Green : ConsoleColor.Red);
+                ToConsole($"Found {files.Count} Xmlspawner files for conversion.", files != null && files.Count > 0 ? ConsoleColor.Green : ConsoleColor.Red);
                 ToConsole("Deleting spawners...", ConsoleColor.Cyan);
                 long start = Core.TickCount;
 
@@ -1691,7 +1690,7 @@ namespace Server
 
                         if (fs == null)
                         {
-                            ToConsole(string.Format("Unable to open {0} for loading", filename), ConsoleColor.Red);
+                            ToConsole($"Unable to open {filename} for loading", ConsoleColor.Red);
                             continue;
                         }
 
@@ -1704,7 +1703,7 @@ namespace Server
                         catch
                         {
                             fs.Close();
-                            ToConsole(string.Format("Error reading xml file {0}", filename), ConsoleColor.Red);
+                            ToConsole($"Error reading xml file {filename}", ConsoleColor.Red);
                             continue;
                         }
 
@@ -1766,7 +1765,7 @@ namespace Server
                                         {
                                             nodelelete++;
 
-                                            ToConsole(string.Format("Failed to Delete: {0} in {1}", (string)dr["Name"], file));
+                                            ToConsole($"Failed to Delete: {(string)dr["Name"]} in {file}");
                                         }
                                     }
                                 }
@@ -1776,11 +1775,11 @@ namespace Server
                         fs.Close();
                     }
 
-                    ToConsole(string.Format("Deleted {0} XmlSpawners [{1} failed] in {2} seconds.", deletedxml, nodelelete, ((Core.TickCount - start) / 1000).ToString()), ConsoleColor.Cyan);
+                    ToConsole($"Deleted {deletedxml} XmlSpawners [{nodelelete} failed] in {((Core.TickCount - start) / 1000).ToString()} seconds.", ConsoleColor.Cyan);
                 }
                 else
                 {
-                    ToConsole(string.Format("Directory Not Found: {0}", filename), ConsoleColor.Red);
+                    ToConsole($"Directory Not Found: {filename}", ConsoleColor.Red);
                 }
             }
         }
diff --git a/Scripts/Misc/TextDefinition.cs b/Scripts/Misc/TextDefinition.cs
index e4e5ef232..dc68feb9e 100644
--- a/Scripts/Misc/TextDefinition.cs
+++ b/Scripts/Misc/TextDefinition.cs
@@ -98,7 +98,7 @@ namespace Server
             else if (def.m_String != null)
             {
                 if (stringColor >= 0)
-                    g.AddHtml(x, y, width, height, string.Format("<BASEFONT COLOR=#{0:X6}>{1}</BASEFONT>", stringColor, def.m_String), back, scroll);
+                    g.AddHtml(x, y, width, height, $"<BASEFONT COLOR=#{stringColor:X6}>{def.m_String}</BASEFONT>", back, scroll);
                 else
                     g.AddHtml(x, y, width, height, def.m_String, back, scroll);
             }
@@ -165,7 +165,7 @@ namespace Server
             if (m_Number > 0)
                 return string.Format("{0} (0x{0:X})", m_Number);
             else if (m_String != null)
-                return string.Format("\"{0}\"", m_String);
+                return $"\"{m_String}\"";
 
             return propsGump ? "-empty-" : "empty";
         }
diff --git a/Scripts/Misc/ToggleItem.cs b/Scripts/Misc/ToggleItem.cs
index 38607d10b..0120277eb 100644
--- a/Scripts/Misc/ToggleItem.cs
+++ b/Scripts/Misc/ToggleItem.cs
@@ -128,9 +128,9 @@ namespace Server.Items
 
             public override void Execute(CommandEventArgs e, object obj)
             {
-                if (obj is ToggleItem)
+                if (obj is ToggleItem toggleItem)
                 {
-                    ((ToggleItem)obj).Toggle();
+                    toggleItem.Toggle();
                     AddResponse("The item has been toggled.");
                 }
                 else
diff --git a/Scripts/Misc/Waypoints.cs b/Scripts/Misc/Waypoints.cs
index 141463070..92449ff7d 100644
--- a/Scripts/Misc/Waypoints.cs
+++ b/Scripts/Misc/Waypoints.cs
@@ -43,10 +43,7 @@ namespace Server
         {
             NetState ns = m.NetState;
 
-            if (ns != null)
-            {
-                ns.Send(new RemoveWaypoint(e.Serial));
-            }
+            ns?.Send(new RemoveWaypoint(e.Serial));
         }
 
         public static void OnMapChange(Mobile m, Map oldMap)
diff --git a/Scripts/Misc/WebStatus.cs b/Scripts/Misc/WebStatus.cs
index 986a2eb65..9f6e46288 100644
--- a/Scripts/Misc/WebStatus.cs
+++ b/Scripts/Misc/WebStatus.cs
@@ -134,11 +134,9 @@ namespace Server.Misc
                 {
                     ++index;
 
-                    Guild g = m.Guild as Guild;
-
                     op.Write("         <tr class=\"ruo-result " + (index % 2 == 0 ? "even" : "odd") + "\"><td>");
 
-                    if (g != null)
+                    if (m.Guild is Guild g)
                     {
                         op.Write(Encode(m.Name));
                         op.Write(" [");
diff --git a/Scripts/Misc/WeightOverloading.cs b/Scripts/Misc/WeightOverloading.cs
index eb6a0ad0d..28204a95a 100644
--- a/Scripts/Misc/WeightOverloading.cs
+++ b/Scripts/Misc/WeightOverloading.cs
@@ -88,9 +88,7 @@ namespace Server.Misc
                 return;
             }
 
-            PlayerMobile pm = from as PlayerMobile;
-
-            if (pm != null)
+            if (from is PlayerMobile pm)
             {
                 int amt = 10;
 
diff --git a/Scripts/Misc/WorldLocation.cs b/Scripts/Misc/WorldLocation.cs
index b33e6a5c8..2145c66f4 100644
--- a/Scripts/Misc/WorldLocation.cs
+++ b/Scripts/Misc/WorldLocation.cs
@@ -24,7 +24,7 @@ namespace Server
 
         public override string ToString()
         {
-            return string.Format("({0}, {1}, {2}) [{3}]", Location.X, Location.Y, Location.Z, Map == null ? "(Null)" : Map.ToString());
+            return $"({Location.X}, {Location.Y}, {Location.Z}) [{(Map == null ? "(Null)" : Map.ToString())}]";
         }
     }
 }
diff --git a/Scripts/Misc/WorldLocationInfo.cs b/Scripts/Misc/WorldLocationInfo.cs
index 02a60f32c..ec886db78 100644
--- a/Scripts/Misc/WorldLocationInfo.cs
+++ b/Scripts/Misc/WorldLocationInfo.cs
@@ -176,11 +176,11 @@ namespace Server
 
             if (r.Name != null && r is TownRegion)
             {
-                return string.Format("somewhere near {0}.", r.Name);
+                return $"somewhere near {r.Name}.";
             }
             else if (r.Name != null && r is DungeonRegion)
             {
-                return string.Format("somewhere in dungeon {0}.", r.Name);
+                return $"somewhere in dungeon {r.Name}.";
             }
 
             int mapID = map.MapID;
diff --git a/Scripts/Mobiles/AI/ArcherAI.cs b/Scripts/Mobiles/AI/ArcherAI.cs
index c6e0ed13b..fd9cd7499 100644
--- a/Scripts/Mobiles/AI/ArcherAI.cs
+++ b/Scripts/Mobiles/AI/ArcherAI.cs
@@ -85,12 +85,11 @@ namespace Server.Mobiles
 
         public override bool DoActionFlee()
         {
-            Mobile c = m_Mobile.Combatant as Mobile;
 
             if (m_Mobile.CheckBreakFlee())
             {
                 // If I have a target, go back and fight them
-                if (c != null && m_Mobile.GetDistanceToSqrt(c) <= m_Mobile.RangePerception * 2)
+                if (m_Mobile.Combatant is Mobile c && m_Mobile.GetDistanceToSqrt(c) <= m_Mobile.RangePerception * 2)
                 {
                     m_Mobile.DebugSay("I am stronger now, reengaging {0}", c.Name);
                     Action = ActionType.Combat;
diff --git a/Scripts/Mobiles/AI/BaseAI.cs b/Scripts/Mobiles/AI/BaseAI.cs
index e7b8b85df..fde7096fa 100644
--- a/Scripts/Mobiles/AI/BaseAI.cs
+++ b/Scripts/Mobiles/AI/BaseAI.cs
@@ -336,10 +336,8 @@ namespace Server.Mobiles
 
             if (order == OrderType.Attack)
             {
-                if (target is BaseCreature)
+                if (target is BaseCreature bc)
                 {
-                    BaseCreature bc = (BaseCreature)target;
-
                     if (bc.IsScaryToPets && m_Mobile.IsScaredOfScaryThings)
                     {
                         m_Mobile.SayTo(from, "Your pet refuses to attack this creature!");
@@ -999,7 +997,7 @@ namespace Server.Mobiles
                     Point2D point = m_Mobile.NavPoints[map][m_Mobile.CurrentNavPoint];
                     if (point.X != m_Mobile.X || point.Y != m_Mobile.Y)
                     {
-                        m_Mobile.DebugSay(string.Format("I will move towards my navpoint: {0}", point));
+                        m_Mobile.DebugSay($"I will move towards my navpoint: {point}");
                         //DoMove(m_Mobile.GetDirectionTo(point));
                         MoveResult res = DoMoveImpl(m_Mobile.GetDirectionTo(point));
 
@@ -1016,7 +1014,7 @@ namespace Server.Mobiles
                         {
                             m_Mobile.CurrentNavPoint++;
                             m_Mobile.DebugSay(
-                                string.Format("I will go to the next navpoint: {0}", m_Mobile.NavPoints[map][m_Mobile.CurrentNavPoint]));
+                                $"I will go to the next navpoint: {m_Mobile.NavPoints[map][m_Mobile.CurrentNavPoint]}");
                         }
                     }
                 }
@@ -1262,7 +1260,7 @@ namespace Server.Mobiles
                     m_Mobile.Warmode = true;
                     m_Mobile.Combatant = null;
                     m_Mobile.ControlTarget = null;
-                    string petname = string.Format("{0}", m_Mobile.Name);
+                    string petname = $"{m_Mobile.Name}";
                     m_Mobile.ControlMaster.SendLocalizedMessage(1049671, petname); //~1_PETNAME~ is now guarding you.
                     break;
                 case OrderType.Attack:
@@ -1560,12 +1558,12 @@ namespace Server.Mobiles
                         else if (m_Mobile.CanFriend(to))
                         {
                             // ~1_NAME~ will now accept movement commands from ~2_NAME~.
-                            from.SendLocalizedMessage(1049676, string.Format("{0}\t{1}", m_Mobile.Name, to.Name));
+                            from.SendLocalizedMessage(1049676, $"{m_Mobile.Name}\t{to.Name}");
 
                             /* ~1_NAME~ has granted you the ability to give orders to their pet ~2_PET_NAME~.
                             * This creature will now consider you as a friend.
                             */
-                            to.SendLocalizedMessage(1043246, string.Format("{0}\t{1}", from.Name, m_Mobile.Name));
+                            to.SendLocalizedMessage(1043246, $"{from.Name}\t{m_Mobile.Name}");
 
                             m_Mobile.AddPetFriend(to);
 
@@ -1600,12 +1598,12 @@ namespace Server.Mobiles
             else
             {
                 // ~1_NAME~ will no longer accept movement commands from ~2_NAME~.
-                from.SendLocalizedMessage(1070951, string.Format("{0}\t{1}", m_Mobile.Name, to.Name));
+                from.SendLocalizedMessage(1070951, $"{m_Mobile.Name}\t{to.Name}");
 
                 /* ~1_NAME~ has no longer granted you the ability to give orders to their pet ~2_PET_NAME~.
                 * This creature will no longer consider you as a friend.
                 */
-                to.SendLocalizedMessage(1070952, string.Format("{0}\t{1}", from.Name, m_Mobile.Name));
+                to.SendLocalizedMessage(1070952, $"{from.Name}\t{m_Mobile.Name}");
 
                 m_Mobile.RemovePetFriend(to);
             }
@@ -1795,7 +1793,7 @@ namespace Server.Mobiles
                     MessageType.Regular,
                     0x3B2,
                     1043255,
-                    string.Format("{0}", m_Mobile.Name),
+                    $"{m_Mobile.Name}",
                     master.NetState); // ~1_NAME~ appears to have decided that it is better off without a master!
             }
 
@@ -1964,7 +1962,7 @@ namespace Server.Mobiles
                 }
                 else if (accepted && !m_Creature.CanBeControlledBy(to))
                 {
-                    string args = string.Format("{0}\t{1}\t ", to.Name, from.Name);
+                    string args = $"{to.Name}\t{from.Name}\t ";
 
                     from.SendLocalizedMessage(1043248, args);
                     // The pet refuses to be transferred because it will not obey ~1_NAME~.~3_BLANK~
@@ -1975,7 +1973,7 @@ namespace Server.Mobiles
                 }
                 else if (accepted && !m_Creature.CanBeControlledBy(from))
                 {
-                    string args = string.Format("{0}\t{1}\t ", to.Name, from.Name);
+                    string args = $"{to.Name}\t{from.Name}\t ";
 
                     from.SendLocalizedMessage(1043250, args);
                     // The pet refuses to be transferred because it will not obey you sufficiently.~3_BLANK~
@@ -2037,7 +2035,7 @@ namespace Server.Mobiles
 
                         m_Creature.PlaySound(m_Creature.GetIdleSound());
 
-                        string args = string.Format("{0}\t{1}\t{2}", from.Name, m_Creature.Name, to.Name);
+                        string args = $"{from.Name}\t{m_Creature.Name}\t{to.Name}";
 
                         from.SendLocalizedMessage(1043253, args); // You have transferred your pet to ~3_GETTER~.
                         to.SendLocalizedMessage(1043252, args); // ~1_NAME~ has transferred the allegiance of ~2_PET_NAME~ to you.
@@ -2073,7 +2071,7 @@ namespace Server.Mobiles
                 }
                 else if (!m_Mobile.CanBeControlledBy(to))
                 {
-                    string args = string.Format("{0}\t{1}\t ", to.Name, from.Name);
+                    string args = $"{to.Name}\t{from.Name}\t ";
 
                     from.SendLocalizedMessage(1043248, args);
                     // The pet refuses to be transferred because it will not obey ~1_NAME~.~3_BLANK~
@@ -2082,7 +2080,7 @@ namespace Server.Mobiles
                 }
                 else if (!m_Mobile.CanBeControlledBy(from))
                 {
-                    string args = string.Format("{0}\t{1}\t ", to.Name, from.Name);
+                    string args = $"{to.Name}\t{from.Name}\t ";
 
                     from.SendLocalizedMessage(1043250, args);
                     // The pet refuses to be transferred because it will not obey you sufficiently.~3_BLANK~
@@ -2411,21 +2409,19 @@ namespace Server.Mobiles
                         {
                             Item item = m_Obstacles.Dequeue();
 
-                            if (item is BaseDoor)
+                            if (item is BaseDoor baseDoor)
                             {
                                 m_Mobile.DebugSay("Little do they expect, I've learned how to open doors. Didn't they read the script??");
                                 m_Mobile.DebugSay("*twist*");
 
-                                ((BaseDoor)item).Use(m_Mobile);
+                                baseDoor.Use(m_Mobile);
                             }
                             else
                             {
                                 m_Mobile.DebugSay("Ugabooga. I'm so big and tough I can destroy it: {0}", item.GetType().Name);
 
-                                if (item is Container)
+                                if (item is Container cont)
                                 {
-                                    Container cont = (Container)item;
-
                                     for (int i = 0; i < cont.Items.Count; ++i)
                                     {
                                         Item check = cont.Items[i];
diff --git a/Scripts/Mobiles/AI/Magical AI/SamuraiAI.cs b/Scripts/Mobiles/AI/Magical AI/SamuraiAI.cs
index 18eed2f67..7d44d5d2e 100644
--- a/Scripts/Mobiles/AI/Magical AI/SamuraiAI.cs	
+++ b/Scripts/Mobiles/AI/Magical AI/SamuraiAI.cs	
@@ -82,9 +82,7 @@ namespace Server.Mobiles
         {
             base.DoActionCombat();
 
-            Mobile c = m_Mobile.Combatant as Mobile;
-
-            if (c != null)
+            if (m_Mobile.Combatant is Mobile c)
             {
                 SpecialMove move = SpecialMove.GetCurrentMove(m_Mobile);
 
diff --git a/Scripts/Mobiles/AI/Magical AI/SpellbinderAI.cs b/Scripts/Mobiles/AI/Magical AI/SpellbinderAI.cs
index e756ddffa..0649ae228 100644
--- a/Scripts/Mobiles/AI/Magical AI/SpellbinderAI.cs	
+++ b/Scripts/Mobiles/AI/Magical AI/SpellbinderAI.cs	
@@ -408,9 +408,9 @@ namespace Server.Mobiles
                     else if (!m_Mobile.InRange(toDispel, 12))
                         RunTo(toDispel);
                 }
-                else if (c is Mobile)
+                else if (c is Mobile mobile)
                 {
-                    RunTo((Mobile)c);
+                    RunTo(mobile);
                 }
 
                 if (spell != null)
diff --git a/Scripts/Mobiles/AI/Magical AI/SpellweavingAI.cs b/Scripts/Mobiles/AI/Magical AI/SpellweavingAI.cs
index 2752e29dd..772dbd0de 100644
--- a/Scripts/Mobiles/AI/Magical AI/SpellweavingAI.cs	
+++ b/Scripts/Mobiles/AI/Magical AI/SpellweavingAI.cs	
@@ -24,11 +24,10 @@ namespace Server.Mobiles
             }
 
             int mana = m_Mobile.Mana;
-            BaseWeapon wep = m_Mobile.Weapon as BaseWeapon;
 
             if (mana >= 50 && !ArcaneEmpowermentSpell.IsUnderEffects(m_Mobile) && 0.5 >= Utility.RandomDouble())
                 return new ArcaneEmpowermentSpell(m_Mobile, null);
-            if (mana >= 32 && wep != null && !ImmolatingWeaponSpell.IsImmolating(m_Mobile, wep))
+            if (mana >= 32 && m_Mobile.Weapon is BaseWeapon wep && !ImmolatingWeaponSpell.IsImmolating(m_Mobile, wep))
                 return new ImmolatingWeaponSpell(m_Mobile, null);
 
             return null;
diff --git a/Scripts/Mobiles/AI/MeleeAI.cs b/Scripts/Mobiles/AI/MeleeAI.cs
index 304c95894..edff98b0a 100644
--- a/Scripts/Mobiles/AI/MeleeAI.cs
+++ b/Scripts/Mobiles/AI/MeleeAI.cs
@@ -117,12 +117,11 @@ namespace Server.Mobiles
 
         public override bool DoActionFlee()
         {
-            Mobile c = m_Mobile.Combatant as Mobile;
 
             if (m_Mobile.CheckBreakFlee())
             {
                 // If I have a target, go back and fight them
-                if (c != null && m_Mobile.GetDistanceToSqrt(c) <= m_Mobile.RangePerception * 2)
+                if (m_Mobile.Combatant is Mobile c && m_Mobile.GetDistanceToSqrt(c) <= m_Mobile.RangePerception * 2)
                 {
                     m_Mobile.DebugSay("I am stronger now, reengaging {0}", c.Name);
                     Action = ActionType.Combat;
diff --git a/Scripts/Mobiles/AI/OrcScoutAI.cs b/Scripts/Mobiles/AI/OrcScoutAI.cs
index de02b69eb..9dca00204 100644
--- a/Scripts/Mobiles/AI/OrcScoutAI.cs
+++ b/Scripts/Mobiles/AI/OrcScoutAI.cs
@@ -145,12 +145,11 @@ namespace Server.Mobiles
 
         public override bool DoActionFlee()
         {
-            Mobile c = m_Mobile.Combatant as Mobile;
 
             if (m_Mobile.CheckBreakFlee())
             {
                 // If I have a target, go back and fight them
-                if (c != null && m_Mobile.GetDistanceToSqrt(c) <= m_Mobile.RangePerception * 2)
+                if (m_Mobile.Combatant is Mobile c && m_Mobile.GetDistanceToSqrt(c) <= m_Mobile.RangePerception * 2)
                 {
                     m_Mobile.DebugSay("I am stronger now, reengaging {0}", c.Name);
                     Action = ActionType.Combat;
diff --git a/Scripts/Mobiles/AI/VendorAI.cs b/Scripts/Mobiles/AI/VendorAI.cs
index 1d0d8087f..178bafe0f 100644
--- a/Scripts/Mobiles/AI/VendorAI.cs
+++ b/Scripts/Mobiles/AI/VendorAI.cs
@@ -147,9 +147,9 @@ namespace Server.Mobiles
 
         public override double TransformMoveDelay(double delay)
         {
-            if (m_Mobile is BaseVendor)
+            if (m_Mobile is BaseVendor baseVendor)
             {
-                return ((BaseVendor)m_Mobile).GetMoveDelay;
+                return baseVendor.GetMoveDelay;
             }
 
             return base.TransformMoveDelay(delay);
diff --git a/Scripts/Mobiles/Bosses/AbyssalInfernal.cs b/Scripts/Mobiles/Bosses/AbyssalInfernal.cs
index 6f280b84b..17fe3696a 100644
--- a/Scripts/Mobiles/Bosses/AbyssalInfernal.cs
+++ b/Scripts/Mobiles/Bosses/AbyssalInfernal.cs
@@ -260,16 +260,14 @@ namespace Server.Mobiles
 
         private void DoDamage_Callback(object o)
         {
-            Mobile m = o as Mobile;
-
-            if (m != null && Map != null)
+            if (o is Mobile m && Map != null)
             {
                 IMount mount = m.Mount;
 
                 if (mount != null)
                 {
-                    if (m is PlayerMobile)
-                        ((PlayerMobile)m).SetMountBlock(BlockMountType.Dazed, TimeSpan.FromSeconds(10), true);
+                    if (m is PlayerMobile playerMobile)
+                        playerMobile.SetMountBlock(BlockMountType.Dazed, TimeSpan.FromSeconds(10), true);
                     else
                         mount.Rider = null;
                 }
@@ -339,9 +337,7 @@ namespace Server.Mobiles
                     }
                 }
 
-                BaseCreature spawn = Activator.CreateInstance(type) as BaseCreature;
-
-                if (spawn != null)
+                if (Activator.CreateInstance(type) is BaseCreature spawn)
                 {
                     spawn.MoveToWorld(p, Map);
                     spawn.Team = Team;
@@ -351,7 +347,7 @@ namespace Server.Mobiles
                     {
                         BaseCreature s = o;
 
-                        if (s != null && s.Combatant != null)
+                        if (s?.Combatant != null)
                         {
                             if (!(s.Combatant is PlayerMobile) || !((PlayerMobile)s.Combatant).HonorActive)
                                 s.Combatant = Combatant;
@@ -406,9 +402,7 @@ namespace Server.Mobiles
             {
                 for (int i = 0; i < count; i++)
                 {
-                    BaseCreature summon = reader.ReadMobile() as BaseCreature;
-
-                    if (summon != null)
+                    if (reader.ReadMobile() is BaseCreature summon)
                     {
                         if (SummonedHelpers == null)
                             SummonedHelpers = new List<BaseCreature>();
diff --git a/Scripts/Mobiles/Bosses/Charybdis/Charybdis.cs b/Scripts/Mobiles/Bosses/Charybdis/Charybdis.cs
index 7a4ccb8eb..dacd8f4f8 100644
--- a/Scripts/Mobiles/Bosses/Charybdis/Charybdis.cs
+++ b/Scripts/Mobiles/Bosses/Charybdis/Charybdis.cs
@@ -700,10 +700,10 @@ namespace Server.Mobiles
 
         public GiantTentacle(Mobile master) : base(AIType.AI_Mage, FightMode.Closest, 10, 1, 0.2, 0.4)
         {
-            if (master is Charydbis)
+            if (master is Charydbis charydbis)
             {
                 m_Master = master;
-                ((Charydbis)master).AddTentacle(this);
+                charydbis.AddTentacle(this);
             }
 
             Name = "a giant tentacle";
@@ -748,8 +748,8 @@ namespace Server.Mobiles
 
         public override void Delete()
         {
-            if (m_Master != null && m_Master is Charydbis)
-                ((Charydbis)m_Master).RemoveTentacle(this);
+            if (m_Master is Charydbis charydbis)
+                charydbis.RemoveTentacle(this);
 
             base.Delete();
         }
diff --git a/Scripts/Mobiles/Bosses/Charybdis/CharybdisSpawner.cs b/Scripts/Mobiles/Bosses/Charybdis/CharybdisSpawner.cs
index fb0cf9fd0..20b67de0a 100644
--- a/Scripts/Mobiles/Bosses/Charybdis/CharybdisSpawner.cs
+++ b/Scripts/Mobiles/Bosses/Charybdis/CharybdisSpawner.cs
@@ -105,7 +105,7 @@ namespace Server.Mobiles
                 if (m_Charydbis != null && m_Charydbis.Alive)
                 {
                     Point3D pnt = new Point3D(m_CurrentLocation.X + 5, m_CurrentLocation.Y + 5, -5);
-                    from.SendMessage(string.Format("The location you seek is: {0} in {1}", GetSextantLocation(pnt), m_Map));
+                    from.SendMessage($"The location you seek is: {GetSextantLocation(pnt)} in {m_Map}");
                 }
                 else if (m_HasSpawned && (m_Charydbis == null || !m_Charydbis.Alive))
                 {
@@ -135,7 +135,7 @@ namespace Server.Mobiles
             m_NextSpawn = DateTime.UtcNow + NoSpawnDelay;
             m_IsSummoned = true;
             Point3D p = SOS.FindLocation(map);
-            from.SendMessage(string.Format("The location you seek is: {0} in {1}", GetSextantLocation(p), m_Map));
+            from.SendMessage($"The location you seek is: {GetSextantLocation(p)} in {m_Map}");
             m_CurrentLocation = new Rectangle2D(p.X - 5, p.Y - 5, 10, 10);
             m_LastLocation = m_CurrentLocation;
             m_Timer = new InternalTimer(this, NoSpawnDelay);
@@ -151,7 +151,7 @@ namespace Server.Mobiles
             bool xEast = false, ySouth = false;
 
             if (Sextant.Format(pnt, m_Map, ref xLong, ref yLat, ref xMins, ref yMins, ref xEast, ref ySouth))
-                return string.Format("{0}° {1}'{2}, {3}° {4}'{5}", yLat, yMins, ySouth ? "S" : "N", xLong, xMins, xEast ? "E" : "W");
+                return $"{yLat}° {yMins}'{(ySouth ? "S" : "N")}, {xLong}° {xMins}'{(xEast ? "E" : "W")}";
 
             return pnt.ToString();
         }
diff --git a/Scripts/Mobiles/Bosses/ChiefParoxysmus.cs b/Scripts/Mobiles/Bosses/ChiefParoxysmus.cs
index 9677e2cff..28cb94fc4 100644
--- a/Scripts/Mobiles/Bosses/ChiefParoxysmus.cs
+++ b/Scripts/Mobiles/Bosses/ChiefParoxysmus.cs
@@ -95,10 +95,8 @@ namespace Server.Mobiles
             base.OnDamage(amount, from, willKill);
 
             // eats pet or summons
-            if (from is BaseCreature)
+            if (from is BaseCreature creature)
             {
-                BaseCreature creature = (BaseCreature)from;
-
                 if (creature.Controlled || creature.Summoned)
                 {
                     if (Hits < HitsMax)
diff --git a/Scripts/Mobiles/Bosses/Corgul/CorgulAltar.cs b/Scripts/Mobiles/Bosses/Corgul/CorgulAltar.cs
index 2f83afe46..e183fe231 100644
--- a/Scripts/Mobiles/Bosses/Corgul/CorgulAltar.cs
+++ b/Scripts/Mobiles/Bosses/Corgul/CorgulAltar.cs
@@ -56,7 +56,7 @@ namespace Server.Items
             set
             {
                 m_Active = value;
-                PublicOverheadMessage(Network.MessageType.Regular, 25, false, string.Format("Corgul Altar for {0} has been {1}", Map, m_Active ? "activated" : "deactivated"));
+                PublicOverheadMessage(Network.MessageType.Regular, 25, false, $"Corgul Altar for {Map} has been {(m_Active ? "activated" : "deactivated")}");
             }
         }
 
diff --git a/Scripts/Mobiles/Bosses/Corgul/CorgulRegion.cs b/Scripts/Mobiles/Bosses/Corgul/CorgulRegion.cs
index d2fe320fb..1c123b1fb 100644
--- a/Scripts/Mobiles/Bosses/Corgul/CorgulRegion.cs
+++ b/Scripts/Mobiles/Bosses/Corgul/CorgulRegion.cs
@@ -22,8 +22,8 @@ namespace Server.Regions
 
                     foreach (BaseMulti multi in reg.GetEnumeratedMultis())
                     {
-                        if (multi is BaseBoat)
-                            reg.RemoveBoat((BaseBoat)multi);
+                        if (multi is BaseBoat baseBoat)
+                            reg.RemoveBoat(baseBoat);
                     }
                 }
             });
@@ -134,8 +134,8 @@ namespace Server.Regions
 
         public void RemoveBoat_Callback(object o)
         {
-            if (o is BaseBoat)
-                RemoveBoat((BaseBoat)o);
+            if (o is BaseBoat baseBoat)
+                RemoveBoat(baseBoat);
         }
 
         public void RemoveBoat(BaseBoat boat)
@@ -205,9 +205,9 @@ namespace Server.Regions
 
             Region reg = Find(from.Location, from.Map);
 
-            if (reg is CorgulRegion)
+            if (reg is CorgulRegion corgulRegion)
             {
-                CorgulAltar altar = ((CorgulRegion)reg).Altar;
+                CorgulAltar altar = corgulRegion.Altar;
 
                 if (altar != null && !altar.Activated)
                 {
diff --git a/Scripts/Mobiles/Bosses/Corgul/CorgulTheSoulbinder.cs b/Scripts/Mobiles/Bosses/Corgul/CorgulTheSoulbinder.cs
index 38555a8ce..5686f486e 100644
--- a/Scripts/Mobiles/Bosses/Corgul/CorgulTheSoulbinder.cs
+++ b/Scripts/Mobiles/Bosses/Corgul/CorgulTheSoulbinder.cs
@@ -231,7 +231,7 @@ namespace Server.Mobiles
 
             if (!m_HasDone2ndSpawn && m_Helpers.Count > 0)
             {
-                if (m_Helpers.Where(bc => bc.Alive && !bc.Deleted).Count() == 0)
+                if (!m_Helpers.Any(bc => bc.Alive && !bc.Deleted))
                 {
                     Timer.DelayCall(TimeSpan.FromSeconds(5), SpawnHelpers);
                     m_HasDone2ndSpawn = true;
@@ -397,9 +397,8 @@ namespace Server.Mobiles
                 return;
 
             var killer = bc.FindMostRecentDamager(false);
-            var creature = killer as BaseCreature;
 
-            if (creature != null)
+            if (killer is BaseCreature creature)
             {
                 killer = creature.GetMaster();
             }
@@ -447,8 +446,7 @@ namespace Server.Mobiles
                     int cnt = reader.ReadInt();
                     for (int i = 0; i < cnt; i++)
                     {
-                        BaseCreature bc = reader.ReadMobile() as BaseCreature;
-                        if (bc != null)
+                        if (reader.ReadMobile() is BaseCreature bc)
                             m_Helpers.Add(bc);
                     }
                     break;
diff --git a/Scripts/Mobiles/Bosses/Corgul/IslandMap.cs b/Scripts/Mobiles/Bosses/Corgul/IslandMap.cs
index efdb82333..1bae083f6 100644
--- a/Scripts/Mobiles/Bosses/Corgul/IslandMap.cs
+++ b/Scripts/Mobiles/Bosses/Corgul/IslandMap.cs
@@ -29,7 +29,7 @@ namespace Server.Items
 
             if (Altar != null && Altar.DeadLine != DateTime.MinValue && Altar.DeadLine > DateTime.UtcNow)
             {
-                list.Add(1072516, string.Format("map of the world\t{0}", (int)(Altar.DeadLine - DateTime.UtcNow).TotalSeconds)); // ~1_name~ will expire in ~2_val~ seconds!
+                list.Add(1072516, $"map of the world\t{(int)(Altar.DeadLine - DateTime.UtcNow).TotalSeconds}"); // ~1_name~ will expire in ~2_val~ seconds!
             }
         }
 
diff --git a/Scripts/Mobiles/Bosses/Corgul/SoulboundPirateRaider.cs b/Scripts/Mobiles/Bosses/Corgul/SoulboundPirateRaider.cs
index 279282c70..961feed5a 100644
--- a/Scripts/Mobiles/Bosses/Corgul/SoulboundPirateRaider.cs
+++ b/Scripts/Mobiles/Bosses/Corgul/SoulboundPirateRaider.cs
@@ -14,10 +14,10 @@ namespace Server.Mobiles
             if (weapon == null)
                 return null;
 
-            if (weapon is BaseWeapon)
+            if (weapon is BaseWeapon baseWeapon)
             {
                 if (Utility.RandomBool())
-                    return ((BaseWeapon)weapon).PrimaryAbility;
+                    return baseWeapon.PrimaryAbility;
                 else
                     return ((BaseWeapon)weapon).SecondaryAbility;
             }
diff --git a/Scripts/Mobiles/Bosses/Corgul/WarpRegion.cs b/Scripts/Mobiles/Bosses/Corgul/WarpRegion.cs
index 730b09c91..bf3387541 100644
--- a/Scripts/Mobiles/Bosses/Corgul/WarpRegion.cs
+++ b/Scripts/Mobiles/Bosses/Corgul/WarpRegion.cs
@@ -82,7 +82,7 @@ namespace Server.Regions
                     continue;
 
                 Item item = pm.Backpack.FindItemByType(typeof(CorgulIslandMap));
-                if (item != null && item is CorgulIslandMap && Contains(((CorgulIslandMap)item).DestinationPoint))
+                if (item is CorgulIslandMap && Contains(((CorgulIslandMap)item).DestinationPoint))
                 {
                     hasMap = true;
                     break;
diff --git a/Scripts/Mobiles/Bosses/CrimsonDragon.cs b/Scripts/Mobiles/Bosses/CrimsonDragon.cs
index 4a02ab820..e516ebf99 100644
--- a/Scripts/Mobiles/Bosses/CrimsonDragon.cs
+++ b/Scripts/Mobiles/Bosses/CrimsonDragon.cs
@@ -120,9 +120,8 @@ namespace Server.Mobiles
         {
             if (Map != null && attacker != this && 0.1 > Utility.RandomDouble())
             {
-                if (attacker is BaseCreature)
+                if (attacker is BaseCreature pet)
                 {
-                    BaseCreature pet = (BaseCreature)attacker;
                     if (pet.ControlMaster != null && (attacker is Dragon || attacker is GreaterDragon || attacker is SkeletalDragon || attacker is WhiteWyrm || attacker is Drake))
                     {
                         Combatant = null;
@@ -130,7 +129,7 @@ namespace Server.Mobiles
                         Combatant = null;
                         pet.ControlMaster = null;
                         pet.Controlled = false;
-                        attacker.Emote(string.Format("* {0} decided to go wild *", attacker.Name));
+                        attacker.Emote($"* {attacker.Name} decided to go wild *");
                     }
 
                     if (pet.ControlMaster != null && 0.1 > Utility.RandomDouble())
@@ -138,7 +137,7 @@ namespace Server.Mobiles
                         Combatant = null;
                         pet.Combatant = pet.ControlMaster;
                         Combatant = null;
-                        attacker.Emote(string.Format("* {0} is being angered *", attacker.Name));
+                        attacker.Emote($"* {attacker.Name} is being angered *");
                     }
                 }
             }
@@ -186,10 +185,8 @@ namespace Server.Mobiles
 
         private void Terrorize(object o)
         {
-            if (o is Mobile)
+            if (o is Mobile m)
             {
-                Mobile m = (Mobile)o;
-
                 m.Frozen = false;
                 m.SendLocalizedMessage(1005603); // You can move again!
 
diff --git a/Scripts/Mobiles/Bosses/DespiseBosses.cs b/Scripts/Mobiles/Bosses/DespiseBosses.cs
index 640e02ade..bdbee7f7e 100644
--- a/Scripts/Mobiles/Bosses/DespiseBosses.cs
+++ b/Scripts/Mobiles/Bosses/DespiseBosses.cs
@@ -40,9 +40,9 @@ namespace Server.Engines.Despise
 
         public override void OnKilledBy(Mobile mob)
         {
-            if (mob is PlayerMobile)
+            if (mob is PlayerMobile playerMobile)
             {
-                int chance = ArtifactChance + Math.Min(10, ((PlayerMobile)mob).Luck / 180);
+                int chance = ArtifactChance + Math.Min(10, playerMobile.Luck / 180);
 
                 if (chance >= Utility.Random(100))
                 {
diff --git a/Scripts/Mobiles/Bosses/DreadHorn.cs b/Scripts/Mobiles/Bosses/DreadHorn.cs
index 032f7c6fa..e29558ba4 100644
--- a/Scripts/Mobiles/Bosses/DreadHorn.cs
+++ b/Scripts/Mobiles/Bosses/DreadHorn.cs
@@ -251,8 +251,8 @@ namespace Server.Mobiles
         {
             Mobile agro;
 
-            if (m is BaseCreature)
-                agro = ((BaseCreature)m).ControlMaster;
+            if (m is BaseCreature baseCreature)
+                agro = baseCreature.ControlMaster;
             else
                 agro = m;
 
diff --git a/Scripts/Mobiles/Bosses/Harrower/Harrower.cs b/Scripts/Mobiles/Bosses/Harrower/Harrower.cs
index 78ab999a7..6c2d83e76 100644
--- a/Scripts/Mobiles/Bosses/Harrower/Harrower.cs
+++ b/Scripts/Mobiles/Bosses/Harrower/Harrower.cs
@@ -267,10 +267,8 @@ namespace Server.Mobiles
                 m.SendLocalizedMessage(1049524); // You have received a scroll of power!
                 m.AddToBackpack(new StatCapScroll(m_StatCap + RandomStatScrollLevel()));
 
-                if (m is PlayerMobile)
+                if (m is PlayerMobile pm)
                 {
-                    PlayerMobile pm = (PlayerMobile)m;
-
                     for (int j = 0; j < pm.JusticeProtectors.Count; ++j)
                     {
                         Mobile prot = pm.JusticeProtectors[j];
@@ -396,7 +394,7 @@ namespace Server.Mobiles
             else
                 m_DamageEntries.Add(from, amount);
 
-            from.SendMessage(string.Format("Total Damage: {0}", m_DamageEntries[from]));
+            from.SendMessage($"Total Damage: {m_DamageEntries[from]}");
         }
 
         public void AwardArtifact(Item artifact)
diff --git a/Scripts/Mobiles/Bosses/LadyMelisande.cs b/Scripts/Mobiles/Bosses/LadyMelisande.cs
index 610aca505..a5c8bc440 100644
--- a/Scripts/Mobiles/Bosses/LadyMelisande.cs
+++ b/Scripts/Mobiles/Bosses/LadyMelisande.cs
@@ -66,9 +66,7 @@ namespace Server.Mobiles
         {
             base.OnThink();
 
-            Mobile combatant = Combatant as Mobile;
-
-            if (combatant != null)
+            if (Combatant is Mobile combatant)
             {
                 if (CanTakeLife(combatant))
                     TakeLife(combatant);
diff --git a/Scripts/Mobiles/Bosses/Medusa.cs b/Scripts/Mobiles/Bosses/Medusa.cs
index b8c1582c7..d7d260e02 100644
--- a/Scripts/Mobiles/Bosses/Medusa.cs
+++ b/Scripts/Mobiles/Bosses/Medusa.cs
@@ -616,7 +616,7 @@ namespace Server.Mobiles
                     {
                         int d = (int)clone.GetDistanceToSqrt(m.Location);
 
-                        if (m != null && m is PlayerMobile || (m is BaseCreature && ((BaseCreature)m).GetMaster() is PlayerMobile))
+                        if (m is PlayerMobile || (m is BaseCreature && ((BaseCreature)m).GetMaster() is PlayerMobile))
                         {
                             if (m.NetState != null)
                             {
diff --git a/Scripts/Mobiles/Bosses/MonstrousInterredGrizzle.cs b/Scripts/Mobiles/Bosses/MonstrousInterredGrizzle.cs
index 1037bde61..9f82d60c3 100644
--- a/Scripts/Mobiles/Bosses/MonstrousInterredGrizzle.cs
+++ b/Scripts/Mobiles/Bosses/MonstrousInterredGrizzle.cs
@@ -220,9 +220,7 @@ namespace Server.Mobiles
             {
                 for (int i = 0; i < m.Items.Count; i++)
                 {
-                    IDurability item = m.Items[i] as IDurability;
-
-                    if (item != null && Utility.RandomDouble() < 0.25)
+                    if (m.Items[i] is IDurability item && Utility.RandomDouble() < 0.25)
                     {
                         if (item.HitPoints > 10)
                             item.HitPoints -= 10;
diff --git a/Scripts/Mobiles/Bosses/Neira.cs b/Scripts/Mobiles/Bosses/Neira.cs
index 192d9f86b..a68fad17b 100644
--- a/Scripts/Mobiles/Bosses/Neira.cs
+++ b/Scripts/Mobiles/Bosses/Neira.cs
@@ -102,8 +102,8 @@ namespace Server.Mobiles
             if (mount != null)
                 mount.Rider = null;
 
-            if (mount is Mobile)
-                ((Mobile)mount).Delete();
+            if (mount is Mobile mobile)
+                mobile.Delete();
 
             return base.OnBeforeDeath();
         }
diff --git a/Scripts/Mobiles/Bosses/OsiredonTheScalisEnforcer.cs b/Scripts/Mobiles/Bosses/OsiredonTheScalisEnforcer.cs
index a69f2471d..cb8de9425 100644
--- a/Scripts/Mobiles/Bosses/OsiredonTheScalisEnforcer.cs
+++ b/Scripts/Mobiles/Bosses/OsiredonTheScalisEnforcer.cs
@@ -298,10 +298,10 @@ namespace Server.Mobiles
         public ParasiticEel(Mobile master)
             : base(AIType.AI_Mage, FightMode.Closest, 10, 1, 0.2, 0.4)
         {
-            if (master is Osiredon)
+            if (master is Osiredon osiredon)
             {
                 m_Master = master;
-                ((Osiredon)master).AddEel(this);
+                osiredon.AddEel(this);
             }
 
             Name = "a parasitic eel";
@@ -347,8 +347,8 @@ namespace Server.Mobiles
 
         public override void Delete()
         {
-            if (m_Master != null && m_Master is Osiredon)
-                ((Osiredon)m_Master).RemoveEel(this);
+            if (m_Master is Osiredon osiredon)
+                osiredon.RemoveEel(this);
 
             base.Delete();
         }
diff --git a/Scripts/Mobiles/Bosses/PrimevalLich.cs b/Scripts/Mobiles/Bosses/PrimevalLich.cs
index 0ef4c9e97..7a7c584d5 100644
--- a/Scripts/Mobiles/Bosses/PrimevalLich.cs
+++ b/Scripts/Mobiles/Bosses/PrimevalLich.cs
@@ -105,9 +105,8 @@ namespace Server.Mobiles
         {
             if (m_NextDiscordTime <= DateTime.UtcNow)
             {
-                Mobile target = Combatant as Mobile;
 
-                if (target != null && target.InRange(this, 8) && CanBeHarmful(target))
+                if (Combatant is Mobile target && target.InRange(this, 8) && CanBeHarmful(target))
                     Discord(target);
             }
         }
@@ -411,12 +410,12 @@ namespace Server.Mobiles
             {
                 object mod = mods[i];
 
-                if (mod is ResistanceMod)
-                    from.AddResistanceMod((ResistanceMod)mod);
-                else if (mod is StatMod)
-                    from.AddStatMod((StatMod)mod);
-                else if (mod is SkillMod)
-                    from.AddSkillMod((SkillMod)mod);
+                if (mod is ResistanceMod resistanceMod)
+                    from.AddResistanceMod(resistanceMod);
+                else if (mod is StatMod statMod)
+                    from.AddStatMod(statMod);
+                else if (mod is SkillMod skillMod)
+                    from.AddSkillMod(skillMod);
             }
         }
 
@@ -426,12 +425,12 @@ namespace Server.Mobiles
             {
                 object mod = mods[i];
 
-                if (mod is ResistanceMod)
-                    from.RemoveResistanceMod((ResistanceMod)mod);
-                else if (mod is StatMod)
-                    from.RemoveStatMod(((StatMod)mod).Name);
-                else if (mod is SkillMod)
-                    from.RemoveSkillMod((SkillMod)mod);
+                if (mod is ResistanceMod resistanceMod)
+                    from.RemoveResistanceMod(resistanceMod);
+                else if (mod is StatMod statMod)
+                    from.RemoveStatMod(statMod.Name);
+                else if (mod is SkillMod skillMod)
+                    from.RemoveSkillMod(skillMod);
             }
         }
         #endregion
diff --git a/Scripts/Mobiles/Bosses/Serado.cs b/Scripts/Mobiles/Bosses/Serado.cs
index 8e0779960..b51c4ad4c 100644
--- a/Scripts/Mobiles/Bosses/Serado.cs
+++ b/Scripts/Mobiles/Bosses/Serado.cs
@@ -137,9 +137,9 @@ namespace Server.Mobiles
                 */
                 Mobile target = null;
 
-                if (attacker is BaseCreature)
+                if (attacker is BaseCreature baseCreature)
                 {
-                    Mobile m = ((BaseCreature)attacker).GetMaster();
+                    Mobile m = baseCreature.GetMaster();
 
                     if (m != null)
                         target = m;
diff --git a/Scripts/Mobiles/Bosses/StygianDragon.cs b/Scripts/Mobiles/Bosses/StygianDragon.cs
index 012fa4934..f5aa35d97 100644
--- a/Scripts/Mobiles/Bosses/StygianDragon.cs
+++ b/Scripts/Mobiles/Bosses/StygianDragon.cs
@@ -92,7 +92,7 @@ namespace Server.Mobiles
         {
             base.OnThink();
 
-            if (Combatant == null || !(Combatant is Mobile))
+            if (!(Combatant is Mobile))
                 return;
 
             if (DateTime.UtcNow > m_Delay)
diff --git a/Scripts/Mobiles/Event/PumpkinHead.cs b/Scripts/Mobiles/Event/PumpkinHead.cs
index e1cc397c3..6751ba874 100644
--- a/Scripts/Mobiles/Event/PumpkinHead.cs
+++ b/Scripts/Mobiles/Event/PumpkinHead.cs
@@ -89,7 +89,7 @@ namespace Server.Mobiles
         {
             if (Utility.RandomBool())
             {
-                if (from != null && from.Map != null && Map != Map.Internal && Map == from.Map && from.InRange(this, 12))
+                if (from?.Map != null && Map != Map.Internal && Map == from.Map && from.InRange(this, 12))
                 {
                     SpillAcid((willKill) ? this : from, (willKill) ? 3 : 1);
                 }
diff --git a/Scripts/Mobiles/NPCs/Alchemist.cs b/Scripts/Mobiles/NPCs/Alchemist.cs
index 1876645ce..ca6e70260 100644
--- a/Scripts/Mobiles/NPCs/Alchemist.cs
+++ b/Scripts/Mobiles/NPCs/Alchemist.cs
@@ -30,8 +30,8 @@ namespace Server.Mobiles
 
         public override void OnSuccessfulBulkOrderReceive(Mobile from)
         {
-            if (from is PlayerMobile)
-                ((PlayerMobile)from).NextAlchemyBulkOrder = TimeSpan.Zero;
+            if (from is PlayerMobile playerMobile)
+                playerMobile.NextAlchemyBulkOrder = TimeSpan.Zero;
         }
 
         #endregion
diff --git a/Scripts/Mobiles/NPCs/AmbitiousSolenQueen.cs b/Scripts/Mobiles/NPCs/AmbitiousSolenQueen.cs
index f361adcc7..c3bc0cb8f 100644
--- a/Scripts/Mobiles/NPCs/AmbitiousSolenQueen.cs
+++ b/Scripts/Mobiles/NPCs/AmbitiousSolenQueen.cs
@@ -37,9 +37,7 @@ namespace Server.Engines.Quests.Ambitious
         {
             Direction = GetDirectionTo(player);
 
-            AmbitiousQueenQuest qs = player.Quest as AmbitiousQueenQuest;
-
-            if (qs != null && qs.RedSolen == RedSolen)
+            if (player.Quest is AmbitiousQueenQuest qs && qs.RedSolen == RedSolen)
             {
                 if (qs.IsObjectiveInProgress(typeof(KillQueensObjective)))
                 {
@@ -59,9 +57,7 @@ namespace Server.Engines.Quests.Ambitious
                     }
                     else
                     {
-                        GetRewardObjective lastObj = qs.FindObjective(typeof(GetRewardObjective)) as GetRewardObjective;
-
-                        if (lastObj != null && !lastObj.Completed)
+                        if (qs.FindObjective(typeof(GetRewardObjective)) is GetRewardObjective lastObj && !lastObj.Completed)
                         {
                             bool bagOfSending = lastObj.BagOfSending;
                             bool powderOfTranslocation = lastObj.PowderOfTranslocation;
@@ -104,22 +100,16 @@ namespace Server.Engines.Quests.Ambitious
         {
             Direction = GetDirectionTo(from);
 
-            PlayerMobile player = from as PlayerMobile;
-
-            if (player != null)
+            if (from is PlayerMobile player)
             {
-                AmbitiousQueenQuest qs = player.Quest as AmbitiousQueenQuest;
-
-                if (qs != null && qs.RedSolen == RedSolen)
+                if (player.Quest is AmbitiousQueenQuest qs && qs.RedSolen == RedSolen)
                 {
                     QuestObjective obj = qs.FindObjective(typeof(GatherFungiObjective));
 
                     if (obj != null && !obj.Completed)
                     {
-                        if (dropped is ZoogiFungus)
+                        if (dropped is ZoogiFungus fungi)
                         {
-                            ZoogiFungus fungi = (ZoogiFungus)dropped;
-
                             if (fungi.Amount >= 50)
                             {
                                 obj.Complete();
diff --git a/Scripts/Mobiles/NPCs/AnimalTrainer.cs b/Scripts/Mobiles/NPCs/AnimalTrainer.cs
index 981703585..ee5f3ef3f 100644
--- a/Scripts/Mobiles/NPCs/AnimalTrainer.cs
+++ b/Scripts/Mobiles/NPCs/AnimalTrainer.cs
@@ -242,9 +242,9 @@ namespace Server.Mobiles
 
                 from.Stabled.Remove(pet);
 
-                if (from is PlayerMobile)
+                if (from is PlayerMobile playerMobile)
                 {
-                    ((PlayerMobile)from).AutoStabled.Remove(pet);
+                    playerMobile.AutoStabled.Remove(pet);
                 }
             }
             else
@@ -379,9 +379,9 @@ namespace Server.Mobiles
 
                     from.Stabled.RemoveAt(i);
 
-                    if (from is PlayerMobile)
+                    if (from is PlayerMobile playerMobile)
                     {
-                        ((PlayerMobile)from).AutoStabled.Remove(pet);
+                        playerMobile.AutoStabled.Remove(pet);
                     }
 
                     --i;
@@ -478,7 +478,7 @@ namespace Server.Mobiles
                 {
                     if (m is AnimalTrainer)
                     {
-                        e.Mobile.SendLocalizedMessage(1071250, string.Format("{0}\t{1}", e.Mobile.Stabled.Count.ToString(), GetMaxStabled(e.Mobile).ToString())); // ~1_USED~/~2_MAX~ stable stalls used.
+                        e.Mobile.SendLocalizedMessage(1071250, $"{e.Mobile.Stabled.Count.ToString()}\t{GetMaxStabled(e.Mobile).ToString()}"); // ~1_USED~/~2_MAX~ stable stalls used.
                         break;
                     }
                 }
@@ -569,7 +569,7 @@ namespace Server.Mobiles
                         35 + (i * 20),
                         275,
                         18,
-                        string.Format("<BASEFONT COLOR=#C6C6EF>{0}</BASEFONT>", pet.Name),
+                        $"<BASEFONT COLOR=#C6C6EF>{pet.Name}</BASEFONT>",
                         false,
                         false);
                 }
@@ -618,9 +618,9 @@ namespace Server.Mobiles
 
             protected override void OnTarget(Mobile from, object targeted)
             {
-                if (targeted is BaseCreature)
+                if (targeted is BaseCreature baseCreature)
                 {
-                    m_Trainer.EndStable(from, (BaseCreature)targeted);
+                    m_Trainer.EndStable(from, baseCreature);
                 }
                 else if (targeted == from)
                 {
diff --git a/Scripts/Mobiles/NPCs/AnsellaGryen.cs b/Scripts/Mobiles/NPCs/AnsellaGryen.cs
index ee0a6f234..6528bde79 100644
--- a/Scripts/Mobiles/NPCs/AnsellaGryen.cs
+++ b/Scripts/Mobiles/NPCs/AnsellaGryen.cs
@@ -73,9 +73,7 @@ namespace Server.Engines.Quests.Zento
 
                         if (Utility.RandomBool())
                         {
-                            BaseWeapon weapon = Loot.Construct(Loot.SEWeaponTypes) as BaseWeapon;
-
-                            if (weapon != null)
+                            if (Loot.Construct(Loot.SEWeaponTypes) is BaseWeapon weapon)
                             {
                                 BaseRunicTool.ApplyAttributesTo(weapon, 3, 10, 30);
                                 cont.DropItem(weapon);
@@ -83,9 +81,7 @@ namespace Server.Engines.Quests.Zento
                         }
                         else
                         {
-                            BaseArmor armor = Loot.Construct(Loot.SEArmorTypes) as BaseArmor;
-
-                            if (armor != null)
+                            if (Loot.Construct(Loot.SEArmorTypes) is BaseArmor armor)
                             {
                                 BaseRunicTool.ApplyAttributesTo(armor, 1, 10, 20);
                                 cont.DropItem(armor);
diff --git a/Scripts/Mobiles/NPCs/ArcherGuard.cs b/Scripts/Mobiles/NPCs/ArcherGuard.cs
index 16f08119f..296a1e6b1 100644
--- a/Scripts/Mobiles/NPCs/ArcherGuard.cs
+++ b/Scripts/Mobiles/NPCs/ArcherGuard.cs
@@ -285,9 +285,9 @@ namespace Server.Mobiles
                     TeleportTo(target);
                     target.BoltEffect(0);
 
-                    if (target is BaseCreature)
+                    if (target is BaseCreature baseCreature)
                     {
-                        ((BaseCreature)target).NoKillAwards = true;
+                        baseCreature.NoKillAwards = true;
                     }
 
                     target.Damage(target.HitsMax, m_Owner);
diff --git a/Scripts/Mobiles/NPCs/Armorer.cs b/Scripts/Mobiles/NPCs/Armorer.cs
index 643561bdc..2f02d2313 100644
--- a/Scripts/Mobiles/NPCs/Armorer.cs
+++ b/Scripts/Mobiles/NPCs/Armorer.cs
@@ -74,9 +74,8 @@ namespace Server.Mobiles
 
         public override Item CreateBulkOrder(Mobile from, bool fromContextMenu)
         {
-            PlayerMobile pm = from as PlayerMobile;
 
-            if (pm != null && pm.NextSmithBulkOrder == TimeSpan.Zero && (fromContextMenu || 0.2 > Utility.RandomDouble()))
+            if (from is PlayerMobile pm && pm.NextSmithBulkOrder == TimeSpan.Zero && (fromContextMenu || 0.2 > Utility.RandomDouble()))
             {
                 double theirSkill = pm.Skills[SkillName.Blacksmith].Base;
 
@@ -108,16 +107,16 @@ namespace Server.Mobiles
 
         public override TimeSpan GetNextBulkOrder(Mobile from)
         {
-            if (from is PlayerMobile)
-                return ((PlayerMobile)from).NextSmithBulkOrder;
+            if (from is PlayerMobile playerMobile)
+                return playerMobile.NextSmithBulkOrder;
 
             return TimeSpan.Zero;
         }
 
         public override void OnSuccessfulBulkOrderReceive(Mobile from)
         {
-            if (from is PlayerMobile)
-                ((PlayerMobile)from).NextSmithBulkOrder = TimeSpan.Zero;
+            if (from is PlayerMobile playerMobile)
+                playerMobile.NextSmithBulkOrder = TimeSpan.Zero;
         }
 
         #endregion
diff --git a/Scripts/Mobiles/NPCs/Banker.cs b/Scripts/Mobiles/NPCs/Banker.cs
index 0b310bc63..6a03986f3 100644
--- a/Scripts/Mobiles/NPCs/Banker.cs
+++ b/Scripts/Mobiles/NPCs/Banker.cs
@@ -389,11 +389,9 @@ namespace Server.Mobiles
 
                                 if (AccountGold.Enabled && e.Mobile.Account is Account)
                                 {
-                                    vendor.Say(1155855, string.Format("{0:#,0}\t{1:#,0}",
-                                        e.Mobile.Account.TotalPlat,
-                                        e.Mobile.Account.TotalGold), 0x3BC);
+                                    vendor.Say(1155855, $"{e.Mobile.Account.TotalPlat:#,0}\t{e.Mobile.Account.TotalGold:#,0}", 0x3BC);
 
-                                    vendor.Say(1155848, string.Format("{0:#,0}", ((Account)e.Mobile.Account).GetSecureAccountAmount(e.Mobile)), 0x3BC);
+                                    vendor.Say(1155848, $"{((Account)e.Mobile.Account).GetSecureAccountAmount(e.Mobile):#,0}", 0x3BC);
                                 }
                                 else
                                 {
diff --git a/Scripts/Mobiles/NPCs/BaseGuard.cs b/Scripts/Mobiles/NPCs/BaseGuard.cs
index 9d970ada0..c7bf344e5 100644
--- a/Scripts/Mobiles/NPCs/BaseGuard.cs
+++ b/Scripts/Mobiles/NPCs/BaseGuard.cs
@@ -48,10 +48,8 @@ namespace Server.Mobiles
 
             foreach (Mobile m in eable)
             {
-                if (m is BaseGuard)
+                if (m is BaseGuard g)
                 {
-                    BaseGuard g = (BaseGuard)m;
-
                     if (g.Focus == null) // idling
                     {
                         g.Focus = target;
diff --git a/Scripts/Mobiles/NPCs/BaseGuildmaster.cs b/Scripts/Mobiles/NPCs/BaseGuildmaster.cs
index 615930d4c..136fccc45 100644
--- a/Scripts/Mobiles/NPCs/BaseGuildmaster.cs
+++ b/Scripts/Mobiles/NPCs/BaseGuildmaster.cs
@@ -12,7 +12,7 @@ namespace Server.Mobiles
         public BaseGuildmaster(string title)
             : base(title)
         {
-            Title = string.Format("the {0} {1}", title, Female ? "guildmistress" : "guildmaster");
+            Title = $"the {title} {(Female ? "guildmistress" : "guildmaster")}";
         }
 
         public BaseGuildmaster(Serial serial)
diff --git a/Scripts/Mobiles/NPCs/BaseHire.cs b/Scripts/Mobiles/NPCs/BaseHire.cs
index e4d190f29..e81ca2490 100644
--- a/Scripts/Mobiles/NPCs/BaseHire.cs
+++ b/Scripts/Mobiles/NPCs/BaseHire.cs
@@ -217,7 +217,7 @@ namespace Server.Mobiles
                             // Try to add the hireling as a follower
                             if (AddHire(from))
                             {
-                                SayTo(from, 1043258, string.Format("{0}", item.Amount / Pay), 0x3B2);//"I thank thee for paying me. I will work for thee for ~1_NUMBER~ days.", (int)item.Amount / Pay );
+                                SayTo(from, 1043258, $"{item.Amount / Pay}", 0x3B2);//"I thank thee for paying me. I will work for thee for ~1_NUMBER~ days.", (int)item.Amount / Pay );
                                 HoldGold += item.Amount;
 
                                 NextPay = DateTime.UtcNow + PayTimer.GetInterval();
@@ -258,7 +258,7 @@ namespace Server.Mobiles
         #region [ OnSpeech ] 
         internal void SayHireCost()
         {
-            Say(1043256, string.Format("{0}", Pay), 0x3B2);// "I am available for hire for ~1_AMOUNT~ gold coins a day. If thou dost give me gold, I will work for thee."
+            Say(1043256, $"{Pay}", 0x3B2);// "I am available for hire for ~1_AMOUNT~ gold coins a day. If thou dost give me gold, I will work for thee."
         }
 
         public override void OnSpeech(SpeechEventArgs e)
diff --git a/Scripts/Mobiles/NPCs/BaseTurnInMobile.cs b/Scripts/Mobiles/NPCs/BaseTurnInMobile.cs
index 11b2c42bc..74148be16 100644
--- a/Scripts/Mobiles/NPCs/BaseTurnInMobile.cs
+++ b/Scripts/Mobiles/NPCs/BaseTurnInMobile.cs
@@ -82,7 +82,7 @@ namespace Server.Mobiles
 
                 m_Buttons = m_Vendor.FindRedeemableItems(m_Mobile);
 
-                if (m_Buttons.Count() > 0)
+                if (m_Buttons.Any())
                     Enabled = true;
                 else
                     Enabled = false;
@@ -158,11 +158,10 @@ namespace Server.Mobiles
 
         public override void HandleButtonResponse(NetState sender, int adjustedButton, ImageTileButtonInfo buttonInfo)
         {
-            PlayerMobile pm = sender.Mobile as PlayerMobile;
 
             Item item = ((ItemTileButtonInfo)buttonInfo).Item;
 
-            if (!(pm != null && item.IsChildOf(pm.Backpack) && pm.InRange(m_Collector.Location, 7)))
+            if (!(sender.Mobile is PlayerMobile pm && item.IsChildOf(pm.Backpack) && pm.InRange(m_Collector.Location, 7)))
                 return;
 
             m_Collector.AwardPoints(pm, item, m_Collector.TurnInPoints);
@@ -171,7 +170,7 @@ namespace Server.Mobiles
 
             IEnumerable<ItemTileButtonInfo> buttons = m_Collector.FindRedeemableItems(pm);
 
-            if (buttons != null && buttons.Count() > 0)
+            if (buttons != null && buttons.Any())
                 pm.SendGump(new TurnInGump(m_Collector, buttons));
         }
 
diff --git a/Scripts/Mobiles/NPCs/BaseVendor.cs b/Scripts/Mobiles/NPCs/BaseVendor.cs
index 266a4e7f4..4f5b789e6 100644
--- a/Scripts/Mobiles/NPCs/BaseVendor.cs
+++ b/Scripts/Mobiles/NPCs/BaseVendor.cs
@@ -385,10 +385,7 @@ namespace Server.Mobiles
             {
                 GenericBuyInfo buy = m_ArmorBuyInfo[i] as GenericBuyInfo;
 
-                if (buy != null)
-                {
-                    buy.DeleteDisplayEntity();
-                }
+                buy?.DeleteDisplayEntity();
             }
 
             SBInfos.Clear();
@@ -1267,7 +1264,7 @@ namespace Server.Mobiles
             {
                 if (dropped.Amount > 0)
                 {
-                    name = string.Format("{0} {1}", dropped.Amount, dropped.Name);
+                    name = $"{dropped.Amount} {dropped.Name}";
                 }
                 else
                 {
@@ -1281,11 +1278,11 @@ namespace Server.Mobiles
 
             if (!string.IsNullOrEmpty(name))
             {
-                PrivateOverheadMessage(MessageType.Regular, 0x3B2, true, string.Format("Thou art giving me {0}.", name), from.NetState);
+                PrivateOverheadMessage(MessageType.Regular, 0x3B2, true, $"Thou art giving me {name}.", from.NetState);
             }
             else
             {
-                SayTo(from, 1071971, string.Format("#{0}", dropped.LabelNumber.ToString()), 0x3B2); // Thou art giving me ~1_VAL~?
+                SayTo(from, 1071971, $"#{dropped.LabelNumber.ToString()}", 0x3B2); // Thou art giving me ~1_VAL~?
             }
 
             if (dropped is Gold)
@@ -1881,7 +1878,7 @@ namespace Server.Mobiles
                 }
                 else
                 {
-                    SayTo(buyer, string.Format("The total of thy purchase is {0} gold.  My thanks for the patronage.", totalCost), 0x3B2, true);
+                    SayTo(buyer, $"The total of thy purchase is {totalCost} gold.  My thanks for the patronage.", 0x3B2, true);
                 }
             }
             else
diff --git a/Scripts/Mobiles/NPCs/Blackheart.cs b/Scripts/Mobiles/NPCs/Blackheart.cs
index dbc46d430..74530d7e7 100644
--- a/Scripts/Mobiles/NPCs/Blackheart.cs
+++ b/Scripts/Mobiles/NPCs/Blackheart.cs
@@ -61,9 +61,8 @@ namespace Server.Engines.Quests.Hag
 
             if (qs is WitchApprenticeQuest)
             {
-                FindIngredientObjective obj = qs.FindObjective(typeof(FindIngredientObjective)) as FindIngredientObjective;
 
-                if (obj != null && !obj.Completed && obj.Ingredient == Ingredient.Whiskey)
+                if (qs.FindObjective(typeof(FindIngredientObjective)) is FindIngredientObjective obj && !obj.Completed && obj.Ingredient == Ingredient.Whiskey)
                 {
                     PlaySound(Utility.RandomBool() ? 0x42E : 0x43F);
 
diff --git a/Scripts/Mobiles/NPCs/Blacksmith.cs b/Scripts/Mobiles/NPCs/Blacksmith.cs
index ed7c5c9ee..73c6da06b 100644
--- a/Scripts/Mobiles/NPCs/Blacksmith.cs
+++ b/Scripts/Mobiles/NPCs/Blacksmith.cs
@@ -69,9 +69,8 @@ namespace Server.Mobiles
 
         public override Item CreateBulkOrder(Mobile from, bool fromContextMenu)
         {
-            PlayerMobile pm = from as PlayerMobile;
 
-            if (pm != null && pm.NextSmithBulkOrder == TimeSpan.Zero && (fromContextMenu || 0.2 > Utility.RandomDouble()))
+            if (from is PlayerMobile pm && pm.NextSmithBulkOrder == TimeSpan.Zero && (fromContextMenu || 0.2 > Utility.RandomDouble()))
             {
                 double theirSkill = pm.Skills[SkillName.Blacksmith].Base;
 
@@ -103,16 +102,16 @@ namespace Server.Mobiles
 
         public override TimeSpan GetNextBulkOrder(Mobile from)
         {
-            if (from is PlayerMobile)
-                return ((PlayerMobile)from).NextSmithBulkOrder;
+            if (from is PlayerMobile playerMobile)
+                return playerMobile.NextSmithBulkOrder;
 
             return TimeSpan.Zero;
         }
 
         public override void OnSuccessfulBulkOrderReceive(Mobile from)
         {
-            if (from is PlayerMobile)
-                ((PlayerMobile)from).NextSmithBulkOrder = TimeSpan.Zero;
+            if (from is PlayerMobile playerMobile)
+                playerMobile.NextSmithBulkOrder = TimeSpan.Zero;
         }
 
         #endregion
diff --git a/Scripts/Mobiles/NPCs/BlacksmithGuildmaster.cs b/Scripts/Mobiles/NPCs/BlacksmithGuildmaster.cs
index cb076ef66..023a00c8d 100644
--- a/Scripts/Mobiles/NPCs/BlacksmithGuildmaster.cs
+++ b/Scripts/Mobiles/NPCs/BlacksmithGuildmaster.cs
@@ -51,9 +51,8 @@ namespace Server.Mobiles
         #region Bulk Orders
         public override Item CreateBulkOrder(Mobile from, bool fromContextMenu)
         {
-            PlayerMobile pm = from as PlayerMobile;
 
-            if (pm != null && pm.NextSmithBulkOrder == TimeSpan.Zero && (fromContextMenu || 0.2 > Utility.RandomDouble()))
+            if (from is PlayerMobile pm && pm.NextSmithBulkOrder == TimeSpan.Zero && (fromContextMenu || 0.2 > Utility.RandomDouble()))
             {
                 double theirSkill = pm.Skills[SkillName.Blacksmith].Base;
 
@@ -85,16 +84,16 @@ namespace Server.Mobiles
 
         public override TimeSpan GetNextBulkOrder(Mobile from)
         {
-            if (from is PlayerMobile)
-                return ((PlayerMobile)from).NextSmithBulkOrder;
+            if (from is PlayerMobile playerMobile)
+                return playerMobile.NextSmithBulkOrder;
 
             return TimeSpan.Zero;
         }
 
         public override void OnSuccessfulBulkOrderReceive(Mobile from)
         {
-            if (from is PlayerMobile)
-                ((PlayerMobile)from).NextSmithBulkOrder = TimeSpan.Zero;
+            if (from is PlayerMobile playerMobile)
+                playerMobile.NextSmithBulkOrder = TimeSpan.Zero;
         }
 
         #endregion
diff --git a/Scripts/Mobiles/NPCs/Bowyer.cs b/Scripts/Mobiles/NPCs/Bowyer.cs
index 3467214d1..871ada386 100644
--- a/Scripts/Mobiles/NPCs/Bowyer.cs
+++ b/Scripts/Mobiles/NPCs/Bowyer.cs
@@ -60,8 +60,8 @@ namespace Server.Mobiles
 
         public override void OnSuccessfulBulkOrderReceive(Mobile from)
         {
-            if (from is PlayerMobile)
-                ((PlayerMobile)from).NextFletchingBulkOrder = TimeSpan.Zero;
+            if (from is PlayerMobile playerMobile)
+                playerMobile.NextFletchingBulkOrder = TimeSpan.Zero;
         }
 
         #endregion
diff --git a/Scripts/Mobiles/NPCs/Carpenter.cs b/Scripts/Mobiles/NPCs/Carpenter.cs
index 3027f0e91..60ea57c4e 100644
--- a/Scripts/Mobiles/NPCs/Carpenter.cs
+++ b/Scripts/Mobiles/NPCs/Carpenter.cs
@@ -54,8 +54,8 @@ namespace Server.Mobiles
 
         public override void OnSuccessfulBulkOrderReceive(Mobile from)
         {
-            if (from is PlayerMobile)
-                ((PlayerMobile)from).NextCarpentryBulkOrder = TimeSpan.Zero;
+            if (from is PlayerMobile playerMobile)
+                playerMobile.NextCarpentryBulkOrder = TimeSpan.Zero;
         }
 
         #endregion
diff --git a/Scripts/Mobiles/NPCs/Cook.cs b/Scripts/Mobiles/NPCs/Cook.cs
index 7ea2e98d5..1e5a86dcf 100644
--- a/Scripts/Mobiles/NPCs/Cook.cs
+++ b/Scripts/Mobiles/NPCs/Cook.cs
@@ -52,8 +52,8 @@ namespace Server.Mobiles
 
         public override void OnSuccessfulBulkOrderReceive(Mobile from)
         {
-            if (from is PlayerMobile)
-                ((PlayerMobile)from).NextCookingBulkOrder = TimeSpan.Zero;
+            if (from is PlayerMobile playerMobile)
+                playerMobile.NextCookingBulkOrder = TimeSpan.Zero;
         }
 
         #endregion
diff --git a/Scripts/Mobiles/NPCs/CustomHairstylist.cs b/Scripts/Mobiles/NPCs/CustomHairstylist.cs
index 33554414a..696bda1f3 100644
--- a/Scripts/Mobiles/NPCs/CustomHairstylist.cs
+++ b/Scripts/Mobiles/NPCs/CustomHairstylist.cs
@@ -699,9 +699,9 @@ namespace Server.Mobiles
                         {
                             ChangeHairstyleEntry entry = m_Entries[index];
 
-                            if (m_From is PlayerMobile)
+                            if (m_From is PlayerMobile playerMobile)
                             {
-                                ((PlayerMobile)m_From).SetHairMods(-1, -1);
+                                playerMobile.SetHairMods(-1, -1);
                             }
 
                             int hairID = m_From.HairItemID;
diff --git a/Scripts/Mobiles/NPCs/DockMaster.cs b/Scripts/Mobiles/NPCs/DockMaster.cs
index 2561c3eb4..e33159971 100644
--- a/Scripts/Mobiles/NPCs/DockMaster.cs
+++ b/Scripts/Mobiles/NPCs/DockMaster.cs
@@ -104,8 +104,8 @@ namespace Server.Mobiles
             Container pack = from.Backpack;
             Container hold;
 
-            if (boat is BaseGalleon)
-                hold = ((BaseGalleon)boat).GalleonHold;
+            if (boat is BaseGalleon baseGalleon)
+                hold = baseGalleon.GalleonHold;
             else
                 hold = boat.Hold;
 
@@ -173,7 +173,7 @@ namespace Server.Mobiles
 
                 foreach (Item item in eable)
                 {
-                    if (item != null && item is Container && !item.Movable)
+                    if (item is Container && !item.Movable)
                     {
                         badSpot = true;
                         break;
diff --git a/Scripts/Mobiles/NPCs/ElwoodMcCarrin.cs b/Scripts/Mobiles/NPCs/ElwoodMcCarrin.cs
index 4acc83efc..a7aeb0bb0 100644
--- a/Scripts/Mobiles/NPCs/ElwoodMcCarrin.cs
+++ b/Scripts/Mobiles/NPCs/ElwoodMcCarrin.cs
@@ -184,10 +184,10 @@ namespace Server.Engines.Quests.Collector
 
                 item = Loot.RandomArmorOrShieldOrJewelry();
 
-                if (item is BaseArmor)
-                    BaseRunicTool.ApplyAttributesTo((BaseArmor)item, 2, 20, 30);
-                else if (item is BaseJewel)
-                    BaseRunicTool.ApplyAttributesTo((BaseJewel)item, 2, 20, 30);
+                if (item is BaseArmor baseArmor)
+                    BaseRunicTool.ApplyAttributesTo(baseArmor, 2, 20, 30);
+                else if (item is BaseJewel baseJewel)
+                    BaseRunicTool.ApplyAttributesTo(baseJewel, 2, 20, 30);
 
                 bag.DropItem(item);
             }
diff --git a/Scripts/Mobiles/NPCs/Grizelda.cs b/Scripts/Mobiles/NPCs/Grizelda.cs
index 940531d1f..c6bbb80ec 100644
--- a/Scripts/Mobiles/NPCs/Grizelda.cs
+++ b/Scripts/Mobiles/NPCs/Grizelda.cs
@@ -128,10 +128,10 @@ namespace Server.Engines.Quests.Hag
 
                                     item = Loot.RandomArmorOrShieldOrJewelry();
 
-                                    if (item is BaseArmor)
-                                        BaseRunicTool.ApplyAttributesTo((BaseArmor)item, 2, 20, 30);
-                                    else if (item is BaseJewel)
-                                        BaseRunicTool.ApplyAttributesTo((BaseJewel)item, 2, 20, 30);
+                                    if (item is BaseArmor baseArmor)
+                                        BaseRunicTool.ApplyAttributesTo(baseArmor, 2, 20, 30);
+                                    else if (item is BaseJewel baseJewel)
+                                        BaseRunicTool.ApplyAttributesTo(baseJewel, 2, 20, 30);
 
                                     cont.DropItem(item);
                                 }
diff --git a/Scripts/Mobiles/NPCs/Impresario.cs b/Scripts/Mobiles/NPCs/Impresario.cs
index e89756a4e..0230f8801 100644
--- a/Scripts/Mobiles/NPCs/Impresario.cs
+++ b/Scripts/Mobiles/NPCs/Impresario.cs
@@ -55,9 +55,7 @@ namespace Server.Engines.Quests.Collector
 
             if (qs is CollectorQuest)
             {
-                FindSheetMusicObjective obj = qs.FindObjective(typeof(FindSheetMusicObjective)) as FindSheetMusicObjective;
-
-                if (obj != null && !obj.Completed)
+                if (qs.FindObjective(typeof(FindSheetMusicObjective)) is FindSheetMusicObjective obj && !obj.Completed)
                 {
                     Direction = GetDirectionTo(player);
 
@@ -135,17 +133,14 @@ namespace Server.Engines.Quests.Collector
         {
             if (info.ButtonID == 1 && info.IsSwitched(1))
             {
-                PlayerMobile player = sender.Mobile as PlayerMobile;
-
-                if (player != null)
+                if (sender.Mobile is PlayerMobile player)
                 {
                     QuestSystem qs = player.Quest;
 
                     if (qs is CollectorQuest)
                     {
-                        FindSheetMusicObjective obj = qs.FindObjective(typeof(FindSheetMusicObjective)) as FindSheetMusicObjective;
 
-                        if (obj != null && !obj.Completed)
+                        if (qs.FindObjective(typeof(FindSheetMusicObjective)) is FindSheetMusicObjective obj && !obj.Completed)
                         {
                             if (player.Backpack != null && player.Backpack.ConsumeTotal(typeof(Gold), 10))
                             {
diff --git a/Scripts/Mobiles/NPCs/Mannequin/Gumps.cs b/Scripts/Mobiles/NPCs/Mannequin/Gumps.cs
index 53ef7c55a..2c8c5368f 100644
--- a/Scripts/Mobiles/NPCs/Mannequin/Gumps.cs
+++ b/Scripts/Mobiles/NPCs/Mannequin/Gumps.cs
@@ -13,7 +13,7 @@ namespace Server.Gumps
         public MannequinCompareGump(Mannequin mann, Item item)
             : base(100, 100)
         {
-            _SameItem = mann.Items.Where(x => mann.LayerValidation(x, item)).FirstOrDefault();
+            _SameItem = mann.Items.FirstOrDefault(x => mann.LayerValidation(x, item));
 
             if (_SameItem == null)
                 return;
@@ -25,7 +25,7 @@ namespace Server.Gumps
             AddHtmlLocalized(5, 5, 270, 18, 1114513, "#1159291", 0x42FF, false, false); // <DIV ALIGN=CENTER>~1_TOKEN~</DIV>            
             AddAlphaRegion(5, 5, 550, 710);
 
-            AddHtmlLocalized(0, 23, 270, 18, 1114513, string.Format("#{0}", _SameItem.LabelNumber), 0x7FFF, false, false); // <DIV ALIGN=CENTER>~1_TOKEN~</DIV>
+            AddHtmlLocalized(0, 23, 270, 18, 1114513, $"#{_SameItem.LabelNumber}", 0x7FFF, false, false); // <DIV ALIGN=CENTER>~1_TOKEN~</DIV>
             AddImageTiled(4, 80, 550, 5, 0x6DC);
 
             List<ValuedProperty> EquipmentItem = Mannequin.FindItemProperty(_SameItem);
@@ -54,7 +54,7 @@ namespace Server.Gumps
                 }
             }
 
-            AddHtmlLocalized(270, 23, 270, 18, 1114513, string.Format("#{0}", item.LabelNumber), 0x7FFF, false, false); // <DIV ALIGN=CENTER>~1_TOKEN~</DIV>
+            AddHtmlLocalized(270, 23, 270, 18, 1114513, $"#{item.LabelNumber}", 0x7FFF, false, false); // <DIV ALIGN=CENTER>~1_TOKEN~</DIV>
 
             List<ValuedProperty> SelectItem = Mannequin.FindItemProperty(item);
 
@@ -102,30 +102,30 @@ namespace Server.Gumps
             {
                 if (v1 == diffv || diffv == 0)
                 {
-                    name = string.Format("<BASEFONT COLOR=#FFFFFF>{0}</BASEFONT>", v1);
+                    name = $"<BASEFONT COLOR=#FFFFFF>{v1}</BASEFONT>";
                 }
                 else if (v1 > ev)
                 {
-                    name = string.Format("<BASEFONT COLOR=#008000>{0} (+{1})</BASEFONT>", v1, diffv);
+                    name = $"<BASEFONT COLOR=#008000>{v1} (+{diffv})</BASEFONT>";
                 }
                 else
                 {
-                    name = string.Format("<BASEFONT COLOR=#800000>{0} ({1})</BASEFONT>", v1, diffv);
+                    name = $"<BASEFONT COLOR=#800000>{v1} ({diffv})</BASEFONT>";
                 }
             }
             else
             {
                 if (v1 == diffv || diffv == 0)
                 {
-                    name = string.Format("<BASEFONT COLOR=#FFFFFF>{0}/{1}</BASEFONT>", v1, v2);
+                    name = $"<BASEFONT COLOR=#FFFFFF>{v1}/{v2}</BASEFONT>";
                 }
                 else if (v1 > ev)
                 {
-                    name = string.Format("<BASEFONT COLOR=#008000>{0}/{1} (+{2})</BASEFONT>", v1, v2, diffv);
+                    name = $"<BASEFONT COLOR=#008000>{v1}/{v2} (+{diffv})</BASEFONT>";
                 }
                 else
                 {
-                    name = string.Format("<BASEFONT COLOR=#800000>{0}/{1} ({2})</BASEFONT>", v1, v2, diffv);
+                    name = $"<BASEFONT COLOR=#800000>{v1}/{v2} ({diffv})</BASEFONT>";
                 }
             }
 
@@ -302,10 +302,10 @@ namespace Server.Gumps
             double v2 = 0;
 
             if (l.EquipmentItem.Any(r => r.LabelNumber == label))
-                v1 = l.EquipmentItem.Where(r => r.LabelNumber == label).FirstOrDefault().Value;
+                v1 = l.EquipmentItem.FirstOrDefault(r => r.LabelNumber == label).Value;
 
             if (l.SelectItem.Any(r => r.LabelNumber == label))
-                v2 = l.SelectItem.Where(r => r.LabelNumber == label).FirstOrDefault().Value;
+                v2 = l.SelectItem.FirstOrDefault(r => r.LabelNumber == label).Value;
 
             return v2 - v1;
         }
@@ -318,33 +318,33 @@ namespace Server.Gumps
             {
                 if (parmv == 0)
                 {
-                    name = string.Format("<BASEFONT COLOR=#80BFFF>{0}</BASEFONT>", ev);
+                    name = $"<BASEFONT COLOR=#80BFFF>{ev}</BASEFONT>";
                 }
                 else
                 {
-                    name = string.Format("<BASEFONT COLOR=#80BFFF>{0}/{1}</BASEFONT>", ev, parmv);
+                    name = $"<BASEFONT COLOR=#80BFFF>{ev}/{parmv}</BASEFONT>";
                 }
             }
             else if (diff < 0)
             {
                 if (parmv == 0)
                 {
-                    name = string.Format("<BASEFONT COLOR=#800000>{0} (-{1})</BASEFONT>", ev, Math.Abs(diff));
+                    name = $"<BASEFONT COLOR=#800000>{ev} (-{Math.Abs(diff)})</BASEFONT>";
                 }
                 else
                 {
-                    name = string.Format("<BASEFONT COLOR=#800000>{0}/{1} (-{2})</BASEFONT>", ev, parmv, Math.Abs(diff));
+                    name = $"<BASEFONT COLOR=#800000>{ev}/{parmv} (-{Math.Abs(diff)})</BASEFONT>";
                 }
             }
             else
             {
                 if (parmv == 0)
                 {
-                    name = string.Format("<BASEFONT COLOR=#008000>{0} (+{1})</BASEFONT>", ev, diff);
+                    name = $"<BASEFONT COLOR=#008000>{ev} (+{diff})</BASEFONT>";
                 }
                 else
                 {
-                    name = string.Format("<BASEFONT COLOR=#008000>{0}/{1} (+{2})</BASEFONT>", ev, parmv, diff);
+                    name = $"<BASEFONT COLOR=#008000>{ev}/{parmv} (+{diff})</BASEFONT>";
                 }
             }
 
diff --git a/Scripts/Mobiles/NPCs/Mannequin/Mannequin.cs b/Scripts/Mobiles/NPCs/Mannequin/Mannequin.cs
index 0013d7eb5..7b1dba73d 100644
--- a/Scripts/Mobiles/NPCs/Mannequin/Mannequin.cs
+++ b/Scripts/Mobiles/NPCs/Mannequin/Mannequin.cs
@@ -317,8 +317,8 @@ namespace Server.Mobiles
 
                 protected override void OnTarget(Mobile from, object targeted)
                 {
-                    if (targeted is Item)
-                        from.SendGump(new MannequinCompareGump(_Mannequin, (Item)targeted));
+                    if (targeted is Item item)
+                        from.SendGump(new MannequinCompareGump(_Mannequin, item));
                     else
                     {
                         // TODO : Action
@@ -359,8 +359,8 @@ namespace Server.Mobiles
 
                 protected override void OnTarget(Mobile from, object targeted)
                 {
-                    if (targeted is Item)
-                        from.SendGump(new MannequinStatsGump(_Mannequin, (Item)targeted));
+                    if (targeted is Item item)
+                        from.SendGump(new MannequinStatsGump(_Mannequin, item));
                 }
             }
         }
diff --git a/Scripts/Mobiles/NPCs/Mannequin/Property/AbsorptionAttributeProperty.cs b/Scripts/Mobiles/NPCs/Mannequin/Property/AbsorptionAttributeProperty.cs
index 834c17dec..6608c77cd 100644
--- a/Scripts/Mobiles/NPCs/Mannequin/Property/AbsorptionAttributeProperty.cs
+++ b/Scripts/Mobiles/NPCs/Mannequin/Property/AbsorptionAttributeProperty.cs
@@ -9,25 +9,25 @@ namespace Server.Mobiles.MannequinProperty
 
         public double GetPropertyValue(Item item)
         {
-            if (item is BaseArmor)
+            if (item is BaseArmor baseArmor)
             {
-                return ((BaseArmor)item).AbsorptionAttributes[Attribute];
+                return baseArmor.AbsorptionAttributes[Attribute];
             }
 
-            if (item is BaseJewel)
+            if (item is BaseJewel baseJewel)
             {
-                return ((BaseJewel)item).AbsorptionAttributes[Attribute];
+                return baseJewel.AbsorptionAttributes[Attribute];
             }
 
 
-            if (item is BaseWeapon)
+            if (item is BaseWeapon baseWeapon)
             {
-                return ((BaseWeapon)item).AbsorptionAttributes[Attribute];
+                return baseWeapon.AbsorptionAttributes[Attribute];
             }
 
-            if (item is BaseClothing)
+            if (item is BaseClothing baseClothing)
             {
-                return ((BaseClothing)item).SAAbsorptionAttributes[Attribute];
+                return baseClothing.SAAbsorptionAttributes[Attribute];
             }
 
             return 0;
diff --git a/Scripts/Mobiles/NPCs/Mannequin/Property/AosArmorAttributeProperty.cs b/Scripts/Mobiles/NPCs/Mannequin/Property/AosArmorAttributeProperty.cs
index 399adc1ba..cf7ed2643 100644
--- a/Scripts/Mobiles/NPCs/Mannequin/Property/AosArmorAttributeProperty.cs
+++ b/Scripts/Mobiles/NPCs/Mannequin/Property/AosArmorAttributeProperty.cs
@@ -9,14 +9,14 @@ namespace Server.Mobiles.MannequinProperty
 
         public double GetPropertyValue(Item item)
         {
-            if (item is BaseArmor)
+            if (item is BaseArmor baseArmor)
             {
-                return ((BaseArmor)item).ArmorAttributes[Attribute];
+                return baseArmor.ArmorAttributes[Attribute];
             }
 
-            if (item is BaseClothing)
+            if (item is BaseClothing baseClothing)
             {
-                return ((BaseClothing)item).ClothingAttributes[Attribute];
+                return baseClothing.ClothingAttributes[Attribute];
             }
 
             return 0;
diff --git a/Scripts/Mobiles/NPCs/Mannequin/Property/AosAttributeProperty.cs b/Scripts/Mobiles/NPCs/Mannequin/Property/AosAttributeProperty.cs
index 27c6ac450..4a870b079 100644
--- a/Scripts/Mobiles/NPCs/Mannequin/Property/AosAttributeProperty.cs
+++ b/Scripts/Mobiles/NPCs/Mannequin/Property/AosAttributeProperty.cs
@@ -9,44 +9,44 @@ namespace Server.Mobiles.MannequinProperty
 
         public double GetPropertyValue(Item item)
         {
-            if (item is BaseWeapon)
+            if (item is BaseWeapon baseWeapon)
             {
-                return ((BaseWeapon)item).Attributes[Attribute];
+                return baseWeapon.Attributes[Attribute];
             }
 
-            if (item is BaseArmor)
+            if (item is BaseArmor baseArmor)
             {
-                return ((BaseArmor)item).Attributes[Attribute];
+                return baseArmor.Attributes[Attribute];
             }
 
-            if (item is BaseClothing)
+            if (item is BaseClothing baseClothing)
             {
-                return ((BaseClothing)item).Attributes[Attribute];
+                return baseClothing.Attributes[Attribute];
             }
 
-            if (item is BaseJewel)
+            if (item is BaseJewel baseJewel)
             {
-                return ((BaseJewel)item).Attributes[Attribute];
+                return baseJewel.Attributes[Attribute];
             }
 
-            if (item is BaseTalisman)
+            if (item is BaseTalisman baseTalisman)
             {
-                return ((BaseTalisman)item).Attributes[Attribute];
+                return baseTalisman.Attributes[Attribute];
             }
 
-            if (item is BaseQuiver)
+            if (item is BaseQuiver baseQuiver)
             {
-                return ((BaseQuiver)item).Attributes[Attribute];
+                return baseQuiver.Attributes[Attribute];
             }
 
-            if (item is Spellbook)
+            if (item is Spellbook spellbook)
             {
-                return ((Spellbook)item).Attributes[Attribute];
+                return spellbook.Attributes[Attribute];
             }
 
-            if (item is FishingPole)
+            if (item is FishingPole fishingPole)
             {
-                return ((FishingPole)item).Attributes[Attribute];
+                return fishingPole.Attributes[Attribute];
             }
 
             return 0;
diff --git a/Scripts/Mobiles/NPCs/Mannequin/Property/OtherProperty.cs b/Scripts/Mobiles/NPCs/Mannequin/Property/OtherProperty.cs
index 66c8be8bf..d33d75ff9 100644
--- a/Scripts/Mobiles/NPCs/Mannequin/Property/OtherProperty.cs
+++ b/Scripts/Mobiles/NPCs/Mannequin/Property/OtherProperty.cs
@@ -16,9 +16,9 @@ namespace Server.Mobiles.MannequinProperty
         {
             int prop, prop2;
 
-            if (item is BaseArmor)
+            if (item is BaseArmor baseArmor)
             {
-                if ((prop = ((BaseArmor)item).HitPoints) >= 0 && (prop2 = ((BaseArmor)item).MaxHitPoints) > 0)
+                if ((prop = baseArmor.HitPoints) >= 0 && (prop2 = ((BaseArmor)item).MaxHitPoints) > 0)
                 {
                     Value = prop;
                     Cap = prop2;
@@ -26,9 +26,9 @@ namespace Server.Mobiles.MannequinProperty
                 }
             }
 
-            if (item is BaseJewel)
+            if (item is BaseJewel baseJewel)
             {
-                if ((prop = ((BaseJewel)item).HitPoints) >= 0 && (prop2 = ((BaseJewel)item).MaxHitPoints) > 0)
+                if ((prop = baseJewel.HitPoints) >= 0 && (prop2 = ((BaseJewel)item).MaxHitPoints) > 0)
                 {
                     Value = prop;
                     Cap = prop2;
@@ -37,9 +37,9 @@ namespace Server.Mobiles.MannequinProperty
             }
 
 
-            if (item is BaseWeapon)
+            if (item is BaseWeapon baseWeapon)
             {
-                if ((prop = ((BaseWeapon)item).HitPoints) >= 0 && (prop2 = ((BaseWeapon)item).MaxHitPoints) > 0)
+                if ((prop = baseWeapon.HitPoints) >= 0 && (prop2 = ((BaseWeapon)item).MaxHitPoints) > 0)
                 {
                     Value = prop;
                     Cap = prop2;
@@ -47,9 +47,9 @@ namespace Server.Mobiles.MannequinProperty
                 }
             }
 
-            if (item is BaseClothing)
+            if (item is BaseClothing baseClothing)
             {
-                if ((prop = ((BaseClothing)item).HitPoints) >= 0 && (prop2 = ((BaseClothing)item).MaxHitPoints) > 0)
+                if ((prop = baseClothing.HitPoints) >= 0 && (prop2 = ((BaseClothing)item).MaxHitPoints) > 0)
                 {
                     Value = prop;
                     Cap = prop2;
@@ -57,9 +57,9 @@ namespace Server.Mobiles.MannequinProperty
                 }
             }
 
-            if (item is BaseTalisman)
+            if (item is BaseTalisman baseTalisman)
             {
-                if ((prop = ((BaseTalisman)item).HitPoints) >= 0 && (prop2 = ((BaseTalisman)item).MaxHitPoints) > 0)
+                if ((prop = baseTalisman.HitPoints) >= 0 && (prop2 = ((BaseTalisman)item).MaxHitPoints) > 0)
                 {
                     Value = prop;
                     Cap = prop2;
@@ -67,9 +67,9 @@ namespace Server.Mobiles.MannequinProperty
                 }
             }
 
-            if (item is Spellbook)
+            if (item is Spellbook spellbook)
             {
-                if ((prop = ((Spellbook)item).HitPoints) >= 0 && (prop2 = ((Spellbook)item).MaxHitPoints) > 0)
+                if ((prop = spellbook.HitPoints) >= 0 && (prop2 = ((Spellbook)item).MaxHitPoints) > 0)
                 {
                     Value = prop;
                     Cap = prop2;
diff --git a/Scripts/Mobiles/NPCs/Mannequin/Property/ResistProperty.cs b/Scripts/Mobiles/NPCs/Mannequin/Property/ResistProperty.cs
index e417597a3..479ba0ca2 100644
--- a/Scripts/Mobiles/NPCs/Mannequin/Property/ResistProperty.cs
+++ b/Scripts/Mobiles/NPCs/Mannequin/Property/ResistProperty.cs
@@ -50,66 +50,66 @@ namespace Server.Mobiles.MannequinProperty
             {
                 case ResistanceType.Physical:
                     {
-                        if (item is BaseWeapon)
-                            return ((BaseWeapon)item).PhysicalResistance;
+                        if (item is BaseWeapon baseWeapon)
+                            return baseWeapon.PhysicalResistance;
 
-                        if (item is BaseArmor)
-                            return ((BaseArmor)item).PhysicalResistance;
+                        if (item is BaseArmor baseArmor)
+                            return baseArmor.PhysicalResistance;
 
-                        if (item is BaseClothing)
-                            return ((BaseClothing)item).PhysicalResistance;
+                        if (item is BaseClothing baseClothing)
+                            return baseClothing.PhysicalResistance;
 
                         break;
                     }
                 case ResistanceType.Fire:
                     {
-                        if (item is BaseWeapon)
-                            return ((BaseWeapon)item).FireResistance;
+                        if (item is BaseWeapon baseWeapon)
+                            return baseWeapon.FireResistance;
 
-                        if (item is BaseArmor)
-                            return ((BaseArmor)item).FireResistance;
+                        if (item is BaseArmor baseArmor)
+                            return baseArmor.FireResistance;
 
-                        if (item is BaseClothing)
-                            return ((BaseClothing)item).FireResistance;
+                        if (item is BaseClothing baseClothing)
+                            return baseClothing.FireResistance;
 
                         break;
                     }
                 case ResistanceType.Cold:
                     {
-                        if (item is BaseWeapon)
-                            return ((BaseWeapon)item).ColdResistance;
+                        if (item is BaseWeapon baseWeapon)
+                            return baseWeapon.ColdResistance;
 
-                        if (item is BaseArmor)
-                            return ((BaseArmor)item).ColdResistance;
+                        if (item is BaseArmor baseArmor)
+                            return baseArmor.ColdResistance;
 
-                        if (item is BaseClothing)
-                            return ((BaseClothing)item).ColdResistance;
+                        if (item is BaseClothing baseClothing)
+                            return baseClothing.ColdResistance;
 
                         break;
                     }
                 case ResistanceType.Poison:
                     {
-                        if (item is BaseWeapon)
-                            return ((BaseWeapon)item).PoisonResistance;
+                        if (item is BaseWeapon baseWeapon)
+                            return baseWeapon.PoisonResistance;
 
-                        if (item is BaseArmor)
-                            return ((BaseArmor)item).PoisonResistance;
+                        if (item is BaseArmor baseArmor)
+                            return baseArmor.PoisonResistance;
 
-                        if (item is BaseClothing)
-                            return ((BaseClothing)item).PoisonResistance;
+                        if (item is BaseClothing baseClothing)
+                            return baseClothing.PoisonResistance;
 
                         break;
                     }
                 case ResistanceType.Energy:
                     {
-                        if (item is BaseWeapon)
-                            return ((BaseWeapon)item).EnergyResistance;
+                        if (item is BaseWeapon baseWeapon)
+                            return baseWeapon.EnergyResistance;
 
-                        if (item is BaseArmor)
-                            return ((BaseArmor)item).EnergyResistance;
+                        if (item is BaseArmor baseArmor)
+                            return baseArmor.EnergyResistance;
 
-                        if (item is BaseClothing)
-                            return ((BaseClothing)item).EnergyResistance;
+                        if (item is BaseClothing baseClothing)
+                            return baseClothing.EnergyResistance;
 
                         break;
                     }
diff --git a/Scripts/Mobiles/NPCs/MilitiaCanoneer.cs b/Scripts/Mobiles/NPCs/MilitiaCanoneer.cs
index 57fb5db08..747294aac 100644
--- a/Scripts/Mobiles/NPCs/MilitiaCanoneer.cs
+++ b/Scripts/Mobiles/NPCs/MilitiaCanoneer.cs
@@ -73,10 +73,8 @@ namespace Server.Engines.Quests.Haven
             if (m.Player || m is BaseVendor)
                 return false;
 
-            if (m is BaseCreature)
+            if (m is BaseCreature bc)
             {
-                BaseCreature bc = (BaseCreature)m;
-
                 Mobile master = bc.GetMaster();
                 if (master != null)
                     return IsEnemy(master);
diff --git a/Scripts/Mobiles/NPCs/MysteriousWisp.cs b/Scripts/Mobiles/NPCs/MysteriousWisp.cs
index d86dcdd02..4d2bb9cac 100644
--- a/Scripts/Mobiles/NPCs/MysteriousWisp.cs
+++ b/Scripts/Mobiles/NPCs/MysteriousWisp.cs
@@ -76,10 +76,7 @@ namespace Server.Mobiles
                     m_Conversation[from] = 1;
                 }
 
-                if (Backpack != null)
-                {
-                    Backpack.DisplayTo(from);
-                }
+                Backpack?.DisplayTo(from);
             }
 
             if (from is PlayerMobile pm && QuestHelper.CheckDoneOnce(pm, typeof(WishesOfTheWispQuest), null, false))
@@ -109,10 +106,7 @@ namespace Server.Mobiles
             {
                 WishesOfTheWispQuest quest = QuestHelper.GetQuest<WishesOfTheWispQuest>((PlayerMobile)m);
 
-                if (quest != null)
-                {
-                    quest.CompleteQuest();
-                }
+                quest?.CompleteQuest();
             }
         }
 
@@ -349,9 +343,7 @@ namespace Server.Mobiles
 
                 list.Add(new SimpleContextMenuEntry<Item>(from, 1062219, (m, i) => // Buy
                 {
-                    var wisp = RootParent as MysteriousWisp;
-
-                    if (wisp != null && i.IsChildOf(this))
+                    if (RootParent is MysteriousWisp wisp && i.IsChildOf(this))
                     {
                         wisp.TryBuyItem(m, i);
                     }
diff --git a/Scripts/Mobiles/NPCs/Naturalist.cs b/Scripts/Mobiles/NPCs/Naturalist.cs
index 475784396..90bf08cdb 100644
--- a/Scripts/Mobiles/NPCs/Naturalist.cs
+++ b/Scripts/Mobiles/NPCs/Naturalist.cs
@@ -40,13 +40,10 @@ namespace Server.Engines.Quests.Naturalist
 
         public override void OnTalk(PlayerMobile player, bool contextMenu)
         {
-            StudyOfSolenQuest qs = player.Quest as StudyOfSolenQuest;
-
-            if (qs != null && qs.Naturalist == this)
+            if (player.Quest is StudyOfSolenQuest qs && qs.Naturalist == this)
             {
-                StudyNestsObjective study = qs.FindObjective(typeof(StudyNestsObjective)) as StudyNestsObjective;
 
-                if (study != null)
+                if (qs.FindObjective(typeof(StudyNestsObjective)) is StudyNestsObjective study)
                 {
                     if (!study.Completed)
                     {
diff --git a/Scripts/Mobiles/NPCs/PersonalAttendant/AttendantGuide.cs b/Scripts/Mobiles/NPCs/PersonalAttendant/AttendantGuide.cs
index 73a38c1be..4ff502dbb 100644
--- a/Scripts/Mobiles/NPCs/PersonalAttendant/AttendantGuide.cs
+++ b/Scripts/Mobiles/NPCs/PersonalAttendant/AttendantGuide.cs
@@ -122,7 +122,7 @@ namespace Server.Mobiles
                                             if (num >= 0 && num < m_ShopDefinitions.Count)
                                                 current.Shops.Add(num);
                                             else
-                                                throw new Exception(string.Format("Invalid shop ID: {0}", num));
+                                                throw new Exception($"Invalid shop ID: {num}");
                                         }
                                     }
                                 }
@@ -370,7 +370,7 @@ namespace Server.Mobiles
                     return;
 
                 List<Vertex> list = m_GraphDefinitions[town];
-                string path = Core.BaseDirectory + string.Format("\\Data\\Guide\\{0}.graph", town);
+                string path = Core.BaseDirectory + $"\\Data\\Guide\\{town}.graph";
 
                 using (FileStream stream = new FileStream(path, FileMode.Create))
                 using (StreamWriter writer = new StreamWriter(stream))
@@ -382,14 +382,14 @@ namespace Server.Mobiles
 
                     foreach (Vertex v in list)
                     {
-                        writer.WriteLine(string.Format("V:\t{0}\t{1}\t{2}\t{3}\t{4}", v.ID, v.Location.X, v.Location.Y, v.Location.Z, v.Teleporter.ToString()));
+                        writer.WriteLine($"V:\t{v.ID}\t{v.Location.X}\t{v.Location.Y}\t{v.Location.Z}\t{v.Teleporter.ToString()}");
 
                         if (v.Shops.Count > 0)
                         {
                             writer.Write("S:");
 
                             foreach (int i in v.Shops)
-                                writer.Write(string.Format("\t{0}", i));
+                                writer.Write($"\t{i}");
 
                             writer.WriteLine();
                         }
@@ -399,7 +399,7 @@ namespace Server.Mobiles
                             writer.Write("N:");
 
                             foreach (Vertex n in v.Vertices)
-                                writer.Write(string.Format("\t{0}", n.ID));
+                                writer.Write($"\t{n.ID}");
 
                             writer.WriteLine();
                         }
diff --git a/Scripts/Mobiles/NPCs/PersonalAttendant/AttendantHerald.cs b/Scripts/Mobiles/NPCs/PersonalAttendant/AttendantHerald.cs
index 5f28db881..7b47a7884 100644
--- a/Scripts/Mobiles/NPCs/PersonalAttendant/AttendantHerald.cs
+++ b/Scripts/Mobiles/NPCs/PersonalAttendant/AttendantHerald.cs
@@ -267,7 +267,7 @@ namespace Server.Mobiles
                 }
                 else if (m_Message.String != null)
                 {
-                    string message = string.Format("<BASEFONT COLOR=#{0:X6}>{1}</BASEFONT>", color, ConstructString(herald, null));
+                    string message = $"<BASEFONT COLOR=#{color:X6}>{ConstructString(herald, null)}</BASEFONT>";
 
                     return new GumpHtml(x, y, width, height, message, false, false);
                 }
@@ -284,7 +284,7 @@ namespace Server.Mobiles
                     args = Construct(herald, visitor, m_Arguments[0]);
 
                     for (int i = 1; i < m_Arguments.Length; i++)
-                        args = string.Format("{0}\t{1}", args, Construct(herald, visitor, m_Arguments[i]));
+                        args = $"{args}\t{Construct(herald, visitor, m_Arguments[i])}";
                 }
 
                 return args;
diff --git a/Scripts/Mobiles/NPCs/PersonalAttendant/AttendantLuckyDealer.cs b/Scripts/Mobiles/NPCs/PersonalAttendant/AttendantLuckyDealer.cs
index 202901e51..21510e48b 100644
--- a/Scripts/Mobiles/NPCs/PersonalAttendant/AttendantLuckyDealer.cs
+++ b/Scripts/Mobiles/NPCs/PersonalAttendant/AttendantLuckyDealer.cs
@@ -136,11 +136,11 @@ namespace Server.Mobiles
                             for (int i = 0; i < dice; i++)
                             {
                                 int roll = Utility.Random(faces) + 1;
-                                text = string.Format("{0}{1}{2}", text, i > 0 ? " " : "", roll);
+                                text = $"{text}{(i > 0 ? " " : "")}{roll}";
                                 sum += roll;
                             }
 
-                            m_Dealer.Say(1076071, string.Format("{0}\t{1}\t{2}\t{3}\t{4}", sender.Mobile.Name, dice, faces, text, sum)); // ~1_NAME~ rolls ~2_DICE~d~3_FACES~: ~4_ROLLS~ (Total: ~5_TOTAL~)
+                            m_Dealer.Say(1076071, $"{sender.Mobile.Name}\t{dice}\t{faces}\t{text}\t{sum}"); // ~1_NAME~ rolls ~2_DICE~d~3_FACES~: ~4_ROLLS~ (Total: ~5_TOTAL~)
                         }
 
                         if (m_Dealer.m_Count > 0 && DateTime.UtcNow - m_Dealer.m_NextUse < TimeSpan.FromSeconds(m_Dealer.m_Count))
diff --git a/Scripts/Mobiles/NPCs/PlayerBarkeeper.cs b/Scripts/Mobiles/NPCs/PlayerBarkeeper.cs
index 1bf6bf057..893eb4cde 100644
--- a/Scripts/Mobiles/NPCs/PlayerBarkeeper.cs
+++ b/Scripts/Mobiles/NPCs/PlayerBarkeeper.cs
@@ -216,10 +216,7 @@ namespace Server.Mobiles
 
             Container pack = Backpack;
 
-            if (pack != null)
-            {
-                pack.Delete();
-            }
+            pack?.Delete();
         }
 
         public override void InitBody()
@@ -237,10 +234,7 @@ namespace Server.Mobiles
 
             Container pack = Backpack;
 
-            if (pack != null)
-            {
-                pack.Delete();
-            }
+            pack?.Delete();
         }
 
         public override bool HandlesOnSpeech(Mobile from)
@@ -336,10 +330,8 @@ namespace Server.Mobiles
 
         public override bool CheckGold(Mobile from, Item dropped)
         {
-            if (dropped is Gold)
+            if (dropped is Gold g)
             {
-                Gold g = (Gold)dropped;
-
                 if (g.Amount > 50)
                 {
                     PrivateOverheadMessage(MessageType.Regular, 0x3B2, false, "I cannot accept so large a tip!", from.NetState);
@@ -618,10 +610,7 @@ namespace Server.Mobiles
 
             if (index < 0 || index >= tce.Lines.Length)
             {
-                if (m_NewsTimer != null)
-                {
-                    m_NewsTimer.Stop();
-                }
+                m_NewsTimer?.Stop();
 
                 m_NewsTimer = null;
             }
@@ -757,7 +746,7 @@ namespace Server.Mobiles
         {
             AddPage(1 + page);
 
-            AddHtml(430, 70, 180, 25, string.Format("Page {0} of {1}", page + 1, (entries.Length + 19) / 20), false, false);
+            AddHtml(430, 70, 180, 25, $"Page {page + 1} of {(entries.Length + 19) / 20}", false, false);
 
             for (int count = 0, i = (page * 20); count < 20 && i < entries.Length; ++count, ++i)
             {
@@ -794,11 +783,11 @@ namespace Server.Mobiles
             public readonly bool m_Vendor;
 
             public Entry(string desc)
-                : this(desc, string.Format("the {0}", desc.ToLower()), false)
+                : this(desc, $"the {desc.ToLower()}", false)
             { }
 
             public Entry(string desc, bool vendor)
-                : this(desc, string.Format("the {0}", desc.ToLower()), vendor)
+                : this(desc, $"the {desc.ToLower()}", vendor)
             { }
 
             public Entry(string desc, string title, bool vendor)
diff --git a/Scripts/Mobiles/NPCs/PlayerVendor.cs b/Scripts/Mobiles/NPCs/PlayerVendor.cs
index 3d9e04c2f..671ff815d 100644
--- a/Scripts/Mobiles/NPCs/PlayerVendor.cs
+++ b/Scripts/Mobiles/NPCs/PlayerVendor.cs
@@ -188,7 +188,7 @@ namespace Server.Mobiles
 
             VendorItem vi = pv.GetVendorItem(item);
 
-            if (vi != null && vi.Description != null && vi.Description.Length > 0)
+            if (vi?.Description != null && vi.Description.Length > 0)
                 list.Add(1043305, vi.Description); // <br>Seller's Description:<br>"~1_DESC~"
         }
 
@@ -348,9 +348,7 @@ namespace Server.Mobiles
 
         public MerchantsTrinket GetMerchantsTrinket()
         {
-            var trinket = FindItemOnLayer(Layer.Earrings) as MerchantsTrinket;
-
-            if (trinket != null && trinket.UsesRemaining > 0)
+            if (FindItemOnLayer(Layer.Earrings) is MerchantsTrinket trinket && trinket.UsesRemaining > 0)
             {
                 return trinket;
             }
@@ -637,10 +635,7 @@ namespace Server.Mobiles
 
             House = null;
 
-            if (Placeholder != null)
-            {
-                Placeholder.Delete();
-            }
+            Placeholder?.Delete();
             
             if(PlayerVendors.Contains(this))
             {
@@ -1310,9 +1305,9 @@ namespace Server.Mobiles
 
             protected override void OnTarget(Mobile from, object targeted)
             {
-                if (targeted is Item)
+                if (targeted is Item item)
                 {
-                    TryToBuy((Item)targeted, from);
+                    TryToBuy(item, from);
                 }
             }
         }
diff --git a/Scripts/Mobiles/NPCs/Scribe.cs b/Scripts/Mobiles/NPCs/Scribe.cs
index 8d85dbc2d..bd54e899a 100644
--- a/Scripts/Mobiles/NPCs/Scribe.cs
+++ b/Scripts/Mobiles/NPCs/Scribe.cs
@@ -50,8 +50,8 @@ namespace Server.Mobiles
 
         public override void OnSuccessfulBulkOrderReceive(Mobile from)
         {
-            if (from is PlayerMobile)
-                ((PlayerMobile)from).NextInscriptionBulkOrder = TimeSpan.Zero;
+            if (from is PlayerMobile playerMobile)
+                playerMobile.NextInscriptionBulkOrder = TimeSpan.Zero;
         }
 
         #endregion
diff --git a/Scripts/Mobiles/NPCs/ShrineHealer.cs b/Scripts/Mobiles/NPCs/ShrineHealer.cs
index d82aa0b51..8f8c3d04b 100644
--- a/Scripts/Mobiles/NPCs/ShrineHealer.cs
+++ b/Scripts/Mobiles/NPCs/ShrineHealer.cs
@@ -19,9 +19,9 @@ namespace Server.Mobiles
         {
             base.GetContextMenuEntries(from, list);
 
-            if (from is PlayerMobile)
+            if (from is PlayerMobile playerMobile)
             {
-                list.Add(new LockKarmaEntry((PlayerMobile)from));
+                list.Add(new LockKarmaEntry(playerMobile));
                 list.Add(new ResurrectEntry(from, this));
                 list.Add(new TitheEntry(from));
             }
diff --git a/Scripts/Mobiles/NPCs/SolenMatriarch.cs b/Scripts/Mobiles/NPCs/SolenMatriarch.cs
index f9eb2c90f..943aceb35 100644
--- a/Scripts/Mobiles/NPCs/SolenMatriarch.cs
+++ b/Scripts/Mobiles/NPCs/SolenMatriarch.cs
@@ -42,18 +42,14 @@ namespace Server.Engines.Quests.Matriarch
             if (SolenMatriarchQuest.IsFriend(to, RedSolen))
                 return true;
 
-            SolenMatriarchQuest qs = to.Quest as SolenMatriarchQuest;
-
-            return qs != null && qs.RedSolen == RedSolen;
+            return to.Quest is SolenMatriarchQuest qs && qs.RedSolen == RedSolen;
         }
 
         public override void OnTalk(PlayerMobile player, bool contextMenu)
         {
             Direction = GetDirectionTo(player);
 
-            SolenMatriarchQuest qs = player.Quest as SolenMatriarchQuest;
-
-            if (qs != null && qs.RedSolen == RedSolen)
+            if (player.Quest is SolenMatriarchQuest qs && qs.RedSolen == RedSolen)
             {
                 if (qs.IsObjectiveInProgress(typeof(KillInfiltratorsObjective)))
                 {
@@ -119,15 +115,12 @@ namespace Server.Engines.Quests.Matriarch
 
         public override bool OnDragDrop(Mobile from, Item dropped)
         {
-            PlayerMobile player = from as PlayerMobile;
-
-            if (player != null)
+            if (from is PlayerMobile player)
             {
                 if (dropped is Seed)
                 {
-                    SolenMatriarchQuest qs = player.Quest as SolenMatriarchQuest;
 
-                    if (qs != null && qs.RedSolen == RedSolen)
+                    if (player.Quest is SolenMatriarchQuest qs && qs.RedSolen == RedSolen)
                     {
                         SayTo(player, 1054080); // Thank you for that plant seed. Those have such wonderful flavor.
                     }
@@ -148,9 +141,9 @@ namespace Server.Engines.Quests.Matriarch
                     dropped.Delete();
                     return true;
                 }
-                else if (dropped is ZoogiFungus)
+                else if (dropped is ZoogiFungus zoogiFungus)
                 {
-                    OnGivenFungi(player, (ZoogiFungus)dropped);
+                    OnGivenFungi(player, zoogiFungus);
 
                     return dropped.Deleted;
                 }
@@ -165,13 +158,10 @@ namespace Server.Engines.Quests.Matriarch
 
             if (from.Alive)
             {
-                PlayerMobile pm = from as PlayerMobile;
-
-                if (pm != null)
+                if (from is PlayerMobile pm)
                 {
-                    SolenMatriarchQuest qs = pm.Quest as SolenMatriarchQuest;
 
-                    if (qs != null && qs.RedSolen == RedSolen)
+                    if (pm.Quest is SolenMatriarchQuest qs && qs.RedSolen == RedSolen)
                     {
                         if (qs.IsObjectiveInProgress(typeof(ProcessFungiObjective)))
                         {
@@ -186,9 +176,7 @@ namespace Server.Engines.Quests.Matriarch
         {
             Direction = GetDirectionTo(player);
 
-            SolenMatriarchQuest qs = player.Quest as SolenMatriarchQuest;
-
-            if (qs != null && qs.RedSolen == RedSolen)
+            if (player.Quest is SolenMatriarchQuest qs && qs.RedSolen == RedSolen)
             {
                 QuestObjective obj = qs.FindObjective(typeof(ProcessFungiObjective));
 
@@ -267,10 +255,8 @@ namespace Server.Engines.Quests.Matriarch
 
             protected override void OnTarget(Mobile from, object targeted)
             {
-                if (targeted is ZoogiFungus)
+                if (targeted is ZoogiFungus fungus)
                 {
-                    ZoogiFungus fungus = (ZoogiFungus)targeted;
-
                     if (fungus.IsChildOf(m_From.Backpack))
                         m_Matriarch.OnGivenFungi(m_From, (ZoogiFungus)targeted);
                     else
diff --git a/Scripts/Mobiles/NPCs/Tailor.cs b/Scripts/Mobiles/NPCs/Tailor.cs
index 810c498ae..3261b0ec3 100644
--- a/Scripts/Mobiles/NPCs/Tailor.cs
+++ b/Scripts/Mobiles/NPCs/Tailor.cs
@@ -37,9 +37,8 @@ namespace Server.Mobiles
 
         public override Item CreateBulkOrder(Mobile from, bool fromContextMenu)
         {
-            PlayerMobile pm = from as PlayerMobile;
 
-            if (pm != null && pm.NextTailorBulkOrder == TimeSpan.Zero && (fromContextMenu || 0.2 > Utility.RandomDouble()))
+            if (from is PlayerMobile pm && pm.NextTailorBulkOrder == TimeSpan.Zero && (fromContextMenu || 0.2 > Utility.RandomDouble()))
             {
                 double theirSkill = pm.Skills[SkillName.Tailoring].Base;
 
@@ -71,16 +70,16 @@ namespace Server.Mobiles
 
         public override TimeSpan GetNextBulkOrder(Mobile from)
         {
-            if (from is PlayerMobile)
-                return ((PlayerMobile)from).NextTailorBulkOrder;
+            if (from is PlayerMobile playerMobile)
+                return playerMobile.NextTailorBulkOrder;
 
             return TimeSpan.Zero;
         }
 
         public override void OnSuccessfulBulkOrderReceive(Mobile from)
         {
-            if (from is PlayerMobile)
-                ((PlayerMobile)from).NextTailorBulkOrder = TimeSpan.Zero;
+            if (from is PlayerMobile playerMobile)
+                playerMobile.NextTailorBulkOrder = TimeSpan.Zero;
         }
 
         #endregion
diff --git a/Scripts/Mobiles/NPCs/Thepem.cs b/Scripts/Mobiles/NPCs/Thepem.cs
index 7a4e8ad60..31b9e0657 100644
--- a/Scripts/Mobiles/NPCs/Thepem.cs
+++ b/Scripts/Mobiles/NPCs/Thepem.cs
@@ -40,8 +40,8 @@ namespace Server.Engines.Quests
 
         public override void OnSuccessfulBulkOrderReceive(Mobile from)
         {
-            if (from is PlayerMobile)
-                ((PlayerMobile)from).NextAlchemyBulkOrder = TimeSpan.Zero;
+            if (from is PlayerMobile playerMobile)
+                playerMobile.NextAlchemyBulkOrder = TimeSpan.Zero;
         }
 
         #endregion
diff --git a/Scripts/Mobiles/NPCs/Tinker.cs b/Scripts/Mobiles/NPCs/Tinker.cs
index 03fb0a890..1549efe34 100644
--- a/Scripts/Mobiles/NPCs/Tinker.cs
+++ b/Scripts/Mobiles/NPCs/Tinker.cs
@@ -46,8 +46,8 @@ namespace Server.Mobiles
 
         public override void OnSuccessfulBulkOrderReceive(Mobile from)
         {
-            if (from is PlayerMobile)
-                ((PlayerMobile)from).NextTinkeringBulkOrder = TimeSpan.Zero;
+            if (from is PlayerMobile playerMobile)
+                playerMobile.NextTinkeringBulkOrder = TimeSpan.Zero;
         }
 
         #endregion
diff --git a/Scripts/Mobiles/NPCs/TownCrier.cs b/Scripts/Mobiles/NPCs/TownCrier.cs
index d1c0877dd..ed6e77dc7 100644
--- a/Scripts/Mobiles/NPCs/TownCrier.cs
+++ b/Scripts/Mobiles/NPCs/TownCrier.cs
@@ -672,10 +672,7 @@ namespace Server.Mobiles
 
             writer.Write(m_Entries == null ? 0 : m_Entries.Count);
 
-            if (m_Entries != null)
-            {
-                m_Entries.ForEach(e => e.Serialize(writer));
-            }
+            m_Entries?.ForEach(e => e.Serialize(writer));
         }
 
         public override void Deserialize(GenericReader reader)
diff --git a/Scripts/Mobiles/NPCs/Veterinarian.cs b/Scripts/Mobiles/NPCs/Veterinarian.cs
index c0c9a8379..7b30ed236 100644
--- a/Scripts/Mobiles/NPCs/Veterinarian.cs
+++ b/Scripts/Mobiles/NPCs/Veterinarian.cs
@@ -33,9 +33,8 @@ namespace Server.Mobiles
 
             foreach (Mobile m in eable)
             {
-                BaseCreature bc = m as BaseCreature;
 
-                if (bc != null && bc.IsDeadBondedPet && bc.ControlMaster == from && from.InLOS(bc))
+                if (m is BaseCreature bc && bc.IsDeadBondedPet && bc.ControlMaster == from && from.InLOS(bc))
                     pets.Add(bc);
             }
             eable.Free();
@@ -44,7 +43,7 @@ namespace Server.Mobiles
             {
                 BrokenAutomatonHead head = from.Backpack.FindItemByType(typeof(BrokenAutomatonHead)) as BrokenAutomatonHead;
 
-                if (head != null && head.Automaton != null && !head.Automaton.Deleted)
+                if (head?.Automaton != null && !head.Automaton.Deleted)
                     pets.Add(head.Automaton);
             }
 
@@ -172,7 +171,7 @@ namespace Server.Mobiles
                 BaseCreature pet = m_Pets[i];
 
                 AddRadio(30, 102 + yOffset, 0x25FF, 0x2602, (i == 0), i);
-                AddLabel(70, 107 + yOffset, 0x47E, string.Format("{0}  {1}", pet.Name, Veterinarian.GetResurrectionFee(pet).ToString()));
+                AddLabel(70, 107 + yOffset, 0x47E, $"{pet.Name}  {Veterinarian.GetResurrectionFee(pet).ToString()}");
             }
         }
 
diff --git a/Scripts/Mobiles/NPCs/Victoria.cs b/Scripts/Mobiles/NPCs/Victoria.cs
index f0b975095..59eba73a5 100644
--- a/Scripts/Mobiles/NPCs/Victoria.cs
+++ b/Scripts/Mobiles/NPCs/Victoria.cs
@@ -30,9 +30,9 @@ namespace Server.Engines.Quests.Doom
                 {
                     foreach (Item item in GetItemsInRange(AltarRange))
                     {
-                        if (item is SummoningAltar)
+                        if (item is SummoningAltar summoningAltar)
                         {
-                            m_Altar = (SummoningAltar)item;
+                            m_Altar = summoningAltar;
                             break;
                         }
                     }
@@ -71,18 +71,14 @@ namespace Server.Engines.Quests.Doom
 
         public override bool OnDragDrop(Mobile from, Item dropped)
         {
-            PlayerMobile player = from as PlayerMobile;
-
-            if (player != null)
+            if (from is PlayerMobile player)
             {
                 QuestSystem qs = player.Quest;
 
                 if (qs is TheSummoningQuest)
                 {
-                    if (dropped is DaemonBone)
+                    if (dropped is DaemonBone bones)
                     {
-                        DaemonBone bones = (DaemonBone)dropped;
-
                         QuestObjective obj = qs.FindObjective(typeof(CollectBonesObjective));
 
                         if (obj != null && !obj.Completed)
diff --git a/Scripts/Mobiles/NPCs/Vrulkax.cs b/Scripts/Mobiles/NPCs/Vrulkax.cs
index 4fc73d4c2..44905bc00 100644
--- a/Scripts/Mobiles/NPCs/Vrulkax.cs
+++ b/Scripts/Mobiles/NPCs/Vrulkax.cs
@@ -39,9 +39,8 @@ namespace Server.Engines.Quests
             {
                 if (dropped is IDurability && t[0] == dropped.GetType())
                 {
-                    IDurability dur = dropped as IDurability;
 
-                    if (dur != null && dur.MaxHitPoints == 255 && dur.HitPoints == 255)
+                    if (dropped is IDurability dur && dur.MaxHitPoints == 255 && dur.HitPoints == 255)
                     {
                         Item item = Loot.Construct(t[1]);
 
diff --git a/Scripts/Mobiles/NPCs/WanderingShaman.cs b/Scripts/Mobiles/NPCs/WanderingShaman.cs
index 3ce2bdb12..eaed566e1 100644
--- a/Scripts/Mobiles/NPCs/WanderingShaman.cs
+++ b/Scripts/Mobiles/NPCs/WanderingShaman.cs
@@ -51,9 +51,7 @@ namespace Server.Mobiles
                 return;
             }
 
-            Robe robe = FindItemOnLayer(Layer.OuterTorso) as Robe;
-
-            if (robe != null)
+            if (FindItemOnLayer(Layer.OuterTorso) is Robe robe)
             {
                 Timer.DelayCall(robe.Delete);
             }
diff --git a/Scripts/Mobiles/NPCs/WarriorGuard.cs b/Scripts/Mobiles/NPCs/WarriorGuard.cs
index 7c653bc6a..4318cbd23 100644
--- a/Scripts/Mobiles/NPCs/WarriorGuard.cs
+++ b/Scripts/Mobiles/NPCs/WarriorGuard.cs
@@ -319,9 +319,9 @@ namespace Server.Mobiles
                     TeleportTo(target);
                     target.BoltEffect(0);
 
-                    if (target is BaseCreature)
+                    if (target is BaseCreature baseCreature)
                     {
-                        ((BaseCreature)target).NoKillAwards = true;
+                        baseCreature.NoKillAwards = true;
                     }
 
                     target.Damage(target.HitsMax, m_Owner);
diff --git a/Scripts/Mobiles/NPCs/Weaponsmith.cs b/Scripts/Mobiles/NPCs/Weaponsmith.cs
index 6f0f679b6..de96293dd 100644
--- a/Scripts/Mobiles/NPCs/Weaponsmith.cs
+++ b/Scripts/Mobiles/NPCs/Weaponsmith.cs
@@ -48,9 +48,8 @@ namespace Server.Mobiles
 
         public override Item CreateBulkOrder(Mobile from, bool fromContextMenu)
         {
-            PlayerMobile pm = from as PlayerMobile;
 
-            if (pm != null && pm.NextSmithBulkOrder == TimeSpan.Zero && (fromContextMenu || 0.2 > Utility.RandomDouble()))
+            if (from is PlayerMobile pm && pm.NextSmithBulkOrder == TimeSpan.Zero && (fromContextMenu || 0.2 > Utility.RandomDouble()))
             {
                 double theirSkill = pm.Skills[SkillName.Blacksmith].Base;
 
@@ -82,16 +81,16 @@ namespace Server.Mobiles
 
         public override TimeSpan GetNextBulkOrder(Mobile from)
         {
-            if (from is PlayerMobile)
-                return ((PlayerMobile)from).NextSmithBulkOrder;
+            if (from is PlayerMobile playerMobile)
+                return playerMobile.NextSmithBulkOrder;
 
             return TimeSpan.Zero;
         }
 
         public override void OnSuccessfulBulkOrderReceive(Mobile from)
         {
-            if (from is PlayerMobile)
-                ((PlayerMobile)from).NextSmithBulkOrder = TimeSpan.Zero;
+            if (from is PlayerMobile playerMobile)
+                playerMobile.NextSmithBulkOrder = TimeSpan.Zero;
         }
 
         #endregion
diff --git a/Scripts/Mobiles/NPCs/Weaver.cs b/Scripts/Mobiles/NPCs/Weaver.cs
index 8fb7e358d..8cb8e653f 100644
--- a/Scripts/Mobiles/NPCs/Weaver.cs
+++ b/Scripts/Mobiles/NPCs/Weaver.cs
@@ -30,9 +30,8 @@ namespace Server.Mobiles
 
         public override Item CreateBulkOrder(Mobile from, bool fromContextMenu)
         {
-            PlayerMobile pm = from as PlayerMobile;
 
-            if (pm != null && pm.NextTailorBulkOrder == TimeSpan.Zero && (fromContextMenu || 0.2 > Utility.RandomDouble()))
+            if (from is PlayerMobile pm && pm.NextTailorBulkOrder == TimeSpan.Zero && (fromContextMenu || 0.2 > Utility.RandomDouble()))
             {
                 double theirSkill = pm.Skills[SkillName.Tailoring].Base;
 
@@ -64,16 +63,16 @@ namespace Server.Mobiles
 
         public override TimeSpan GetNextBulkOrder(Mobile from)
         {
-            if (from is PlayerMobile)
-                return ((PlayerMobile)from).NextTailorBulkOrder;
+            if (from is PlayerMobile playerMobile)
+                return playerMobile.NextTailorBulkOrder;
 
             return TimeSpan.Zero;
         }
 
         public override void OnSuccessfulBulkOrderReceive(Mobile from)
         {
-            if (from is PlayerMobile)
-                ((PlayerMobile)from).NextTailorBulkOrder = TimeSpan.Zero;
+            if (from is PlayerMobile playerMobile)
+                playerMobile.NextTailorBulkOrder = TimeSpan.Zero;
         }
 
         #endregion
diff --git a/Scripts/Mobiles/NPCs/Zosilem.cs b/Scripts/Mobiles/NPCs/Zosilem.cs
index 2bf7f0955..de8899e22 100644
--- a/Scripts/Mobiles/NPCs/Zosilem.cs
+++ b/Scripts/Mobiles/NPCs/Zosilem.cs
@@ -40,8 +40,8 @@ namespace Server.Engines.Quests
 
         public override void OnSuccessfulBulkOrderReceive(Mobile from)
         {
-            if (from is PlayerMobile)
-                ((PlayerMobile)from).NextAlchemyBulkOrder = TimeSpan.Zero;
+            if (from is PlayerMobile playerMobile)
+                playerMobile.NextAlchemyBulkOrder = TimeSpan.Zero;
         }
 
         #endregion
@@ -144,10 +144,8 @@ namespace Server.Engines.Quests
                     success = true;
                 }
             }
-            else if (item is PotionKeg)
+            else if (item is PotionKeg keg)
             {
-                PotionKeg keg = (PotionKeg)item;
-
                 inspectedType = GetKegType(keg.Type);
 
                 if (inspectedType == null)
diff --git a/Scripts/Mobiles/Named/GrimmochDrummel.cs b/Scripts/Mobiles/Named/GrimmochDrummel.cs
index 178e2ecf4..a22e4c905 100644
--- a/Scripts/Mobiles/Named/GrimmochDrummel.cs
+++ b/Scripts/Mobiles/Named/GrimmochDrummel.cs
@@ -99,9 +99,7 @@ namespace Server.Mobiles
             Gold gold = new Gold(Utility.RandomMinMax(190, 230));
             gold.MoveToWorld(Location, Map);
 
-            Backpack pack = Backpack as Backpack;
-
-            if (pack != null)
+            if (Backpack is Backpack pack)
             {
                 pack.Movable = true;
 
diff --git a/Scripts/Mobiles/Named/Ilhenir.cs b/Scripts/Mobiles/Named/Ilhenir.cs
index 9d53e9db6..67fb8a8dc 100644
--- a/Scripts/Mobiles/Named/Ilhenir.cs
+++ b/Scripts/Mobiles/Named/Ilhenir.cs
@@ -158,10 +158,10 @@ namespace Server.Mobiles
                 ooze.MoveToWorld(p, Map);
             }
 
-            if (Combatant is PlayerMobile)
+            if (Combatant is PlayerMobile playerMobile)
             {
                 if (corrosive)
-                    ((PlayerMobile)Combatant).SendLocalizedMessage(1072071); // A corrosive gas seeps out of your enemy's skin!
+                    playerMobile.SendLocalizedMessage(1072071); // A corrosive gas seeps out of your enemy's skin!
                 else
                     ((PlayerMobile)Combatant).SendLocalizedMessage(1072072); // A poisonous gas seeps out of your enemy's skin!
             }
@@ -227,9 +227,8 @@ namespace Server.Mobiles
 
                 for (int i = 0; i < items.Count; ++i)
                 {
-                    IDurability wearable = items[i] as IDurability;
 
-                    if (wearable != null && wearable.HitPoints >= 10 && Utility.RandomDouble() < 0.25)
+                    if (items[i] is IDurability wearable && wearable.HitPoints >= 10 && Utility.RandomDouble() < 0.25)
                     {
                         wearable.HitPoints -= (wearable.HitPoints == 10) ? Utility.Random(1, 5) : 10;
                         damaged = true;
@@ -272,10 +271,8 @@ namespace Server.Mobiles
 
             foreach (Mobile m in eable)
             {
-                if (m is BaseCreature)
+                if (m is BaseCreature bc)
                 {
-                    BaseCreature bc = (BaseCreature)m;
-
                     if (!bc.Controlled && !bc.Summoned)
                         continue;
                 }
diff --git a/Scripts/Mobiles/Named/Putrefier.cs b/Scripts/Mobiles/Named/Putrefier.cs
index b7a40f355..2e1ed2f35 100644
--- a/Scripts/Mobiles/Named/Putrefier.cs
+++ b/Scripts/Mobiles/Named/Putrefier.cs
@@ -98,9 +98,9 @@ namespace Server.Mobiles
                 */
                 Mobile target = null;
 
-                if (attacker is BaseCreature)
+                if (attacker is BaseCreature baseCreature)
                 {
-                    Mobile m = ((BaseCreature)attacker).GetMaster();
+                    Mobile m = baseCreature.GetMaster();
 
                     if (m != null)
                         target = m;
diff --git a/Scripts/Mobiles/Normal/AcidPopper.cs b/Scripts/Mobiles/Normal/AcidPopper.cs
index 82fbbe474..f34b1747a 100644
--- a/Scripts/Mobiles/Normal/AcidPopper.cs
+++ b/Scripts/Mobiles/Normal/AcidPopper.cs
@@ -37,9 +37,7 @@ namespace Server.Items
 
         private void BurnWeb_Callback(Mobile from, object targeted)
         {
-            SpiderWebbing web = targeted as SpiderWebbing;
-
-            if (web != null)
+            if (targeted is SpiderWebbing web)
             {
                 from.SendLocalizedMessage(1113240); // The acid popper bursts and burns away the webbing.
 
diff --git a/Scripts/Mobiles/Normal/BaseCreature.cs b/Scripts/Mobiles/Normal/BaseCreature.cs
index 3d985a2bc..dc9fa1ea6 100644
--- a/Scripts/Mobiles/Normal/BaseCreature.cs
+++ b/Scripts/Mobiles/Normal/BaseCreature.cs
@@ -1231,10 +1231,7 @@ namespace Server.Mobiles
 
         public virtual void RemovePetFriend(Mobile m)
         {
-            if (m_Friends != null)
-            {
-                m_Friends.Remove(m);
-            }
+            m_Friends?.Remove(m);
         }
 
         public virtual bool IsFriend(Mobile m)
@@ -1796,10 +1793,7 @@ namespace Server.Mobiles
             {
                 BandageContext c = BandageContext.GetContext(this);
 
-                if (c != null)
-                {
-                    c.Slip();
-                }
+                c?.Slip();
             }
 
             if (Confidence.IsRegenerating(this))
@@ -1814,14 +1808,11 @@ namespace Server.Mobiles
                 speechType.OnDamage(this, amount);
             }
 
-            if (m_ReceivedHonorContext != null)
-            {
-                m_ReceivedHonorContext.OnTargetDamaged(from, amount);
-            }
+            m_ReceivedHonorContext?.OnTargetDamaged(from, amount);
 
-            if (from is PlayerMobile)
+            if (from is PlayerMobile playerMobile)
             {
-                Timer.DelayCall(TimeSpan.FromSeconds(10), ((PlayerMobile)@from).RecoverAmmo);
+                Timer.DelayCall(TimeSpan.FromSeconds(10), playerMobile.RecoverAmmo);
             }
 
             base.OnDamage(amount, from, willKill);
@@ -2769,9 +2760,9 @@ namespace Server.Mobiles
 
         public virtual bool CheckGold(Mobile from, Item dropped)
         {
-            if (dropped is Gold)
+            if (dropped is Gold gold)
             {
-                return OnGoldGiven(from, (Gold)dropped);
+                return OnGoldGiven(from, gold);
             }
 
             return false;
@@ -3309,10 +3300,8 @@ namespace Server.Mobiles
             {
                 m_ControlMaster.Followers -= ControlSlots;
 
-                if (m_ControlMaster is PlayerMobile)
+                if (m_ControlMaster is PlayerMobile pm)
                 {
-                    PlayerMobile pm = (PlayerMobile)m_ControlMaster;
-
                     pm.AllFollowers.Remove(this);
 
                     if (pm.AutoStabled.Contains(this))
@@ -3337,9 +3326,9 @@ namespace Server.Mobiles
             {
                 m_SummonMaster.Followers -= ControlSlots;
 
-                if (m_SummonMaster is PlayerMobile)
+                if (m_SummonMaster is PlayerMobile playerMobile)
                 {
-                    ((PlayerMobile)m_SummonMaster).AllFollowers.Remove(this);
+                    playerMobile.AllFollowers.Remove(this);
                 }
             }
 
@@ -3380,9 +3369,9 @@ namespace Server.Mobiles
             else if (m_SummonMaster != null)
             {
                 m_SummonMaster.Followers += ControlSlots;
-                if (m_SummonMaster is PlayerMobile)
+                if (m_SummonMaster is PlayerMobile playerMobile)
                 {
-                    ((PlayerMobile)m_SummonMaster).AllFollowers.Add(this);
+                    playerMobile.AllFollowers.Add(this);
                 }
             }
         }
@@ -3792,9 +3781,9 @@ namespace Server.Mobiles
 
             foreach (Mobile m in eable)
             {
-                if (m is BaseCreature)
+                if (m is BaseCreature baseCreature)
                 {
-                    if (((BaseCreature)m).Team == Team)
+                    if (baseCreature.Team == Team)
                     {
                         if (!m.Deleted)
                         {
@@ -4067,9 +4056,9 @@ namespace Server.Mobiles
                 return false;
             }
 
-            if (m is PlayerMobile)
+            if (m is PlayerMobile playerMobile)
             {
-                return (((PlayerMobile)m).Learning == m_Teaching);
+                return (playerMobile.Learning == m_Teaching);
             }
 
             return true;
@@ -4110,22 +4099,22 @@ namespace Server.Mobiles
 
                             m_Teaching = (SkillName)(-1);
 
-                            if (m is PlayerMobile)
+                            if (m is PlayerMobile playerMobile)
                             {
-                                ((PlayerMobile)m).Learning = (SkillName)(-1);
+                                playerMobile.Learning = (SkillName)(-1);
                             }
                         }
                         else
                         {
                             // I will teach thee all I know, if paid the amount in full.  The price is:
-                            Say(1019077, AffixType.Append, string.Format(" {0}", pointsToLearn), "");
+                            Say(1019077, AffixType.Append, $" {pointsToLearn}", "");
                             Say(1043108); // For less I shall teach thee less.
 
                             m_Teaching = skill;
 
-                            if (m is PlayerMobile)
+                            if (m is PlayerMobile playerMobile)
                             {
-                                ((PlayerMobile)m).Learning = skill;
+                                playerMobile.Learning = skill;
                             }
                         }
 
@@ -4166,17 +4155,11 @@ namespace Server.Mobiles
                 // Now, if the master is in the aggressor list, it needs to be refreshed
                 info = aggressor.Aggressors.FirstOrDefault(i => i.Attacker == master);
 
-                if (info != null)
-                {
-                    info.Refresh();
-                }
+                info?.Refresh();
 
                 info = master.Aggressed.FirstOrDefault(i => i.Defender == aggressor);
 
-                if (info != null)
-                {
-                    info.Refresh();
-                }
+                info?.Refresh();
 
                 // next lets find out if our master is on the aggressors aggressed list
                 info = aggressor.Aggressed.FirstOrDefault(i => i.Defender == master);
@@ -4206,9 +4189,9 @@ namespace Server.Mobiles
                     BuffInfo.AddBuff(aggressor, new BuffInfo(BuffIcon.HeatOfBattleStatus, 1153801, 1153827, Aggression.CombatHeatDelay, aggressor, true));
                 }
             }
-            else if (aggressor is BaseCreature)
+            else if (aggressor is BaseCreature baseCreature)
             {
-                var pm = ((BaseCreature)aggressor).GetMaster() as PlayerMobile;
+                var pm = baseCreature.GetMaster() as PlayerMobile;
 
                 if (pm != null)
                 {
@@ -4550,10 +4533,7 @@ namespace Server.Mobiles
                     {
                         Combatant = FocusMob = m;
 
-                        if (AIObject != null)
-                        {
-                            AIObject.MoveTo(m, true, 1);
-                        }
+                        AIObject?.MoveTo(m, true, 1);
 
                         DoHarmful(m);
                     }
@@ -4568,10 +4548,7 @@ namespace Server.Mobiles
 
             InhumanSpeech speechType = SpeechType;
 
-            if (speechType != null)
-            {
-                speechType.OnMovement(this, m, oldLocation);
-            }
+            speechType?.OnMovement(this, m, oldLocation);
 
             /* Begin notice sound */
             if ((!m.Hidden || m.IsPlayer()) && m.Player && m_FightMode != FightMode.Aggressor && m_FightMode != FightMode.None &&
@@ -5265,10 +5242,7 @@ namespace Server.Mobiles
         {
             if ((Summoned && item.Movable) || item == null)
             {
-                if (item != null)
-                {
-                    item.Delete();
-                }
+                item?.Delete();
 
                 return;
             }
@@ -5318,10 +5292,7 @@ namespace Server.Mobiles
             {
                 Container pack = Backpack;
 
-                if (pack != null)
-                {
-                    pack.DisplayTo(from);
-                }
+                pack?.DisplayTo(from);
             }
 
             if (DeathAdderCharmable && from.CanBeHarmful(this, false))
@@ -5502,15 +5473,9 @@ namespace Server.Mobiles
 
             InhumanSpeech speechType = SpeechType;
 
-            if (speechType != null)
-            {
-                speechType.OnDeath(this);
-            }
+            speechType?.OnDeath(this);
 
-            if (m_ReceivedHonorContext != null)
-            {
-                m_ReceivedHonorContext.OnTargetKilled();
-            }
+            m_ReceivedHonorContext?.OnTargetKilled();
 
             return base.OnBeforeDeath();
         }
@@ -6087,17 +6052,11 @@ namespace Server.Mobiles
             SetControlMaster(null);
             SummonMaster = null;
 
-            if (m_ReceivedHonorContext != null)
-            {
-                m_ReceivedHonorContext.Cancel();
-            }
+            m_ReceivedHonorContext?.Cancel();
 
             base.OnDelete();
 
-            if (m != null)
-            {
-                m.InvalidateProperties();
-            }
+            m?.InvalidateProperties();
 
             if (_NavPoints != null)
             {
@@ -6380,9 +6339,9 @@ namespace Server.Mobiles
 
         private void Heal_Callback(object state)
         {
-            if (state is Mobile)
+            if (state is Mobile mobile)
             {
-                Heal((Mobile)state);
+                Heal(mobile);
             }
         }
 
@@ -6468,10 +6427,7 @@ namespace Server.Mobiles
 
         public virtual void StopHeal()
         {
-            if (m_HealTimer != null)
-            {
-                m_HealTimer.Stop();
-            }
+            m_HealTimer?.Stop();
 
             m_HealTimer = null;
         }
@@ -7130,10 +7086,8 @@ namespace Server.Mobiles
                 Combatant = target;
                 BardEndTime = DateTime.UtcNow + TimeSpan.FromSeconds(30.0);
 
-                if (target is BaseCreature)
+                if (target is BaseCreature t)
                 {
-                    BaseCreature t = (BaseCreature)target;
-
                     if (t.Unprovokable || (t.IsParagon && BaseInstrument.GetBaseDifficulty(t) >= 160.0))
                     {
                         return;
@@ -7146,9 +7100,9 @@ namespace Server.Mobiles
                     t.Combatant = this;
                     t.BardEndTime = DateTime.UtcNow + TimeSpan.FromSeconds(30.0);
                 }
-                else if (target is PlayerMobile)
+                else if (target is PlayerMobile playerMobile)
                 {
-                    ((PlayerMobile)target).Combatant = this;
+                    playerMobile.Combatant = this;
                     Combatant = target;
                 }
             }
@@ -7217,10 +7171,8 @@ namespace Server.Mobiles
 
             foreach (Mobile m in eable)
             {
-                if (m is BaseCreature)
+                if (m is BaseCreature pet)
                 {
-                    BaseCreature pet = (BaseCreature)m;
-
                     if (pet.Controlled && pet.ControlMaster == master)
                     {
                         if (!onlyBonded || pet.IsBonded)
@@ -7317,7 +7269,7 @@ namespace Server.Mobiles
                 {
                     if (!Controlled && !Summoned)
                     {
-                        if (Spawner != null && Spawner is Spawner && ((Spawner as Spawner).Map) == Map)
+                        if (Spawner is Spawner && ((Spawner as Spawner).Map) == Map)
                         {
                             return true;
                         }
@@ -7434,10 +7386,8 @@ namespace Server.Mobiles
                     {
                         ((BaseCreature)m).OwnerAbandonTime = DateTime.MinValue;
                     }
-                    else if (m is BaseCreature)
+                    else if (m is BaseCreature c)
                     {
-                        BaseCreature c = (BaseCreature)m;
-
                         if (c.IsDeadPet)
                         {
                             Mobile owner = c.ControlMaster;
diff --git a/Scripts/Mobiles/Normal/BloodWorm.cs b/Scripts/Mobiles/Normal/BloodWorm.cs
index c81f563dc..ebd56eaee 100644
--- a/Scripts/Mobiles/Normal/BloodWorm.cs
+++ b/Scripts/Mobiles/Normal/BloodWorm.cs
@@ -90,10 +90,8 @@ namespace Server.Mobiles
 
                 foreach (Item item in Map.GetItemsInRange(Location, 1))
                 {
-                    if (item is Corpse)
+                    if (item is Corpse c)
                     {
-                        Corpse c = (Corpse)item;
-
                         if (c.ItemID == 0x2006)
                         {
                             toAbsorb = c;
diff --git a/Scripts/Mobiles/Normal/BritannianInfantry.cs b/Scripts/Mobiles/Normal/BritannianInfantry.cs
index 31771f2ae..55ed0231c 100644
--- a/Scripts/Mobiles/Normal/BritannianInfantry.cs
+++ b/Scripts/Mobiles/Normal/BritannianInfantry.cs
@@ -86,9 +86,7 @@ namespace Server.Mobiles
 
         public override WeaponAbility GetWeaponAbility()
         {
-            BaseWeapon wep = Weapon as BaseWeapon;
-
-            if (wep != null && !(wep is Fists))
+            if (Weapon is BaseWeapon wep && !(wep is Fists))
             {
                 if (Utility.RandomDouble() > 0.5)
                     return wep.PrimaryAbility;
diff --git a/Scripts/Mobiles/Normal/ChaosDragoonElite.cs b/Scripts/Mobiles/Normal/ChaosDragoonElite.cs
index dd3cac1e5..6c02ff25a 100644
--- a/Scripts/Mobiles/Normal/ChaosDragoonElite.cs
+++ b/Scripts/Mobiles/Normal/ChaosDragoonElite.cs
@@ -233,8 +233,8 @@ namespace Server.Mobiles
 
             if (mount != null)
             {
-                if (mount is SwampDragon)
-                    ((SwampDragon)mount).HasBarding = false;
+                if (mount is SwampDragon swampDragon)
+                    swampDragon.HasBarding = false;
 
                 mount.Rider = null;
             }
diff --git a/Scripts/Mobiles/Normal/DespiseCreature.cs b/Scripts/Mobiles/Normal/DespiseCreature.cs
index a5317c39a..b0fe22483 100644
--- a/Scripts/Mobiles/Normal/DespiseCreature.cs
+++ b/Scripts/Mobiles/Normal/DespiseCreature.cs
@@ -205,9 +205,9 @@ namespace Server.Engines.Despise
                 if (m.Karma >= 1000 && Alignment == Alignment.Evil)
                     return true;
             }
-            else if (m is DespiseCreature)
+            else if (m is DespiseCreature despiseCreature)
             {
-                return ((DespiseCreature)m).Alignment != Alignment;
+                return despiseCreature.Alignment != Alignment;
             }
 
             return false;
@@ -232,7 +232,7 @@ namespace Server.Engines.Despise
             if (ControlMaster != null)
                 list.Add(1153303, ControlMaster.Name); // Controller: ~1_NAME~
 
-            list.Add(1153297, string.Format("{0}\t#{1}", m_Power.ToString(), GetPowerLabel(m_Power))); // Power Level: ~1_LEVEL~: ~2_VAL~
+            list.Add(1153297, $"{m_Power.ToString()}\t#{GetPowerLabel(m_Power)}"); // Power Level: ~1_LEVEL~: ~2_VAL~
         }
 
         public override void OnCombatantChange()
diff --git a/Scripts/Mobiles/Normal/EnragedCreatures.cs b/Scripts/Mobiles/Normal/EnragedCreatures.cs
index a580489ba..47e49f468 100644
--- a/Scripts/Mobiles/Normal/EnragedCreatures.cs
+++ b/Scripts/Mobiles/Normal/EnragedCreatures.cs
@@ -232,10 +232,7 @@ namespace Server.Mobiles
             */
             else if (!Combat(this))
             {
-                if (AIObject != null)
-                {
-                    AIObject.MoveTo(SummonMaster, false, 5);
-                }
+                AIObject?.MoveTo(SummonMaster, false, 5);
             }
             /*
             On OSI, if the summon attacks a mobile, the summoner meer also
@@ -246,9 +243,9 @@ namespace Server.Mobiles
             else if (!Combat(SummonMaster))
             {
                 BaseCreature bc = null;
-                if (Combatant is BaseCreature)
+                if (Combatant is BaseCreature baseCreature)
                 {
-                    bc = (BaseCreature)Combatant;
+                    bc = baseCreature;
                 }
                 if (Combatant is PlayerMobile || (bc != null && (bc.Controlled || bc.SummonMaster != null)))
                 {
diff --git a/Scripts/Mobiles/Normal/EodonTribesman.cs b/Scripts/Mobiles/Normal/EodonTribesman.cs
index 790851a85..d9f99f159 100644
--- a/Scripts/Mobiles/Normal/EodonTribesman.cs
+++ b/Scripts/Mobiles/Normal/EodonTribesman.cs
@@ -238,7 +238,7 @@ namespace Server.Mobiles
 
         public override void BuildBody()
         {
-            Name = string.Format("{0} the {1} warrior", GetRandomName(), TribeType.ToString());
+            Name = $"{GetRandomName()} the {TribeType.ToString()} warrior";
 
             SetStr(150);
             SetDex(150);
@@ -438,7 +438,7 @@ namespace Server.Mobiles
 
         public override void BuildBody()
         {
-            Name = string.Format("{0} the {1} shaman", GetRandomName(), TribeType.ToString());
+            Name = $"{GetRandomName()} the {TribeType.ToString()} shaman";
 
             SetStr(125);
             SetDex(75, 100);
@@ -597,7 +597,7 @@ namespace Server.Mobiles
 
         public override void BuildBody()
         {
-            Name = string.Format("{0} the {1} {2}", GetRandomName(), TribeType.ToString(), Female ? "chieftess" : "chieftan");
+            Name = $"{GetRandomName()} the {TribeType.ToString()} {(Female ? "chieftess" : "chieftan")}";
 
             SetStr(200);
             SetDex(2000);
diff --git a/Scripts/Mobiles/Normal/GargishOutcast.cs b/Scripts/Mobiles/Normal/GargishOutcast.cs
index 1fff925ba..5b240c212 100644
--- a/Scripts/Mobiles/Normal/GargishOutcast.cs
+++ b/Scripts/Mobiles/Normal/GargishOutcast.cs
@@ -111,10 +111,10 @@ namespace Server.Mobiles
 
         public override WeaponAbility GetWeaponAbility()
         {
-            if (Weapon is BaseWeapon)
+            if (Weapon is BaseWeapon baseWeapon)
             {
                 if (Utility.RandomBool())
-                    return ((BaseWeapon)Weapon).PrimaryAbility;
+                    return baseWeapon.PrimaryAbility;
                 return ((BaseWeapon)Weapon).SecondaryAbility;
             }
 
diff --git a/Scripts/Mobiles/Normal/GargishRouser.cs b/Scripts/Mobiles/Normal/GargishRouser.cs
index ba33902ae..5ec69c6b2 100644
--- a/Scripts/Mobiles/Normal/GargishRouser.cs
+++ b/Scripts/Mobiles/Normal/GargishRouser.cs
@@ -116,10 +116,10 @@ namespace Server.Mobiles
 
         public override WeaponAbility GetWeaponAbility()
         {
-            if (Weapon is BaseWeapon)
+            if (Weapon is BaseWeapon baseWeapon)
             {
                 if (Utility.RandomBool())
-                    return ((BaseWeapon)Weapon).PrimaryAbility;
+                    return baseWeapon.PrimaryAbility;
                 return ((BaseWeapon)Weapon).SecondaryAbility;
             }
 
diff --git a/Scripts/Mobiles/Normal/GolemController.cs b/Scripts/Mobiles/Normal/GolemController.cs
index e197f7896..c2c8f9059 100644
--- a/Scripts/Mobiles/Normal/GolemController.cs
+++ b/Scripts/Mobiles/Normal/GolemController.cs
@@ -63,9 +63,8 @@ namespace Server.Mobiles
 
         public void AddArcane(Item item)
         {
-            if (item is IArcaneEquip)
+            if (item is IArcaneEquip eq)
             {
-                IArcaneEquip eq = (IArcaneEquip)item;
                 eq.CurArcaneCharges = eq.MaxArcaneCharges = 20;
             }
 
diff --git a/Scripts/Mobiles/Normal/GreenGoblinScout.cs b/Scripts/Mobiles/Normal/GreenGoblinScout.cs
index de13b1a3f..012267e55 100644
--- a/Scripts/Mobiles/Normal/GreenGoblinScout.cs
+++ b/Scripts/Mobiles/Normal/GreenGoblinScout.cs
@@ -117,10 +117,7 @@ namespace Server.Mobiles
                 {
                     Target targ = Target;
 
-                    if (targ != null)
-                    {
-                        targ.Invoke(this, this);
-                    }
+                    targ?.Invoke(this, this);
 
                     Effects.PlaySound(Location, Map, 0x340);
                 }
diff --git a/Scripts/Mobiles/Normal/Gregorio.cs b/Scripts/Mobiles/Normal/Gregorio.cs
index 650a19f9e..44fb3364f 100644
--- a/Scripts/Mobiles/Normal/Gregorio.cs
+++ b/Scripts/Mobiles/Normal/Gregorio.cs
@@ -51,10 +51,8 @@ namespace Server.Mobiles
             if (from is BaseCreature && ((BaseCreature)from).GetMaster() is PlayerMobile)
                 from = ((BaseCreature)from).GetMaster();
 
-            if (from is PlayerMobile)
+            if (from is PlayerMobile pm)
             {
-                PlayerMobile pm = (PlayerMobile)from;
-
                 BaseQuest quest = QuestHelper.GetQuest(pm, typeof(GuiltyQuest));
 
                 if (quest != null && !quest.Completed)
@@ -72,10 +70,8 @@ namespace Server.Mobiles
             if (from is BaseCreature && ((BaseCreature)from).GetMaster() is PlayerMobile)
                 from = ((BaseCreature)from).GetMaster();
 
-            if (from is PlayerMobile)
+            if (from is PlayerMobile pm)
             {
-                PlayerMobile pm = (PlayerMobile)from;
-
                 BaseQuest quest = QuestHelper.GetQuest(pm, typeof(GuiltyQuest));
 
                 if (quest != null && !quest.Completed)
diff --git a/Scripts/Mobiles/Normal/InsaneDryad.cs b/Scripts/Mobiles/Normal/InsaneDryad.cs
index ec2fca432..ceef9a639 100644
--- a/Scripts/Mobiles/Normal/InsaneDryad.cs
+++ b/Scripts/Mobiles/Normal/InsaneDryad.cs
@@ -80,9 +80,7 @@ namespace Server.Mobiles
 
                 for (int i = 0; i < peaced.Count; i++)
                 {
-                    var pm = peaced[i] as PlayerMobile;
-
-                    if (pm != null)
+                    if (peaced[i] is PlayerMobile pm)
                     {
                         pm.PeacedUntil = DateTime.UtcNow;
                     }
diff --git a/Scripts/Mobiles/Normal/IronBeetle.cs b/Scripts/Mobiles/Normal/IronBeetle.cs
index dcd93c47e..c198c18df 100644
--- a/Scripts/Mobiles/Normal/IronBeetle.cs
+++ b/Scripts/Mobiles/Normal/IronBeetle.cs
@@ -219,7 +219,7 @@ namespace Server.Mobiles
                         // Mine for gems
                         BonusHarvestResource bonus = def.GetBonusResource();
 
-                        if (bonus != null && bonus.Type != null && skillBase >= bonus.ReqSkill)
+                        if (bonus?.Type != null && skillBase >= bonus.ReqSkill)
                         {
                             Item bonusItem = system.Construct(bonus.Type, this, null);
 
diff --git a/Scripts/Mobiles/Normal/Kappa.cs b/Scripts/Mobiles/Normal/Kappa.cs
index b34716eca..26f7609fd 100644
--- a/Scripts/Mobiles/Normal/Kappa.cs
+++ b/Scripts/Mobiles/Normal/Kappa.cs
@@ -84,7 +84,7 @@ namespace Server.Mobiles
 
         public override void OnDamage(int amount, Mobile from, bool willKill)
         {
-            if (from != null && from.Map != null)
+            if (from?.Map != null)
             {
                 int amt = 0;
                 Mobile target = this;
diff --git a/Scripts/Mobiles/Normal/KhaldunRevenant.cs b/Scripts/Mobiles/Normal/KhaldunRevenant.cs
index 6c3094853..13ea0c24b 100644
--- a/Scripts/Mobiles/Normal/KhaldunRevenant.cs
+++ b/Scripts/Mobiles/Normal/KhaldunRevenant.cs
@@ -74,8 +74,8 @@ namespace Server.Mobiles
             Mobile m = e.Mobile;
             Mobile lastKiller = m.LastKiller;
 
-            if (lastKiller is BaseCreature)
-                lastKiller = ((BaseCreature)lastKiller).GetMaster();
+            if (lastKiller is BaseCreature baseCreature)
+                lastKiller = baseCreature.GetMaster();
 
             if (IsInsideKhaldun(m) && IsInsideKhaldun(lastKiller) && lastKiller.Player && !m_Table.Contains(lastKiller))
             {
@@ -104,7 +104,7 @@ namespace Server.Mobiles
 
         public static bool IsInsideKhaldun(Mobile from)
         {
-            return from != null && from.Region != null && from.Region.IsPartOf("Khaldun");
+            return from?.Region != null && from.Region.IsPartOf("Khaldun");
         }
 
         public override void DisplayPaperdollTo(Mobile to)
diff --git a/Scripts/Mobiles/Normal/MeerEternal.cs b/Scripts/Mobiles/Normal/MeerEternal.cs
index 5e44e9e02..894953ef2 100644
--- a/Scripts/Mobiles/Normal/MeerEternal.cs
+++ b/Scripts/Mobiles/Normal/MeerEternal.cs
@@ -82,9 +82,8 @@ namespace Server.Mobiles
         {
             if (DateTime.UtcNow >= m_NextAbilityTime)
             {
-                Mobile combatant = Combatant as Mobile;
 
-                if (combatant != null && combatant.Map == Map && combatant.InRange(this, 12))
+                if (Combatant is Mobile combatant && combatant.Map == Map && combatant.InRange(this, 12))
                 {
                     m_NextAbilityTime = DateTime.UtcNow + TimeSpan.FromSeconds(Utility.RandomMinMax(10, 15));
 
diff --git a/Scripts/Mobiles/Normal/MeerMage.cs b/Scripts/Mobiles/Normal/MeerMage.cs
index c9a3c95d8..76bf27c21 100644
--- a/Scripts/Mobiles/Normal/MeerMage.cs
+++ b/Scripts/Mobiles/Normal/MeerMage.cs
@@ -101,16 +101,13 @@ namespace Server.Mobiles
         {
             if (DateTime.UtcNow >= m_NextAbilityTime)
             {
-                Mobile combatant = Combatant as Mobile;
 
-                if (combatant != null && combatant.Map == Map && combatant.InRange(this, 12) && IsEnemy(combatant) && !UnderEffect(combatant))
+                if (Combatant is Mobile combatant && combatant.Map == Map && combatant.InRange(this, 12) && IsEnemy(combatant) && !UnderEffect(combatant))
                 {
                     m_NextAbilityTime = DateTime.UtcNow + TimeSpan.FromSeconds(Utility.RandomMinMax(20, 30));
 
-                    if (combatant is BaseCreature)
+                    if (combatant is BaseCreature bc)
                     {
-                        BaseCreature bc = (BaseCreature)combatant;
-
                         if (bc.Controlled && bc.ControlMaster != null && !bc.ControlMaster.Deleted && bc.ControlMaster.Alive)
                         {
                             if (bc.ControlMaster.Map == Map && bc.ControlMaster.InRange(this, 12) && !UnderEffect(bc.ControlMaster))
@@ -187,9 +184,7 @@ namespace Server.Mobiles
             }
             else
             {
-                Torch torch = m.FindItemOnLayer(Layer.TwoHanded) as Torch;
-
-                if (torch != null && torch.Burning)
+                if (m.FindItemOnLayer(Layer.TwoHanded) is Torch torch && torch.Burning)
                 {
                     StopEffect(m, true);
                 }
@@ -198,7 +193,7 @@ namespace Server.Mobiles
                     if ((count % 4) == 0)
                     {
                         m.LocalOverheadMessage(Network.MessageType.Emote, m.SpeechHue, true, "* The swarm of insects bites and stings your flesh! *");
-                        m.NonlocalOverheadMessage(Network.MessageType.Emote, m.SpeechHue, true, string.Format("* {0} is stung by a swarm of insects *", m.Name));
+                        m.NonlocalOverheadMessage(Network.MessageType.Emote, m.SpeechHue, true, $"* {m.Name} is stung by a swarm of insects *");
                     }
 
                     m.FixedParticles(0x91C, 10, 180, 9539, EffectLayer.Waist);
diff --git a/Scripts/Mobiles/Normal/MinionOfScelestus.cs b/Scripts/Mobiles/Normal/MinionOfScelestus.cs
index 31094e403..192f3bd64 100644
--- a/Scripts/Mobiles/Normal/MinionOfScelestus.cs
+++ b/Scripts/Mobiles/Normal/MinionOfScelestus.cs
@@ -67,7 +67,7 @@ namespace Server.Mobiles
         {
             if (0.20 > Utility.RandomDouble() && (defender.Mounted || defender.Flying))
             {
-                if (defender is PlayerMobile)
+                if (defender is PlayerMobile playerMobile)
                 {
                     if (Spells.Ninjitsu.AnimalForm.UnderTransformation(defender))
                     {
@@ -78,7 +78,7 @@ namespace Server.Mobiles
                         defender.SendLocalizedMessage(1040023); // You have been knocked off of your mount!
                     }
 
-                    ((PlayerMobile)defender).SetMountBlock(BlockMountType.Dazed, TimeSpan.FromSeconds(10), true);
+                    playerMobile.SetMountBlock(BlockMountType.Dazed, TimeSpan.FromSeconds(10), true);
                 }
                 else if (defender.Mount != null)
                     defender.Mount.Rider = null;
diff --git a/Scripts/Mobiles/Normal/OrcScout.cs b/Scripts/Mobiles/Normal/OrcScout.cs
index 140c338b5..8ca655835 100644
--- a/Scripts/Mobiles/Normal/OrcScout.cs
+++ b/Scripts/Mobiles/Normal/OrcScout.cs
@@ -152,10 +152,7 @@ namespace Server.Mobiles
                 {
                     Target targ = Target;
 
-                    if (targ != null)
-                    {
-                        targ.Invoke(this, this);
-                    }
+                    targ?.Invoke(this, this);
 
                     Effects.PlaySound(Location, Map, 0x340);
                 }
diff --git a/Scripts/Mobiles/Normal/Phoenix.cs b/Scripts/Mobiles/Normal/Phoenix.cs
index 6d54ca8c4..79b0fd00d 100644
--- a/Scripts/Mobiles/Normal/Phoenix.cs
+++ b/Scripts/Mobiles/Normal/Phoenix.cs
@@ -67,10 +67,7 @@ namespace Server.Mobiles
 
             AbilityProfile profile = PetTrainingHelper.GetAbilityProfile(this);
 
-            if (profile != null)
-            {
-                profile.RemoveAbility(AreaEffect.AuraDamage);
-            }
+            profile?.RemoveAbility(AreaEffect.AuraDamage);
         }
 
         public override void GenerateLoot()
diff --git a/Scripts/Mobiles/Normal/PlagueBeast.cs b/Scripts/Mobiles/Normal/PlagueBeast.cs
index 7b0f82db7..1a967daf3 100644
--- a/Scripts/Mobiles/Normal/PlagueBeast.cs
+++ b/Scripts/Mobiles/Normal/PlagueBeast.cs
@@ -185,10 +185,9 @@ namespace Server.Mobiles
             {
                 if (item is Corpse) // For each Corpse
                 {
-                    Corpse corpse = item as Corpse;
 
                     // Ensure that the corpse was killed by us
-                    if (corpse != null && corpse.Killer == this && corpse.Owner != null)
+                    if (item is Corpse corpse && corpse.Killer == this && corpse.Owner != null)
                     {
                         if (!corpse.DevourCorpse() && !corpse.Devoured)
                             PublicOverheadMessage(MessageType.Emote, 0x3B2, 1053032); // * The plague beast attempts to absorb the remains, but cannot! *
diff --git a/Scripts/Mobiles/Normal/Revenant.cs b/Scripts/Mobiles/Normal/Revenant.cs
index 952797828..a81cc0f51 100644
--- a/Scripts/Mobiles/Normal/Revenant.cs
+++ b/Scripts/Mobiles/Normal/Revenant.cs
@@ -139,10 +139,7 @@ namespace Server.Mobiles
             {
                 Target targ = Target;
 
-                if (targ != null)
-                {
-                    targ.Invoke(this, this);
-                }
+                targ?.Invoke(this, this);
             }
 
             Combatant = m_Target;
diff --git a/Scripts/Mobiles/Normal/Rotworm.cs b/Scripts/Mobiles/Normal/Rotworm.cs
index de4d47af6..9e034c5e6 100644
--- a/Scripts/Mobiles/Normal/Rotworm.cs
+++ b/Scripts/Mobiles/Normal/Rotworm.cs
@@ -83,9 +83,7 @@ namespace Server.Mobiles
 
         public override void OnMovement(Mobile m, Point3D oldLocation)
         {
-            CandlewoodTorch torch = m.FindItemOnLayer(Layer.TwoHanded) as CandlewoodTorch;
-
-            if (torch != null && torch.Burning)
+            if (m.FindItemOnLayer(Layer.TwoHanded) is CandlewoodTorch torch && torch.Burning)
             {
                 ForceFleeUntil = DateTime.UtcNow + TimeSpan.FromSeconds(5.0);
             }
diff --git a/Scripts/Mobiles/Normal/Savage.cs b/Scripts/Mobiles/Normal/Savage.cs
index 5c9f82b5e..115f8a1c5 100644
--- a/Scripts/Mobiles/Normal/Savage.cs
+++ b/Scripts/Mobiles/Normal/Savage.cs
@@ -100,8 +100,8 @@ namespace Server.Mobiles
                 aggressor.PlaySound(0x307);
                 aggressor.SendLocalizedMessage(1040008); // Your skin is scorched as the tribal paint burns away!
 
-                if (aggressor is PlayerMobile)
-                    ((PlayerMobile)aggressor).SavagePaintExpiration = TimeSpan.Zero;
+                if (aggressor is PlayerMobile playerMobile)
+                    playerMobile.SavagePaintExpiration = TimeSpan.Zero;
             }
         }
 
diff --git a/Scripts/Mobiles/Normal/SavageRider.cs b/Scripts/Mobiles/Normal/SavageRider.cs
index af4af0834..0be102143 100644
--- a/Scripts/Mobiles/Normal/SavageRider.cs
+++ b/Scripts/Mobiles/Normal/SavageRider.cs
@@ -67,8 +67,8 @@ namespace Server.Mobiles
             if (mount != null)
                 mount.Rider = null;
 
-            if (mount is Mobile)
-                ((Mobile)mount).Delete();
+            if (mount is Mobile mobile)
+                mobile.Delete();
 
             return base.OnBeforeDeath();
         }
@@ -94,8 +94,8 @@ namespace Server.Mobiles
                 aggressor.PlaySound(0x307);
                 aggressor.SendLocalizedMessage(1040008); // Your skin is scorched as the tribal paint burns away!
 
-                if (aggressor is PlayerMobile)
-                    ((PlayerMobile)aggressor).SavagePaintExpiration = TimeSpan.Zero;
+                if (aggressor is PlayerMobile playerMobile)
+                    playerMobile.SavagePaintExpiration = TimeSpan.Zero;
             }
         }
 
diff --git a/Scripts/Mobiles/Normal/SavageShaman.cs b/Scripts/Mobiles/Normal/SavageShaman.cs
index e87179ebc..11e4f9ec7 100644
--- a/Scripts/Mobiles/Normal/SavageShaman.cs
+++ b/Scripts/Mobiles/Normal/SavageShaman.cs
@@ -92,9 +92,9 @@ namespace Server.Mobiles
                 aggressor.PlaySound(0x307);
                 aggressor.SendLocalizedMessage(1040008); // Your skin is scorched as the tribal paint burns away!
 
-                if (aggressor is PlayerMobile)
+                if (aggressor is PlayerMobile playerMobile)
                 {
-                    ((PlayerMobile)aggressor).SavagePaintExpiration = TimeSpan.Zero;
+                    playerMobile.SavagePaintExpiration = TimeSpan.Zero;
                 }
             }
         }
diff --git a/Scripts/Mobiles/Normal/ShadowIronElemental.cs b/Scripts/Mobiles/Normal/ShadowIronElemental.cs
index 0cb1cc32b..6d129e4b7 100644
--- a/Scripts/Mobiles/Normal/ShadowIronElemental.cs
+++ b/Scripts/Mobiles/Normal/ShadowIronElemental.cs
@@ -57,10 +57,8 @@ namespace Server.Mobiles
 
         public override void AlterMeleeDamageFrom(Mobile from, ref int damage)
         {
-            if (from is BaseCreature)
+            if (from is BaseCreature bc)
             {
-                BaseCreature bc = (BaseCreature)from;
-
                 if (bc.Controlled || bc.BardTarget == this)
                     damage = 0; // Immune to pets and provoked creatures
             }
diff --git a/Scripts/Mobiles/Normal/Sheep.cs b/Scripts/Mobiles/Normal/Sheep.cs
index 833dd0c68..2c43b8cb3 100644
--- a/Scripts/Mobiles/Normal/Sheep.cs
+++ b/Scripts/Mobiles/Normal/Sheep.cs
@@ -76,9 +76,8 @@ namespace Server.Mobiles
             from.SendLocalizedMessage(500452); // You place the gathered wool into your backpack.
             from.AddToBackpack(new Wool(Map == Map.Felucca ? 2 : 1));
 
-            if (from is PlayerMobile)
+            if (from is PlayerMobile player)
             {
-                PlayerMobile player = (PlayerMobile)from;
                 foreach (BaseQuest quest in player.Quests)
                 {
                     if (quest is ShearingKnowledgeQuest)
diff --git a/Scripts/Mobiles/Normal/SolenHelper.cs b/Scripts/Mobiles/Normal/SolenHelper.cs
index fc089df50..9663937cb 100644
--- a/Scripts/Mobiles/Normal/SolenHelper.cs
+++ b/Scripts/Mobiles/Normal/SolenHelper.cs
@@ -25,53 +25,41 @@ namespace Server.Mobiles
 
         public static bool CheckRedFriendship(Mobile m)
         {
-            if (m is BaseCreature)
+            if (m is BaseCreature bc)
             {
-                BaseCreature bc = (BaseCreature)m;
-
                 if (bc.Controlled && bc.ControlMaster is PlayerMobile)
                     return CheckRedFriendship(bc.ControlMaster);
                 else if (bc.Summoned && bc.SummonMaster is PlayerMobile)
                     return CheckRedFriendship(bc.SummonMaster);
             }
 
-            PlayerMobile player = m as PlayerMobile;
-
-            return player != null && player.SolenFriendship == SolenFriendship.Red;
+            return m is PlayerMobile player && player.SolenFriendship == SolenFriendship.Red;
         }
 
         public static bool CheckBlackFriendship(Mobile m)
         {
-            if (m is BaseCreature)
+            if (m is BaseCreature bc)
             {
-                BaseCreature bc = (BaseCreature)m;
-
                 if (bc.Controlled && bc.ControlMaster is PlayerMobile)
                     return CheckBlackFriendship(bc.ControlMaster);
                 else if (bc.Summoned && bc.SummonMaster is PlayerMobile)
                     return CheckBlackFriendship(bc.SummonMaster);
             }
 
-            PlayerMobile player = m as PlayerMobile;
-
-            return player != null && player.SolenFriendship == SolenFriendship.Black;
+            return m is PlayerMobile player && player.SolenFriendship == SolenFriendship.Black;
         }
 
         public static void OnRedDamage(Mobile from)
         {
-            if (from is BaseCreature)
+            if (from is BaseCreature bc)
             {
-                BaseCreature bc = (BaseCreature)from;
-
                 if (bc.Controlled && bc.ControlMaster is PlayerMobile)
                     OnRedDamage(bc.ControlMaster);
                 else if (bc.Summoned && bc.SummonMaster is PlayerMobile)
                     OnRedDamage(bc.SummonMaster);
             }
 
-            PlayerMobile player = from as PlayerMobile;
-
-            if (player != null && player.SolenFriendship == SolenFriendship.Red)
+            if (from is PlayerMobile player && player.SolenFriendship == SolenFriendship.Red)
             {
                 player.LocalOverheadMessage(MessageType.Regular, 0x3B2, 1054103); // The solen revoke their friendship. You will now be considered an intruder.
 
@@ -81,19 +69,15 @@ namespace Server.Mobiles
 
         public static void OnBlackDamage(Mobile from)
         {
-            if (from is BaseCreature)
+            if (from is BaseCreature bc)
             {
-                BaseCreature bc = (BaseCreature)from;
-
                 if (bc.Controlled && bc.ControlMaster is PlayerMobile)
                     OnBlackDamage(bc.ControlMaster);
                 else if (bc.Summoned && bc.SummonMaster is PlayerMobile)
                     OnBlackDamage(bc.SummonMaster);
             }
 
-            PlayerMobile player = from as PlayerMobile;
-
-            if (player != null && player.SolenFriendship == SolenFriendship.Black)
+            if (from is PlayerMobile player && player.SolenFriendship == SolenFriendship.Black)
             {
                 player.LocalOverheadMessage(MessageType.Regular, 0x3B2, 1054103); // The solen revoke their friendship. You will now be considered an intruder.
 
diff --git a/Scripts/Mobiles/Normal/ValoriteElemental.cs b/Scripts/Mobiles/Normal/ValoriteElemental.cs
index c3cbcb620..a8fffcf97 100644
--- a/Scripts/Mobiles/Normal/ValoriteElemental.cs
+++ b/Scripts/Mobiles/Normal/ValoriteElemental.cs
@@ -61,10 +61,8 @@ namespace Server.Mobiles
 
         public override void AlterMeleeDamageFrom(Mobile from, ref int damage)
         {
-            if (from is BaseCreature)
+            if (from is BaseCreature bc)
             {
-                BaseCreature bc = (BaseCreature)from;
-
                 if (bc.Controlled || bc.BardTarget == this)
                     damage = 0; // Immune to pets and provoked creatures
             }
diff --git a/Scripts/Mobiles/Normal/VoidManesfistation.cs b/Scripts/Mobiles/Normal/VoidManesfistation.cs
index 6e4ad4a42..9997e6af8 100644
--- a/Scripts/Mobiles/Normal/VoidManesfistation.cs
+++ b/Scripts/Mobiles/Normal/VoidManesfistation.cs
@@ -69,10 +69,10 @@ namespace Server.Mobiles
 
         public override WeaponAbility GetWeaponAbility()
         {
-            if (Weapon is BaseWeapon)
+            if (Weapon is BaseWeapon baseWeapon)
             {
                 if (Utility.RandomBool())
-                    return ((BaseWeapon)Weapon).PrimaryAbility;
+                    return baseWeapon.PrimaryAbility;
                 return ((BaseWeapon)Weapon).SecondaryAbility;
             }
 
diff --git a/Scripts/Mobiles/Normal/WildTiger.cs b/Scripts/Mobiles/Normal/WildTiger.cs
index f615707e5..124c01b30 100644
--- a/Scripts/Mobiles/Normal/WildTiger.cs
+++ b/Scripts/Mobiles/Normal/WildTiger.cs
@@ -66,10 +66,7 @@ namespace Server.Mobiles
             {
                 Container pack = Backpack;
 
-                if (pack != null)
-                {
-                    pack.DisplayTo(from);
-                }
+                pack?.DisplayTo(from);
             }
         }
 
diff --git a/Scripts/Mobiles/Normal/Yamandon.cs b/Scripts/Mobiles/Normal/Yamandon.cs
index 18d32c999..80c4b72a5 100644
--- a/Scripts/Mobiles/Normal/Yamandon.cs
+++ b/Scripts/Mobiles/Normal/Yamandon.cs
@@ -132,9 +132,9 @@ namespace Server.Mobiles
                 */
                 Mobile target = null;
 
-                if (attacker is BaseCreature)
+                if (attacker is BaseCreature baseCreature)
                 {
-                    Mobile m = ((BaseCreature)attacker).GetMaster();
+                    Mobile m = baseCreature.GetMaster();
 
                     if (m != null)
                         target = m;
diff --git a/Scripts/Mobiles/PlayerMobile.cs b/Scripts/Mobiles/PlayerMobile.cs
index 56a64f0f5..9cebe14d0 100644
--- a/Scripts/Mobiles/PlayerMobile.cs
+++ b/Scripts/Mobiles/PlayerMobile.cs
@@ -588,16 +588,16 @@ namespace Server.Mobiles
 
                             if (name != null && ammo.Amount > 1)
                             {
-                                name = string.Format("{0}s", name);
+                                name = $"{name}s";
                             }
 
                             if (name == null)
                             {
-                                name = string.Format("#{0}", ammo.LabelNumber);
+                                name = $"#{ammo.LabelNumber}";
                             }
 
                             PlaceInBackpack(ammo);
-                            SendLocalizedMessage(1073504, string.Format("{0}\t{1}", ammo.Amount, name)); // You recover ~1_NUM~ ~2_AMMO~.
+                            SendLocalizedMessage(1073504, $"{ammo.Amount}\t{name}"); // You recover ~1_NUM~ ~2_AMMO~.
                         }
                     }
                 }
@@ -645,7 +645,7 @@ namespace Server.Mobiles
                 string name;
 
                 if (Fame >= 10000)
-                    name = string.Format("{0} {1}", Female ? "Lady" : "Lord", RawName);
+                    name = $"{(Female ? "Lady" : "Lord")} {RawName}";
                 else
                     name = RawName;
 
@@ -883,7 +883,7 @@ namespace Server.Mobiles
         {
             PlayerMobile pm = e.Mobile as PlayerMobile;
 
-            if (pm != null && pm.Backpack != null && pm.Alive && e.List != null && e.List.Count > 0)
+            if (pm?.Backpack != null && pm.Alive && e.List != null && e.List.Count > 0)
             {
                 if (pm.IsStaff() || Core.TickCount - pm.NextActionTime >= 0)
                 {
@@ -930,7 +930,7 @@ namespace Server.Mobiles
         {
             PlayerMobile pm = e.Mobile as PlayerMobile;
 
-            if (pm != null && pm.Backpack != null && pm.Alive && e.List != null && e.List.Count > 0)
+            if (pm?.Backpack != null && pm.Alive && e.List != null && e.List.Count > 0)
             {
                 if (pm.IsStaff() || Core.TickCount - pm.NextActionTime >= 0)
                 {
@@ -1368,7 +1368,7 @@ namespace Server.Mobiles
 
                             if (name == null)
                             {
-                                name = string.Format("#{0}", weapon.LabelNumber);
+                                name = $"#{weapon.LabelNumber}";
                             }
 
                             from.SendLocalizedMessage(1062001, name); // You can no longer wield your ~1_WEAPON~
@@ -1415,7 +1415,7 @@ namespace Server.Mobiles
 
                             if (name == null)
                             {
-                                name = string.Format("#{0}", armor.LabelNumber);
+                                name = $"#{armor.LabelNumber}";
                             }
 
                             if (armor is BaseShield)
@@ -1461,7 +1461,7 @@ namespace Server.Mobiles
 
                             if (name == null)
                             {
-                                name = string.Format("#{0}", clothing.LabelNumber);
+                                name = $"#{clothing.LabelNumber}";
                             }
 
                             from.SendLocalizedMessage(1062002, name); // You can no longer wear your ~1_ARMOR~
@@ -1525,10 +1525,7 @@ namespace Server.Mobiles
         {
             NetState ns = ((Mobile)state).NetState;
 
-            if (ns != null)
-            {
-                ns.Dispose();
-            }
+            ns?.Dispose();
         }
 
         private static void OnLogout(LogoutEventArgs e)
@@ -1678,7 +1675,7 @@ namespace Server.Mobiles
 
                 if (curWeight > MaxWeight)
                 {
-                    SendLocalizedMessage(1019035, true, string.Format(" : {0} / {1}", curWeight, MaxWeight));
+                    SendLocalizedMessage(1019035, true, $" : {curWeight} / {MaxWeight}");
                 }
             }
         }
@@ -1721,17 +1718,11 @@ namespace Server.Mobiles
                 // Now, if I am in the creatures master aggressor list, it needs to be refreshed
                 info = aggressiveMaster.Aggressors.FirstOrDefault(i => i.Attacker == this);
 
-                if (info != null)
-                {
-                    info.Refresh();
-                }
+                info?.Refresh();
 
                 info = Aggressed.FirstOrDefault(i => i.Defender == aggressiveMaster);
 
-                if (info != null)
-                {
-                    info.Refresh();
-                }
+                info?.Refresh();
 
                 // next lets find out if we're on the creatures master aggressed list
                 info = aggressiveMaster.Aggressed.FirstOrDefault(i => i.Defender == this);
@@ -2043,7 +2034,7 @@ namespace Server.Mobiles
             {
                 if (Hits <= HitsMax / 2)
                 {
-                    BuffInfo.AddBuff(this, new BuffInfo(BuffIcon.Berserk, 1080449, 1115021, string.Format("{0}\t{1}", GetRacialBerserkBuff(false), GetRacialBerserkBuff(true)), false));
+                    BuffInfo.AddBuff(this, new BuffInfo(BuffIcon.Berserk, 1080449, 1115021, $"{GetRacialBerserkBuff(false)}\t{GetRacialBerserkBuff(true)}", false));
                     Delta(MobileDelta.WeaponDamage);
                 }
                 else if (oldValue < Hits && Hits > HitsMax / 2)
@@ -2272,10 +2263,7 @@ namespace Server.Mobiles
                     QuestHelper.GetContextMenuEntries(list);
                 }
 
-                if (m_Quest != null)
-                {
-                    m_Quest.GetContextMenuEntries(list);
-                }
+                m_Quest?.GetContextMenuEntries(list);
 
                 if (house != null)
                 {
@@ -2363,7 +2351,7 @@ namespace Server.Mobiles
             {
                 Mobile prot = m_JusticeProtectors[i];
 
-                string args = string.Format("{0}\t{1}", Name, prot.Name);
+                string args = $"{Name}\t{prot.Name}";
 
                 prot.SendLocalizedMessage(1049371, args);
                 // The protective relationship between ~1_PLAYER1~ and ~2_PLAYER2~ has been ended.
@@ -3193,7 +3181,7 @@ namespace Server.Mobiles
             {
                 BounceInfo bounce = item.GetBounce();
 
-                if (bounce != null && bounce.m_Parent is Item pItem && pItem == pack)
+                if (bounce?.m_Parent is Item pItem && pItem == pack)
                 {
                     if (pItem.IsChildOf(pack))
                     {
@@ -3305,10 +3293,7 @@ namespace Server.Mobiles
 
         public override void OnBeneficialAction(Mobile target, bool isCriminal)
         {
-            if (m_SentHonorContext != null)
-            {
-                m_SentHonorContext.OnSourceBeneficialAction(target);
-            }
+            m_SentHonorContext?.OnSourceBeneficialAction(target);
 
             if (Siege.SiegeShard && isCriminal)
             {
@@ -3346,10 +3331,7 @@ namespace Server.Mobiles
             {
                 BandageContext c = BandageContext.GetContext(this);
 
-                if (c != null)
-                {
-                    c.Slip();
-                }
+                c?.Slip();
             }
 
             if (Confidence.IsRegenerating(this))
@@ -3357,14 +3339,8 @@ namespace Server.Mobiles
                 Confidence.StopRegenerating(this);
             }
 
-            if (m_ReceivedHonorContext != null)
-            {
-                m_ReceivedHonorContext.OnTargetDamaged(from, amount);
-            }
-            if (m_SentHonorContext != null)
-            {
-                m_SentHonorContext.OnSourceDamaged(from, amount);
-            }
+            m_ReceivedHonorContext?.OnTargetDamaged(from, amount);
+            m_SentHonorContext?.OnSourceDamaged(from, amount);
 
             if (willKill && from is PlayerMobile pm)
             {
@@ -3496,10 +3472,7 @@ namespace Server.Mobiles
         {
             NetState state = NetState;
 
-            if (state != null)
-            {
-                state.CancelAllTrades();
-            }
+            state?.CancelAllTrades();
 
             if (Criminal)
                 BuffInfo.RemoveBuff(this, BuffIcon.CriminalStatus);
@@ -3542,15 +3515,9 @@ namespace Server.Mobiles
                 pm.m_InsuranceBonus = 0;
             }
 
-            if (m_ReceivedHonorContext != null)
-            {
-                m_ReceivedHonorContext.OnTargetKilled();
-            }
+            m_ReceivedHonorContext?.OnTargetKilled();
 
-            if (m_SentHonorContext != null)
-            {
-                m_SentHonorContext.OnSourceKilled();
-            }
+            m_SentHonorContext?.OnSourceKilled();
 
             RecoverAmmo();
 
@@ -5036,8 +5003,7 @@ namespace Server.Mobiles
             {
                 VvVPlayerEntry entry = PointsSystem.ViceVsVirtue.GetPlayerEntry<VvVPlayerEntry>(this);
 
-                list.Add(string.Format("Kills: {0} / Deaths: {1} / Assists: {2}", // no cliloc for this!
-                    entry == null ? "0" : entry.Kills.ToString(), entry == null ? "0" : entry.Deaths.ToString(), entry == null ? "0" : entry.Assists.ToString()));
+                list.Add($"Kills: {(entry == null ? "0" : entry.Kills.ToString())} / Deaths: {(entry == null ? "0" : entry.Deaths.ToString())} / Assists: {(entry == null ? "0" : entry.Assists.ToString())}");
 
                 list.Add(1060415, AosAttributes.GetValue(this, AosAttribute.AttackChance).ToString()); // hit chance increase ~1_val~%
                 list.Add(1060408, AosAttributes.GetValue(this, AosAttribute.DefendChance).ToString()); // defense chance increase ~1_val~%
@@ -5357,11 +5323,11 @@ namespace Server.Mobiles
                     }
                     else if (suffix.Length > 0)
                     {
-                        suffix = string.Format("{0} {1}", suffix, m_OverheadTitle);
+                        suffix = $"{suffix} {m_OverheadTitle}";
                     }
                     else
                     {
-                        suffix = string.Format("{0}", m_OverheadTitle);
+                        suffix = $"{m_OverheadTitle}";
                     }
                 }
             }
@@ -5369,15 +5335,15 @@ namespace Server.Mobiles
             {
                 if (vvv)
                 {
-                    suffix = string.Format("[{0}] [VvV]", Utility.FixHtml(guild.Abbreviation));
+                    suffix = $"[{Utility.FixHtml(guild.Abbreviation)}] [VvV]";
                 }
                 else if (suffix.Length > 0)
                 {
-                    suffix = string.Format("{0} [{1}]", suffix, Utility.FixHtml(guild.Abbreviation));
+                    suffix = $"{suffix} [{Utility.FixHtml(guild.Abbreviation)}]";
                 }
                 else
                 {
-                    suffix = string.Format("[{0}]", Utility.FixHtml(guild.Abbreviation));
+                    suffix = $"[{Utility.FixHtml(guild.Abbreviation)}]";
                 }
             }
             else if (vvv)
@@ -5425,10 +5391,7 @@ namespace Server.Mobiles
             {
                 Account acc = Account as Account;
 
-                if (acc != null)
-                {
-                    acc.RemoveYoungStatus(0);
-                }
+                acc?.RemoveYoungStatus(0);
             }
         }
 
@@ -5473,14 +5436,8 @@ namespace Server.Mobiles
         {
             Instances.Remove(this);
 
-            if (m_ReceivedHonorContext != null)
-            {
-                m_ReceivedHonorContext.Cancel();
-            }
-            if (m_SentHonorContext != null)
-            {
-                m_SentHonorContext.Cancel();
-            }
+            m_ReceivedHonorContext?.Cancel();
+            m_SentHonorContext?.Cancel();
         }
 
         #region Fastwalk Prevention
@@ -6323,10 +6280,7 @@ namespace Server.Mobiles
 
             NetState state = NetState;
 
-            if (state != null)
-            {
-                state.Send(new AddBuffPacket(this, b));
-            }
+            state?.Send(new AddBuffPacket(this, b));
         }
 
         public void RemoveBuff(BuffInfo b)
@@ -6357,10 +6311,7 @@ namespace Server.Mobiles
 
             NetState state = NetState;
 
-            if (state != null)
-            {
-                state.Send(new RemoveBuffPacket(this, b));
-            }
+            state?.Send(new RemoveBuffPacket(this, b));
 
             if (m_BuffTable.Count <= 0)
             {
diff --git a/Scripts/Mobiles/Summons/BaseFamiliar.cs b/Scripts/Mobiles/Summons/BaseFamiliar.cs
index 1086c4ec3..02abef995 100644
--- a/Scripts/Mobiles/Summons/BaseFamiliar.cs
+++ b/Scripts/Mobiles/Summons/BaseFamiliar.cs
@@ -234,14 +234,14 @@ namespace Server.Mobiles
         {
             BaseCreature check = (BaseCreature)SummonFamiliarSpell.Table[attacker];
 
-            if (check != null && check is BaseFamiliar && check.Weapon != null && check.InRange(defender.Location, check.Weapon.MaxRange))
+            if (check is BaseFamiliar && check.Weapon != null && check.InRange(defender.Location, check.Weapon.MaxRange))
             {
                 check.Weapon.OnSwing(check, defender);
             }
 
-            if (attacker is PlayerMobile)
+            if (attacker is PlayerMobile playerMobile)
             {
-                foreach (Mobile ts in ((PlayerMobile)attacker).AllFollowers.Where(m => m is BaseTalismanSummon && m.InRange(defender.Location, m.Weapon.MaxRange)))
+                foreach (Mobile ts in playerMobile.AllFollowers.Where(m => m is BaseTalismanSummon && m.InRange(defender.Location, m.Weapon.MaxRange)))
                 {
                     ts.Weapon.OnSwing(ts, defender);
                 }
diff --git a/Scripts/Mobiles/Void Creatures/BaseVoidCreature.cs b/Scripts/Mobiles/Void Creatures/BaseVoidCreature.cs
index 767ee5225..5fafa4aa5 100644
--- a/Scripts/Mobiles/Void Creatures/BaseVoidCreature.cs	
+++ b/Scripts/Mobiles/Void Creatures/BaseVoidCreature.cs	
@@ -140,8 +140,8 @@ namespace Server.Mobiles
                 if (0.05 > Utility.RandomDouble())
                     SpawnOrtanords();
 
-                if (bc is BaseVoidCreature)
-                    ((BaseVoidCreature)bc).BuddyMutate = m_BuddyMutate;
+                if (bc is BaseVoidCreature baseVoidCreature)
+                    baseVoidCreature.BuddyMutate = m_BuddyMutate;
 
                 Delete();
             }
@@ -195,10 +195,8 @@ namespace Server.Mobiles
             {
                 ISpawner s = Spawner;
 
-                if (s is XmlSpawner)
+                if (s is XmlSpawner xml)
                 {
-                    XmlSpawner xml = (XmlSpawner)s;
-
                     if (xml.SpawnObjects == null)
                         return;
 
diff --git a/Scripts/Multis/Boats/BaseBoat.cs b/Scripts/Multis/Boats/BaseBoat.cs
index 94ec0a882..1593d2c88 100644
--- a/Scripts/Multis/Boats/BaseBoat.cs
+++ b/Scripts/Multis/Boats/BaseBoat.cs
@@ -341,7 +341,7 @@ namespace Server.Multis
         [CommandProperty(AccessLevel.GameMaster)]
         public BoatOrder Order { get; set; }
 
-        public int PlayerCount => MobilesOnBoard.Where(m => m is PlayerMobile).Count();
+        public int PlayerCount => MobilesOnBoard.Count(m => m is PlayerMobile);
 
         [CommandProperty(AccessLevel.GameMaster)]
         public Mobile Pilot { get; set; }
@@ -376,11 +376,11 @@ namespace Server.Multis
             {
                 m_DecayTime = value;
 
-                if (TillerMan != null && TillerMan is Mobile)
+                if (TillerMan is Mobile)
                 {
                     ((Mobile)TillerMan).InvalidateProperties();
                 }
-                else if (TillerMan != null && TillerMan is Item)
+                else if (TillerMan is Item)
                 {
                     ((Item)TillerMan).InvalidateProperties();
                 }
@@ -1047,10 +1047,7 @@ namespace Server.Multis
             if (Owner == null)
                 return false;
 
-            Accounting.Account acct1 = from.Account as Accounting.Account;
-            Accounting.Account acct2 = Owner.Account as Accounting.Account;
-
-            return acct1 != null && acct2 != null && acct1 == acct2;
+            return from.Account is Accounting.Account acct1 && Owner.Account is Accounting.Account acct2 && acct1 == acct2;
         }
 
         public virtual bool IsComponentItem(IEntity item)
@@ -1152,10 +1149,7 @@ namespace Server.Multis
                 }
             }
 
-            if (theirState != null)
-            {
-                theirState.Send(new DamagePacket(this, amount));
-            }
+            theirState?.Send(new DamagePacket(this, amount));
         }
 
         public virtual void SetFacingComponents(Direction newDirection, Direction oldDirection, bool ignoreLastFacing)
@@ -1796,7 +1790,7 @@ namespace Server.Multis
 
             if (wood < minWood || cloth < minCloth)
             {
-                from.SendLocalizedMessage(1116593, string.Format("{0}\t{1}", ((int)minCloth).ToString(), ((int)minWood).ToString())); //You need a minimum of ~1_CLOTH~ yards of cloth and ~2_WOOD~ pieces of lumber to effect repairs to this ship.
+                from.SendLocalizedMessage(1116593, $"{((int)minCloth).ToString()}\t{((int)minWood).ToString()}"); //You need a minimum of ~1_CLOTH~ yards of cloth and ~2_WOOD~ pieces of lumber to effect repairs to this ship.
                 return;
             }
 
@@ -1913,7 +1907,7 @@ namespace Server.Multis
                 m_EmergencyRepairTimer = null;
             }
 
-            string args = string.Format("{0}\t{1}\t{2}", ((int)clothTemp).ToString(), ((int)woodTemp).ToString(), ((int)Durability).ToString());
+            string args = $"{((int)clothTemp).ToString()}\t{((int)woodTemp).ToString()}\t{((int)Durability).ToString()}";
             from.SendLocalizedMessage(1116598, args); //You effect permanent repairs using ~1_CLOTH~ yards of cloth and ~2_WOOD~ pieces of lumber. The ship is now ~3_DMGPCT~% repaired.
         }
 
@@ -2772,10 +2766,7 @@ namespace Server.Multis
                 m_MoveTimer = null;
             }
 
-            if (m_TurnTimer != null)
-            {
-                m_TurnTimer.Stop();
-            }
+            m_TurnTimer?.Stop();
 
             m_TurnTimer = new TurnTimer(this, offset, resume, resumeDir, fast);
             m_TurnTimer.Start();
diff --git a/Scripts/Multis/Boats/BaseBoatDeed.cs b/Scripts/Multis/Boats/BaseBoatDeed.cs
index d515c652f..305aba55f 100644
--- a/Scripts/Multis/Boats/BaseBoatDeed.cs
+++ b/Scripts/Multis/Boats/BaseBoatDeed.cs
@@ -135,9 +135,9 @@ namespace Server.Multis
                     boat.Owner = from;
                     boat.ItemID = itemID;
 
-                    if (boat is BaseGalleon)
+                    if (boat is BaseGalleon baseGalleon)
                     {
-                        ((BaseGalleon)boat).SecurityEntry = new SecurityEntry((BaseGalleon)boat);
+                        baseGalleon.SecurityEntry = new SecurityEntry((BaseGalleon)boat);
                         ((BaseGalleon)boat).BaseBoatHue = RandomBasePaintHue();
                     }
 
diff --git a/Scripts/Multis/Boats/Cannons and Ammo/Cannon.cs b/Scripts/Multis/Boats/Cannons and Ammo/Cannon.cs
index 8b625b66c..d11f3b8ef 100644
--- a/Scripts/Multis/Boats/Cannons and Ammo/Cannon.cs	
+++ b/Scripts/Multis/Boats/Cannons and Ammo/Cannon.cs	
@@ -117,7 +117,7 @@ namespace Server.Items
         {
             Gump g = m.FindGump(typeof(CannonGump));
 
-            if (g != null && g is CannonGump && ((CannonGump)g).Cannon == this && !m.InRange(Location, 3))
+            if (g is CannonGump && ((CannonGump)g).Cannon == this && !m.InRange(Location, 3))
                 m.CloseGump(typeof(CannonGump));
         }
 
@@ -222,12 +222,12 @@ namespace Server.Items
 
             Item i = from.FindItemOnLayer(Layer.TwoHanded);
 
-            if (i != null && i is Matches && ((Matches)i).IsLight)
+            if (i is Matches && ((Matches)i).IsLight)
             {
                 LightFuse(from);
                 return;
             }
-            else if (i != null && i is Torch && ((Torch)i).Burning)
+            else if (i is Torch && ((Torch)i).Burning)
             {
                 LightFuse(from);
                 return;
@@ -284,8 +284,8 @@ namespace Server.Items
 
             Mobile shooter = null;
 
-            if (cannoneer is Mobile)
-                shooter = (Mobile)cannoneer;
+            if (cannoneer is Mobile mobile)
+                shooter = mobile;
 
             if (shooter != null && shooter.Player)
                 m_Hits -= Utility.RandomMinMax(0, 4);
@@ -532,12 +532,11 @@ namespace Server.Items
         public virtual void OnShipHit(object obj)
         {
             object[] list = (object[])obj;
-            BaseBoat target = list[0] as BaseBoat;
             Point3D pnt = (Point3D)list[1];
             AmmoInfo ammoInfo = list[2] as AmmoInfo;
             Mobile shooter = list[3] as Mobile;
 
-            if (target != null && m_Galleon != null)
+            if (list[0] is BaseBoat target && m_Galleon != null)
             {
                 int damage = (int)(GetDamage(ammoInfo) * m_Galleon.CannonDamageMod);
                 damage /= 7;
@@ -764,7 +763,7 @@ namespace Server.Items
             percRepaired += Durability;
             if (percRepaired > 100) percRepaired = 100;
 
-            from.SendLocalizedMessage(1116605, string.Format("{0}\t{1}", ((int)temp).ToString(), ((int)percRepaired).ToString())); //You make repairs to the cannon using ~1_METAL~ ingots. The cannon is now ~2_DMGPCT~% repaired.
+            from.SendLocalizedMessage(1116605, $"{((int)temp).ToString()}\t{((int)percRepaired).ToString()}"); //You make repairs to the cannon using ~1_METAL~ ingots. The cannon is now ~2_DMGPCT~% repaired.
         }
 
         public bool VerifyAmmo(Type type)
@@ -896,7 +895,6 @@ namespace Server.Items
         {
             object[] obj = (object[])state;
             Mobile from = obj[0] as Mobile;
-            Type type = obj[1] as Type;
 
             if (from.InRange(Location, 3))
             {
@@ -904,7 +902,7 @@ namespace Server.Items
                 AddAction(from, 1149646); //Charging finished.
                 DoAreaMessage(1116061, 10, from); //~1_NAME~ finishes charging the cannon.
 
-                if (type != null && from.Backpack != null)
+                if (obj[1] is Type type && from.Backpack != null)
                     from.Backpack.ConsumeTotal(type, 1);
             }
             else
@@ -923,7 +921,6 @@ namespace Server.Items
         {
             object[] obj = (object[])state;
             Mobile from = obj[0] as Mobile;
-            Type type = obj[1] as Type;
 
             if (from.InRange(Location, 3))
             {
@@ -931,7 +928,7 @@ namespace Server.Items
                 AddAction(from, 1149652); //Ready to Fire
                 DoAreaMessage(1116064, 10, from); //~1_NAME~ finishes priming the cannon. It is ready to be fired!
 
-                if (type != null && from.Backpack != null)
+                if (obj[1] is Type type && from.Backpack != null)
                     from.Backpack.ConsumeTotal(type, 1);
             }
             else
@@ -1124,10 +1121,10 @@ namespace Server.Items
         {
             base.GetProperties(list);
 
-            list.Add(1116025, string.Format("#{0}", m_Cleaned ? 1116031 : 1116032)); //Cleaned: ~1_VALUE~
-            list.Add(1116026, string.Format("#{0}", m_Charged ? 1116031 : 1116032)); //Charged: ~1_VALUE~
+            list.Add(1116025, $"#{(m_Cleaned ? 1116031 : 1116032)}"); //Cleaned: ~1_VALUE~
+            list.Add(1116026, $"#{(m_Charged ? 1116031 : 1116032)}"); //Charged: ~1_VALUE~
             list.Add(1116027, AmmoInfo.GetAmmoName(this).ToString()); //Ammo: ~1_VALUE~
-            list.Add(1116028, string.Format("#{0}", m_Primed ? 1116031 : 1116032)); //Primed: ~1_VALUE~
+            list.Add(1116028, $"#{(m_Primed ? 1116031 : 1116032)}"); //Primed: ~1_VALUE~
             list.Add(1116580 + (int)m_DamageState);
         }
 
diff --git a/Scripts/Multis/Boats/Cannons and Ammo/CannonDeed.cs b/Scripts/Multis/Boats/Cannons and Ammo/CannonDeed.cs
index bce090d8d..7e7257e2b 100644
--- a/Scripts/Multis/Boats/Cannons and Ammo/CannonDeed.cs	
+++ b/Scripts/Multis/Boats/Cannons and Ammo/CannonDeed.cs	
@@ -57,9 +57,9 @@ namespace Server.Items
             {
                 Map map = from.Map;
 
-                if (targeted is IPoint3D)
+                if (targeted is IPoint3D iPoint3D)
                 {
-                    Point3D pnt = new Point3D((IPoint3D)targeted);
+                    Point3D pnt = new Point3D(iPoint3D);
 
                     BaseGalleon galleon = BaseGalleon.FindGalleonAt(new Point2D(pnt.X, pnt.Y), map);
 
diff --git a/Scripts/Multis/Boats/Cannons and Ammo/Matches.cs b/Scripts/Multis/Boats/Cannons and Ammo/Matches.cs
index 4907d06b9..e3958b94c 100644
--- a/Scripts/Multis/Boats/Cannons and Ammo/Matches.cs	
+++ b/Scripts/Multis/Boats/Cannons and Ammo/Matches.cs	
@@ -72,8 +72,8 @@ namespace Server.Items
 
         public void BurnOut()
         {
-            if (RootParent is PlayerMobile)
-                ((PlayerMobile)RootParent).SendLocalizedMessage(1116115); //Your match splutters and dies.
+            if (RootParent is PlayerMobile playerMobile)
+                playerMobile.SendLocalizedMessage(1116115); //Your match splutters and dies.
 
             Delete();
         }
@@ -106,10 +106,8 @@ namespace Server.Items
 
             protected override void OnTarget(Mobile from, object obj)
             {
-                if (obj is IShipCannon)
+                if (obj is IShipCannon cannon)
                 {
-                    IShipCannon cannon = (IShipCannon)obj;
-
                     if (cannon.CanLight)
                     {
                         cannon.LightFuse(from);
diff --git a/Scripts/Multis/Boats/Cannons and Ammo/ShipCannon.cs b/Scripts/Multis/Boats/Cannons and Ammo/ShipCannon.cs
index ce4afd1ef..7ba5cbf39 100644
--- a/Scripts/Multis/Boats/Cannons and Ammo/ShipCannon.cs	
+++ b/Scripts/Multis/Boats/Cannons and Ammo/ShipCannon.cs	
@@ -223,13 +223,13 @@ namespace Server.Items
                     }
                 }
 
-                if (ammo != null && ammo is Item)
+                if (ammo is Item item)
                 {
                     if (Galleon.Contains(m))
                     {
                         Loaded = CannonAction.Finish;
                         AmmoType = ammo.AmmoType;
-                        ((Item)ammo).Consume();
+                        item.Consume();
                         InvalidateProperties();
                         AddAction(m, 1149649); // Loading finished.
 
@@ -490,12 +490,12 @@ namespace Server.Items
 
             Item i = from.FindItemOnLayer(Layer.TwoHanded);
 
-            if (i != null && i is Matches && ((Matches)i).IsLight)
+            if (i is Matches && ((Matches)i).IsLight)
             {
                 LightFuse(from);
                 return;
             }
-            else if (i != null && i is Torch && ((Torch)i).Burning)
+            else if (i is Torch && ((Torch)i).Burning)
             {
                 LightFuse(from);
                 return;
@@ -520,8 +520,8 @@ namespace Server.Items
 
             Mobile shooter = null;
 
-            if (cannoneer is Mobile)
-                shooter = (Mobile)cannoneer;
+            if (cannoneer is Mobile mobile)
+                shooter = mobile;
 
             if (shooter != null && shooter.Player)
                 m_Hits -= Utility.RandomMinMax(0, 4);
@@ -1032,7 +1032,7 @@ namespace Server.Items
             percRepaired += Durability;
             if (percRepaired > 100) percRepaired = 100;
 
-            from.SendLocalizedMessage(1116605, string.Format("{0}\t{1}", ((int)temp).ToString(), ((int)percRepaired).ToString())); //You make repairs to the cannon using ~1_METAL~ ingots. The cannon is now ~2_DMGPCT~% repaired.
+            from.SendLocalizedMessage(1116605, $"{((int)temp).ToString()}\t{((int)percRepaired).ToString()}"); //You make repairs to the cannon using ~1_METAL~ ingots. The cannon is now ~2_DMGPCT~% repaired.
         }
 
         public void ResendGump(Mobile from)
@@ -1113,7 +1113,7 @@ namespace Server.Items
             base.GetProperties(list);
 
             list.Add(1116026, Charged == CannonAction.Finish ? "#1116031" : "#1116032"); // Charged: ~1_VALUE~
-            list.Add(1116027, string.Format("{0}", AmmoInfo.GetAmmoName(this).ToString())); // Ammo: ~1_VALUE~
+            list.Add(1116027, $"{AmmoInfo.GetAmmoName(this).ToString()}"); // Ammo: ~1_VALUE~
             list.Add(1116028, Primed == CannonAction.Finish ? "#1116031" : "#1116032"); //Primed: ~1_VALUE~
             list.Add(1116580 + (int)DamageState);
             list.Add(1072241, "{0}\t{1}\t{2}\t{3}", TotalItems, MaxItems, TotalWeight, MaxWeight);
@@ -1225,10 +1225,7 @@ namespace Server.Items
 
         public override void Delete()
         {
-            if (Galleon != null)
-            {
-                Galleon.RemoveCannon(this);
-            }
+            Galleon?.RemoveCannon(this);
 
             List<PlayerMobile> list = new List<PlayerMobile>(Viewing.OfType<PlayerMobile>());
 
@@ -1236,10 +1233,7 @@ namespace Server.Items
             {
                 ShipCannonGump gump = BaseGump.GetGump<ShipCannonGump>(pm, g => g.Cannon == this);
 
-                if (gump != null)
-                {
-                    gump.Close();
-                }
+                gump?.Close();
             }
 
             ColUtility.Free(list);
diff --git a/Scripts/Multis/Boats/Galleons/BaseGalleon.cs b/Scripts/Multis/Boats/Galleons/BaseGalleon.cs
index e094caad8..bc0420a0d 100644
--- a/Scripts/Multis/Boats/Galleons/BaseGalleon.cs
+++ b/Scripts/Multis/Boats/Galleons/BaseGalleon.cs
@@ -389,9 +389,9 @@ namespace Server.Multis
 
             BaseAddon addon;
 
-            if (item is AddonComponent)
+            if (item is AddonComponent addonComponent)
             {
-                addon = ((AddonComponent)item).Addon;
+                addon = addonComponent.Addon;
             }
             else
             {
@@ -414,9 +414,7 @@ namespace Server.Multis
             RecallRune newRune = new RecallRune();
             newRune.SetGalleon(this);
 
-            Container c = rune.Parent as Container;
-
-            if (c != null)
+            if (rune.Parent is Container c)
                 c.AddItem(newRune);
             else
                 newRune.MoveToWorld(from.Location, from.Map);
@@ -430,7 +428,7 @@ namespace Server.Multis
             Direction d = Facing;
             string name = Name;
 
-            if (Owner == null || !(Owner is PlayerMobile))
+            if (!(Owner is PlayerMobile))
                 return;
 
             RecallRune rune = new RecallRune();
@@ -582,10 +580,7 @@ namespace Server.Multis
         {
             if (!IsNearLandOrDocks(this) && !force)
             {
-                if (from != null)
-                {
-                    from.SendLocalizedMessage(1116076); // The ship must be near shore or a sea market to deploy this weapon.
-                }
+                from?.SendLocalizedMessage(1116076);
             }
             else
             {
@@ -616,7 +611,7 @@ namespace Server.Multis
 
         public bool TryAddCannon(Mobile from, Point3D pnt, IShipCannon cannon, ShipCannonDeed deed)
         {
-            if (cannon == null || !(cannon is Item))
+            if (!(cannon is Item))
             {
                 return false;
             }
@@ -633,7 +628,7 @@ namespace Server.Multis
                     cannon.DoAreaMessage(1116074, 10, from); //~1_NAME~ deploys a ship cannon.
                 }
 
-                if (from != null && from.NetState != null)
+                if (from?.NetState != null)
                 {
                     Timer.DelayCall(() =>
                     {
@@ -849,10 +844,7 @@ namespace Server.Multis
             ColUtility.Free(list);
             ColUtility.Free(Fixtures);
 
-            if (CapturedCaptain != null)
-            {
-                CapturedCaptain.Kill();
-            }
+            CapturedCaptain?.Kill();
 
             base.OnAfterDelete();
         }
@@ -1676,9 +1668,7 @@ namespace Server.Multis
             if (from == null)
                 return SecurityLevel.Denied;
 
-            Account acct = from.Account as Account;
-
-            if (acct != null)
+            if (from.Account is Account acct)
             {
                 if (HasImpliedAccess(acct, from))
                     return DefaultImpliedAccessLevel;
@@ -1754,10 +1744,7 @@ namespace Server.Multis
             if (from == null || Galleon == null || Galleon.Owner == null)
                 return false;
 
-            Guild fromGuild = from.Guild as Guild;
-            Guild ownerGuild = Galleon.Owner.Guild as Guild;
-
-            return fromGuild != null && ownerGuild != null && fromGuild == ownerGuild;
+            return from.Guild is Guild fromGuild && Galleon.Owner.Guild is Guild ownerGuild && fromGuild == ownerGuild;
         }
 
         public void SetToDefault()
diff --git a/Scripts/Multis/Boats/Galleons/BoatPaint.cs b/Scripts/Multis/Boats/Galleons/BoatPaint.cs
index d998e1927..af3a95ece 100644
--- a/Scripts/Multis/Boats/Galleons/BoatPaint.cs
+++ b/Scripts/Multis/Boats/Galleons/BoatPaint.cs
@@ -46,9 +46,8 @@ namespace Server.Items
 
             protected override void OnTarget(Mobile from, object targeted)
             {
-                if (targeted is IPoint3D)
+                if (targeted is IPoint3D pnt)
                 {
-                    IPoint3D pnt = (IPoint3D)targeted;
                     BaseGalleon galleon = BaseGalleon.FindGalleonAt(pnt, from.Map);
 
                     if (galleon == null || !galleon.Contains(from))
diff --git a/Scripts/Multis/Boats/Galleons/BoatPaintRemover.cs b/Scripts/Multis/Boats/Galleons/BoatPaintRemover.cs
index 09e698ef8..770ce6408 100644
--- a/Scripts/Multis/Boats/Galleons/BoatPaintRemover.cs
+++ b/Scripts/Multis/Boats/Galleons/BoatPaintRemover.cs
@@ -31,9 +31,8 @@ namespace Server.Items
 
             protected override void OnTarget(Mobile from, object targeted)
             {
-                if (targeted is IPoint3D)
+                if (targeted is IPoint3D pnt)
                 {
-                    IPoint3D pnt = (IPoint3D)targeted;
                     BaseBoat boat = BaseBoat.FindBoatAt(pnt, from.Map);
 
                     if (boat is BaseGalleon && boat.Contains(from))
diff --git a/Scripts/Multis/Boats/Galleons/GalleonContainer.cs b/Scripts/Multis/Boats/Galleons/GalleonContainer.cs
index 01b4f0ace..349c952cd 100644
--- a/Scripts/Multis/Boats/Galleons/GalleonContainer.cs
+++ b/Scripts/Multis/Boats/Galleons/GalleonContainer.cs
@@ -105,10 +105,8 @@ namespace Server.Items
 
             public bool IsSurface(IPoint3D pnt)
             {
-                if (pnt is StaticTarget)
+                if (pnt is StaticTarget st)
                 {
-                    StaticTarget st = (StaticTarget)pnt;
-
                     if ((st.Flags & TileFlag.Surface) > 0)
                         return true;
                 }
diff --git a/Scripts/Multis/Boats/Galleons/GalleonHold.cs b/Scripts/Multis/Boats/Galleons/GalleonHold.cs
index 2703988be..b224a4a44 100644
--- a/Scripts/Multis/Boats/Galleons/GalleonHold.cs
+++ b/Scripts/Multis/Boats/Galleons/GalleonHold.cs
@@ -110,7 +110,7 @@ namespace Server.Items
             if (Galleon != null && Galleon.GalleonHold != null)
             {
                 GalleonHold hold = Galleon.GalleonHold;
-                list.Add(1072241, string.Format("{0}\t{1}\t{2}\t{3}", hold.TotalItems, hold.MaxItems, hold.TotalWeight, hold.MaxWeight)); // Contents: ~1_COUNT~/~2_MAXCOUNT~ items, ~3_WEIGHT~/~4_MAXWEIGHT~ stones
+                list.Add(1072241, $"{hold.TotalItems}\t{hold.MaxItems}\t{hold.TotalWeight}\t{hold.MaxWeight}"); // Contents: ~1_COUNT~/~2_MAXCOUNT~ items, ~3_WEIGHT~/~4_MAXWEIGHT~ stones
             }
         }
 
diff --git a/Scripts/Multis/Boats/Galleons/GalleonPilot.cs b/Scripts/Multis/Boats/Galleons/GalleonPilot.cs
index 13d75f31a..3348c751a 100644
--- a/Scripts/Multis/Boats/Galleons/GalleonPilot.cs
+++ b/Scripts/Multis/Boats/Galleons/GalleonPilot.cs
@@ -294,7 +294,7 @@ namespace Server.Mobiles
                         m_From.SendLocalizedMessage(1116592, left != TimeSpan.Zero ? left.TotalMinutes.ToString() : "0"); // Your ship is underway with emergency repairs holding for an estimated ~1_TIME~ more minutes.
                     }
                     else if (!g.TryEmergencyRepair(m_From))
-                        m_From.SendLocalizedMessage(1116591, string.Format("{0}\t{1}", BaseBoat.EmergencyRepairClothCost.ToString(), BaseBoat.EmergencyRepairWoodCost)); //You need a minimum of ~1_CLOTH~ yards of cloth and ~2_WOOD~ pieces of lumber to effect emergency repairs.
+                        m_From.SendLocalizedMessage(1116591, $"{BaseBoat.EmergencyRepairClothCost.ToString()}\t{BaseBoat.EmergencyRepairWoodCost}"); //You need a minimum of ~1_CLOTH~ yards of cloth and ~2_WOOD~ pieces of lumber to effect emergency repairs.
                 }
             }
         }
@@ -398,10 +398,8 @@ namespace Server.Mobiles
 
             public bool IsSurface(IPoint3D pnt)
             {
-                if (pnt is StaticTarget)
+                if (pnt is StaticTarget st)
                 {
-                    StaticTarget st = (StaticTarget)pnt;
-
                     if ((st.Flags & TileFlag.Surface) > 0)
                         return true;
                 }
@@ -471,9 +469,9 @@ namespace Server.Mobiles
                 if (Galleon.ShipName == null || Galleon.ShipName.Length == 0)
                     nameStr = "an unnamed ship";
                 else
-                    nameStr = string.Format("the {0}", Galleon.ShipName);
+                    nameStr = $"the {Galleon.ShipName}";
 
-                list.Add(string.Format("{0} the Pilot of {1}", Name, nameStr));
+                list.Add($"{Name} the Pilot of {nameStr}");
             }
             else
                 base.AddNameProperties(list);
diff --git a/Scripts/Multis/Boats/Galleons/MooringLine.cs b/Scripts/Multis/Boats/Galleons/MooringLine.cs
index 259104492..3d1b0d694 100644
--- a/Scripts/Multis/Boats/Galleons/MooringLine.cs
+++ b/Scripts/Multis/Boats/Galleons/MooringLine.cs
@@ -169,10 +169,8 @@ namespace Server.Items
                     highest = tile;
             }
 
-            if (highest != null && highest is StaticTile)
+            if (highest is StaticTile st)
             {
-                StaticTile st = (StaticTile)highest;
-
                 ItemData id = TileData.ItemTable[st.ID & TileData.MaxItemValue];
 
                 if (id.Surface && !id.Impassable)
diff --git a/Scripts/Multis/Boats/Gumps/ShipPlacementGump.cs b/Scripts/Multis/Boats/Gumps/ShipPlacementGump.cs
index da944d3ed..5b36803c3 100644
--- a/Scripts/Multis/Boats/Gumps/ShipPlacementGump.cs
+++ b/Scripts/Multis/Boats/Gumps/ShipPlacementGump.cs
@@ -58,14 +58,14 @@ namespace Server.Gumps
                     direction = Direction.East; break;
             }
 
-            if (m_Item is BaseBoatDeed)
+            if (m_Item is BaseBoatDeed baseBoatDeed)
             {
-                id = BaseBoat.GetID(((BaseBoatDeed)m_Item).MultiID, direction);
+                id = BaseBoat.GetID(baseBoatDeed.MultiID, direction);
                 offset = ((BaseBoatDeed)m_Item).Offset;
             }
-            else if (m_Item is BaseDockedBoat)
+            else if (m_Item is BaseDockedBoat baseDockedBoat)
             {
-                id = BaseBoat.GetID(((BaseDockedBoat)m_Item).MultiID, direction);
+                id = BaseBoat.GetID(baseDockedBoat.MultiID, direction);
                 offset = ((BaseDockedBoat)m_Item).Offset;
             }
 
@@ -88,12 +88,10 @@ namespace Server.Gumps
 
             protected override void OnTarget(Mobile from, object o)
             {
-                IPoint3D ip = o as IPoint3D;
-
-                if (ip != null)
+                if (o is IPoint3D ip)
                 {
-                    if (ip is Item)
-                        ip = ((Item)ip).GetWorldTop();
+                    if (ip is Item item)
+                        ip = item.GetWorldTop();
 
                     Point3D p = new Point3D(ip);
 
@@ -105,10 +103,10 @@ namespace Server.Gumps
                         from.SendLocalizedMessage(1042549); // A boat may not be placed in this area.
                     else
                     {
-                        if (m_Item is BaseBoatDeed)
-                            ((BaseBoatDeed)m_Item).OnPlacement(from, p, m_ItemID, m_Facing);
-                        else if (m_Item is BaseDockedBoat)
-                            ((BaseDockedBoat)m_Item).OnPlacement(from, p, m_ItemID, m_Facing);
+                        if (m_Item is BaseBoatDeed baseBoatDeed)
+                            baseBoatDeed.OnPlacement(from, p, m_ItemID, m_Facing);
+                        else if (m_Item is BaseDockedBoat baseDockedBoat)
+                            baseDockedBoat.OnPlacement(from, p, m_ItemID, m_Facing);
                     }
                 }
             }
diff --git a/Scripts/Multis/Boats/Strandedness.cs b/Scripts/Multis/Boats/Strandedness.cs
index 8192b245a..ddc0b9a8d 100644
--- a/Scripts/Multis/Boats/Strandedness.cs
+++ b/Scripts/Multis/Boats/Strandedness.cs
@@ -107,16 +107,16 @@ namespace Server.Misc
 
             object surface = map.GetTopSurface(from.Location);
 
-            if (surface is LandTile)
+            if (surface is LandTile landTile)
             {
-                int id = ((LandTile)surface).ID;
+                int id = landTile.ID;
 
                 return (id >= 168 && id <= 171)
                     || (id >= 310 && id <= 311);
             }
-            else if (surface is StaticTile)
+            else if (surface is StaticTile staticTile)
             {
-                int id = ((StaticTile)surface).ID;
+                int id = staticTile.ID;
                 return (id >= 0x1796 && id <= 0x17B2);
             }
 
diff --git a/Scripts/Multis/Boats/TillerMan.cs b/Scripts/Multis/Boats/TillerMan.cs
index 4d262ce79..a46bfc134 100644
--- a/Scripts/Multis/Boats/TillerMan.cs
+++ b/Scripts/Multis/Boats/TillerMan.cs
@@ -169,9 +169,7 @@ namespace Server.Items
 
         private string RandomBabbleArgs()
         {
-            return string.Format("#{0}\t#{1}\t#{2}", Utility.Random(1114138, 13).ToString(),
-                                                     Utility.Random(1114151, 2).ToString(),
-                                                     Utility.RandomMinMax(1114153, 1114221).ToString());
+            return $"#{Utility.Random(1114138, 13).ToString()}\t#{Utility.Random(1114151, 2).ToString()}\t#{Utility.RandomMinMax(1114153, 1114221).ToString()}";
         }
 
         public override void OnLocationChange(Point3D oldLocation)
@@ -208,7 +206,7 @@ namespace Server.Items
                         m_From.SendLocalizedMessage(1116592, left != TimeSpan.Zero ? left.TotalMinutes.ToString() : "0"); //Your ship is underway with emergency repairs holding for an estimated ~1_TIME~ more minutes.
                     }
                     else if (!g.TryEmergencyRepair(m_From))
-                        m_From.SendLocalizedMessage(1116591, string.Format("{0}\t{1}", BaseBoat.EmergencyRepairClothCost.ToString(), BaseBoat.EmergencyRepairWoodCost)); //You need a minimum of ~1_CLOTH~ yards of cloth and ~2_WOOD~ pieces of lumber to effect emergency repairs.
+                        m_From.SendLocalizedMessage(1116591, $"{BaseBoat.EmergencyRepairClothCost.ToString()}\t{BaseBoat.EmergencyRepairWoodCost}"); //You need a minimum of ~1_CLOTH~ yards of cloth and ~2_WOOD~ pieces of lumber to effect emergency repairs.
                 }
             }
         }
diff --git a/Scripts/Multis/Houses/BaseHouse.cs b/Scripts/Multis/Houses/BaseHouse.cs
index a6710450f..9fe9843b0 100644
--- a/Scripts/Multis/Houses/BaseHouse.cs
+++ b/Scripts/Multis/Houses/BaseHouse.cs
@@ -411,7 +411,7 @@ namespace Server.Multis
                     }
                 }
 
-                fromLockdowns += list.Where(x => !LockDowns.ContainsKey(x.Item)).Count();
+                fromLockdowns += list.Count(x => !LockDowns.ContainsKey(x.Item));
             }
 
             fromLockdowns += GetLockdowns();
@@ -629,8 +629,8 @@ namespace Server.Multis
 
                 if (!item.Deleted)
                 {
-                    if (item is StrongBox)
-                        item = ((StrongBox)item).ConvertToStandardContainer();
+                    if (item is StrongBox strongBox)
+                        item = strongBox.ConvertToStandardContainer();
 
                     item.IsLockedDown = false;
                     item.IsSecure = false;
@@ -651,9 +651,9 @@ namespace Server.Multis
                     bool retainDeedHue = false;	//if the items aren't hued but the deed itself is
                     int hue = 0;
 
-                    if (addon is IAddon)
+                    if (addon is IAddon iAddon)
                     {
-                        deed = ((IAddon)addon).Deed;
+                        deed = iAddon.Deed;
 
                         if (addon is BaseAddon && ((BaseAddon)addon).RetainDeedHue)	//There are things that are IAddon which aren't BaseAddon
                         {
@@ -778,8 +778,8 @@ namespace Server.Multis
 
                 RelocatedEntities.Add(relocEntity);
 
-                if (entity is Item)
-                    ((Item)entity).Internalize();
+                if (entity is Item item)
+                    item.Internalize();
                 else
                     ((Mobile)entity).Internalize();
             }
@@ -794,15 +794,13 @@ namespace Server.Multis
 
                 IEntity entity = relocEntity.Entity;
 
-                if (entity is Item)
+                if (entity is Item item)
                 {
-                    Item item = (Item)entity;
-
                     if (!item.Deleted)
                     {
-                        if (item is IAddon)
+                        if (item is IAddon iAddon)
                         {
-                            if (((IAddon)item).CouldFit(location, Map))
+                            if (iAddon.CouldFit(location, Map))
                             {
                                 item.MoveToWorld(location, Map);
                                 continue;
@@ -844,16 +842,16 @@ namespace Server.Multis
 
                             Item relocateItem = item;
 
-                            if (item is StrongBox)
-                                relocateItem = ((StrongBox)item).ConvertToStandardContainer();
+                            if (item is StrongBox strongBox)
+                                relocateItem = strongBox.ConvertToStandardContainer();
 
                             if (item is IAddon)
                             {
                                 Item deed;
 
-                                if (item is FishTrophy)
+                                if (item is FishTrophy fishTrophy)
                                 {
-                                    deed = ((FishTrophy)item).TrophyDeed;
+                                    deed = fishTrophy.TrophyDeed;
                                 }
                                 else
                                 {
@@ -1010,7 +1008,7 @@ namespace Server.Multis
             v += GetCommissionVendorLockdowns();
 
             if (Secures != null)
-                v += Secures.Where(x => !LockDowns.ContainsKey(x.Item)).Count();
+                v += Secures.Count(x => !LockDowns.ContainsKey(x.Item));
 
             return v;
         }
@@ -1126,13 +1124,13 @@ namespace Server.Multis
             if (e == null || e.Deleted)
                 return null;
 
-            if (e is Item)
+            if (e is Item item)
             {
-                return FindHouseAt((Item)e);
+                return FindHouseAt(item);
             }
-            else if (e is Mobile)
+            else if (e is Mobile mobile)
             {
-                return FindHouseAt((Mobile)e);
+                return FindHouseAt(mobile);
             }
 
             return FindHouseAt(e.Location, e.Map, 16);
@@ -1157,9 +1155,7 @@ namespace Server.Multis
 
             for (int i = 0; i < sector.Multis.Count; ++i)
             {
-                BaseHouse house = sector.Multis[i] as BaseHouse;
-
-                if (house != null && house.IsInside(loc, height))
+                if (sector.Multis[i] is BaseHouse house && house.IsInside(loc, height))
                     return house;
             }
 
@@ -1207,8 +1203,8 @@ namespace Server.Multis
                 return true;
 
             // ISecurable will set its own rules
-            if (item is ISecurable)
-                return HasSecureAccess(from, ((ISecurable)item).Level);
+            if (item is ISecurable iSecurable)
+                return HasSecureAccess(from, iSecurable.Level);
 
             if (item.Stackable)
                 return true;
@@ -1424,8 +1420,8 @@ namespace Server.Multis
 
             foreach (IEntity entity in GetHouseEntities().Keys)
             {
-                if (entity is Item)
-                    ((Item)entity).Map = Map;
+                if (entity is Item item)
+                    item.Map = Map;
                 else
                     ((Mobile)entity).Map = Map;
             }
@@ -1483,8 +1479,8 @@ namespace Server.Multis
             {
                 Point3D newLocation = new Point3D(entity.X + x, entity.Y + y, entity.Z + z);
 
-                if (entity is Item)
-                    ((Item)entity).Location = newLocation;
+                if (entity is Item item)
+                    item.Location = newLocation;
                 else
                     ((Mobile)entity).Location = newLocation;
             }
@@ -2024,7 +2020,6 @@ namespace Server.Multis
                 int amt = 1 + item.TotalItems;
 
                 Item rootItem = item.RootParent as Item;
-                Item parentItem = item.Parent as Item;
 
                 if (checkIsInside && item.RootParent is Mobile)
                 {
@@ -2038,7 +2033,7 @@ namespace Server.Multis
                 {
                     m.SendLocalizedMessage(501737); // You need not lock down items in a secure container.
                 }
-                else if (parentItem != null && !IsLockedDown(parentItem))
+                else if (item.Parent is Item parentItem && !IsLockedDown(parentItem))
                 {
                     m.SendLocalizedMessage(501736); // You must lockdown the container first!
                 }
@@ -2105,7 +2100,7 @@ namespace Server.Multis
                 bool valid = m_House != null && Sextant.Format(m_House.Location, m_House.Map, ref xLong, ref yLat, ref xMins, ref yMins, ref xEast, ref ySouth);
 
                 if (valid)
-                    location = string.Format("{0}° {1}'{2}, {3}° {4}'{5}", yLat, yMins, ySouth ? "S" : "N", xLong, xMins, xEast ? "E" : "W");
+                    location = $"{yLat}° {yMins}'{(ySouth ? "S" : "N")}, {xLong}° {xMins}'{(xEast ? "E" : "W")}";
                 else
                     location = "unknown";
 
@@ -2350,7 +2345,7 @@ namespace Server.Multis
             {
                 string name = Sign == null || Sign.Name == null ? "An Unnamed House" : Sign.Name;
 
-                NewMaginciaMessage message = new NewMaginciaMessage(null, new TextDefinition(1154338), string.Format("{0}\t{1}", vendor.ShopName, name));
+                NewMaginciaMessage message = new NewMaginciaMessage(null, new TextDefinition(1154338), $"{vendor.ShopName}\t{name}");
                 /* Your rental vendor named ~1_VENDOR~ located in house: ~2_HOUSE~ is in danger of deletion. 
                  * This house has been condemned and you should remove everything on your vendor AS SOON AS 
                  * POSSIBLE or risk possible deletion.*/
@@ -2411,9 +2406,9 @@ namespace Server.Multis
                 {
                     SetLockdown(m, item, false);
 
-                    if (item is RewardBrazier)
+                    if (item is RewardBrazier rewardBrazier)
                     {
-                        ((RewardBrazier)item).TurnOff();
+                        rewardBrazier.TurnOff();
                     }
 
                     // Handled here since it never gets added to the lockdown list
@@ -2500,9 +2495,9 @@ namespace Server.Multis
 
                     item.Movable = false;
 
-                    if (item is GardenShedAddon)
+                    if (item is GardenShedAddon gardenShedAddon)
                     {
-                        GardenShedBarrel ad = ((GardenShedAddon)item).SecondContainer as GardenShedBarrel;
+                        GardenShedBarrel ad = gardenShedAddon.SecondContainer as GardenShedBarrel;
 
                         SecureInfo info2 = new SecureInfo(ad, SecureLevel.Owner, m);
 
@@ -2678,9 +2673,8 @@ namespace Server.Multis
 
             foreach (SecureInfo info in Secures)
             {
-                StrongBox c = info.Item as StrongBox;
 
-                if (c != null && !c.Deleted && c.Owner == from)
+                if (info.Item is StrongBox c && !c.Deleted && c.Owner == from)
                 {
                     from.SendLocalizedMessage(502112);//You already have a strong box
                     return;
@@ -4132,9 +4126,7 @@ namespace Server.Multis
                 if (c == m)
                     return true;
 
-                Account bannedAccount = c.Account as Account;
-
-                if (bannedAccount != null && bannedAccount == theirAccount)
+                if (c.Account is Account bannedAccount && bannedAccount == theirAccount)
                     return true;
             }
 
@@ -4149,10 +4141,8 @@ namespace Server.Multis
             if (m.IsStaff() || IsFriend(m) || (Access != null && Access.Contains(m)))
                 return true;
 
-            if (m is BaseCreature)
+            if (m is BaseCreature bc)
             {
-                BaseCreature bc = (BaseCreature)m;
-
                 if (bc.NoHouseRestrictions)
                     return true;
 
@@ -4340,10 +4330,8 @@ namespace Server.Multis
                 if (m_Release)
                 {
                     #region Mondain's legacy
-                    if (targeted is AddonContainerComponent)
+                    if (targeted is AddonContainerComponent component)
                     {
-                        AddonContainerComponent component = (AddonContainerComponent)targeted;
-
                         if (component.Addon != null)
                             m_House.Release(from, component.Addon);
                     }
@@ -4372,10 +4360,8 @@ namespace Server.Multis
                     else
                     {
                         #region Mondain's legacy
-                        if (targeted is AddonContainerComponent)
+                        if (targeted is AddonContainerComponent component)
                         {
-                            AddonContainerComponent component = (AddonContainerComponent)targeted;
-
                             if (component.Addon != null)
                                 m_House.LockDown(from, component.Addon);
                         }
@@ -4427,10 +4413,8 @@ namespace Server.Multis
                 if (m_Release)
                 {
                     #region Mondain's legacy
-                    if (targeted is AddonContainerComponent)
+                    if (targeted is AddonContainerComponent component)
                     {
-                        AddonContainerComponent component = (AddonContainerComponent)targeted;
-
                         if (component.Addon != null)
                             m_House.ReleaseSecure(from, component.Addon);
                     }
@@ -4449,10 +4433,8 @@ namespace Server.Multis
                     else
                     {
                         #region Mondain's legacy
-                        if (targeted is AddonContainerComponent)
+                        if (targeted is AddonContainerComponent component)
                         {
-                            AddonContainerComponent component = (AddonContainerComponent)targeted;
-
                             if (component.Addon != null)
                                 m_House.AddSecure(from, component.Addon);
                         }
@@ -4487,9 +4469,9 @@ namespace Server.Multis
             if (!from.Alive || m_House.Deleted || !m_House.IsFriend(from))
                 return;
 
-            if (targeted is Mobile)
+            if (targeted is Mobile mobile)
             {
-                m_House.Kick(from, (Mobile)targeted);
+                m_House.Kick(from, mobile);
             }
             else
             {
@@ -4517,10 +4499,10 @@ namespace Server.Multis
             if (!from.Alive || m_House.Deleted || !m_House.IsFriend(from))
                 return;
 
-            if (targeted is Mobile)
+            if (targeted is Mobile mobile)
             {
                 if (m_Banning)
-                    m_House.Ban(from, (Mobile)targeted);
+                    m_House.Ban(from, mobile);
                 else
                     m_House.RemoveBan(from, (Mobile)targeted);
             }
@@ -4548,8 +4530,8 @@ namespace Server.Multis
             if (!from.Alive || m_House.Deleted || !m_House.IsFriend(from))
                 return;
 
-            if (targeted is Mobile)
-                m_House.GrantAccess(from, (Mobile)targeted);
+            if (targeted is Mobile mobile)
+                m_House.GrantAccess(from, mobile);
             else
                 from.SendLocalizedMessage(1060712); // That is not a player.
         }
@@ -4574,10 +4556,10 @@ namespace Server.Multis
             if (!from.Alive || m_House.Deleted || !m_House.IsOwner(from))
                 return;
 
-            if (targeted is Mobile)
+            if (targeted is Mobile mobile)
             {
                 if (m_Add)
-                    m_House.AddCoOwner(from, (Mobile)targeted);
+                    m_House.AddCoOwner(from, mobile);
                 else
                     m_House.RemoveCoOwner(from, (Mobile)targeted);
             }
@@ -4607,10 +4589,10 @@ namespace Server.Multis
             if (!from.Alive || m_House.Deleted || !m_House.IsCoOwner(from))
                 return;
 
-            if (targeted is Mobile)
+            if (targeted is Mobile mobile)
             {
                 if (m_Add)
-                    m_House.AddFriend(from, (Mobile)targeted);
+                    m_House.AddFriend(from, mobile);
                 else
                     m_House.RemoveFriend(from, (Mobile)targeted);
             }
@@ -4635,8 +4617,8 @@ namespace Server.Multis
 
         protected override void OnTarget(Mobile from, object targeted)
         {
-            if (targeted is Mobile)
-                m_House.BeginConfirmTransfer(from, (Mobile)targeted);
+            if (targeted is Mobile mobile)
+                m_House.BeginConfirmTransfer(from, mobile);
             else
                 from.SendLocalizedMessage(501384); // Only a player can own a house!
         }
@@ -4666,7 +4648,7 @@ namespace Server.Multis
             bool owner = house.IsOwner(from) || (house.IsLockedDown(item) && house.CheckLockdownOwnership(from, item));
             ISecurable sec = null;
 
-            if (item is ISecurable)
+            if (item is ISecurable iSecurable)
             {
                 if (!owner)
                     return null;
@@ -4683,7 +4665,7 @@ namespace Server.Multis
                     isOwned = item is BaseAddon || item is JewelryBox || item is Engines.Plants.SeedBox;
 
                 if (isOwned)
-                    sec = (ISecurable)item;
+                    sec = iSecurable;
             }
             else
             {
@@ -4703,10 +4685,8 @@ namespace Server.Multis
 
         public override void OnClick()
         {
-            if (m_Item is AuctionSafe)
+            if (m_Item is AuctionSafe safe)
             {
-                AuctionSafe safe = (AuctionSafe)m_Item;
-
                 if (safe.Auction != null && !safe.Auction.CanModify)
                 {
                     Owner.From.SendLocalizedMessage(1156431); // You cannot modify this while an auction is in progress.
diff --git a/Scripts/Multis/Houses/ContestHouses.cs b/Scripts/Multis/Houses/ContestHouses.cs
index 3f009471e..be71bc6db 100644
--- a/Scripts/Multis/Houses/ContestHouses.cs
+++ b/Scripts/Multis/Houses/ContestHouses.cs
@@ -193,11 +193,11 @@ namespace Server.Multis
             {
                 if (kvp.Value.Count > 2)
                 {
-                    Utility.WriteConsoleColor(ConsoleColor.Yellow, string.Format("Warning: More than 2 teleporters detected for {0}!", kvp.Key.ToString("X")));
+                    Utility.WriteConsoleColor(ConsoleColor.Yellow, $"Warning: More than 2 teleporters detected for {kvp.Key.ToString("X")}!");
                 }
                 else if (kvp.Value.Count <= 1)
                 {
-                    Utility.WriteConsoleColor(ConsoleColor.Yellow, string.Format("Warning: 1 or less teleporters detected for {0}!", kvp.Key.ToString("X")));
+                    Utility.WriteConsoleColor(ConsoleColor.Yellow, $"Warning: 1 or less teleporters detected for {kvp.Key.ToString("X")}!");
 
                     continue;
                 }
diff --git a/Scripts/Multis/Houses/Gumps/HouseGump.cs b/Scripts/Multis/Houses/Gumps/HouseGump.cs
index 2867dc993..965dbc174 100644
--- a/Scripts/Multis/Houses/Gumps/HouseGump.cs
+++ b/Scripts/Multis/Houses/Gumps/HouseGump.cs
@@ -125,10 +125,8 @@ namespace Server.Gumps
                 string name;
                 int labelHue = LabelHue;
 
-                if (m is PlayerVendor)
+                if (m is PlayerVendor vendor)
                 {
-                    PlayerVendor vendor = (PlayerVendor)m;
-
                     name = vendor.ShopName;
 
                     if (vendor.IsOwner(from))
@@ -349,7 +347,7 @@ namespace Server.Gumps
                         if (bonusStorage > 0)
                         {
                             AddHtmlLocalized(10, 150, 300, 20, 1072519, LabelColor, false, false); // Increased Storage
-                            AddLabel(310, 150, LabelHue, string.Format("{0}%", bonusStorage));
+                            AddLabel(310, 150, LabelHue, $"{bonusStorage}%");
                         }
 
                         AddHtmlLocalized(10, 170, 300, 20, 1060683, LabelColor, false, false); // Maximum Secure Storage
@@ -738,10 +736,10 @@ namespace Server.Gumps
 
                         foreach (Mobile mobile in newHouse.InternalizedVendors)
                         {
-                            if (mobile is PlayerVendor)
-                                ((PlayerVendor)mobile).House = newHouse;
-                            else if (mobile is PlayerBarkeeper)
-                                ((PlayerBarkeeper)mobile).House = newHouse;
+                            if (mobile is PlayerVendor playerVendor)
+                                playerVendor.House = newHouse;
+                            else if (mobile is PlayerBarkeeper playerBarkeeper)
+                                playerBarkeeper.House = newHouse;
                         }
 
                         if (house.MovingCrate != null)
@@ -787,9 +785,7 @@ namespace Server.Gumps
 
         public static void SwapHouse_Callback(Mobile from, bool okay, object state)
         {
-            BaseHouse house = state as BaseHouse;
-
-            if (okay && house != null)
+            if (okay && state is BaseHouse house)
             {
                 from.MoveToWorld(house.BanLocation, house.Map);
 
diff --git a/Scripts/Multis/Houses/HouseFoundation.cs b/Scripts/Multis/Houses/HouseFoundation.cs
index 55af40650..1646ce76b 100644
--- a/Scripts/Multis/Houses/HouseFoundation.cs
+++ b/Scripts/Multis/Houses/HouseFoundation.cs
@@ -248,10 +248,8 @@ namespace Server.Multis
             {
                 Item fixture = Fixtures[i];
 
-                if (fixture is HouseTeleporter)
+                if (fixture is HouseTeleporter tp)
                 {
-                    HouseTeleporter tp = (HouseTeleporter)fixture;
-
                     for (int j = 1; j <= Fixtures.Count; ++j)
                     {
                         HouseTeleporter check = Fixtures[(i + j) % Fixtures.Count] as HouseTeleporter;
@@ -263,10 +261,8 @@ namespace Server.Multis
                         }
                     }
                 }
-                else if (fixture is BaseHouseDoor)
+                else if (fixture is BaseHouseDoor door)
                 {
-                    BaseHouseDoor door = (BaseHouseDoor)fixture;
-
                     if (door.Link != null)
                         continue;
 
@@ -2145,8 +2141,8 @@ namespace Server.Multis
 
             Table[from] = c;
 
-            if (from is PlayerMobile)
-                ((PlayerMobile)from).DesignContext = c;
+            if (from is PlayerMobile playerMobile)
+                playerMobile.DesignContext = c;
 
             foundation.Customizer = from;
 
@@ -2179,8 +2175,8 @@ namespace Server.Multis
 
             Table.Remove(from);
 
-            if (from is PlayerMobile)
-                ((PlayerMobile)from).DesignContext = null;
+            if (from is PlayerMobile playerMobile)
+                playerMobile.DesignContext = null;
 
             context.Foundation.Customizer = null;
 
diff --git a/Scripts/Multis/Houses/HousePlacementTool.cs b/Scripts/Multis/Houses/HousePlacementTool.cs
index e28c6c837..d369da388 100644
--- a/Scripts/Multis/Houses/HousePlacementTool.cs
+++ b/Scripts/Multis/Houses/HousePlacementTool.cs
@@ -351,12 +351,10 @@ namespace Server.Items
             if (!from.CheckAlive() || from.Backpack == null || !m_Tool.IsChildOf(from.Backpack))
                 return;
 
-            IPoint3D ip = o as IPoint3D;
-
-            if (ip != null)
+            if (o is IPoint3D ip)
             {
-                if (ip is Item)
-                    ip = ((Item)ip).GetWorldTop();
+                if (ip is Item item)
+                    ip = item.GetWorldTop();
 
                 Point3D p = new Point3D(ip);
 
@@ -625,10 +623,8 @@ namespace Server.Items
             {
                 return ((HousePlacementEntry)obj);
             }
-            else if (obj is ArrayList)
+            else if (obj is ArrayList list)
             {
-                ArrayList list = (ArrayList)obj;
-
                 for (int i = 0; i < list.Count; ++i)
                 {
                     HousePlacementEntry e = (HousePlacementEntry)list[i];
@@ -637,10 +633,8 @@ namespace Server.Items
                         return e;
                 }
             }
-            else if (obj is Hashtable)
+            else if (obj is Hashtable table)
             {
-                Hashtable table = (Hashtable)obj;
-
                 obj = table[house.ItemID];
 
                 if (obj is HousePlacementEntry)
@@ -737,23 +731,20 @@ namespace Server.Items
 
                             house.MoveToWorld(center, from.Map);
 
-                            if (house is HouseFoundation)
-                                ((HouseFoundation)house).OnPlacement();
+                            if (house is HouseFoundation houseFoundation)
+                                houseFoundation.OnPlacement();
 
                             for (int i = 0; i < toMove.Count; ++i)
                             {
                                 object o = toMove[i];
 
-                                if (o is Mobile)
-                                    ((Mobile)o).Location = house.BanLocation;
-                                else if (o is Item)
-                                    ((Item)o).Location = house.BanLocation;
+                                if (o is Mobile mobile)
+                                    mobile.Location = house.BanLocation;
+                                else if (o is Item item)
+                                    item.Location = house.BanLocation;
                             }
 
-                            if (tool != null)
-                            {
-                                tool.OnPlacement(house);
-                            }
+                            tool?.OnPlacement(house);
                         }
 
                         break;
@@ -833,10 +824,10 @@ namespace Server.Items
                         {
                             object o = toMove[i];
 
-                            if (o is Mobile)
-                                ((Mobile)o).Location = banLoc;
-                            else if (o is Item)
-                                ((Item)o).Location = banLoc;
+                            if (o is Mobile mobile)
+                                mobile.Location = banLoc;
+                            else if (o is Item item)
+                                item.Location = banLoc;
                         }
 
                         prev.MoveToWorld(center, from.Map);
@@ -917,10 +908,8 @@ namespace Server.Items
 
                     m_Table[e.m_Type] = list;
                 }
-                else if (obj is ArrayList)
+                else if (obj is ArrayList list)
                 {
-                    ArrayList list = (ArrayList)obj;
-
                     if (list.Count == 8)
                     {
                         Hashtable table = new Hashtable();
@@ -1095,10 +1084,10 @@ namespace Server.Items
 
                             foreach (Mobile mobile in newHouse.InternalizedVendors)
                             {
-                                if (mobile is PlayerVendor)
-                                    ((PlayerVendor)mobile).House = newHouse;
-                                else if (mobile is PlayerBarkeeper)
-                                    ((PlayerBarkeeper)mobile).House = newHouse;
+                                if (mobile is PlayerVendor playerVendor)
+                                    playerVendor.House = newHouse;
+                                else if (mobile is PlayerBarkeeper playerBarkeeper)
+                                    playerBarkeeper.House = newHouse;
                             }
 
                             if (m_House.MovingCrate != null)
diff --git a/Scripts/Multis/Houses/HouseSign.cs b/Scripts/Multis/Houses/HouseSign.cs
index dd05df952..1137dd387 100644
--- a/Scripts/Multis/Houses/HouseSign.cs
+++ b/Scripts/Multis/Houses/HouseSign.cs
@@ -93,7 +93,7 @@ namespace Server.Multis
                     if (level == DecayLevel.Collapsed)
                         level = DecayLevel.IDOC;
 
-                    list.Add(1062028, string.Format("#{0}", 1043009 + (int)level)); // Condition: This structure is ...
+                    list.Add(1062028, $"#{1043009 + (int)level}"); // Condition: This structure is ...
                 }
             }
         }
diff --git a/Scripts/Multis/Houses/Houses.cs b/Scripts/Multis/Houses/Houses.cs
index 7307b0487..9731b6974 100644
--- a/Scripts/Multis/Houses/Houses.cs
+++ b/Scripts/Multis/Houses/Houses.cs
@@ -438,8 +438,8 @@ namespace Server.Multis
         {
             BaseDoor door = MakeDoor(false, DoorFacing.EastCW);
 
-            if (door is BaseHouseDoor)
-                ((BaseHouseDoor)door).Facing = DoorFacing.EastCCW;
+            if (door is BaseHouseDoor baseHouseDoor)
+                baseHouseDoor.Facing = DoorFacing.EastCCW;
 
             AddDoor(door, -2, 0, id == 0xA2 ? 24 : 27);
 
diff --git a/Scripts/Quests/CloakOfHumility/CloakOfHumilityQuest.cs b/Scripts/Quests/CloakOfHumility/CloakOfHumilityQuest.cs
index 7abbaee75..1c7ecdf7f 100644
--- a/Scripts/Quests/CloakOfHumility/CloakOfHumilityQuest.cs
+++ b/Scripts/Quests/CloakOfHumility/CloakOfHumilityQuest.cs
@@ -64,9 +64,9 @@ namespace Server.Engines.Quests
             foreach (QuestionAndAnswerObjective obj in Objectives.OfType<QuestionAndAnswerObjective>())
             {
                 if (offer)
-                    str = string.Format("Answer {0} questions correctly.", obj.MaxProgress);
+                    str = $"Answer {obj.MaxProgress} questions correctly.";
                 else
-                    str = string.Format("Answer {0}/{1} questions answered correctly.", obj.CurProgress, obj.MaxProgress);
+                    str = $"Answer {obj.CurProgress}/{obj.MaxProgress} questions answered correctly.";
 
                 g.AddHtmlObject(98, offset, 312, 16, str, BaseQuestGump.LightGreen, false, false);
 
@@ -396,8 +396,8 @@ namespace Server.Engines.Quests
         {
             foreach (Item item in m_QuestItems)
             {
-                if (item is GreyCloak)
-                    ((GreyCloak)item).Owner = Owner;
+                if (item is GreyCloak greyCloak)
+                    greyCloak.Owner = Owner;
                 else if (item != null && !item.Deleted)
                     item.Delete();
             }
diff --git a/Scripts/Quests/CloakOfHumility/Gumps/GiveItemQuestGump.cs b/Scripts/Quests/CloakOfHumility/Gumps/GiveItemQuestGump.cs
index 6dfbe083c..2256bad36 100644
--- a/Scripts/Quests/CloakOfHumility/Gumps/GiveItemQuestGump.cs
+++ b/Scripts/Quests/CloakOfHumility/Gumps/GiveItemQuestGump.cs
@@ -16,7 +16,7 @@ namespace Server.Engines.Quests
             m_NPCIndex = index;
 
             AddBackground(0, 0, 350, 250, 2600);
-            AddHtml(100, 25, 175, 16, string.Format("{0} {1}", mobile.Name, mobile.Title), false, false);
+            AddHtml(100, 25, 175, 16, $"{mobile.Name} {mobile.Title}", false, false);
 
             AddHtmlLocalized(40, 60, 270, 140, mobile.Greeting + 1, 1, false, true);
         }
@@ -34,12 +34,12 @@ namespace Server.Engines.Quests
             if (0.5 > Utility.RandomDouble() || m_NPCIndex == 6)
             {
                 cliloc = m_Mobile.Greeting + 2;
-                args = string.Format("#{0}", m_Quest.Infos[m_NPCIndex].NeedsLoc);
+                args = $"#{m_Quest.Infos[m_NPCIndex].NeedsLoc}";
             }
             else
             {
                 cliloc = m_Mobile.Greeting + 3;
-                args = string.Format("#{0}", m_Quest.Infos[m_NPCIndex].GivesLoc);
+                args = $"#{m_Quest.Infos[m_NPCIndex].GivesLoc}";
             }
 
             m_Mobile.SayTo(from, cliloc, args);
diff --git a/Scripts/Quests/CloakOfHumility/Items/HumilityShrinePersistence.cs b/Scripts/Quests/CloakOfHumility/Items/HumilityShrinePersistence.cs
index 2f2cc2c1c..265b926ea 100644
--- a/Scripts/Quests/CloakOfHumility/Items/HumilityShrinePersistence.cs
+++ b/Scripts/Quests/CloakOfHumility/Items/HumilityShrinePersistence.cs
@@ -43,7 +43,7 @@ namespace Server.Engines.Quests
                 if (item == null)
                     item = m.FindItemOnLayer(Layer.Cloak);
 
-                if (item != null && item is GreyCloak && ((GreyCloak)item).Owner == m)
+                if (item is GreyCloak && ((GreyCloak)item).Owner == m)
                 {
                     m.SendLocalizedMessage(1075897); // As you near the shrine a strange energy envelops you. Suddenly, your cloak is transformed into the Cloak of Humility!
 
diff --git a/Scripts/Quests/CloakOfHumility/Mobiles/Gareth.cs b/Scripts/Quests/CloakOfHumility/Mobiles/Gareth.cs
index 75a010581..f4040d10d 100644
--- a/Scripts/Quests/CloakOfHumility/Mobiles/Gareth.cs
+++ b/Scripts/Quests/CloakOfHumility/Mobiles/Gareth.cs
@@ -54,9 +54,7 @@ namespace Server.Engines.Quests
             {
                 PlayerMobile pm = (PlayerMobile)m;
 
-                WhosMostHumbleQuest quest = QuestHelper.GetQuest(pm, typeof(WhosMostHumbleQuest)) as WhosMostHumbleQuest;
-
-                if (quest != null)
+                if (QuestHelper.GetQuest(pm, typeof(WhosMostHumbleQuest)) is WhosMostHumbleQuest quest)
                 {
                     Item chain = pm.Backpack.FindItemByType(typeof(IronChain));
 
diff --git a/Scripts/Quests/CloakOfHumility/Mobiles/HumilityQuestMobile.cs b/Scripts/Quests/CloakOfHumility/Mobiles/HumilityQuestMobile.cs
index 4bf3d663f..a70771efb 100644
--- a/Scripts/Quests/CloakOfHumility/Mobiles/HumilityQuestMobile.cs
+++ b/Scripts/Quests/CloakOfHumility/Mobiles/HumilityQuestMobile.cs
@@ -48,9 +48,7 @@ namespace Server.Engines.Quests
             if (pm == null || !pm.InRange(Location, 3))
                 return;
 
-            WhosMostHumbleQuest quest = QuestHelper.GetQuest(pm, typeof(WhosMostHumbleQuest)) as WhosMostHumbleQuest;
-
-            if (quest != null)
+            if (QuestHelper.GetQuest(pm, typeof(WhosMostHumbleQuest)) is WhosMostHumbleQuest quest)
             {
                 if (m_NextGreet < DateTime.UtcNow && pm is PlayerMobile)
                 {
@@ -73,9 +71,7 @@ namespace Server.Engines.Quests
             if (pm == null || !InRange(from.Location, 3))
                 return;
 
-            WhosMostHumbleQuest quest = QuestHelper.GetQuest(pm, typeof(WhosMostHumbleQuest)) as WhosMostHumbleQuest;
-
-            if (quest != null && pm.Backpack != null && !quest.HasGivenTo(this))
+            if (QuestHelper.GetQuest(pm, typeof(WhosMostHumbleQuest)) is WhosMostHumbleQuest quest && pm.Backpack != null && !quest.HasGivenTo(this))
             {
                 Item item = from.FindItemOnLayer(Layer.Cloak);
 
@@ -103,9 +99,9 @@ namespace Server.Engines.Quests
                                 quest.AddQuestItem(nextItem, this);
 
                                 if (this is Sean)
-                                    SayTo(from, Greeting + 3, string.Format("#{0}", quest.Infos[idx].NeedsLoc));
+                                    SayTo(from, Greeting + 3, $"#{quest.Infos[idx].NeedsLoc}");
                                 else
-                                    SayTo(from, Greeting + 4, string.Format("#{0}\t#{1}", quest.Infos[idx].NeedsLoc, quest.Infos[idx].GivesLoc));
+                                    SayTo(from, Greeting + 4, $"#{quest.Infos[idx].NeedsLoc}\t#{quest.Infos[idx].GivesLoc}");
                             }
                         }
                         else //Didn't find needed item
diff --git a/Scripts/Quests/Eodon/Hawkwind/Hawkwind.cs b/Scripts/Quests/Eodon/Hawkwind/Hawkwind.cs
index 52d4ef1f3..4a5b53d76 100644
--- a/Scripts/Quests/Eodon/Hawkwind/Hawkwind.cs
+++ b/Scripts/Quests/Eodon/Hawkwind/Hawkwind.cs
@@ -30,9 +30,9 @@ namespace Server.Engines.Quests.TimeLord
 
         public override void OnDoubleClick(Mobile from)
         {
-            if (from is PlayerMobile)
+            if (from is PlayerMobile playerMobile)
             {
-                OnTalk((PlayerMobile)from, false);
+                OnTalk(playerMobile, false);
             }
         }
 
diff --git a/Scripts/Quests/Eodon/MyrmidexThreat/Items/QuestItems.cs b/Scripts/Quests/Eodon/MyrmidexThreat/Items/QuestItems.cs
index b9a1bbe33..7bee32a07 100644
--- a/Scripts/Quests/Eodon/MyrmidexThreat/Items/QuestItems.cs
+++ b/Scripts/Quests/Eodon/MyrmidexThreat/Items/QuestItems.cs
@@ -87,11 +87,10 @@ namespace Server.Items
         {
             if (from.InRange(GetWorldLocation(), 2) && from.InLOS(this))
             {
-                Container cont = Parent as Container;
                 SOS sos = new SaltySeaSOS(TargetMap, Level);
                 Consume();
 
-                if (cont != null)
+                if (Parent is Container cont)
                     cont.AddItem(sos);
                 else
                     sos.MoveToWorld(Location, Map);
@@ -184,9 +183,7 @@ namespace Server.Items
             if (!(from is PlayerMobile))
                 return;
 
-            DestructionOfZipactriotlQuest q = QuestHelper.GetQuest((PlayerMobile)from, typeof(DestructionOfZipactriotlQuest)) as DestructionOfZipactriotlQuest;
-
-            if (q != null || from.AccessLevel > AccessLevel.Player)
+            if (QuestHelper.GetQuest((PlayerMobile)from, typeof(DestructionOfZipactriotlQuest)) is DestructionOfZipactriotlQuest q || from.AccessLevel > AccessLevel.Player)
             {
                 BaseCreature.TeleportPets(from, _Destination, Map.TerMur);
                 from.MoveToWorld(_Destination, Map.TerMur);
diff --git a/Scripts/Quests/Eodon/MyrmidexThreat/Mobiles/Creatures.cs b/Scripts/Quests/Eodon/MyrmidexThreat/Mobiles/Creatures.cs
index 0a188bd6c..11deca340 100644
--- a/Scripts/Quests/Eodon/MyrmidexThreat/Mobiles/Creatures.cs
+++ b/Scripts/Quests/Eodon/MyrmidexThreat/Mobiles/Creatures.cs
@@ -126,9 +126,8 @@ namespace Server.Mobiles
                         Timer.DelayCall(TimeSpan.FromSeconds(Utility.RandomMinMax(2, 3)), () =>
                             {
                                 Type t = Utility.RandomList(typeof(MyrmidexWarrior), typeof(MyrmidexDrone), typeof(MyrmidexLarvae));
-                                BaseCreature bc = Activator.CreateInstance(t) as BaseCreature;
 
-                                if (bc != null)
+                                if (Activator.CreateInstance(t) is BaseCreature bc)
                                 {
                                     bc.MoveToWorld(p, Map);
                                     _Spawn.Add(bc);
@@ -405,9 +404,7 @@ namespace Server.Mobiles
             int c = reader.ReadInt();
             for (int i = 0; i < c; i++)
             {
-                BaseCreature bc = reader.ReadMobile() as BaseCreature;
-
-                if (bc != null)
+                if (reader.ReadMobile() is BaseCreature bc)
                     _Spawn.Add(bc);
             }
 
@@ -482,7 +479,7 @@ namespace Server.Mobiles
 
             foreach (Mobile m in eable)
             {
-                if (m != this && m is PlayerMobile && CanBeHarmful(m) && CanSee(m) && ((PlayerMobile)m).AllFollowers.Where(pet => !(pet is IMount) || ((IMount)pet).Rider == null).Count() > 0)
+                if (m != this && m is PlayerMobile && CanBeHarmful(m) && CanSee(m) && ((PlayerMobile)m).AllFollowers.Any(pet => !(pet is IMount) || ((IMount)pet).Rider == null))
                 {
                     list.Add(m);
                 }
diff --git a/Scripts/Quests/Eodon/MyrmidexThreat/Quests.cs b/Scripts/Quests/Eodon/MyrmidexThreat/Quests.cs
index b94f7b262..9c555e21e 100644
--- a/Scripts/Quests/Eodon/MyrmidexThreat/Quests.cs
+++ b/Scripts/Quests/Eodon/MyrmidexThreat/Quests.cs
@@ -554,9 +554,8 @@ namespace Server.Engines.Quests
 
             public override bool Update(object o)
             {
-                Type t = o as Type;
 
-                if (t != null && t == GameType && Quest != null && Quest.Owner != null && Quest.Owner.Region.IsPartOf("FireIsleCasino"))
+                if (o is Type t && t == GameType && Quest != null && Quest.Owner != null && Quest.Owner.Region.IsPartOf("FireIsleCasino"))
                 {
                     if (t == typeof(ChucklesLuck))
                     {
@@ -564,7 +563,7 @@ namespace Server.Engines.Quests
                         Quest.Owner.SendSound(Quest.UpdateSound);
 
                         if (CurProgress <= MaxProgress)
-                            Quest.Owner.SendLocalizedMessage(1156795, string.Format("{0}\t{1}\t{2}", CurProgress.ToString(), MaxProgress.ToString(), "Chuckles' Luck")); // [Quest Event: Getting Even] You have won ~1_count~ of ~2_req~ games of ~3_game~!
+                            Quest.Owner.SendLocalizedMessage(1156795, $"{CurProgress.ToString()}\t{MaxProgress.ToString()}\t{"Chuckles' Luck"}"); // [Quest Event: Getting Even] You have won ~1_count~ of ~2_req~ games of ~3_game~!
 
                     }
                     else if (t == typeof(HiMiddleLow))
@@ -573,7 +572,7 @@ namespace Server.Engines.Quests
                         Quest.Owner.SendSound(Quest.UpdateSound);
 
                         if (CurProgress <= MaxProgress)
-                            Quest.Owner.SendLocalizedMessage(1156795, string.Format("{0}\t{1}\t{2}", CurProgress.ToString(), MaxProgress.ToString(), "Hi-Middle-Low")); // [Quest Event: Getting Even] You have won ~1_count~ of ~2_req~ games of ~3_game~!
+                            Quest.Owner.SendLocalizedMessage(1156795, $"{CurProgress.ToString()}\t{MaxProgress.ToString()}\t{"Hi-Middle-Low"}"); // [Quest Event: Getting Even] You have won ~1_count~ of ~2_req~ games of ~3_game~!
 
                     }
                     else if (t == typeof(DiceRider))
@@ -582,7 +581,7 @@ namespace Server.Engines.Quests
                         Quest.Owner.SendSound(Quest.UpdateSound);
 
                         if (CurProgress <= MaxProgress)
-                            Quest.Owner.SendLocalizedMessage(1156795, string.Format("{0}\t{1}\t{2}", CurProgress.ToString(), MaxProgress.ToString(), "Dice Rider")); // [Quest Event: Getting Even] You have won ~1_count~ of ~2_req~ games of ~3_game~!
+                            Quest.Owner.SendLocalizedMessage(1156795, $"{CurProgress.ToString()}\t{MaxProgress.ToString()}\t{"Dice Rider"}"); // [Quest Event: Getting Even] You have won ~1_count~ of ~2_req~ games of ~3_game~!
 
                     }
 
diff --git a/Scripts/Quests/Eodon/Valley of One Quest/Creatures.cs b/Scripts/Quests/Eodon/Valley of One Quest/Creatures.cs
index e9a76ed11..fa920fb70 100644
--- a/Scripts/Quests/Eodon/Valley of One Quest/Creatures.cs	
+++ b/Scripts/Quests/Eodon/Valley of One Quest/Creatures.cs	
@@ -491,8 +491,8 @@ namespace Server.Mobiles
 
                 if (mount != null)
                 {
-                    if (m is PlayerMobile)
-                        ((PlayerMobile)m).SetMountBlock(BlockMountType.Dazed, TimeSpan.FromSeconds(10), true);
+                    if (m is PlayerMobile playerMobile)
+                        playerMobile.SetMountBlock(BlockMountType.Dazed, TimeSpan.FromSeconds(10), true);
                     else
                         mount.Rider = null;
                 }
@@ -592,11 +592,9 @@ namespace Server.Mobiles
         {
             base.OnThink();
 
-            if (Protector != null && Protector is PlayerMobile && InRange(Home, 2))
+            if (Protector is PlayerMobile && InRange(Home, 2))
             {
-                PrideOfTheAmbushQuest quest = QuestHelper.GetQuest((PlayerMobile)Protector, typeof(PrideOfTheAmbushQuest)) as PrideOfTheAmbushQuest;
-
-                if (quest != null && !quest.Completed)
+                if (QuestHelper.GetQuest((PlayerMobile)Protector, typeof(PrideOfTheAmbushQuest)) is PrideOfTheAmbushQuest quest && !quest.Completed)
                     quest.Update(this);
 
                 Protector.PrivateOverheadMessage(Network.MessageType.Regular, 0x35, 1156501, Protector.NetState); // *You watch as the Tiger Cub safely returns to the Kurak Tribe*
diff --git a/Scripts/Quests/Eodon/Valley of One Quest/DragonTurtleNest.cs b/Scripts/Quests/Eodon/Valley of One Quest/DragonTurtleNest.cs
index fece2878e..f140d5815 100644
--- a/Scripts/Quests/Eodon/Valley of One Quest/DragonTurtleNest.cs	
+++ b/Scripts/Quests/Eodon/Valley of One Quest/DragonTurtleNest.cs	
@@ -190,15 +190,11 @@ namespace Server.Items
                 Timer.DelayCall(TimeSpan.FromSeconds(1), hatchling.Delete);
             }
 
-            if (focus != null && focus is PlayerMobile)
+            if (focus is PlayerMobile playerMobile)
             {
-                EmptyNestQuest quest = QuestHelper.GetQuest((PlayerMobile)focus, typeof(EmptyNestQuest)) as EmptyNestQuest;
+                EmptyNestQuest quest = QuestHelper.GetQuest(playerMobile, typeof(EmptyNestQuest)) as EmptyNestQuest;
 
-                if (quest != null)
-                {
-                    quest.Update(hatchling);
-                    // Quest Complete and crap can be handled in update
-                }
+                quest?.Update(hatchling);
             }
 
             Timer.DelayCall(TimeSpan.FromMinutes(1), () =>
diff --git a/Scripts/Quests/Eodon/Valley of One Quest/MyrmidexSpawner.cs b/Scripts/Quests/Eodon/Valley of One Quest/MyrmidexSpawner.cs
index 26fc4fc3c..c9656a35e 100644
--- a/Scripts/Quests/Eodon/Valley of One Quest/MyrmidexSpawner.cs	
+++ b/Scripts/Quests/Eodon/Valley of One Quest/MyrmidexSpawner.cs	
@@ -81,9 +81,7 @@ namespace Server.Items
                             }
                         }
 
-                        BaseCreature bc = Activator.CreateInstance(_SpawnList[Utility.Random(_SpawnList.Length)]) as BaseCreature;
-
-                        if (bc != null)
+                        if (Activator.CreateInstance(_SpawnList[Utility.Random(_SpawnList.Length)]) is BaseCreature bc)
                         {
                             Spawn.Add(bc);
                             bc.MoveToWorld(p, map);
@@ -137,10 +135,7 @@ namespace Server.Items
 
             writer.Write(Spawn == null ? 0 : Spawn.Count);
 
-            if (Spawn != null)
-            {
-                Spawn.ForEach(bc => writer.Write(bc));
-            }
+            Spawn?.ForEach(bc => writer.Write(bc));
 
             Timer.DelayCall(TimeSpan.FromMinutes(1), CheckSpawn);
         }
@@ -163,9 +158,7 @@ namespace Server.Items
 
                         for (int i = 0; i < count; i++)
                         {
-                            BaseCreature bc = reader.ReadMobile() as BaseCreature;
-
-                            if (bc != null)
+                            if (reader.ReadMobile() is BaseCreature bc)
                                 Spawn.Add(bc);
                         }
                     }
@@ -179,9 +172,7 @@ namespace Server.Items
             {
                 Timer.DelayCall(TimeSpan.FromSeconds(10), () =>
                 {
-                    EodonTribeRegion r = Region.Find(Location, Map) as EodonTribeRegion;
-
-                    if (r != null)
+                    if (Region.Find(Location, Map) is EodonTribeRegion r)
                         Zone = r;
                 });
             }
diff --git a/Scripts/Quests/Eodon/Valley of One Quest/Quests.cs b/Scripts/Quests/Eodon/Valley of One Quest/Quests.cs
index 1b52d182b..eea6aa91f 100644
--- a/Scripts/Quests/Eodon/Valley of One Quest/Quests.cs	
+++ b/Scripts/Quests/Eodon/Valley of One Quest/Quests.cs	
@@ -261,7 +261,7 @@ namespace Server.Engines.Quests
                 if (!Completed)
                 {
                     Owner.PlaySound(UpdateSound);
-                    Owner.SendLocalizedMessage(1156535, string.Format("{0}\t{1}", obj.CurProgress.ToString(), obj.MaxProgress.ToString())); // You have rescued ~1_count~ of ~2_max~ Dragon Turtle Hatchlings.
+                    Owner.SendLocalizedMessage(1156535, $"{obj.CurProgress.ToString()}\t{obj.MaxProgress.ToString()}"); // You have rescued ~1_count~ of ~2_max~ Dragon Turtle Hatchlings.
                 }
                 else
                 {
@@ -365,9 +365,8 @@ namespace Server.Engines.Quests
 
                 Timer.DelayCall(Mining.System.OreAndStone.EffectDelay, () =>
                     {
-                        TheGreatVolcanoQuest quest = QuestHelper.GetQuest(pm, typeof(TheGreatVolcanoQuest)) as TheGreatVolcanoQuest;
 
-                        if (quest != null && !quest.Completed && 0.05 > Utility.RandomDouble())
+                        if (QuestHelper.GetQuest(pm, typeof(TheGreatVolcanoQuest)) is TheGreatVolcanoQuest quest && !quest.Completed && 0.05 > Utility.RandomDouble())
                         {
                             if (m.CheckSkill(SkillName.Mining, 90, 100))
                             {
@@ -413,9 +412,9 @@ namespace Server.Engines.Quests
                         else
                             m.LocalOverheadMessage(MessageType.Regular, 0x3B2, 1156509); // You loosen some dirt but fail to find anything.
 
-                        if (tool is IUsesRemaining)
+                        if (tool is IUsesRemaining iUsesRemaining)
                         {
-                            ((IUsesRemaining)tool).UsesRemaining--;
+                            iUsesRemaining.UsesRemaining--;
 
                             if (((IUsesRemaining)tool).UsesRemaining <= 0)
                             {
@@ -442,7 +441,7 @@ namespace Server.Engines.Quests
                 if (!Completed)
                 {
                     Owner.PlaySound(UpdateSound);
-                    Owner.SendLocalizedMessage(1156539, string.Format("{0}\t{1}", obj.CurProgress.ToString(), obj.MaxProgress.ToString())); // You have recovered ~1_count~ of ~2_max~ Lava Rocks.
+                    Owner.SendLocalizedMessage(1156539, $"{obj.CurProgress.ToString()}\t{obj.MaxProgress.ToString()}"); // You have recovered ~1_count~ of ~2_max~ Lava Rocks.
                 }
                 else
                 {
@@ -548,7 +547,7 @@ namespace Server.Engines.Quests
                 if (!Completed)
                 {
                     Owner.PlaySound(UpdateSound);
-                    Owner.SendLocalizedMessage(1156543, string.Format("{0}\t{1}", obj.CurProgress.ToString(), obj.MaxProgress.ToString())); // You have rescued ~1_count~ of ~2_max~ tiger cubs.
+                    Owner.SendLocalizedMessage(1156543, $"{obj.CurProgress.ToString()}\t{obj.MaxProgress.ToString()}"); // You have rescued ~1_count~ of ~2_max~ tiger cubs.
                 }
                 else
                 {
diff --git a/Scripts/Quests/Eodon/Valley of One Quest/TigerCubEnclosure.cs b/Scripts/Quests/Eodon/Valley of One Quest/TigerCubEnclosure.cs
index c075378c5..12de6d8d1 100644
--- a/Scripts/Quests/Eodon/Valley of One Quest/TigerCubEnclosure.cs	
+++ b/Scripts/Quests/Eodon/Valley of One Quest/TigerCubEnclosure.cs	
@@ -200,9 +200,7 @@ namespace Server.Items
         {
             if (from is PlayerMobile && from.InRange(GetWorldLocation(), 2) && from.InLOS(this))
             {
-                PrideOfTheAmbushQuest quest = QuestHelper.GetQuest((PlayerMobile)from, typeof(PrideOfTheAmbushQuest)) as PrideOfTheAmbushQuest;
-
-                if (quest != null)
+                if (QuestHelper.GetQuest((PlayerMobile)from, typeof(PrideOfTheAmbushQuest)) is PrideOfTheAmbushQuest quest)
                 {
                     from.SendGump(new LockingMechanismGump((PlayerMobile)from, this));
                 }
diff --git a/Scripts/Quests/Mad Scientist/Items/ClockworkMechanism.cs b/Scripts/Quests/Mad Scientist/Items/ClockworkMechanism.cs
index 704776b0d..20a038f62 100644
--- a/Scripts/Quests/Mad Scientist/Items/ClockworkMechanism.cs	
+++ b/Scripts/Quests/Mad Scientist/Items/ClockworkMechanism.cs	
@@ -28,7 +28,7 @@ namespace Server.Items
 
         public override void AddNameProperty(ObjectPropertyList list)
         {
-            list.Add(1112858, string.Format("#{0}", ((int)CreatureDef.CreatureType).ToString())); // ~1_TYPE~ clockwork mechanism
+            list.Add(1112858, $"#{((int)CreatureDef.CreatureType).ToString()}"); // ~1_TYPE~ clockwork mechanism
         }
 
         public override void GetProperties(ObjectPropertyList list)
diff --git a/Scripts/Quests/Mad Scientist/MadScientistQuest.cs b/Scripts/Quests/Mad Scientist/MadScientistQuest.cs
index c18750c8b..5885cb7f9 100644
--- a/Scripts/Quests/Mad Scientist/MadScientistQuest.cs	
+++ b/Scripts/Quests/Mad Scientist/MadScientistQuest.cs	
@@ -156,7 +156,7 @@ namespace Server.Engines.Quests
 
             QuestContext context = m_Table[from];
 
-            from.PublicOverheadMessage(MessageType.Regular, 0x3B2, 1112821, string.Format("#{0}", (int)context.CurrentIngredient)); // I need to add some ~1_INGREDIENT~.
+            from.PublicOverheadMessage(MessageType.Regular, 0x3B2, 1112821, $"#{(int)context.CurrentIngredient}"); // I need to add some ~1_INGREDIENT~.
         }
 
         public class QuestContext
@@ -189,7 +189,7 @@ namespace Server.Engines.Quests
                 SutekIngredient[] ingredients = (SutekIngredient[])Enum.GetValues(typeof(SutekIngredient));
                 m_CurrentIngredient = ingredients[Utility.Random(ingredients.Length)];
 
-                m_Owner.PublicOverheadMessage(MessageType.Regular, 0x3B2, 1112821, string.Format("#{0}", (int)m_CurrentIngredient)); // I need to add some ~1_INGREDIENT~.
+                m_Owner.PublicOverheadMessage(MessageType.Regular, 0x3B2, 1112821, $"#{(int)m_CurrentIngredient}"); // I need to add some ~1_INGREDIENT~.
 
                 m_IngredientsLeft--;
             }
diff --git a/Scripts/Quests/Mad Scientist/Sutek.cs b/Scripts/Quests/Mad Scientist/Sutek.cs
index 65a62beee..d52d04e5c 100644
--- a/Scripts/Quests/Mad Scientist/Sutek.cs	
+++ b/Scripts/Quests/Mad Scientist/Sutek.cs	
@@ -51,10 +51,7 @@ namespace Server.Engines.Quests
 
             Item item = Owner.Backpack.FindItemByType(typeof(ClockworkMechanism));
 
-            if (item != null)
-            {
-                item.Delete();
-            }
+            item?.Delete();
         }
 
         public override void Serialize(GenericWriter writer)
diff --git a/Scripts/Quests/ProfessionFishQuest/Books/RareBook5.cs b/Scripts/Quests/ProfessionFishQuest/Books/RareBook5.cs
index 585afa712..7df4eac8b 100644
--- a/Scripts/Quests/ProfessionFishQuest/Books/RareBook5.cs
+++ b/Scripts/Quests/ProfessionFishQuest/Books/RareBook5.cs
@@ -56,7 +56,7 @@
 
                 "This daring fish",
                 "swims the rivers o'",
-                string.Format("{0}. If prepared", FishInfo.GetFishLocation(typeof(FairySalmon))),
+                $"{FishInfo.GetFishLocation(typeof(FairySalmon))}. If prepared",
                 "correctly, and eaten,",
                 "it be helpin' improve",
                 "a sailor's concentration",
@@ -118,7 +118,7 @@
 
                 "This fish be found in",
                 "the lava rivers o' the",
-                string.Format("{0}. When ", FishInfo.GetFishLocation(typeof(LavaFish))),
+                $"{FishInfo.GetFishLocation(typeof(LavaFish))}. When ",
                 "prepared correctly and",
                 "eaten, it be increasin'",
                 "yer mana when ye be ",
diff --git a/Scripts/Quests/ProfessionFishQuest/Books/RareBook6.cs b/Scripts/Quests/ProfessionFishQuest/Books/RareBook6.cs
index 0155a6722..b2a09ebc3 100644
--- a/Scripts/Quests/ProfessionFishQuest/Books/RareBook6.cs
+++ b/Scripts/Quests/ProfessionFishQuest/Books/RareBook6.cs
@@ -202,7 +202,7 @@
 
                 "This creature be said",
                 "to live in the",
-                string.Format("{0} beneath Fire", FishInfo.GetFishLocation(typeof(TunnelCrab))),
+                $"{FishInfo.GetFishLocation(typeof(TunnelCrab))} beneath Fire",
                 "Island. 'Tis a goblin",
                 "legend so 'tis a bit",
                 "suspect."
@@ -213,7 +213,7 @@
                 "Void Crab:",
 
                 "Some old fisherman in",
-                string.Format("{0} say they have", FishInfo.GetFishLocation(typeof(VoidCrab))),
+                $"{FishInfo.GetFishLocation(typeof(VoidCrab))} say they have",
                 "seen a crab that ",
                 "resembles a void demon",
                 "in the rivers. This has",
@@ -225,7 +225,7 @@
                 "Void Lobster:",
 
                 "The goblins o' the",
-                string.Format("{0} tell o' a", FishInfo.GetFishLocation(typeof(VoidLobster))),
+                $"{FishInfo.GetFishLocation(typeof(VoidLobster))} tell o' a",
                 "creature that looks like",
                 "a cross between a void",
                 "demon and a lobster. They",
diff --git a/Scripts/Quests/ProfessionFishQuest/FishQuestHelper.cs b/Scripts/Quests/ProfessionFishQuest/FishQuestHelper.cs
index 84a73bad6..8a91a8bed 100644
--- a/Scripts/Quests/ProfessionFishQuest/FishQuestHelper.cs
+++ b/Scripts/Quests/ProfessionFishQuest/FishQuestHelper.cs
@@ -139,7 +139,7 @@ namespace Server.Engines.Quests
 
             if (item != null)
             {
-                if (item is PowerScroll)
+                if (item is PowerScroll powerScroll)
                 {
                     int value;
                     double chance = Utility.RandomDouble();
@@ -175,16 +175,14 @@ namespace Server.Engines.Quests
                             break;
                     }
 
-                    ((PowerScroll)item).Skill = SkillName.Fishing;
+                    powerScroll.Skill = SkillName.Fishing;
                     ((PowerScroll)item).Value = value;
                     from.SendLocalizedMessage(1149591); //
                 }
                 else if (item is BaseBook)
                     from.SendLocalizedMessage(1149590); //You receive a rare book.
-                else if (item is Bait)
+                else if (item is Bait bait)
                 {
-                    Bait bait = (Bait)item;
-
                     switch (tier)
                     {
                         case 1:
@@ -224,8 +222,8 @@ namespace Server.Engines.Quests
                     {
                         object label = FishInfo.GetFishLabel(bait.Index);
 
-                        if (label is int)
-                            from.SendLocalizedMessage(1149588, string.Format("#{0}\t", (int)label)); //You receive bait to catch ~1_val~
+                        if (label is int i)
+                            from.SendLocalizedMessage(1149588, $"#{i}\t"); //You receive bait to catch ~1_val~
                         else
                             from.SendLocalizedMessage(1149588, (string)label);      //You receive bait to catch ~1_val~
 
@@ -238,8 +236,8 @@ namespace Server.Engines.Quests
                 }
                 else
                 {
-                    if (item is FishingPole)
-                        BaseRunicTool.ApplyAttributesTo((FishingPole)item, false, 0, Utility.RandomMinMax(1, tier + 1), 25, 100);
+                    if (item is FishingPole fishingPole)
+                        BaseRunicTool.ApplyAttributesTo(fishingPole, false, 0, Utility.RandomMinMax(1, tier + 1), 25, 100);
 
                     from.SendLocalizedMessage(1149589); //You receive some rare fishing equipment.
                 }
@@ -256,7 +254,7 @@ namespace Server.Engines.Quests
 
         public static void AddMonger(Mobile mob)
         {
-            if (mob == null || !(mob is FishMonger) || m_Mongers.Contains((FishMonger)mob))
+            if (!(mob is FishMonger) || m_Mongers.Contains((FishMonger)mob))
                 return;
 
             m_Mongers.Add((FishMonger)mob);
diff --git a/Scripts/Quests/ProfessionFishQuest/FishQuestObjective.cs b/Scripts/Quests/ProfessionFishQuest/FishQuestObjective.cs
index bedf66340..2f09ba420 100644
--- a/Scripts/Quests/ProfessionFishQuest/FishQuestObjective.cs
+++ b/Scripts/Quests/ProfessionFishQuest/FishQuestObjective.cs
@@ -38,10 +38,8 @@ namespace Server.Engines.Quests
 
         public override bool Update(object obj)
         {
-            if (obj is Item)
+            if (obj is Item item)
             {
-                Item item = (Item)obj;
-
                 foreach (KeyValuePair<Type, int[]> kvp in Line)
                 {
                     if (item.GetType() == kvp.Key)
diff --git a/Scripts/Quests/ProfessionFishQuest/ProfessionalFisherQuest.cs b/Scripts/Quests/ProfessionFishQuest/ProfessionalFisherQuest.cs
index 90044429a..876299f55 100644
--- a/Scripts/Quests/ProfessionFishQuest/ProfessionalFisherQuest.cs
+++ b/Scripts/Quests/ProfessionFishQuest/ProfessionalFisherQuest.cs
@@ -96,8 +96,8 @@ namespace Server.Engines.Quests
 
             m_Crate = new ShippingCrate(this);
 
-            if (m_Boat is BaseGalleon)
-                ((BaseGalleon)m_Boat).GalleonHold.DropItem(m_Crate);
+            if (m_Boat is BaseGalleon baseGalleon)
+                baseGalleon.GalleonHold.DropItem(m_Crate);
             else
                 m_Boat.Hold.DropItem(m_Crate);
 
@@ -273,10 +273,10 @@ namespace Server.Engines.Quests
             writer.Write(m_Boat);
             writer.Write(m_Crate);
 
-            if (m_Title is string)
+            if (m_Title is string s)
             {
                 writer.Write(0);
-                writer.Write((string)m_Title);
+                writer.Write(s);
             }
             else
             {
diff --git a/Scripts/Quests/ProfessionFishQuest/ShippingCrate.cs b/Scripts/Quests/ProfessionFishQuest/ShippingCrate.cs
index aca9a720e..a61dbd45e 100644
--- a/Scripts/Quests/ProfessionFishQuest/ShippingCrate.cs
+++ b/Scripts/Quests/ProfessionFishQuest/ShippingCrate.cs
@@ -76,8 +76,8 @@ namespace Server.Items
 
             object delivery = GetDeliveryInfo();
 
-            if (delivery is string)
-                list.Add((string)delivery);
+            if (delivery is string s)
+                list.Add(s);
             else
                 list.Add((int)delivery);
 
@@ -213,7 +213,7 @@ namespace Server.Items
 
         public object GetDeliveryInfo()
         {
-            if (Quest != null && Quest is ProfessionalFisherQuest && Quest.TurnIn != null)
+            if (Quest is ProfessionalFisherQuest && Quest.TurnIn != null)
             {
                 Region reg = Quest.TurnIn.Region;
 
diff --git a/Scripts/Quests/ProfessionalBountyQuest/BountyBoard.cs b/Scripts/Quests/ProfessionalBountyQuest/BountyBoard.cs
index 451149381..d4d6fae95 100644
--- a/Scripts/Quests/ProfessionalBountyQuest/BountyBoard.cs
+++ b/Scripts/Quests/ProfessionalBountyQuest/BountyBoard.cs
@@ -94,16 +94,16 @@ namespace Server.Items
                 {
                     StringList strList = VendorSearch.StringList;
 
-                    args = string.Format("{0} {1} {2}", strList.GetString(capt.Adjective), strList.GetString(capt.Noun), capt.PirateName > 0 ? strList.GetString(capt.PirateName) : capt.Name);
+                    args = $"{strList.GetString(capt.Adjective)} {strList.GetString(capt.Noun)} {(capt.PirateName > 0 ? strList.GetString(capt.PirateName) : capt.Name)}";
 
                     AddHtml(110, y, 400, 16, Color(C16232(lightHue), args), false, false);
                 }
                 else
                 {
                     if (capt.PirateName > 0)
-                        args = string.Format("#{0}\t#{1}\t#{2}", capt.Adjective, capt.Noun, capt.PirateName);
+                        args = $"#{capt.Adjective}\t#{capt.Noun}\t#{capt.PirateName}";
                     else
-                        args = string.Format("#{0}\t#{1}\t{2}", capt.Adjective, capt.Noun, capt.Name);
+                        args = $"#{capt.Adjective}\t#{capt.Noun}\t{capt.Name}";
 
                     AddHtmlLocalized(110, y, 400, 16, 1116690 + (idx - 1), args, lightHue, false, false); // ~1_val~ ~2_val~ ~3_val~
                 }
diff --git a/Scripts/Quests/ProfessionalBountyQuest/BountyQuestObjective.cs b/Scripts/Quests/ProfessionalBountyQuest/BountyQuestObjective.cs
index b1f02cb5a..26d2bf37f 100644
--- a/Scripts/Quests/ProfessionalBountyQuest/BountyQuestObjective.cs
+++ b/Scripts/Quests/ProfessionalBountyQuest/BountyQuestObjective.cs
@@ -58,7 +58,7 @@ namespace Server.Engines.Quests
 
         private void ValidateCaught()
         {
-            if (m_CapturedCaptain != null && m_CapturedCaptain is PirateCaptain && Quest is ProfessionalBountyQuest)
+            if (m_CapturedCaptain is PirateCaptain && Quest is ProfessionalBountyQuest)
                 ((PirateCaptain)m_CapturedCaptain).Quest = Quest as ProfessionalBountyQuest;
         }
     }
diff --git a/Scripts/Quests/ProfessionalBountyQuest/BountyQuestSpawner.cs b/Scripts/Quests/ProfessionalBountyQuest/BountyQuestSpawner.cs
index cb4dc52d2..ace5ce66c 100644
--- a/Scripts/Quests/ProfessionalBountyQuest/BountyQuestSpawner.cs
+++ b/Scripts/Quests/ProfessionalBountyQuest/BountyQuestSpawner.cs
@@ -735,8 +735,7 @@ namespace Server.Engines.Quests
                 int c = reader.ReadInt();
                 for (int j = 0; j < c; j++)
                 {
-                    BaseShipCaptain capt = reader.ReadMobile() as BaseShipCaptain;
-                    if (capt != null && !capt.Deleted && capt.Alive)
+                    if (reader.ReadMobile() is BaseShipCaptain capt && !capt.Deleted && capt.Alive)
                     {
                         m_ActiveZones[zone].Add(capt);
                     }
@@ -790,7 +789,7 @@ namespace Server.Engines.Quests
                     mapitem.AddWorldPin(pnt.X, pnt.Y);
                 }
 
-                mapitem.Name = string.Format("Pirate - Jhelom {0}", i + 1);
+                mapitem.Name = $"Pirate - Jhelom {i + 1}";
                 e.Mobile.AddToBackpack(mapitem);
             }
 
@@ -805,7 +804,7 @@ namespace Server.Engines.Quests
                     mapitem.AddWorldPin(pnt.X, pnt.Y);
                 }
 
-                mapitem.Name = string.Format("Pirate - Moonglow {0}", i + 1);
+                mapitem.Name = $"Pirate - Moonglow {i + 1}";
                 e.Mobile.AddToBackpack(mapitem);
             }
 
@@ -820,7 +819,7 @@ namespace Server.Engines.Quests
                     mapitem.AddWorldPin(pnt.X, pnt.Y);
                 }
 
-                mapitem.Name = string.Format("Pirate - tokuno {0}", i + 1);
+                mapitem.Name = $"Pirate - tokuno {i + 1}";
                 e.Mobile.AddToBackpack(mapitem);
             }
 
@@ -835,7 +834,7 @@ namespace Server.Engines.Quests
                     mapitem.AddWorldPin(pnt.X, pnt.Y);
                 }
 
-                mapitem.Name = string.Format("Merchant - tokuno {0}", i + 1);
+                mapitem.Name = $"Merchant - tokuno {i + 1}";
                 e.Mobile.AddToBackpack(mapitem);
             }
             for (int i = 0; i < SpawnDefinition.MerchantTramFelCourses1.Length; i++)
@@ -849,7 +848,7 @@ namespace Server.Engines.Quests
                     mapitem.AddWorldPin(pnt.X, pnt.Y);
                 }
 
-                mapitem.Name = string.Format("Merchant - tram/fel(a) {0}", i + 1);
+                mapitem.Name = $"Merchant - tram/fel(a) {i + 1}";
                 e.Mobile.AddToBackpack(mapitem);
             }
             for (int i = 0; i < SpawnDefinition.MerchantTramFelCourses2.Length; i++)
@@ -863,7 +862,7 @@ namespace Server.Engines.Quests
                     mapitem.AddWorldPin(pnt.X, pnt.Y);
                 }
 
-                mapitem.Name = string.Format("Merchant - tram/fel(b) {0}", i + 1);
+                mapitem.Name = $"Merchant - tram/fel(b) {i + 1}";
                 e.Mobile.AddToBackpack(mapitem);
             }
 
diff --git a/Scripts/Quests/ProfessionalBountyQuest/Items/BindingRope.cs b/Scripts/Quests/ProfessionalBountyQuest/Items/BindingRope.cs
index 6920ea613..bae3c1e4a 100644
--- a/Scripts/Quests/ProfessionalBountyQuest/Items/BindingRope.cs
+++ b/Scripts/Quests/ProfessionalBountyQuest/Items/BindingRope.cs
@@ -67,10 +67,8 @@ namespace Server.Items
             {
                 if (targeted is Mobile)
                 {
-                    if (targeted is PirateCaptain)
+                    if (targeted is PirateCaptain cap)
                     {
-                        PirateCaptain cap = (PirateCaptain)targeted;
-
                         if (cap.Hits > cap.HitsMax / 10)
                         {
                             from.SendLocalizedMessage(1116756); //The pirate seems to have too much fight left to be bound.
diff --git a/Scripts/Quests/ProfessionalBountyQuest/Items/DeathCertificate.cs b/Scripts/Quests/ProfessionalBountyQuest/Items/DeathCertificate.cs
index 80508593b..9bbdb8f42 100644
--- a/Scripts/Quests/ProfessionalBountyQuest/Items/DeathCertificate.cs
+++ b/Scripts/Quests/ProfessionalBountyQuest/Items/DeathCertificate.cs
@@ -14,14 +14,12 @@ namespace Server.Items
         public DeathCertificate(Mobile owner)
             : base(0x14F0)
         {
-            if (owner is PirateCaptain)
+            if (owner is PirateCaptain capt)
             {
-                PirateCaptain capt = (PirateCaptain)owner;
-
                 if (capt.PirateName > 0)
-                    m_Owner = string.Format("#{0}\t#{1}\t#{2}", capt.Adjective, capt.Noun, capt.PirateName);
+                    m_Owner = $"#{capt.Adjective}\t#{capt.Noun}\t#{capt.PirateName}";
                 else
-                    m_Owner = string.Format("#{0}\t#{1}\t{2}", capt.Adjective, capt.Noun, Name);
+                    m_Owner = $"#{capt.Adjective}\t#{capt.Noun}\t{Name}";
             }
         }
 
diff --git a/Scripts/Quests/ProfessionalBountyQuest/Items/RuinedShipPlans.cs b/Scripts/Quests/ProfessionalBountyQuest/Items/RuinedShipPlans.cs
index ee56566ee..d18012c97 100644
--- a/Scripts/Quests/ProfessionalBountyQuest/Items/RuinedShipPlans.cs
+++ b/Scripts/Quests/ProfessionalBountyQuest/Items/RuinedShipPlans.cs
@@ -45,9 +45,9 @@ namespace Server.Items
             list.Add(1116747); //Orc Ship
 
             if (m_Joined.Count == 1)
-                list.Add(1116776, string.Format("{0}\t{1}", ((int)m_PlanType).ToString(), "8")); //Part ~1_val~ of ~2_val~
+                list.Add(1116776, $"{((int)m_PlanType).ToString()}\t{"8"}"); //Part ~1_val~ of ~2_val~
             else
-                list.Add(1116777, string.Format("{0}\t{1}", m_Joined.Count.ToString(), "8")); //Parts ~1_val~ of ~2_val~
+                list.Add(1116777, $"{m_Joined.Count.ToString()}\t{"8"}"); //Parts ~1_val~ of ~2_val~
 
             if (m_Joined.Count > 1)
             {
@@ -114,9 +114,8 @@ namespace Server.Items
             {
                 if (targeted is Item && !((Item)targeted).IsChildOf(from.Backpack))
                     from.SendMessage("That must be in your pack to combine.");
-                else if (targeted is RuinedShipPlans)
+                else if (targeted is RuinedShipPlans toAttach)
                 {
-                    RuinedShipPlans toAttach = (RuinedShipPlans)targeted;
                     m_Plans.TryCombine(from, toAttach);
                 }
                 else
diff --git a/Scripts/Quests/ProfessionalBountyQuest/Mobiles/MerchantCrew.cs b/Scripts/Quests/ProfessionalBountyQuest/Mobiles/MerchantCrew.cs
index 2ea527d4f..dd247009e 100644
--- a/Scripts/Quests/ProfessionalBountyQuest/Mobiles/MerchantCrew.cs
+++ b/Scripts/Quests/ProfessionalBountyQuest/Mobiles/MerchantCrew.cs
@@ -12,10 +12,10 @@ namespace Server.Mobiles
             if (weapon == null)
                 return null;
 
-            if (weapon is BaseWeapon)
+            if (weapon is BaseWeapon baseWeapon)
             {
                 if (Utility.RandomBool())
-                    return ((BaseWeapon)weapon).PrimaryAbility;
+                    return baseWeapon.PrimaryAbility;
                 else
                     return ((BaseWeapon)weapon).SecondaryAbility;
             }
diff --git a/Scripts/Quests/ProfessionalBountyQuest/Mobiles/PirateCaptain.cs b/Scripts/Quests/ProfessionalBountyQuest/Mobiles/PirateCaptain.cs
index 1f4d180c5..fb0a74f9b 100644
--- a/Scripts/Quests/ProfessionalBountyQuest/Mobiles/PirateCaptain.cs
+++ b/Scripts/Quests/ProfessionalBountyQuest/Mobiles/PirateCaptain.cs
@@ -16,7 +16,7 @@ namespace Server.Mobiles
 
             foreach (Mobile mob in World.Mobiles.Values)
             {
-                if (mob != null && mob is PlayerMobile && mob.Murderer)
+                if (mob is PlayerMobile && mob.Murderer)
                     m_RedNames.Add(mob.Name);
             }
         }
@@ -148,9 +148,9 @@ namespace Server.Mobiles
             string args;
 
             if (m_PirateName > 0)
-                args = string.Format("#{0}\t#{1}\t#{2}", m_Adjective, m_Noun, m_PirateName);
+                args = $"#{m_Adjective}\t#{m_Noun}\t#{m_PirateName}";
             else
-                args = string.Format("#{0}\t#{1}\t{2}", m_Adjective, m_Noun, Name);
+                args = $"#{m_Adjective}\t#{m_Noun}\t{Name}";
 
             list.Add(1116690, args);
         }
@@ -241,9 +241,8 @@ namespace Server.Mobiles
             object[] objs = (object[])obj;
             int x = (int)objs[0];
             int y = (int)objs[1];
-            Item pole = objs[2] as Item;
 
-            if (pole != null)
+            if (objs[2] is Item pole)
                 MoveToWorld(new Point3D(x, y, pole.Z), pole.Map);
 
             Blessed = true;
@@ -271,9 +270,9 @@ namespace Server.Mobiles
                 PlayerMobile questee = hasQuest[Utility.Random(hasQuest.Count)];
                 BaseQuest q = QuestHelper.GetQuest(questee, typeof(ProfessionalBountyQuest));
 
-                if (q != null && q is ProfessionalBountyQuest)
+                if (q is ProfessionalBountyQuest professionalBountyQuest)
                 {
-                    ((ProfessionalBountyQuest)q).OnPirateDeath(this);
+                    professionalBountyQuest.OnPirateDeath(this);
                     questee.AddToBackpack(new DeathCertificate(this));
                 }
             }
diff --git a/Scripts/Quests/ProfessionalBountyQuest/Mobiles/PirateCrew.cs b/Scripts/Quests/ProfessionalBountyQuest/Mobiles/PirateCrew.cs
index 8d4fc3cfb..2a6670cb4 100644
--- a/Scripts/Quests/ProfessionalBountyQuest/Mobiles/PirateCrew.cs
+++ b/Scripts/Quests/ProfessionalBountyQuest/Mobiles/PirateCrew.cs
@@ -14,10 +14,10 @@ namespace Server.Mobiles
             if (weapon == null)
                 return null;
 
-            if (weapon is BaseWeapon)
+            if (weapon is BaseWeapon baseWeapon)
             {
                 if (Utility.RandomBool())
-                    return ((BaseWeapon)weapon).PrimaryAbility;
+                    return baseWeapon.PrimaryAbility;
                 else
                     return ((BaseWeapon)weapon).SecondaryAbility;
             }
diff --git a/Scripts/Quests/ProfessionalBountyQuest/Mobiles/SeaMarketOfficer.cs b/Scripts/Quests/ProfessionalBountyQuest/Mobiles/SeaMarketOfficer.cs
index b3d74fec8..ddc5977ac 100644
--- a/Scripts/Quests/ProfessionalBountyQuest/Mobiles/SeaMarketOfficer.cs
+++ b/Scripts/Quests/ProfessionalBountyQuest/Mobiles/SeaMarketOfficer.cs
@@ -41,9 +41,9 @@ namespace Server.Mobiles
             {
                 BaseBoat boat = FishQuestHelper.GetBoat(pm);
 
-                if (boat != null && boat is BaseGalleon)
+                if (boat is BaseGalleon baseGalleon)
                 {
-                    if (((BaseGalleon)boat).Scuttled)
+                    if (baseGalleon.Scuttled)
                     {
                         pm.SendLocalizedMessage(1116752); //Your ship is a mess!  Fix it first and then we can talk about catching pirates.
                     }
diff --git a/Scripts/Quests/ProfessionalBountyQuest/ProfessionalBountyQuest.cs b/Scripts/Quests/ProfessionalBountyQuest/ProfessionalBountyQuest.cs
index 79da258c5..0e0a227e0 100644
--- a/Scripts/Quests/ProfessionalBountyQuest/ProfessionalBountyQuest.cs
+++ b/Scripts/Quests/ProfessionalBountyQuest/ProfessionalBountyQuest.cs
@@ -62,9 +62,9 @@ namespace Server.Engines.Quests
 
                 foreach (BaseObjective obj in Objectives)
                 {
-                    if (obj is BountyQuestObjective)
+                    if (obj is BountyQuestObjective bountyQuestObjective)
                     {
-                        ((BountyQuestObjective)obj).Captured = true;
+                        bountyQuestObjective.Captured = true;
                         ((BountyQuestObjective)obj).CapturedCaptain = captain;
                     }
                 }
@@ -78,9 +78,9 @@ namespace Server.Engines.Quests
 
             foreach (BaseObjective obj in Objectives)
             {
-                if (obj is BountyQuestObjective)
+                if (obj is BountyQuestObjective bountyQuestObjective)
                 {
-                    ((BountyQuestObjective)obj).Captured = false;
+                    bountyQuestObjective.Captured = false;
                     ((BountyQuestObjective)obj).CapturedCaptain = null;
                 }
             }
@@ -218,14 +218,14 @@ namespace Server.Engines.Quests
                         }
                     }
 
-                    mob.SendLocalizedMessage(1149825, string.Format("{0}\t{1}", totalAward, eachAward)); //Here's your share of the ~1_val~ reward money, you get ~2_val~ gold.  You've earned it!
+                    mob.SendLocalizedMessage(1149825, $"{totalAward}\t{eachAward}"); //Here's your share of the ~1_val~ reward money, you get ~2_val~ gold.  You've earned it!
                 }
                 else
                 {
                     foreach (Mobile mobile in m_Helpers)
                     {
                         if (mobile != mob && mobile.NetState != null)
-                            mobile.SendLocalizedMessage(1149837, string.Format("{0}\t{1}\t{2}", eachAward, mob.Name, Owner.Name)); //~1_val~ gold is for ~2_val~, I can't find them so I'm giving this to Captain ~3_val~.
+                            mobile.SendLocalizedMessage(1149837, $"{eachAward}\t{mob.Name}\t{Owner.Name}"); //~1_val~ gold is for ~2_val~, I can't find them so I'm giving this to Captain ~3_val~.
                     }
 
                     Owner.AddToBackpack(new Gold(eachAward));
diff --git a/Scripts/Quests/The Ritual/Items.cs b/Scripts/Quests/The Ritual/Items.cs
index f19512b7f..f9359108c 100644
--- a/Scripts/Quests/The Ritual/Items.cs	
+++ b/Scripts/Quests/The Ritual/Items.cs	
@@ -73,11 +73,11 @@ namespace Server.Engines.Quests.RitualQuest
         {
             if (_NextUse > DateTime.UtcNow)
             {
-                m.SendLocalizedMessage(1072529, string.Format("{0}\t{1}", ((int)(_NextUse - DateTime.UtcNow).TotalSeconds).ToString(), "seconds"));
+                m.SendLocalizedMessage(1072529, $"{((int)(_NextUse - DateTime.UtcNow).TotalSeconds).ToString()}\t{"seconds"}");
             }
-            else if (m is PlayerMobile)
+            else if (m is PlayerMobile playerMobile)
             {
-                CatchMeIfYouCanQuest quest = QuestHelper.GetQuest<CatchMeIfYouCanQuest>((PlayerMobile)m);
+                CatchMeIfYouCanQuest quest = QuestHelper.GetQuest<CatchMeIfYouCanQuest>(playerMobile);
 
                 if (quest != null && SpellHelper.CheckCanTravel(m) && _Timer == null && WarpBounds.Contains(m.Location))
                 {
diff --git a/Scripts/Quests/The Ritual/Mobiles.cs b/Scripts/Quests/The Ritual/Mobiles.cs
index 5954075e2..b6366306c 100644
--- a/Scripts/Quests/The Ritual/Mobiles.cs	
+++ b/Scripts/Quests/The Ritual/Mobiles.cs	
@@ -180,9 +180,9 @@ namespace Server.Engines.Quests.RitualQuest
 
         public override int Damage(int amount, Mobile from, bool informMount, bool checkDisrupt)
         {
-            if (from is PlayerMobile)
+            if (from is PlayerMobile playerMobile)
             {
-                CatchMeIfYouCanQuest quest = QuestHelper.GetQuest<CatchMeIfYouCanQuest>((PlayerMobile)from);
+                CatchMeIfYouCanQuest quest = QuestHelper.GetQuest<CatchMeIfYouCanQuest>(playerMobile);
 
                 if (quest != null)
                 {
diff --git a/Scripts/Quests/The Ritual/Puzzle.cs b/Scripts/Quests/The Ritual/Puzzle.cs
index f67442e07..877922255 100644
--- a/Scripts/Quests/The Ritual/Puzzle.cs	
+++ b/Scripts/Quests/The Ritual/Puzzle.cs	
@@ -105,9 +105,9 @@ namespace Server.Engines.Quests.RitualQuest
                 return;
             }
 
-            if (from is PlayerMobile)
+            if (from is PlayerMobile playerMobile)
             {
-                PristineCrystalLotusQuest quest = QuestHelper.GetQuest<PristineCrystalLotusQuest>((PlayerMobile)from);
+                PristineCrystalLotusQuest quest = QuestHelper.GetQuest<PristineCrystalLotusQuest>(playerMobile);
 
                 if (quest != null)
                 {
diff --git a/Scripts/Quests/WitchApprentice/Conversations.cs b/Scripts/Quests/WitchApprentice/Conversations.cs
index c736dd5c1..8c09e8454 100644
--- a/Scripts/Quests/WitchApprentice/Conversations.cs
+++ b/Scripts/Quests/WitchApprentice/Conversations.cs
@@ -317,9 +317,7 @@ namespace Server.Engines.Quests.Hag
                 1055010;
         public override void OnRead()
         {
-            FindIngredientObjective obj = System.FindObjective(typeof(FindIngredientObjective)) as FindIngredientObjective;
-
-            if (obj != null)
+            if (System.FindObjective(typeof(FindIngredientObjective)) is FindIngredientObjective obj)
                 System.AddObjective(new FindIngredientObjective(obj.Ingredients, true));
         }
     }
@@ -512,9 +510,7 @@ namespace Server.Engines.Quests.Hag
         }
         public override void OnRead()
         {
-            FindIngredientObjective obj = System.FindObjective(typeof(FindIngredientObjective)) as FindIngredientObjective;
-
-            if (obj != null)
+            if (System.FindObjective(typeof(FindIngredientObjective)) is FindIngredientObjective obj)
                 obj.NextStep();
         }
 
diff --git a/Scripts/Quests/WitchApprentice/Objectives.cs b/Scripts/Quests/WitchApprentice/Objectives.cs
index fddb99fe7..56145fda5 100644
--- a/Scripts/Quests/WitchApprentice/Objectives.cs
+++ b/Scripts/Quests/WitchApprentice/Objectives.cs
@@ -103,9 +103,7 @@ namespace Server.Engines.Quests.Hag
 
         private void DeleteImp(object imp)
         {
-            Mobile m = imp as Mobile;
-
-            if (m != null && !m.Deleted)
+            if (imp is Mobile m && !m.Deleted)
             {
                 Effects.SendLocationEffect(m.Location, m.Map, 0x3728, 10, 10);
                 Effects.PlaySound(m.Location, m.Map, 0x1FE);
@@ -247,9 +245,7 @@ namespace Server.Engines.Quests.Hag
 
         private void DeleteImp(object imp)
         {
-            Mobile m = imp as Mobile;
-
-            if (m != null && !m.Deleted)
+            if (imp is Mobile m && !m.Deleted)
             {
                 Effects.SendLocationEffect(m.Location, m.Map, 0x3728, 10, 10);
                 Effects.PlaySound(m.Location, m.Map, 0x1FE);
diff --git a/Scripts/Regions/BaseRegion.cs b/Scripts/Regions/BaseRegion.cs
index 89ff21bba..c8f9e69d8 100644
--- a/Scripts/Regions/BaseRegion.cs
+++ b/Scripts/Regions/BaseRegion.cs
@@ -201,7 +201,7 @@ namespace Server.Regions
             {
                 BaseRegion br = region as BaseRegion;
 
-                if (br != null && br.m_RuneName != null)
+                if (br?.m_RuneName != null)
                     return br.m_RuneName;
 
                 region = region.Parent;
@@ -217,9 +217,7 @@ namespace Server.Regions
                 if (!region.AllowSpawn())
                     return false;
 
-                BaseRegion br = region as BaseRegion;
-
-                if (br != null)
+                if (region is BaseRegion br)
                 {
                     if (br.Spawns != null)
                     {
diff --git a/Scripts/Regions/DamagingRegion.cs b/Scripts/Regions/DamagingRegion.cs
index ee0d90669..2c2d155f3 100644
--- a/Scripts/Regions/DamagingRegion.cs
+++ b/Scripts/Regions/DamagingRegion.cs
@@ -98,10 +98,7 @@ namespace Server.Regions
 
             if (m_Table.TryGetValue(m, out t))
             {
-                if (t != null)
-                {
-                    t.Stop();
-                }
+                t?.Stop();
 
                 m_Table.Remove(m);
             }
@@ -175,9 +172,9 @@ namespace Server.Regions
 
             int dmg = Utility.Random(2, 3);
 
-            if (m is PlayerMobile)
+            if (m is PlayerMobile playerMobile)
             {
-                dmg = (int)BalmOfProtection.HandleDamage((PlayerMobile)m, dmg);
+                dmg = (int)BalmOfProtection.HandleDamage(playerMobile, dmg);
             }
 
             AOS.Damage(m, dmg, 0, 0, 100, 0, 0);
diff --git a/Scripts/Regions/GuardedRegion.cs b/Scripts/Regions/GuardedRegion.cs
index 5337c9b8e..323ad0f68 100644
--- a/Scripts/Regions/GuardedRegion.cs
+++ b/Scripts/Regions/GuardedRegion.cs
@@ -127,10 +127,8 @@ namespace Server.Regions
 
             foreach (Mobile m in eable)
             {
-                if (m is BaseGuard)
+                if (m is BaseGuard g)
                 {
-                    BaseGuard g = (BaseGuard)m;
-
                     if (g.Focus == null) // idling
                     {
                         useGuard = g;
diff --git a/Scripts/Regions/HouseRegion.cs b/Scripts/Regions/HouseRegion.cs
index e969d8548..8053da491 100644
--- a/Scripts/Regions/HouseRegion.cs
+++ b/Scripts/Regions/HouseRegion.cs
@@ -72,9 +72,7 @@ namespace Server.Regions
 
         public override bool CanSee(Mobile m, IEntity e)
         {
-            Item item = e as Item;
-
-            if (item != null && ((m.PublicHouseContent && House.Public) ||
+            if (e is Item item && ((m.PublicHouseContent && House.Public) ||
                                  House.IsInside(m) ||
                                  ExcludeItem(item) ||
                                  (item.RootParent != null && m.CanSee(item.RootParent))))
@@ -147,10 +145,8 @@ namespace Server.Regions
                 m.Location = House.BanLocation;
                 m.SendLocalizedMessage(1061637); // You are not allowed to access 
             }
-            else if (House is HouseFoundation)
+            else if (House is HouseFoundation foundation)
             {
-                HouseFoundation foundation = (HouseFoundation)House;
-
                 if (foundation.Customizer != null && foundation.Customizer != m && House.IsInside(m))
                     m.Location = House.BanLocation;
             }
@@ -203,10 +199,8 @@ namespace Server.Regions
                 from.SendLocalizedMessage(1061637); // You are not allowed to access 
                 return false;
             }
-            else if (House is HouseFoundation)
+            else if (House is HouseFoundation foundation)
             {
-                HouseFoundation foundation = (HouseFoundation)House;
-
                 if (foundation.Customizer != null && foundation.Customizer != from && House.IsInside(newLocation, 16))
                     return false;
             }
@@ -395,10 +389,8 @@ namespace Server.Regions
 
         public override bool OnDoubleClick(Mobile from, object o)
         {
-            if (o is Container)
+            if (o is Container c)
             {
-                Container c = (Container)o;
-
                 SecureAccessResult res = House.CheckSecureAccess(from, c);
 
                 switch (res)
diff --git a/Scripts/Regions/SeaMarketRegion.cs b/Scripts/Regions/SeaMarketRegion.cs
index b3a19a296..2870443c5 100644
--- a/Scripts/Regions/SeaMarketRegion.cs
+++ b/Scripts/Regions/SeaMarketRegion.cs
@@ -133,11 +133,11 @@ namespace Server.Regions
                     string combine;
 
                     if (Sextant.Format(loc, map, ref xLong, ref yLat, ref xMins, ref yMins, ref xEast, ref ySouth))
-                        locArgs = string.Format("{0}°{1}'{2},{3}°{4}'{5}", yLat, yMins, ySouth ? "S" : "N", xLong, xMins, xEast ? "E" : "W");
+                        locArgs = $"{yLat}°{yMins}'{(ySouth ? "S" : "N")},{xLong}°{xMins}'{(xEast ? "E" : "W")}";
                     else
                         locArgs = "?????";
 
-                    combine = string.Format("{0}\t{1}", capt.PirateName > -1 ? string.Format("#{0}", capt.PirateName) : capt.Name, locArgs);
+                    combine = $"{(capt.PirateName > -1 ? string.Format("#{0}", capt.PirateName) : capt.Name)}\t{locArgs}";
 
                     int cliloc = Utility.RandomMinMax(1149856, 1149865);
                     npc.SayTo(from, cliloc, combine);
diff --git a/Scripts/Regions/Spawning/SpawnDefinition.cs b/Scripts/Regions/Spawning/SpawnDefinition.cs
index 529d9c166..7dfbd9d27 100644
--- a/Scripts/Regions/Spawning/SpawnDefinition.cs
+++ b/Scripts/Regions/Spawning/SpawnDefinition.cs
@@ -183,9 +183,7 @@ namespace Server.Regions
         {
             Mobile mobile = CreateMobile();
 
-            BaseCreature creature = mobile as BaseCreature;
-
-            if (creature != null)
+            if (mobile is BaseCreature creature)
             {
                 creature.Home = entry.HomeLocation;
                 creature.RangeHome = entry.HomeRange;
diff --git a/Scripts/Regions/Spawning/SpawnEntry.cs b/Scripts/Regions/Spawning/SpawnEntry.cs
index d5f14098a..27b3ad911 100644
--- a/Scripts/Regions/Spawning/SpawnEntry.cs
+++ b/Scripts/Regions/Spawning/SpawnEntry.cs
@@ -212,9 +212,8 @@ namespace Server.Regions
             for (int i = 0; i < count; i++)
             {
                 int serial = reader.ReadInt();
-                ISpawnable spawnableEntity = World.FindEntity(serial) as ISpawnable;
 
-                if (spawnableEntity != null)
+                if (World.FindEntity(serial) is ISpawnable spawnableEntity)
                     Add(spawnableEntity);
             }
 
@@ -391,8 +390,8 @@ namespace Server.Regions
 
             spawn.Spawner = this;
 
-            if (spawn is BaseCreature)
-                ((BaseCreature)spawn).RemoveIfUntamed = RemoveIfUntamed;
+            if (spawn is BaseCreature baseCreature)
+                baseCreature.RemoveIfUntamed = RemoveIfUntamed;
         }
 
         void ISpawner.Remove(ISpawnable spawn)
diff --git a/Scripts/Regions/TeleportRegion.cs b/Scripts/Regions/TeleportRegion.cs
index 4e5571aff..a551fef1f 100644
--- a/Scripts/Regions/TeleportRegion.cs
+++ b/Scripts/Regions/TeleportRegion.cs
@@ -119,12 +119,12 @@ namespace Server.Regions
 
                     if (fromMap == null)
                     {
-                        throw new ArgumentException(string.Format("Map parsed as null: {0}", from));
+                        throw new ArgumentException($"Map parsed as null: {from}");
                     }
 
                     if (toMap == null)
                     {
-                        throw new ArgumentException(string.Format("Map parsed as null: {0}", to));
+                        throw new ArgumentException($"Map parsed as null: {to}");
                     }
 
                     if (Siege.SiegeShard && (fromMap == Map.Trammel || toMap == Map.Trammel))
@@ -170,11 +170,11 @@ namespace Server.Regions
 
                     if (!Siege.SiegeShard && locMap != null && locMap.Rules != MapRules.FeluccaRules && teleMap.Rules == MapRules.FeluccaRules)
                     {
-                        teleRegion = new TeleportRegionPVPWarning(string.Format("Teleport Region {0}", unique.ToString()), locMap, recs, list);
+                        teleRegion = new TeleportRegionPVPWarning($"Teleport Region {unique.ToString()}", locMap, recs, list);
                     }
                     else
                     {
-                        teleRegion = new TeleportRegion(string.Format("Teleport Region {0}", unique.ToString()), locMap, recs, list);
+                        teleRegion = new TeleportRegion($"Teleport Region {unique.ToString()}", locMap, recs, list);
                     }
 
                     teleRegion.Register();
@@ -196,9 +196,7 @@ namespace Server.Regions
         {
             if (m.CanBeginAction(typeof(Teleporter)))
             {
-                var pm = m as PlayerMobile;
-
-                if (pm != null)
+                if (m is PlayerMobile pm)
                 {
                     if (pm.DisabledPvpWarning)
                     {
diff --git a/Scripts/Services/AccountVault/AccountVault.cs b/Scripts/Services/AccountVault/AccountVault.cs
index 4ee8bfd01..7fb503d26 100644
--- a/Scripts/Services/AccountVault/AccountVault.cs
+++ b/Scripts/Services/AccountVault/AccountVault.cs
@@ -143,10 +143,7 @@ namespace Server.AccountVault
 
                     var manager = FindNearest<VaultManager>(pm, m => m.InRange(pm.Location, Core.GlobalUpdateRange));
 
-                    if (manager != null)
-                    {
-                        manager.SayTo(pm, 1158644, string.Format("{0}\t{1}", TotalItems, TotalWeight), 0x3B2); // Vault container has ~1_VAL~ items, ~2_VAL~ stones
-                    }
+                    manager?.SayTo(pm, 1158644, $"{TotalItems}\t{TotalWeight}", 0x3B2);
                 });
             }
         }
@@ -321,7 +318,7 @@ namespace Server.AccountVault
                                 m,
                                 new NewMaginciaMessage(
                                     1158081, // Rent Past Due
-                                    string.Format("Your vault contents have been put up for auction and no longer can be claimed. This vault is located at {0} [{1}].", GetWorldLocation().ToString(), Map.ToString()),
+                                    $"Your vault contents have been put up for auction and no longer can be claimed. This vault is located at {GetWorldLocation().ToString()} [{Map.ToString()}].",
                                     SystemSettings.PastDuePeriod,
                                     true));
                         }
@@ -433,7 +430,7 @@ namespace Server.AccountVault
                         m,
                         new NewMaginciaMessage(
                             1158081, // Rent Past Due
-                            string.Format("Rent is past due for your Vault and your items will be lost after 168 hours unless you claim your Vault from the Vault Manager. This vault is located at {0} [{1}].", GetWorldLocation().ToString(), Map.ToString()),
+                            $"Rent is past due for your Vault and your items will be lost after 168 hours unless you claim your Vault from the Vault Manager. This vault is located at {GetWorldLocation().ToString()} [{Map.ToString()}].",
                             SystemSettings.PastDuePeriod,
                             true));
                 }
@@ -549,7 +546,7 @@ namespace Server.AccountVault
 
         public static void TryRentVault(PlayerMobile pm, AccountVault vault, VaultManager manager)
         {
-            if (pm != null && pm.Account != null && !HasVault(pm))
+            if (pm?.Account != null && !HasVault(pm))
             {
                 if (vault == null)
                 {
@@ -664,10 +661,7 @@ namespace Server.AccountVault
                 }
             }
 
-            if (eable != null)
-            {
-                eable.Free();
-            }
+            eable?.Free();
 
             return default(T);
         }
@@ -800,9 +794,8 @@ namespace Server.AccountVault
 
             public override void OnClick()
             {
-                var pm = Owner.From as PlayerMobile;
 
-                if (pm != null && Container != null && !Container.Deleted)
+                if (Owner.From is PlayerMobile pm && Container != null && !Container.Deleted)
                 {
                     BaseGump.SendGump(new ContainerDisplayGump(pm, Container, 1158005));
                 }
diff --git a/Scripts/Services/AccountVault/AuctionVault.cs b/Scripts/Services/AccountVault/AuctionVault.cs
index 68a464550..a95822cbb 100644
--- a/Scripts/Services/AccountVault/AuctionVault.cs
+++ b/Scripts/Services/AccountVault/AuctionVault.cs
@@ -60,9 +60,8 @@ namespace Server.AccountVault
             if (item != null)
             {
                 var name = Auction.AuctionItemName();
-                var vaultCont = item as AccountVaultContainer;
 
-                if (vaultCont != null)
+                if (item is AccountVaultContainer vaultCont)
                 {
                     if (vaultCont.TryClaim(m))
                     {
@@ -101,9 +100,7 @@ namespace Server.AccountVault
             }
             else
             {
-                var pm = from as PlayerMobile;
-
-                if (pm != null && _Auction != null)
+                if (from is PlayerMobile pm && _Auction != null)
                 {
                     if (_Auction.InClaimPeriod)
                     {
diff --git a/Scripts/Services/AccountVault/Gumps.cs b/Scripts/Services/AccountVault/Gumps.cs
index 589815eef..5db2ed3c8 100644
--- a/Scripts/Services/AccountVault/Gumps.cs
+++ b/Scripts/Services/AccountVault/Gumps.cs
@@ -84,11 +84,11 @@ namespace Server.AccountVault
             AddHtmlLocalized(55, 141, 360, 22, tokens ? 1157983 : 1157979, 0x90D, false, false); // Deposit Vault Token into Vault Rent Account : Deposit Gold into Vault Rent Account
             if (tokens)
             {
-                AddTooltip(string.Format("Transfers purchased vault tokens from the player to the vault rent account; capped at {0} tokens. Tokens added to the vault rent account will be used for auto payments of the vault rent.", SystemSettings.MaxBalance.ToString("N0", CultureInfo.GetCultureInfo("en-US"))));
+                AddTooltip($"Transfers purchased vault tokens from the player to the vault rent account; capped at {SystemSettings.MaxBalance.ToString("N0", CultureInfo.GetCultureInfo("en-US"))} tokens. Tokens added to the vault rent account will be used for auto payments of the vault rent.");
             }
             else
             {
-                AddTooltip(string.Format("Transfers gold from the player's bank to the vault rent account; capped at {0} gold. Funds added to the vault rent account will be used for auto payments of the vault rent.", SystemSettings.MaxBalance.ToString("N0", CultureInfo.GetCultureInfo("en-US"))));
+                AddTooltip($"Transfers gold from the player's bank to the vault rent account; capped at {SystemSettings.MaxBalance.ToString("N0", CultureInfo.GetCultureInfo("en-US"))} gold. Funds added to the vault rent account will be used for auto payments of the vault rent.");
             }
             AddButton(15, 141, 0xFA5, 0xFA6, 102, GumpButtonType.Reply, 0);
 
diff --git a/Scripts/Services/AccountVault/SystemSettings.cs b/Scripts/Services/AccountVault/SystemSettings.cs
index 0f3c06463..160c8cdfc 100644
--- a/Scripts/Services/AccountVault/SystemSettings.cs
+++ b/Scripts/Services/AccountVault/SystemSettings.cs
@@ -60,11 +60,11 @@ namespace Server.AccountVault
         {
             if (UseTokens)
             {
-                return string.Format("Do you wish to rent a storage vault for {0} vault token[s] a month? You will need to keep your vault token balance up to date or risk losing your vault contents.", RentTokenValue);
+                return $"Do you wish to rent a storage vault for {RentTokenValue} vault token[s] a month? You will need to keep your vault token balance up to date or risk losing your vault contents.";
             }
             else
             {
-                return string.Format("Do you wish to rent a storage vault for {0} gold a month? You will need to keep your vault token balance up to date or risk losing your vault contents.", RentGoldValue.ToString("N0", CultureInfo.GetCultureInfo("en-US")));
+                return $"Do you wish to rent a storage vault for {RentGoldValue.ToString("N0", CultureInfo.GetCultureInfo("en-US"))} gold a month? You will need to keep your vault token balance up to date or risk losing your vault contents.";
             }
         }
 
diff --git a/Scripts/Services/AccountVault/VaultManager.cs b/Scripts/Services/AccountVault/VaultManager.cs
index cd18837fd..d7f46ccf0 100644
--- a/Scripts/Services/AccountVault/VaultManager.cs
+++ b/Scripts/Services/AccountVault/VaultManager.cs
@@ -153,9 +153,7 @@ namespace Server.AccountVault
 
             public override void OnClick()
             {
-                var pm = Owner.From as PlayerMobile;
-
-                if (pm != null)
+                if (Owner.From is PlayerMobile pm)
                 {
                     if (!AccountVault.HasVault(pm))
                     {
@@ -181,9 +179,7 @@ namespace Server.AccountVault
 
             public override void OnClick()
             {
-                var pm = Owner.From as PlayerMobile;
-
-                if (pm != null)
+                if (Owner.From is PlayerMobile pm)
                 {
                     var vault = AccountVault.GetVault(pm);
 
@@ -219,9 +215,7 @@ namespace Server.AccountVault
 
             public override void OnClick()
             {
-                var pm = Owner.From as PlayerMobile;
-
-                if (pm != null && Vault != null)
+                if (Owner.From is PlayerMobile pm && Vault != null)
                 {
                     BaseGump.SendGump(new VaultActionsGump(pm, Vault));
                 }
@@ -240,9 +234,7 @@ namespace Server.AccountVault
 
             public override void OnClick()
             {
-                var pm = Owner.From as PlayerMobile;
-
-                if (pm != null)
+                if (Owner.From is PlayerMobile pm)
                 {
                     BaseGump.SendGump(new VaultLocationsGump(pm));
                 }
diff --git a/Scripts/Services/AccountVault/VaultToken.cs b/Scripts/Services/AccountVault/VaultToken.cs
index 312ed29f2..6c6ae7d20 100644
--- a/Scripts/Services/AccountVault/VaultToken.cs
+++ b/Scripts/Services/AccountVault/VaultToken.cs
@@ -38,9 +38,7 @@ namespace Server.Items
                 }
                 else
                 {
-                    var pm = from as PlayerMobile;
-
-                    if (pm != null)
+                    if (from is PlayerMobile pm)
                     {
                         if (Account != null && (pm.Account == null || pm.Account.Username != Account))
                         {
diff --git a/Scripts/Services/ArmorRefinement/Items.cs b/Scripts/Services/ArmorRefinement/Items.cs
index 8dbd6c6c5..45447e1bc 100644
--- a/Scripts/Services/ArmorRefinement/Items.cs
+++ b/Scripts/Services/ArmorRefinement/Items.cs
@@ -107,15 +107,15 @@ namespace Server.Items
 
         public override void AddNameProperty(ObjectPropertyList list)
         {
-            list.Add(1153966, string.Format("#{0}\t#{1}", Labels[(int)m_RefinementType][(int)m_CraftType], GetModLabel())); // ~1_OBJTYPE~ ~2_BONUSLEVEL~
+            list.Add(1153966, $"#{Labels[(int)m_RefinementType][(int)m_CraftType]}\t#{GetModLabel()}"); // ~1_OBJTYPE~ ~2_BONUSLEVEL~
         }
 
         public override void GetProperties(ObjectPropertyList list)
         {
             base.GetProperties(list);
 
-            list.Add(1154002, string.Format("#{0}", 1153954 + (int)m_SubCraftType));                // Armor Type: ~1_TYPE~
-            list.Add(1154124, string.Format("#{0}", m_RefinementType == RefinementType.Reinforcing ? 1154123 : 1154122));  // Bonus Type: ~1_TYPE~
+            list.Add(1154002, $"#{1153954 + (int)m_SubCraftType}");                // Armor Type: ~1_TYPE~
+            list.Add(1154124, $"#{(m_RefinementType == RefinementType.Reinforcing ? 1154123 : 1154122)}");  // Bonus Type: ~1_TYPE~
         }
 
         public override void OnDoubleClick(Mobile from)
@@ -397,7 +397,7 @@ namespace Server.Items
         {
             base.GetProperties(list);
 
-            list.Add(1154002, string.Format("#{0}", (1153954 + (int)m_SubCraftType).ToString()));                // Armor Type: ~1_TYPE~
+            list.Add(1154002, $"#{(1153954 + (int)m_SubCraftType).ToString()}");                // Armor Type: ~1_TYPE~
             list.Add(1154124, m_RefinementType == RefinementType.Reinforcing ? "#1154123" : "#1154122");         // Bonus Type: ~1_TYPE~
         }
 
@@ -451,7 +451,7 @@ namespace Server.Items
 
         public string GetNameArgs()
         {
-            return string.Format("#{0}\t#{1}\t#{2}", LabelPrefix[(int)m_RefinementType][(int)m_CraftType], LabelSuffix[(int)m_CraftType], GetModLabel());
+            return $"#{LabelPrefix[(int)m_RefinementType][(int)m_CraftType]}\t#{LabelSuffix[(int)m_CraftType]}\t#{GetModLabel()}";
         }
 
         public int[][] LabelPrefix = new int[][]
diff --git a/Scripts/Services/Astronomy/AstronomySystem.cs b/Scripts/Services/Astronomy/AstronomySystem.cs
index 239e9d5aa..8aa0da1af 100644
--- a/Scripts/Services/Astronomy/AstronomySystem.cs
+++ b/Scripts/Services/Astronomy/AstronomySystem.cs
@@ -90,11 +90,11 @@ namespace Server.Engines.Astronomy
 
             if (LoadedConstellations > 0)
             {
-                if (Constellations.Where(c => c.TimeCoordinate == TimeCoordinate.FiveToEight).Count() > Constellations.Where(c => c.TimeCoordinate == TimeCoordinate.NineToEleven).Count())
+                if (Constellations.Count(c => c.TimeCoordinate == TimeCoordinate.FiveToEight)> Constellations.Count(c => c.TimeCoordinate == TimeCoordinate.NineToEleven))
                     next = TimeCoordinate.NineToEleven;
-                else if (Constellations.Where(c => c.TimeCoordinate == TimeCoordinate.NineToEleven).Count() > Constellations.Where(c => c.TimeCoordinate == TimeCoordinate.Midnight).Count())
+                else if (Constellations.Count(c => c.TimeCoordinate == TimeCoordinate.NineToEleven)> Constellations.Count(c => c.TimeCoordinate == TimeCoordinate.Midnight))
                     next = TimeCoordinate.Midnight;
-                else if (Constellations.Where(c => c.TimeCoordinate == TimeCoordinate.Midnight).Count() > Constellations.Where(c => c.TimeCoordinate == TimeCoordinate.OneToFour).Count())
+                else if (Constellations.Count(c => c.TimeCoordinate == TimeCoordinate.Midnight)> Constellations.Count(c => c.TimeCoordinate == TimeCoordinate.OneToFour))
                     next = TimeCoordinate.OneToFour;
             }
 
diff --git a/Scripts/Services/Astronomy/ConstellationLedger.cs b/Scripts/Services/Astronomy/ConstellationLedger.cs
index 9a5d13114..0156e452d 100644
--- a/Scripts/Services/Astronomy/ConstellationLedger.cs
+++ b/Scripts/Services/Astronomy/ConstellationLedger.cs
@@ -41,7 +41,7 @@ namespace Server.Engines.Astronomy
 
                 AddBackground(0, 0, 820, 620, 0x2454);
                 AddHtmlLocalized(10, 28, 800, 18, 1114513, "#1158520", 0x0, false, false); // Constellation Ledger
-                AddHtmlLocalized(295, 55, 515, 36, 1158521, string.Format("{0}\t{1}", AstronomySystem.DiscoveredConstellations.Count, AstronomySystem.MaxConstellations), 0x0, false, false); // Constellations Discovered: ~1_VAL~ / ~2_VAL~
+                AddHtmlLocalized(295, 55, 515, 36, 1158521, $"{AstronomySystem.DiscoveredConstellations.Count}\t{AstronomySystem.MaxConstellations}", 0x0, false, false); // Constellations Discovered: ~1_VAL~ / ~2_VAL~
 
                 AddHtmlLocalized(55, 100, 100, 36, 1114513, "#1158522", 0x0, false, false); // Constellation Name
                 AddHtmlLocalized(245, 100, 80, 36, 1114513, "#1158523", 0x0, false, false); // Astronomer
@@ -60,7 +60,7 @@ namespace Server.Engines.Astronomy
                     AddHtml(240, y, 112, 18, Color("#0040FF", info.DiscoveredBy != null ? info.DiscoveredBy.Name : "Unknown"), false, false);
                     AddHtml(380, y, 112, 18, Color("#0040FF", info.DiscoveredOn.ToShortDateString()), false, false);
                     AddHtmlLocalized(492, y, 130, 18, AstronomySystem.TimeCoordinateLocalization(info.TimeCoordinate), 0x1F, false, false);
-                    AddHtmlLocalized(632, y, 150, 18, 1158527, string.Format("{0}\t{1}", info.CoordRA, info.CoordDEC), 0x1F, false, false); // RA ~1_VAL~  DEC ~2_VAL~
+                    AddHtmlLocalized(632, y, 150, 18, 1158527, $"{info.CoordRA}\t{info.CoordDEC}", 0x1F, false, false); // RA ~1_VAL~  DEC ~2_VAL~
 
                     y += 18;
                 }
@@ -70,7 +70,7 @@ namespace Server.Engines.Astronomy
                 AddButton(460, 540, 0x607, 0x608, 3, GumpButtonType.Reply, 0);
                 AddButton(484, 540, 0x603, 0x604, 4, GumpButtonType.Reply, 0);
 
-                AddLabel(415, 570, 0, string.Format("{0}/{1}", Page + 1, Pages.ToString()));
+                AddLabel(415, 570, 0, $"{Page + 1}/{Pages.ToString()}");
             }
 
             public override void OnResponse(RelayInfo info)
diff --git a/Scripts/Services/Astronomy/StarChart.cs b/Scripts/Services/Astronomy/StarChart.cs
index ffcdeb79e..73d6d7e6d 100644
--- a/Scripts/Services/Astronomy/StarChart.cs
+++ b/Scripts/Services/Astronomy/StarChart.cs
@@ -162,7 +162,7 @@ namespace Server.Items
                 {
                     TextRelay relay = info.GetTextEntry(1);
 
-                    if (relay != null && relay.Text != null)
+                    if (relay?.Text != null)
                     {
                         string text = relay.Text;
 
diff --git a/Scripts/Services/Astronomy/Willebrord.cs b/Scripts/Services/Astronomy/Willebrord.cs
index 90e8cf18b..bcb55f385 100644
--- a/Scripts/Services/Astronomy/Willebrord.cs
+++ b/Scripts/Services/Astronomy/Willebrord.cs
@@ -110,10 +110,8 @@ namespace Server.Engines.Astronomy
 
         public override bool OnDragDrop(Mobile m, Item dropped)
         {
-            if (dropped is StarChart)
+            if (dropped is StarChart chart)
             {
-                StarChart chart = (StarChart)dropped;
-
                 if (chart.Constellation >= 0 && chart.Constellation < AstronomySystem.MaxConstellations)
                 {
                     if (string.IsNullOrEmpty(chart.ConstellationName))
diff --git a/Scripts/Services/BasketWeaving/MiscSAResources.cs b/Scripts/Services/BasketWeaving/MiscSAResources.cs
index e490b1ba9..2b345e7dd 100644
--- a/Scripts/Services/BasketWeaving/MiscSAResources.cs
+++ b/Scripts/Services/BasketWeaving/MiscSAResources.cs
@@ -49,12 +49,12 @@ namespace Server.Items
             if (Amount > 1)
             {
                 cliloc = info.IsBright() ? 1113273 : 1113275;
-                list.Add(cliloc, string.Format("{0}\t#{1}", Amount.ToString(), info.Name));
+                list.Add(cliloc, $"{Amount.ToString()}\t#{info.Name}");
             }
             else
             {
                 cliloc = info.IsBright() ? 1112288 : 1112289;
-                list.Add(cliloc, string.Format("#{0}", info.Name));
+                list.Add(cliloc, $"#{info.Name}");
             }
         }
 
@@ -65,8 +65,8 @@ namespace Server.Items
 
         public override void OnAfterDuped(Item newItem)
         {
-            if (newItem is IPlantHue)
-                ((IPlantHue)newItem).PlantHue = PlantHue;
+            if (newItem is IPlantHue iPlantHue)
+                iPlantHue.PlantHue = PlantHue;
 
             base.OnAfterDuped(newItem);
         }
@@ -147,12 +147,12 @@ namespace Server.Items
             if (Amount > 1)
             {
                 cliloc = info.IsBright() ? 1113273 : 1113275;
-                list.Add(cliloc, string.Format("{0}\t#{1}", Amount.ToString(), info.Name));
+                list.Add(cliloc, $"{Amount.ToString()}\t#{info.Name}");
             }
             else
             {
                 cliloc = info.IsBright() ? 1112288 : 1112289;
-                list.Add(cliloc, string.Format("#{0}", info.Name));
+                list.Add(cliloc, $"#{info.Name}");
             }
         }
 
@@ -163,8 +163,8 @@ namespace Server.Items
 
         public override void OnAfterDuped(Item newItem)
         {
-            if (newItem is IPlantHue)
-                ((IPlantHue)newItem).PlantHue = PlantHue;
+            if (newItem is IPlantHue iPlantHue)
+                iPlantHue.PlantHue = PlantHue;
 
             base.OnAfterDuped(newItem);
         }
diff --git a/Scripts/Services/BasketWeaving/NaturalDye.cs b/Scripts/Services/BasketWeaving/NaturalDye.cs
index b65a39265..aaecf5e1f 100644
--- a/Scripts/Services/BasketWeaving/NaturalDye.cs
+++ b/Scripts/Services/BasketWeaving/NaturalDye.cs
@@ -125,9 +125,7 @@ namespace Server.Items
                 if (m_Item.Deleted)
                     return;
 
-                Item item = targeted as Item;
-
-                if (item != null)
+                if (targeted is Item item)
                 {
                     bool valid = (item is IDyable || item is BaseTalisman ||
                         item is BaseBook || item is BaseClothing ||
diff --git a/Scripts/Services/BasketWeaving/PlantPigment.cs b/Scripts/Services/BasketWeaving/PlantPigment.cs
index 6f84c79ac..8103a6a75 100644
--- a/Scripts/Services/BasketWeaving/PlantPigment.cs
+++ b/Scripts/Services/BasketWeaving/PlantPigment.cs
@@ -60,12 +60,12 @@ namespace Server.Items
             if (Amount > 1)
             {
                 cliloc = info.IsBright() ? 1113271 : 1113270;
-                list.Add(cliloc, string.Format("{0}\t#{1}", Amount.ToString(), info.Name));
+                list.Add(cliloc, $"{Amount.ToString()}\t#{info.Name}");
             }
             else
             {
                 cliloc = info.IsBright() ? 1112134 : 1112133;
-                list.Add(cliloc, string.Format("#{0}", info.Name));
+                list.Add(cliloc, $"#{info.Name}");
             }
         }
 
diff --git a/Scripts/Services/BasketWeaving/SilverSapling.cs b/Scripts/Services/BasketWeaving/SilverSapling.cs
index 158e294d8..d714ac5e1 100644
--- a/Scripts/Services/BasketWeaving/SilverSapling.cs
+++ b/Scripts/Services/BasketWeaving/SilverSapling.cs
@@ -45,7 +45,7 @@ namespace Server.Items
         {
             PlayerMobile pm = m as PlayerMobile;
 
-            if (pm != null && pm.Backpack != null)
+            if (pm?.Backpack != null)
             {
                 if (pm.SSNextSeed > DateTime.UtcNow)
                 {
diff --git a/Scripts/Services/BulkOrders/Books/BOBGump.cs b/Scripts/Services/BulkOrders/Books/BOBGump.cs
index 2f9e23646..b6e21de1d 100644
--- a/Scripts/Services/BulkOrders/Books/BOBGump.cs
+++ b/Scripts/Services/BulkOrders/Books/BOBGump.cs
@@ -208,7 +208,7 @@ namespace Server.Engines.BulkOrders
                         else if (name is string)
                             AddLabel(316, y, 1152, (string)name);
 
-                        AddLabel(421, y, 1152, string.Format("{0} / {1}", sub.AmountCur, e.AmountMax));
+                        AddLabel(421, y, 1152, $"{sub.AmountCur} / {e.AmountMax}");
 
                         ++tableIndex;
                         y += 32;
@@ -245,7 +245,7 @@ namespace Server.Engines.BulkOrders
                     else if (name is string)
                         AddLabel(316, y, 1152, (string)name);
 
-                    AddLabel(421, y, 1152, string.Format("{0} / {1}", e.AmountCur, e.AmountMax));
+                    AddLabel(421, y, 1152, $"{e.AmountCur} / {e.AmountMax}");
                 }
             }
         }
diff --git a/Scripts/Services/BulkOrders/Books/BOBLargeEntry.cs b/Scripts/Services/BulkOrders/Books/BOBLargeEntry.cs
index 803aa3e05..7d9a39bd4 100644
--- a/Scripts/Services/BulkOrders/Books/BOBLargeEntry.cs
+++ b/Scripts/Services/BulkOrders/Books/BOBLargeEntry.cs
@@ -27,9 +27,9 @@ namespace Server.Engines.BulkOrders
             for (int i = 0; i < m_Entries.Length; ++i)
                 m_Entries[i] = new BOBLargeSubEntry(bod.Entries[i]);
 
-            if (bod is LargeTinkerBOD)
+            if (bod is LargeTinkerBOD largeTinkerBOD)
             {
-                m_GemType = ((LargeTinkerBOD)bod).GemType;
+                m_GemType = largeTinkerBOD.GemType;
             }
         }
 
diff --git a/Scripts/Services/BulkOrders/Books/BOBSmallEntry.cs b/Scripts/Services/BulkOrders/Books/BOBSmallEntry.cs
index 651b33225..ca7ac9e3b 100644
--- a/Scripts/Services/BulkOrders/Books/BOBSmallEntry.cs
+++ b/Scripts/Services/BulkOrders/Books/BOBSmallEntry.cs
@@ -32,9 +32,9 @@ namespace Server.Engines.BulkOrders
             m_Graphic = bod.Graphic;
             m_Hue = bod.GraphicHue;
 
-            if (bod is SmallTinkerBOD)
+            if (bod is SmallTinkerBOD smallTinkerBOD)
             {
-                m_GemType = ((SmallTinkerBOD)bod).GemType;
+                m_GemType = smallTinkerBOD.GemType;
             }
         }
 
diff --git a/Scripts/Services/BulkOrders/Books/BODBuyGump.cs b/Scripts/Services/BulkOrders/Books/BODBuyGump.cs
index d781c890d..e629160ce 100644
--- a/Scripts/Services/BulkOrders/Books/BODBuyGump.cs
+++ b/Scripts/Services/BulkOrders/Books/BODBuyGump.cs
@@ -51,10 +51,10 @@ namespace Server.Engines.BulkOrders
 
                     if (vi != null && !vi.IsForSale)
                     {
-                        if (m_Object is BOBLargeEntry)
-                            price = ((BOBLargeEntry)m_Object).Price;
-                        else if (m_Object is BOBSmallEntry)
-                            price = ((BOBSmallEntry)m_Object).Price;
+                        if (m_Object is BOBLargeEntry bOBLargeEntry)
+                            price = bOBLargeEntry.Price;
+                        else if (m_Object is BOBSmallEntry bOBSmallEntry)
+                            price = bOBSmallEntry.Price;
                     }
 
                     if (price != m_Price)
@@ -69,10 +69,10 @@ namespace Server.Engines.BulkOrders
                     {
                         Item item = null;
 
-                        if (m_Object is BOBLargeEntry)
-                            item = ((BOBLargeEntry)m_Object).Reconstruct();
-                        else if (m_Object is BOBSmallEntry)
-                            item = ((BOBSmallEntry)m_Object).Reconstruct();
+                        if (m_Object is BOBLargeEntry bOBLargeEntry)
+                            item = bOBLargeEntry.Reconstruct();
+                        else if (m_Object is BOBSmallEntry bOBSmallEntry)
+                            item = bOBSmallEntry.Reconstruct();
 
                         if (item == null)
                         {
diff --git a/Scripts/Services/BulkOrders/Books/BulkOrderBook.cs b/Scripts/Services/BulkOrders/Books/BulkOrderBook.cs
index cee5d635e..142193499 100644
--- a/Scripts/Services/BulkOrders/Books/BulkOrderBook.cs
+++ b/Scripts/Services/BulkOrders/Books/BulkOrderBook.cs
@@ -78,8 +78,8 @@ namespace Server.Engines.BulkOrders
                 from.LocalOverheadMessage(Network.MessageType.Regular, 0x3B2, 1019045); // I can't reach that.
             else if (m_Entries.Count == 0)
                 from.SendLocalizedMessage(1062381); // The book is empty.
-            else if (from is PlayerMobile)
-                from.SendGump(new BOBGump((PlayerMobile)from, this));
+            else if (from is PlayerMobile playerMobile)
+                from.SendGump(new BOBGump(playerMobile, this));
         }
 
         public override void OnDoubleClickSecureTrade(Mobile from)
@@ -123,10 +123,10 @@ namespace Server.Engines.BulkOrders
                     return false;
                 else if (m_Entries.Count < 500)
                 {
-                    if (dropped is LargeBOD)
-                        m_Entries.Add(new BOBLargeEntry((LargeBOD)dropped));
-                    else if (dropped is SmallBOD) // Sanity
-                        m_Entries.Add(new BOBSmallEntry((SmallBOD)dropped));
+                    if (dropped is LargeBOD largeBOD)
+                        m_Entries.Add(new BOBLargeEntry(largeBOD));
+                    else if (dropped is SmallBOD smallBOD) // Sanity
+                        m_Entries.Add(new BOBSmallEntry(smallBOD));
 
                     InvalidateProperties();
 
@@ -139,8 +139,8 @@ namespace Server.Engines.BulkOrders
                     from.SendSound(0x42, GetWorldLocation());
                     from.SendLocalizedMessage(1062386); // Deed added to book.
 
-                    if (from is PlayerMobile)
-                        from.SendGump(new BOBGump((PlayerMobile)from, this));
+                    if (from is PlayerMobile playerMobile)
+                        from.SendGump(new BOBGump(playerMobile, this));
 
                     dropped.Delete();
 
@@ -169,10 +169,8 @@ namespace Server.Engines.BulkOrders
 
         public void InvalidateItems()
         {
-            if (RootParent is Mobile)
+            if (RootParent is Mobile m)
             {
-                Mobile m = (Mobile)RootParent;
-
                 m.UpdateTotals();
                 InvalidateContainers(Parent);
             }
@@ -180,10 +178,8 @@ namespace Server.Engines.BulkOrders
 
         public void InvalidateContainers(object parent)
         {
-            if (parent != null && parent is Container)
+            if (parent is Container c)
             {
-                Container c = (Container)parent;
-
                 c.InvalidateProperties();
                 InvalidateContainers(c.Parent);
             }
@@ -209,15 +205,15 @@ namespace Server.Engines.BulkOrders
             {
                 object obj = m_Entries[i];
 
-                if (obj is BOBLargeEntry)
+                if (obj is BOBLargeEntry bOBLargeEntry)
                 {
                     writer.WriteEncodedInt(0);
-                    ((BOBLargeEntry)obj).Serialize(writer);
+                    bOBLargeEntry.Serialize(writer);
                 }
-                else if (obj is BOBSmallEntry)
+                else if (obj is BOBSmallEntry bOBSmallEntry)
                 {
                     writer.WriteEncodedInt(1);
-                    ((BOBSmallEntry)obj).Serialize(writer);
+                    bOBSmallEntry.Serialize(writer);
                 }
                 else
                 {
@@ -280,7 +276,7 @@ namespace Server.Engines.BulkOrders
 
             list.Add(1062344, m_Entries.Count.ToString()); // Deeds in book: ~1_val~
 
-            if (m_BookName != null && m_BookName.Length > 0)
+            if (!string.IsNullOrEmpty(m_BookName))
                 list.Add(1062481, m_BookName); // Book Name: ~1_val~
         }
 
diff --git a/Scripts/Services/BulkOrders/BulkOrderSystem.cs b/Scripts/Services/BulkOrders/BulkOrderSystem.cs
index 76849f590..0f50c3499 100644
--- a/Scripts/Services/BulkOrders/BulkOrderSystem.cs
+++ b/Scripts/Services/BulkOrders/BulkOrderSystem.cs
@@ -63,10 +63,9 @@ namespace Server.Engines.BulkOrders
             int count = reader.ReadInt();
             for (int i = 0; i < count; i++)
             {
-                PlayerMobile player = reader.ReadMobile() as PlayerMobile;
                 BODContext context = new BODContext(reader);
 
-                if (player != null)
+                if (reader.ReadMobile() is PlayerMobile player)
                     BODPlayerData[player] = context;
             }
         }
@@ -414,20 +413,14 @@ namespace Server.Engines.BulkOrders
         {
             BODContext context = GetContext(m);
 
-            if (context != null)
-            {
-                context.AddPending(type, points);
-            }
+            context?.AddPending(type, points);
         }
 
         public static void RemovePending(Mobile m, BODType type)
         {
             BODContext context = GetContext(m);
 
-            if (context != null)
-            {
-                context.RemovePending(type);
-            }
+            context?.RemovePending(type);
         }
 
         public static bool CanClaimRewards(Mobile m)
@@ -481,9 +474,9 @@ namespace Server.Engines.BulkOrders
         {
             Type t = null;
 
-            if (bod is SmallBOD)
+            if (bod is SmallBOD smallBOD)
             {
-                t = ((SmallBOD)bod).Type;
+                t = smallBOD.Type;
             }
             else if (bod is LargeBOD && ((LargeBOD)bod).Entries != null && ((LargeBOD)bod).Entries.Length > 0)
             {
diff --git a/Scripts/Services/BulkOrders/Items/PowderOfFortKeg.cs b/Scripts/Services/BulkOrders/Items/PowderOfFortKeg.cs
index bb66e9a4f..85ac33dea 100644
--- a/Scripts/Services/BulkOrders/Items/PowderOfFortKeg.cs
+++ b/Scripts/Services/BulkOrders/Items/PowderOfFortKeg.cs
@@ -58,9 +58,7 @@ namespace Server.Items
         {
             if (from.Backpack != null && IsChildOf(from.Backpack) && Charges > 0)
             {
-                PowderOfTemperament powder = from.Backpack.FindItemByType(typeof(PowderOfTemperament)) as PowderOfTemperament;
-
-                if (powder != null)
+                if (from.Backpack.FindItemByType(typeof(PowderOfTemperament)) is PowderOfTemperament powder)
                 {
                     powder.UsesRemaining++;
                     Charges--;
diff --git a/Scripts/Services/BulkOrders/Items/SpecialNaturalDye.cs b/Scripts/Services/BulkOrders/Items/SpecialNaturalDye.cs
index bd6d69d75..3b8b2fa8e 100644
--- a/Scripts/Services/BulkOrders/Items/SpecialNaturalDye.cs
+++ b/Scripts/Services/BulkOrders/Items/SpecialNaturalDye.cs
@@ -115,11 +115,11 @@ namespace Server.Items
             }
             else if (Amount > 1)
             {
-                list.Add(1113276, "{0}\t{1}", Amount, string.Format("#{0}", HueInfo[DyeType].Item2));  // ~1_AMOUNT~ ~2_COLOR~ natural dyes
+                list.Add(1113276, "{0}\t{1}", Amount, $"#{HueInfo[DyeType].Item2}");  // ~1_AMOUNT~ ~2_COLOR~ natural dyes
             }
             else
             {
-                list.Add(1112137, string.Format("#{0}", HueInfo[DyeType].Item2));  // ~1_COLOR~ natural dye
+                list.Add(1112137, $"#{HueInfo[DyeType].Item2}");  // ~1_COLOR~ natural dye
             }
         }
 
@@ -165,11 +165,9 @@ namespace Server.Items
             {
                 if (m_Item.Deleted)
                     return;
-
-                Item item = targeted as Item;
                 bool valid = false;
 
-                if (item != null)
+                if (targeted is Item item)
                 {
                     if (m_Item.BooksOnly && !(item is Spellbook))
                     {
diff --git a/Scripts/Services/BulkOrders/LargeBODs/LargeBOD.cs b/Scripts/Services/BulkOrders/LargeBODs/LargeBOD.cs
index e49b4c6ea..faa95efb3 100644
--- a/Scripts/Services/BulkOrders/LargeBODs/LargeBOD.cs
+++ b/Scripts/Services/BulkOrders/LargeBODs/LargeBOD.cs
@@ -212,10 +212,8 @@ namespace Server.Engines.BulkOrders
         {
             if (o is Item && ((Item)o).IsChildOf(from.Backpack))
             {
-                if (o is SmallBOD)
+                if (o is SmallBOD small)
                 {
-                    SmallBOD small = (SmallBOD)o;
-
                     LargeBulkEntry entry = null;
 
                     for (int i = 0; entry == null && i < m_Entries.Length; ++i)
diff --git a/Scripts/Services/BulkOrders/LargeBODs/LargeBODGump.cs b/Scripts/Services/BulkOrders/LargeBODs/LargeBODGump.cs
index adc6a1de4..ec11b4b21 100644
--- a/Scripts/Services/BulkOrders/LargeBODs/LargeBODGump.cs
+++ b/Scripts/Services/BulkOrders/LargeBODs/LargeBODGump.cs
@@ -96,7 +96,7 @@ namespace Server.Engines.BulkOrders
 
                 BulkOrderSystem.ComputePoints(deed, out points, out banked);
 
-                AddHtmlLocalized(75, y, 300, 20, 1157301, string.Format("{0}\t{1}", points, banked.ToString("0.000000")), 0x7FFF, false, false); // Worth ~1_POINTS~ turn in points and ~2_POINTS~ bank points.
+                AddHtmlLocalized(75, y, 300, 20, 1157301, $"{points}\t{banked.ToString("0.000000")}", 0x7FFF, false, false); // Worth ~1_POINTS~ turn in points and ~2_POINTS~ bank points.
                 y += 24;
 
                 AddButton(125, y, 4005, 4007, 3, GumpButtonType.Reply, 0);
diff --git a/Scripts/Services/BulkOrders/Rewards/ConfirmBankPointsGump.cs b/Scripts/Services/BulkOrders/Rewards/ConfirmBankPointsGump.cs
index a12622cee..0b31f7ff2 100644
--- a/Scripts/Services/BulkOrders/Rewards/ConfirmBankPointsGump.cs
+++ b/Scripts/Services/BulkOrders/Rewards/ConfirmBankPointsGump.cs
@@ -12,7 +12,7 @@ namespace Server.Engines.BulkOrders
         public BODType BODType { get; set; }
 
         public ConfirmBankPointsGump(PlayerMobile user, Mobile owner, BODType type, int points, double banked)
-            : base(user, 1157076, 1157077, new object[] { points, banked, type, owner }, string.Format("{0}\t{1}", banked.ToString("0.000000"), points.ToString()), OnSave, OnClaim)
+            : base(user, 1157076, 1157077, new object[] { points, banked, type, owner }, $"{banked.ToString("0.000000")}\t{points.ToString()}", OnSave, OnClaim)
         {
             Closable = false;
             user.CloseGump(typeof(ConfirmBankPointsGump));
@@ -35,16 +35,16 @@ namespace Server.Engines.BulkOrders
             BulkOrderSystem.SetPoints(m, (BODType)ohs[2], (double)ohs[1]);
             BulkOrderSystem.RemovePending(m, (BODType)ohs[2]);
 
-            if (m is PlayerMobile)
-                m.SendGump(new RewardsGump((Mobile)ohs[3], (PlayerMobile)m, (BODType)ohs[2]));
+            if (m is PlayerMobile playerMobile)
+                m.SendGump(new RewardsGump((Mobile)ohs[3], playerMobile, (BODType)ohs[2]));
         }
 
         private static void OnClaim(Mobile m, object state)
         {
             object[] ohs = (object[])state;
 
-            if (m is PlayerMobile)
-                m.SendGump(new RewardsGump((Mobile)ohs[3], (PlayerMobile)m, (BODType)ohs[2], (int)ohs[0]));
+            if (m is PlayerMobile playerMobile)
+                m.SendGump(new RewardsGump((Mobile)ohs[3], playerMobile, (BODType)ohs[2], (int)ohs[0]));
         }
     }
 }
diff --git a/Scripts/Services/BulkOrders/Rewards/RewardsGump.cs b/Scripts/Services/BulkOrders/Rewards/RewardsGump.cs
index e9c1e0ed5..e85300e26 100644
--- a/Scripts/Services/BulkOrders/Rewards/RewardsGump.cs
+++ b/Scripts/Services/BulkOrders/Rewards/RewardsGump.cs
@@ -47,9 +47,8 @@ namespace Server.Engines.BulkOrders
 
         public override void OnConfirmed(CollectionItem citem, int index)
         {
-            BODCollectionItem item = citem as BODCollectionItem;
 
-            if (item != null && GetPoints(User) >= item.Points && item.Constructor != null)
+            if (citem is BODCollectionItem item && GetPoints(User) >= item.Points && item.Constructor != null)
             {
                 Item i = item.Constructor(item.RewardType);
 
diff --git a/Scripts/Services/BulkOrders/SmallBODs/SmallBOD.cs b/Scripts/Services/BulkOrders/SmallBODs/SmallBOD.cs
index 1e3cf61d7..3135cae02 100644
--- a/Scripts/Services/BulkOrders/SmallBODs/SmallBOD.cs
+++ b/Scripts/Services/BulkOrders/SmallBODs/SmallBOD.cs
@@ -314,8 +314,8 @@ namespace Server.Engines.BulkOrders
                 {
                     BulkMaterialType material = BulkMaterialType.None;
 
-                    if (o is IResource)
-                        material = GetMaterial(((IResource)o).Resource);
+                    if (o is IResource iResource)
+                        material = GetMaterial(iResource.Resource);
 
                     if (material != m_Material && m_Material != BulkMaterialType.None)
                     {
@@ -325,8 +325,8 @@ namespace Server.Engines.BulkOrders
                     {
                         bool isExceptional = false;
 
-                        if (o is IQuality)
-                            isExceptional = (((IQuality)o).Quality == ItemQuality.Exceptional);
+                        if (o is IQuality iQuality)
+                            isExceptional = (iQuality.Quality == ItemQuality.Exceptional);
 
                         if (m_RequireExceptional && !isExceptional)
                         {
diff --git a/Scripts/Services/BulkOrders/SmallBODs/SmallBODGump.cs b/Scripts/Services/BulkOrders/SmallBODs/SmallBODGump.cs
index 81a45e3ed..7bdb7f2f0 100644
--- a/Scripts/Services/BulkOrders/SmallBODs/SmallBODGump.cs
+++ b/Scripts/Services/BulkOrders/SmallBODs/SmallBODGump.cs
@@ -87,7 +87,7 @@ namespace Server.Engines.BulkOrders
 
                 BulkOrderSystem.ComputePoints(deed, out points, out banked);
 
-                AddHtmlLocalized(75, y, 300, 20, 1157301, string.Format("{0}\t{1}", points, banked.ToString("0.000000")), 0x7FFF, false, false); // Worth ~1_POINTS~ turn in points and ~2_POINTS~ bank points.
+                AddHtmlLocalized(75, y, 300, 20, 1157301, $"{points}\t{banked.ToString("0.000000")}", 0x7FFF, false, false); // Worth ~1_POINTS~ turn in points and ~2_POINTS~ bank points.
                 y += 24;
 
                 AddButton(125, y, 4005, 4007, 3, GumpButtonType.Reply, 0);
diff --git a/Scripts/Services/BulkOrders/SmallBODs/SmallBulkEntry.cs b/Scripts/Services/BulkOrders/SmallBODs/SmallBulkEntry.cs
index 155ee7328..4c409f7de 100644
--- a/Scripts/Services/BulkOrders/SmallBODs/SmallBulkEntry.cs
+++ b/Scripts/Services/BulkOrders/SmallBODs/SmallBulkEntry.cs
@@ -70,7 +70,7 @@ namespace Server.Engines.BulkOrders
 
         public static SmallBulkEntry[] LoadEntries(string type, string name)
         {
-            return LoadEntries(string.Format("Data/Bulk Orders/{0}/{1}.cfg", type, name));
+            return LoadEntries($"Data/Bulk Orders/{type}/{name}.cfg");
         }
 
         public static SmallBulkEntry[] LoadEntries(string path)
diff --git a/Scripts/Services/ChampionSystem/ChampionSkullPlatform.cs b/Scripts/Services/ChampionSystem/ChampionSkullPlatform.cs
index f958c61f4..14d0950fd 100644
--- a/Scripts/Services/ChampionSystem/ChampionSkullPlatform.cs
+++ b/Scripts/Services/ChampionSystem/ChampionSkullPlatform.cs
@@ -92,7 +92,7 @@ namespace Server.Engines.CannedEvil
 
         public bool Validate(ChampionSkullBrazier brazier)
         {
-            return (brazier != null && brazier.Skull != null && !brazier.Skull.Deleted);
+            return (brazier?.Skull != null && !brazier.Skull.Deleted);
         }
 
         public override void Serialize(GenericWriter writer)
diff --git a/Scripts/Services/ChampionSystem/ChampionSpawn.cs b/Scripts/Services/ChampionSystem/ChampionSpawn.cs
index e1837dde4..011a90380 100644
--- a/Scripts/Services/ChampionSystem/ChampionSpawn.cs
+++ b/Scripts/Services/ChampionSystem/ChampionSpawn.cs
@@ -525,9 +525,7 @@ namespace Server.Engines.CannedEvil
                     {
                         prot.SendLocalizedMessage(1049368); // You have been rewarded for your dedication to Justice!
 
-                        SpecialScroll scrollDupe = Activator.CreateInstance(scroll.GetType()) as SpecialScroll;
-
-                        if (scrollDupe != null)
+                        if (Activator.CreateInstance(scroll.GetType()) is SpecialScroll scrollDupe)
                         {
                             scrollDupe.Skill = scroll.Skill;
                             scrollDupe.Value = scroll.Value;
@@ -557,8 +555,8 @@ namespace Server.Engines.CannedEvil
                 {
                     RegisterDamageTo(m_Champion);
 
-                    if (m_Champion is BaseChampion)
-                        AwardArtifact(((BaseChampion)m_Champion).GetArtifact());
+                    if (m_Champion is BaseChampion baseChampion)
+                        AwardArtifact(baseChampion.GetArtifact());
 
                     m_DamageEntries.Clear();
 
@@ -604,17 +602,16 @@ namespace Server.Engines.CannedEvil
 
                         RegisterDamageTo(m);
 
-                        if (killer is BaseCreature)
-                            killer = ((BaseCreature)killer).GetMaster();
+                        if (killer is BaseCreature baseCreature)
+                            killer = baseCreature.GetMaster();
 
-                        if (killer is PlayerMobile)
+                        if (killer is PlayerMobile pm)
                         {
                             #region Scroll of Transcendence
                             if (Map == Map.Felucca)
                             {
                                 if (Utility.RandomDouble() < ChampionSystem.ScrollChance)
                                 {
-                                    PlayerMobile pm = (PlayerMobile)killer;
 
                                     if (Utility.RandomDouble() < ChampionSystem.TranscendenceChance)
                                     {
@@ -752,9 +749,9 @@ namespace Server.Engines.CannedEvil
                 m_Champion.MoveToWorld(p, Map);
                 ((BaseCreature)m_Champion).Home = p;
 
-                if (m_Champion is BaseChampion)
+                if (m_Champion is BaseChampion baseChampion)
                 {
-                    ((BaseChampion)m_Champion).OnChampPopped(this);
+                    baseChampion.OnChampPopped(this);
                 }
             }
         }
diff --git a/Scripts/Services/Chat/ChatUser.cs b/Scripts/Services/Chat/ChatUser.cs
index 178d6f814..e5d0faf51 100644
--- a/Scripts/Services/Chat/ChatUser.cs
+++ b/Scripts/Services/Chat/ChatUser.cs
@@ -15,7 +15,7 @@ namespace Server.Engines.Chat
 
         public Mobile Mobile => m_Mobile;
 
-        public string Username => string.Format("<{0}>{1}", m_Mobile.Serial.Value, m_Mobile.Name);
+        public string Username => $"<{m_Mobile.Serial.Value}>{m_Mobile.Name}";
 
         public Channel CurrentChannel { get { return m_Channel; } set { m_Channel = value; } }
 
diff --git a/Scripts/Services/Chat/Logging.cs b/Scripts/Services/Chat/Logging.cs
index be43228a0..e51320a6f 100644
--- a/Scripts/Services/Chat/Logging.cs
+++ b/Scripts/Services/Chat/Logging.cs
@@ -25,7 +25,7 @@ namespace Server.Engines.Chat
 
             try
             {
-                m_Output = new StreamWriter(Path.Combine(directory, string.Format("{0}.log", DateTime.UtcNow.ToLongDateString())), true)
+                m_Output = new StreamWriter(Path.Combine(directory, $"{DateTime.UtcNow.ToLongDateString()}.log"), true)
                 {
                     AutoFlush = true
                 };
@@ -64,7 +64,7 @@ namespace Server.Engines.Chat
 
                     AppendPath(ref path, "chat");
                     AppendPath(ref path, "channels");
-                    path = Path.Combine(path, string.Format("{0}.log", channel));
+                    path = Path.Combine(path, $"{channel}.log");
 
                     channelOutput = new StreamWriter(path, true)
                     {
diff --git a/Scripts/Services/City Loyalty System/CityLoyaltyEntry.cs b/Scripts/Services/City Loyalty System/CityLoyaltyEntry.cs
index 95bb22f5e..88e6afad6 100644
--- a/Scripts/Services/City Loyalty System/CityLoyaltyEntry.cs	
+++ b/Scripts/Services/City Loyalty System/CityLoyaltyEntry.cs	
@@ -86,7 +86,7 @@ namespace Server.Engines.CityLoyalty
 
         public override string ToString()
         {
-            return string.Format("{0} {1}", City.ToString(), IsCitizen ? "[Citizen]" : string.Empty);
+            return $"{City.ToString()} {(IsCitizen ? "[Citizen]" : string.Empty)}";
         }
 
         public void DeclareCitizenship()
@@ -117,7 +117,7 @@ namespace Server.Engines.CityLoyalty
                 Player.AddRewardTitle(loc);
 
                 Titles |= title;
-                Player.SendLocalizedMessage(1073625, string.Format("#{0}", loc.ToString())); // The title "~1_TITLE~" has been bestowed upon you.
+                Player.SendLocalizedMessage(1073625, $"#{loc.ToString()}"); // The title "~1_TITLE~" has been bestowed upon you.
             }
         }
 
diff --git a/Scripts/Services/City Loyalty System/CityLoyaltySystem.cs b/Scripts/Services/City Loyalty System/CityLoyaltySystem.cs
index 0f3c49c5a..034a13b2c 100644
--- a/Scripts/Services/City Loyalty System/CityLoyaltySystem.cs	
+++ b/Scripts/Services/City Loyalty System/CityLoyaltySystem.cs	
@@ -103,7 +103,7 @@ namespace Server.Engines.CityLoyalty
         public bool ArtisanFestivalActive => SeasonalEventSystem.IsActive(EventType.ArtisanFestival);
         public static readonly bool AwakeingEventActive = false;
 
-        public override TextDefinition Name => new TextDefinition(string.Format("{0}", City.ToString()));
+        public override TextDefinition Name => new TextDefinition($"{City.ToString()}");
         public override bool AutoAdd => false;
         public override double MaxPoints => double.MaxValue;
         public override PointsType Loyalty => PointsType.None;
@@ -607,10 +607,7 @@ namespace Server.Engines.CityLoyalty
 
         public void HeraldMessage(int message, string args)
         {
-            if (Herald != null)
-            {
-                Herald.Say(message, args);
-            }
+            Herald?.Say(message, args);
         }
 
         public void HeraldMessage(Mobile to, int message)
@@ -745,17 +742,17 @@ namespace Server.Engines.CityLoyalty
         {
             switch (deal)
             {
-                case TradeDeal.OrderOfEngineers: m.AddStatMod(new StatMod(StatType.Dex, string.Format("TradeDeal_{0}", StatType.Dex), 3, TimeSpan.Zero)); break;
-                case TradeDeal.MiningCooperative: m.AddStatMod(new StatMod(StatType.Str, string.Format("TradeDeal_{0}", StatType.Str), 3, TimeSpan.Zero)); break;
-                case TradeDeal.LeagueOfRangers: m.AddStatMod(new StatMod(StatType.Int, string.Format("TradeDeal_{0}", StatType.Int), 3, TimeSpan.Zero)); break;
+                case TradeDeal.OrderOfEngineers: m.AddStatMod(new StatMod(StatType.Dex, $"TradeDeal_{StatType.Dex}", 3, TimeSpan.Zero)); break;
+                case TradeDeal.MiningCooperative: m.AddStatMod(new StatMod(StatType.Str, $"TradeDeal_{StatType.Str}", 3, TimeSpan.Zero)); break;
+                case TradeDeal.LeagueOfRangers: m.AddStatMod(new StatMod(StatType.Int, $"TradeDeal_{StatType.Int}", 3, TimeSpan.Zero)); break;
             }
         }
 
         public static void RemoveTradeDeal(Mobile m)
         {
-            m.RemoveStatMod(string.Format("TradeDeal_{0}", StatType.Dex));
-            m.RemoveStatMod(string.Format("TradeDeal_{0}", StatType.Str));
-            m.RemoveStatMod(string.Format("TradeDeal_{0}", StatType.Int));
+            m.RemoveStatMod($"TradeDeal_{StatType.Dex}");
+            m.RemoveStatMod($"TradeDeal_{StatType.Str}");
+            m.RemoveStatMod($"TradeDeal_{StatType.Int}");
         }
 
         public static void OnBODTurnIn(Mobile from, int gold)
@@ -765,10 +762,7 @@ namespace Server.Engines.CityLoyalty
 
             CityLoyaltySystem city = Cities.FirstOrDefault(c => c.Definition.Region != null && c.Definition.Region.IsPartOf(from.Region));
 
-            if (city != null)
-            {
-                city.AwardLove(from, Math.Max(10, gold / 100));
-            }
+            city?.AwardLove(from, Math.Max(10, gold / 100));
         }
 
         public static void OnSpawnCreatureKilled(BaseCreature killed, int spawnLevel)
@@ -837,7 +831,7 @@ namespace Server.Engines.CityLoyalty
                         {
                             CityLoyaltyEntry entry = t as CityLoyaltyEntry;
 
-                            if (entry != null && entry.Player != null)
+                            if (entry?.Player != null)
                             {
                                 PlayerMobile owner = entry.Player;
 
@@ -918,8 +912,8 @@ namespace Server.Engines.CityLoyalty
 
                     if (entry != null && !string.IsNullOrEmpty(entry.CustomTitle))
                     {
-                        prefix = string.Format("{0} {1} the {2}", prefix, pm.Name, entry.CustomTitle);
-                        list.Add(1154017, string.Format("{0}\t{1}", prefix, city.Definition.Name)); // ~1_TITLE~ of ~2_CITY~
+                        prefix = $"{prefix} {pm.Name} the {entry.CustomTitle}";
+                        list.Add(1154017, $"{prefix}\t{city.Definition.Name}"); // ~1_TITLE~ of ~2_CITY~
                         return true;
                     }
                 }
@@ -943,7 +937,7 @@ namespace Server.Engines.CityLoyalty
                 CityLoyaltyEntry entry = city.GetPlayerEntry<CityLoyaltyEntry>(pm, true);
 
                 if (entry != null && !string.IsNullOrEmpty(entry.CustomTitle))
-                    str = string.Format("{0}\t{1}", entry.CustomTitle, city.Definition.Name);
+                    str = $"{entry.CustomTitle}\t{city.Definition.Name}";
             }
 
             return str != null;
@@ -1144,7 +1138,7 @@ namespace Server.Engines.CityLoyalty
             if (gold > 0)
             {
                 origin.AddToTreasury(from, gold);
-                from.SendLocalizedMessage(1154761, string.Format("{0}\t{1}", gold.ToString("N0", CultureInfo.GetCultureInfo("en-US")), origin.Definition.Name)); // ~1_val~ gold has been deposited into the ~2_NAME~ City treasury for your efforts!
+                from.SendLocalizedMessage(1154761, $"{gold.ToString("N0", CultureInfo.GetCultureInfo("en-US"))}\t{origin.Definition.Name}"); // ~1_val~ gold has been deposited into the ~2_NAME~ City treasury for your efforts!
             }
 
             if (entry.Distance > 0)
diff --git a/Scripts/Services/City Loyalty System/Gumps.cs b/Scripts/Services/City Loyalty System/Gumps.cs
index 87ed303f1..94eeafc06 100644
--- a/Scripts/Services/City Loyalty System/Gumps.cs	
+++ b/Scripts/Services/City Loyalty System/Gumps.cs	
@@ -181,7 +181,7 @@ namespace Server.Engines.CityLoyalty
             if (City == null)
                 return;
 
-            AddHtmlLocalized(30, 40, 285, 200, 1152891, string.Format("#{0}", CityLoyaltySystem.GetCityLocalization(City.City).ToString()), 1, false, true);
+            AddHtmlLocalized(30, 40, 285, 200, 1152891, $"#{CityLoyaltySystem.GetCityLocalization(City.City).ToString()}", 1, false, true);
             /*If you choose to declare citizenship with ~1_CITY~, you will be granted the "Citizen" title.
              * If your loyalty rating to ~1_CITY~ is high enough, you will be able to receive titles with
              * that city.<br><br>You may only have citizenship in one city at a time. You may renounce 
@@ -230,7 +230,7 @@ namespace Server.Engines.CityLoyalty
             AddHtmlLocalized(45, 40, 250, 16, 1152883, false, false); // Citizenship:
             AddHtmlLocalized(200, 40, 100, 16, CityLoyaltySystem.CityLocalization(Citizenship.City), false, false);
 
-            AddHtmlLocalized(30, 70, 280, 200, 1152887, string.Format("#{0}", CityLoyaltySystem.GetCityLocalization(Citizenship.City).ToString()), 1, false, true);
+            AddHtmlLocalized(30, 70, 280, 200, 1152887, $"#{CityLoyaltySystem.GetCityLocalization(Citizenship.City).ToString()}", 1, false, true);
             /*If you renounce your citizenship, you will be stripped of all titles gained with your current
              * city, and you must wait 7 days before declaring citizenship again.<br><br>Are you sure you wish
              * to renounce your citizenship with ~1_CITY~?*/
@@ -412,10 +412,7 @@ namespace Server.Engines.CityLoyalty
 
                 DateTime next = City.Election.NextElection();
 
-                AddHtmlLocalized(20, 45, 360, 60, 1153898, string.Format("{0}\t{1}\t{2}",
-                    City.Definition.Name,
-                    City.Governor == null ? "Vacant" : City.Governor.Name,
-                    next.ToString()), 0xFFFF, false, false); // The current Governor of ~1_CITY~ is ~2_PLAYER~.  The next election cycle begins after ~3_DAYS~. 
+                AddHtmlLocalized(20, 45, 360, 60, 1153898, $"{City.Definition.Name}\t{(City.Governor == null ? "Vacant" : City.Governor.Name)}\t{next.ToString()}", 0xFFFF, false, false); // The current Governor of ~1_CITY~ is ~2_PLAYER~.  The next election cycle begins after ~3_DAYS~. 
             }
             else
             {
@@ -492,8 +489,8 @@ namespace Server.Engines.CityLoyalty
                 Guild g = entry.Player == null ? null : entry.Player.Guild as Guild;
 
                 AddButton(10, 70 + (pageIndex * 25), 4002, 4004, i + 100, GumpButtonType.Reply, 0);
-                AddHtml(130, 70 + (pageIndex * 25), 200, 20, string.Format("<basefont color=#EEE8AA>{0}", entry.Player == null ? "Unknown" : entry.Player.Name), false, false);
-                AddHtml(300, 70 + (pageIndex * 25), 200, 20, string.Format("<basefont color=#EEE8AA>{0}", g != null ? g.Name : ""), false, false);
+                AddHtml(130, 70 + (pageIndex * 25), 200, 20, $"<basefont color=#EEE8AA>{(entry.Player == null ? "Unknown" : entry.Player.Name)}", false, false);
+                AddHtml(300, 70 + (pageIndex * 25), 200, 20, $"<basefont color=#EEE8AA>{(g != null ? g.Name : "")}", false, false);
                 pageIndex++;
 
                 if (pageIndex >= 10 && i < City.Election.Candidates.Count - 1)
@@ -584,9 +581,9 @@ namespace Server.Engines.CityLoyalty
                 Guild g = entry.Player == null ? null : entry.Player.Guild as Guild;
 
                 AddButton(10, 70 + (pageIndex * 25), 4002, 4004, i + 100, GumpButtonType.Reply, 0);
-                AddHtml(130, 70 + (pageIndex * 25), 200, 20, string.Format("<basefont color=#EEE8AA>{0}", entry.Player == null ? "Unknown" : entry.Player.Name), false, false);
-                AddHtml(300, 70 + (pageIndex * 25), 200, 20, string.Format("<basefont color=#EEE8AA>{0}", g != null ? g.Name : ""), false, false);
-                AddHtml(470, 70 + (pageIndex * 25), 200, 20, string.Format("<basefont color=#EEE8AA>{0}%", City.Election.GetStanding(entry).ToString("F1", System.Globalization.CultureInfo.InvariantCulture)), false, false);
+                AddHtml(130, 70 + (pageIndex * 25), 200, 20, $"<basefont color=#EEE8AA>{(entry.Player == null ? "Unknown" : entry.Player.Name)}", false, false);
+                AddHtml(300, 70 + (pageIndex * 25), 200, 20, $"<basefont color=#EEE8AA>{(g != null ? g.Name : "")}", false, false);
+                AddHtml(470, 70 + (pageIndex * 25), 200, 20, $"<basefont color=#EEE8AA>{City.Election.GetStanding(entry).ToString("F1", System.Globalization.CultureInfo.InvariantCulture)}%", false, false);
 
                 pageIndex++;
 
@@ -692,7 +689,7 @@ namespace Server.Engines.CityLoyalty
                     City.Treasury -= CityLoyaltySystem.TradeDealCost;
 
                     City.OnNewTradeDeal(_Deals[id]);
-                    City.HeraldMessage(1154058, string.Format("{0}\t#{1}", City.Definition.Name, (int)_Deals[id] - 12));
+                    City.HeraldMessage(1154058, $"{City.Definition.Name}\t#{(int)_Deals[id] - 12}");
                 }
             }
         }
@@ -779,7 +776,7 @@ namespace Server.Engines.CityLoyalty
                         if (User != Citizen)
                             User.SendMessage("You have bestowed {0} the title: {1} of {2}.", Citizen.Name, text, City.Definition.Name);
 
-                        Citizen.SendLocalizedMessage(1155605, string.Format("{0}\t{1}", text, City.Definition.Name)); // Thou hath been bestowed the title ~1_TITLE~! - ~1_TITLE~ of ~2_CITY~
+                        Citizen.SendLocalizedMessage(1155605, $"{text}\t{City.Definition.Name}"); // Thou hath been bestowed the title ~1_TITLE~! - ~1_TITLE~ of ~2_CITY~
                     }
                 }
                 else
@@ -983,7 +980,7 @@ namespace Server.Engines.CityLoyalty
                 return;
 
             AddBackground(0, 0, 250, (City.Stone.Boxes.Count * 25) + 90, 5054);
-            AddHtml(0, 15, 250, 20, string.Format("<center>Inventory - {0}</center>", City.Definition.Name), false, false); // Inventory
+            AddHtml(0, 15, 250, 20, $"<center>Inventory - {City.Definition.Name}</center>", false, false); // Inventory
 
             AddLabel(10, 40, 0, "Location");
             AddLabel(150, 40, 0, "View");
@@ -1070,7 +1067,7 @@ namespace Server.Engines.CityLoyalty
                 CityLoyaltySystem city = CityLoyaltySystem.Cities[i];
 
                 AddButton(25, 78 + (i * 20), 2103, 2104, i + 100, GumpButtonType.Reply, 0);
-                AddHtml(70, 75 + (i * 20), 150, 20, string.Format("<basefont color=#8B0000>{0}", city.Definition.Name), false, false);
+                AddHtml(70, 75 + (i * 20), 150, 20, $"<basefont color=#8B0000>{city.Definition.Name}", false, false);
                 AddLabelCropped(170, 75 + (i * 20), 295, 20, 0, city.Headline);
             }
         }
@@ -1103,7 +1100,7 @@ namespace Server.Engines.CityLoyalty
             AddHtmlLocalized(25, 55, 500, 20, 1154915, City.Definition.Name, 0, false, false); // The Latest News from the City of ~1_CITY~
 
             if (City.PostedOn != DateTime.MinValue)
-                AddHtmlLocalized(25, 85, 500, 20, 1154916, string.Format("{0}\t{1}", City.Governor != null ? City.Governor.Name : "somebody", City.PostedOn.ToShortDateString()), 0, false, false); // Posted by ~1_NAME~ on ~2_date~
+                AddHtmlLocalized(25, 85, 500, 20, 1154916, $"{(City.Governor != null ? City.Governor.Name : "somebody")}\t{City.PostedOn.ToShortDateString()}", 0, false, false); // Posted by ~1_NAME~ on ~2_date~
 
             AddHtml(25, 115, 500, 20, City.Headline, false, false);
             AddHtml(25, 195, 500, 150, City.Body, false, false);
@@ -1169,7 +1166,7 @@ namespace Server.Engines.CityLoyalty
             AddPage(page);
 
             AddBackground(0, 0, 500, 400, 5054);
-            AddHtml(0, 15, 400, 20, string.Format("<center>City Info - {0}</center>", City.Definition.Name), false, false);
+            AddHtml(0, 15, 400, 20, $"<center>City Info - {City.Definition.Name}</center>", false, false);
 
             AddLabel(10, 35, 0, "Player");
             AddLabel(150, 35, 0, "Love");
@@ -1192,7 +1189,7 @@ namespace Server.Engines.CityLoyalty
                     continue;
 
                 pageIndex++;
-                AddHtml(10, 60 + (pageIndex * 25), 140, 20, string.Format("{0}{1}", entry.Player != null ? entry.Player.Name : "Unknown", entry.IsCitizen ? "(Citizen)" : ""), false, false);
+                AddHtml(10, 60 + (pageIndex * 25), 140, 20, $"{(entry.Player != null ? entry.Player.Name : "Unknown")}{(entry.IsCitizen ? "(Citizen)" : "")}", false, false);
                 AddHtml(150, 60 + (pageIndex * 25), 75, 20, entry.Love.ToString(), false, false);
                 AddHtml(225, 60 + (pageIndex * 25), 75, 20, entry.Hate.ToString(), false, false);
                 AddHtml(300, 60 + (pageIndex * 25), 150, 20, string.IsNullOrEmpty(entry.CustomTitle) ? "" : entry.CustomTitle, false, false);
diff --git a/Scripts/Services/City Loyalty System/Items/Addons.cs b/Scripts/Services/City Loyalty System/Items/Addons.cs
index 88493a149..a6c6a029b 100644
--- a/Scripts/Services/City Loyalty System/Items/Addons.cs	
+++ b/Scripts/Services/City Loyalty System/Items/Addons.cs	
@@ -89,8 +89,8 @@ namespace Server.Items
 
             if (addon != null)
             {
-                if (addon is InterchangeableAddon)
-                    ((InterchangeableAddon)addon).EastFacing = east;
+                if (addon is InterchangeableAddon interchangeableAddon)
+                    interchangeableAddon.EastFacing = east;
 
                 Spells.SpellHelper.GetSurfaceTop(ref p);
 
diff --git a/Scripts/Services/City Loyalty System/Items/Banners.cs b/Scripts/Services/City Loyalty System/Items/Banners.cs
index 279ba7432..ac6ef30a2 100644
--- a/Scripts/Services/City Loyalty System/Items/Banners.cs	
+++ b/Scripts/Services/City Loyalty System/Items/Banners.cs	
@@ -91,7 +91,7 @@ namespace Server.Engines.CityLoyalty
                     base.OnDoubleClick(from);
                 }
                 else
-                    from.SendLocalizedMessage(1152361, string.Format("#{0}", CityLoyaltySystem.GetCityLocalization(City))); // You are not sufficiently loyal to ~1_CITY~ to use this.
+                    from.SendLocalizedMessage(1152361, $"#{CityLoyaltySystem.GetCityLocalization(City)}"); // You are not sufficiently loyal to ~1_CITY~ to use this.
             }
         }
 
diff --git a/Scripts/Services/City Loyalty System/Items/CityStone.cs b/Scripts/Services/City Loyalty System/Items/CityStone.cs
index 5031603ea..26268e6b0 100644
--- a/Scripts/Services/City Loyalty System/Items/CityStone.cs	
+++ b/Scripts/Services/City Loyalty System/Items/CityStone.cs	
@@ -35,7 +35,7 @@ namespace Server.Engines.CityLoyalty
         public override void AddNameProperty(ObjectPropertyList list)
         {
             if (City != null)
-                list.Add(1153887, string.Format("#{0}", CityLoyaltySystem.GetCityLocalization(City.City)));
+                list.Add(1153887, $"#{CityLoyaltySystem.GetCityLocalization(City.City)}");
         }
 
         public override void GetProperties(ObjectPropertyList list)
@@ -62,7 +62,7 @@ namespace Server.Engines.CityLoyalty
             }
 
             list.Add(1154023, City.Treasury > 0 ? City.Treasury.ToString("N0", CultureInfo.GetCultureInfo("en-US")) : City.Treasury.ToString()); // City Treasury Balance: ~1_AMT~
-            list.Add(1154059, string.Format("#{0}", City.ActiveTradeDeal == TradeDeal.None ? 1011051 : (int)City.ActiveTradeDeal - 12)); // Current Trade Deal: ~1_GUILD~
+            list.Add(1154059, $"#{(City.ActiveTradeDeal == TradeDeal.None ? 1011051 : (int)City.ActiveTradeDeal - 12)}"); // Current Trade Deal: ~1_GUILD~
             list.Add(1154907, City.CompletedTrades.ToString(CultureInfo.GetCultureInfo("en-US"))); // Trade Orders Delivered: ~1_val~
         }
 
@@ -90,9 +90,7 @@ namespace Server.Engines.CityLoyalty
                         m.SendLocalizedMessage(1154027); // Which Citizen do you wish to bestow a title?
                         m.BeginTarget(10, false, TargetFlags.None, (mob, targeted) =>
                             {
-                                PlayerMobile pm = targeted as PlayerMobile;
-
-                                if (pm != null)
+                                if (targeted is PlayerMobile pm)
                                 {
                                     if (City.IsCitizen(pm))
                                     {
@@ -171,16 +169,16 @@ namespace Server.Engines.CityLoyalty
 
             list.Add(new SimpleContextMenuEntry(from, 1154019, m => // Remove City Title
             {
-                if (entry != null && entry.CustomTitle != null)
+                if (entry?.CustomTitle != null)
                 {
                     entry.CustomTitle = null;
 
-                    if (m is PlayerMobile)
-                        ((PlayerMobile)m).RemoveRewardTitle(1154017, true);
+                    if (m is PlayerMobile playerMobile)
+                        playerMobile.RemoveRewardTitle(1154017, true);
 
                     m.SendMessage("City Title removed.");
                 }
-            }, enabled: entry != null && entry.CustomTitle != null));
+            }, enabled: entry?.CustomTitle != null));
 
             list.Add(new SimpleContextMenuEntry(from, 1154068, m => // Accept Office
             {
@@ -222,10 +220,7 @@ namespace Server.Engines.CityLoyalty
             writer.Write((int)City.City);
 
             writer.Write(Boxes == null ? 0 : Boxes.Count);
-            if (Boxes != null)
-            {
-                Boxes.ForEach(b => writer.Write(b));
-            }
+            Boxes?.ForEach(b => writer.Write(b));
         }
 
         public override void Deserialize(GenericReader reader)
@@ -241,9 +236,7 @@ namespace Server.Engines.CityLoyalty
             int count = reader.ReadInt();
             for (int i = 0; i < count; i++)
             {
-                BallotBox box = reader.ReadItem() as BallotBox;
-
-                if (box != null)
+                if (reader.ReadItem() is BallotBox box)
                 {
                     if (Boxes == null)
                         Boxes = new List<BallotBox>();
diff --git a/Scripts/Services/City Loyalty System/Mobiles/GuardCaptain.cs b/Scripts/Services/City Loyalty System/Mobiles/GuardCaptain.cs
index d15d71315..35d892f20 100644
--- a/Scripts/Services/City Loyalty System/Mobiles/GuardCaptain.cs	
+++ b/Scripts/Services/City Loyalty System/Mobiles/GuardCaptain.cs	
@@ -64,9 +64,7 @@ namespace Server.Engines.CityLoyalty
         {
             if (CitySystem != null && m is PlayerMobile && InRange(m.Location, 2))
             {
-                Raider raider = ((PlayerMobile)m).AllFollowers.FirstOrDefault(mob => mob is Raider && mob.InRange(Location, 2)) as Raider;
-
-                if (raider != null)
+                if (((PlayerMobile)m).AllFollowers.FirstOrDefault(mob => mob is Raider && mob.InRange(Location, 2)) is Raider raider)
                 {
                     CitySystem.AwardLove(m, 1000);
 
@@ -110,12 +108,12 @@ namespace Server.Engines.CityLoyalty
                 if (theirSystem != null && thisSystem != null && CityLoyaltySystem.HasCitizenship(Player, Guard.City))
                 {
                     if (Guard.IsInBannerCooldown(Player))
-                        Guard.SayTo(Player, 1152364, string.Format("#{0}", CityLoyaltySystem.BannerLocalization(thisSystem.City))); // I have quite a backlog of orders and I cannot satisfy your request for a ~1_ITEM~ right now.
+                        Guard.SayTo(Player, 1152364, $"#{CityLoyaltySystem.BannerLocalization(thisSystem.City)}"); // I have quite a backlog of orders and I cannot satisfy your request for a ~1_ITEM~ right now.
                     if (theirSystem.GetLoyaltyRating(Player) < LoyaltyRating.Adored)
-                        Guard.SayTo(Player, 1152363, string.Format("#{0}", CityLoyaltySystem.GetCityLocalization(thisSystem.City))); // I apologize, but you are not well-enough renowned in the city of ~1_CITY~ to make this purchase.
+                        Guard.SayTo(Player, 1152363, $"#{CityLoyaltySystem.GetCityLocalization(thisSystem.City)}"); // I apologize, but you are not well-enough renowned in the city of ~1_CITY~ to make this purchase.
                     else
                     {
-                        string args = string.Format("#{0}\t{1}", CityLoyaltySystem.BannerLocalization(thisSystem.City), CityLoyaltySystem.BannerCost.ToString("N0", CultureInfo.GetCultureInfo("en-US")));
+                        string args = $"#{CityLoyaltySystem.BannerLocalization(thisSystem.City)}\t{CityLoyaltySystem.BannerCost.ToString("N0", CultureInfo.GetCultureInfo("en-US"))}";
                         Player.SendGump(new ConfirmCallbackGump(Player, 1049004, 1152365, Player, args, Guard.OnConfirm));
                     }
                 }
@@ -124,9 +122,7 @@ namespace Server.Engines.CityLoyalty
 
         private void OnConfirm(Mobile m, object o)
         {
-            PlayerMobile pm = m as PlayerMobile;
-
-            if (pm != null)
+            if (m is PlayerMobile pm)
             {
                 if (Banker.Withdraw(pm, CityLoyaltySystem.BannerCost))
                 {
diff --git a/Scripts/Services/City Loyalty System/Mobiles/Raider.cs b/Scripts/Services/City Loyalty System/Mobiles/Raider.cs
index 1441bec13..e71674d13 100644
--- a/Scripts/Services/City Loyalty System/Mobiles/Raider.cs	
+++ b/Scripts/Services/City Loyalty System/Mobiles/Raider.cs	
@@ -105,7 +105,7 @@ namespace Server.Mobiles
                 ControlOrder = OrderType.Follow;
 
                 m.SendLocalizedMessage(1152236, Name); // You arrest the ~1_name~. Take the criminal to the guard captain.
-                m.NonlocalOverheadMessage(MessageType.Regular, 0x3B2, 1152238, string.Format("{0}\t{1}", m.Name, Name));
+                m.NonlocalOverheadMessage(MessageType.Regular, 0x3B2, 1152238, $"{m.Name}\t{Name}");
 
                 return true;
             }
diff --git a/Scripts/Services/City Loyalty System/Trading/DonationCrate.cs b/Scripts/Services/City Loyalty System/Trading/DonationCrate.cs
index e8ee4d595..c84fe7f0c 100644
--- a/Scripts/Services/City Loyalty System/Trading/DonationCrate.cs	
+++ b/Scripts/Services/City Loyalty System/Trading/DonationCrate.cs	
@@ -101,9 +101,9 @@ namespace Server.Engines.CityLoyalty
                     if (sys != null)
                     {
                         // TODO: If anything adds to treasure, change this
-                        if (item is MaritimeCargo)
+                        if (item is MaritimeCargo maritimeCargo)
                         {
-                            AddToTreasury(sys, (MaritimeCargo)item);
+                            AddToTreasury(sys, maritimeCargo);
                         }
 
                         item.Delete();
diff --git a/Scripts/Services/City Loyalty System/Trading/Mobiles/Slim.cs b/Scripts/Services/City Loyalty System/Trading/Mobiles/Slim.cs
index 3f6900281..b08d95a57 100644
--- a/Scripts/Services/City Loyalty System/Trading/Mobiles/Slim.cs	
+++ b/Scripts/Services/City Loyalty System/Trading/Mobiles/Slim.cs	
@@ -85,9 +85,7 @@ namespace Server.Engines.CityLoyalty
 
                 protected override void OnTarget(Mobile from, object targeted)
                 {
-                    TradeOrderCrate order = targeted as TradeOrderCrate;
-
-                    if (order != null)
+                    if (targeted is TradeOrderCrate order)
                     {
                         if (CityLoyaltySystem.CityTrading.TryTurnInToSlim(from, order, Slim))
                         {
diff --git a/Scripts/Services/City Loyalty System/Trading/Mobiles/TradeMinister.cs b/Scripts/Services/City Loyalty System/Trading/Mobiles/TradeMinister.cs
index f06ab8893..f76eb61ba 100644
--- a/Scripts/Services/City Loyalty System/Trading/Mobiles/TradeMinister.cs	
+++ b/Scripts/Services/City Loyalty System/Trading/Mobiles/TradeMinister.cs	
@@ -147,9 +147,7 @@ namespace Server.Engines.CityLoyalty
 
                 protected override void OnTarget(Mobile from, object targeted)
                 {
-                    TradeOrderCrate order = targeted as TradeOrderCrate;
-
-                    if (order != null)
+                    if (targeted is TradeOrderCrate order)
                     {
                         if (CityLoyaltySystem.CityTrading.TryTurnIn(from, order, Minister))
                         {
diff --git a/Scripts/Services/City Loyalty System/Trading/TradeCrate.cs b/Scripts/Services/City Loyalty System/Trading/TradeCrate.cs
index a71d0d995..483f607a1 100644
--- a/Scripts/Services/City Loyalty System/Trading/TradeCrate.cs	
+++ b/Scripts/Services/City Loyalty System/Trading/TradeCrate.cs	
@@ -96,7 +96,7 @@ namespace Server.Engines.CityLoyalty
         {
             base.GetProperties(list);
 
-            list.Add(1151737, string.Format("#{0}", CityLoyaltySystem.CityLocalization(Entry.Destination))); // Destination City: ~1_city~
+            list.Add(1151737, $"#{CityLoyaltySystem.CityLocalization(Entry.Destination)}"); // Destination City: ~1_city~
             list.Add(1076255); // NO-TRADE
 
             int weight = Items.Sum(x => x.Amount);
@@ -110,9 +110,9 @@ namespace Server.Engines.CityLoyalty
                 for (int i = 0; i < Entry.Details.Count; i++)
                 {
                     if (Utility.ToInt32(Entry.Details[i].Name) > 0)
-                        list.Add(1116453 + i, string.Format("#{0}\t{1}\t{2}", Entry.Details[i].Name, Entry.Details[i].Count(this), Entry.Details[i].Amount)); // ~1_val~: ~2_val~/~3_val~
+                        list.Add(1116453 + i, $"#{Entry.Details[i].Name}\t{Entry.Details[i].Count(this)}\t{Entry.Details[i].Amount}"); // ~1_val~: ~2_val~/~3_val~
                     else
-                        list.Add(1116453 + i, string.Format("{0}\t{1}\t{2}", Entry.Details[i].Name, Entry.Details[i].Count(this), Entry.Details[i].Amount)); // ~1_val~: ~2_val~/~3_val~
+                        list.Add(1116453 + i, $"{Entry.Details[i].Name}\t{Entry.Details[i].Count(this)}\t{Entry.Details[i].Amount}"); // ~1_val~: ~2_val~/~3_val~
                 }
             }
 
diff --git a/Scripts/Services/City Loyalty System/Trading/TradeSystem.cs b/Scripts/Services/City Loyalty System/Trading/TradeSystem.cs
index 6d237ce51..07b69c367 100644
--- a/Scripts/Services/City Loyalty System/Trading/TradeSystem.cs	
+++ b/Scripts/Services/City Loyalty System/Trading/TradeSystem.cs	
@@ -92,9 +92,7 @@ namespace Server.Engines.CityLoyalty
                 minister.SayTo(
                     from,
                     1158790,
-                    string.Format("{0}\t{1}",
-                    WorldLocationInfo.GetLocationString(p, map),
-                    Sextant.GetCoords(p, map)), 1150);
+                    $"{WorldLocationInfo.GetLocationString(p, map)}\t{Sextant.GetCoords(p, map)}", 1150);
                 // Take notice! The vile Krampus has been spotted near ~2_where~ at ~1_coords~!  New Trade Orders are suspended until Krampus has been defeated!
             }
             else
@@ -162,7 +160,7 @@ namespace Server.Engines.CityLoyalty
             TradeMinister minister = turninMobile as TradeMinister;
 
             if (from.AccessLevel == AccessLevel.Player && minister != null && minister.City != entry.Destination)
-                turninMobile.SayTo(from, 1151738, string.Format("#{0}", CityLoyaltySystem.GetCityLocalization(entry.Destination))); // Begging thy pardon, but those goods are destined for the City of ~1_city~
+                turninMobile.SayTo(from, 1151738, $"#{CityLoyaltySystem.GetCityLocalization(entry.Destination)}"); // Begging thy pardon, but those goods are destined for the City of ~1_city~
             else if (!order.Fulfilled)
                 turninMobile.SayTo(from, 1151732); // This trade order has not been fulfilled.  Fill the trade order with all necessary items and try again.
             else
diff --git a/Scripts/Services/CleanUpBritannia/Gumps.cs b/Scripts/Services/CleanUpBritannia/Gumps.cs
index c4d6b61d2..64e8bebd9 100644
--- a/Scripts/Services/CleanUpBritannia/Gumps.cs
+++ b/Scripts/Services/CleanUpBritannia/Gumps.cs
@@ -32,9 +32,9 @@ namespace Server.Engines.CleanUpBritannia
 
         public override void OnItemCreated(Item item)
         {
-            if (item is ScrollOfAlacrity)
+            if (item is ScrollOfAlacrity scrollOfAlacrity)
             {
-                ((ScrollOfAlacrity)item).Skill = (SkillName)Utility.Random(SkillInfo.Table.Length);
+                scrollOfAlacrity.Skill = (SkillName)Utility.Random(SkillInfo.Table.Length);
             }
 
             item.InvalidateProperties();
diff --git a/Scripts/Services/CleanUpBritannia/Items/DragonHead.cs b/Scripts/Services/CleanUpBritannia/Items/DragonHead.cs
index 5c2d9dadf..2facf8f21 100644
--- a/Scripts/Services/CleanUpBritannia/Items/DragonHead.cs
+++ b/Scripts/Services/CleanUpBritannia/Items/DragonHead.cs
@@ -275,9 +275,7 @@ namespace Server.Items
 
         private void Replace()
         {
-            Container c = Parent as Container;
-
-            if (c != null)
+            if (Parent is Container c)
             {
                 DragonHeadAddonDeed deed = new DragonHeadAddonDeed();
                 c.DropItem(deed);
diff --git a/Scripts/Services/CleanUpBritannia/Items/Steward.cs b/Scripts/Services/CleanUpBritannia/Items/Steward.cs
index aa406a772..db79003b9 100644
--- a/Scripts/Services/CleanUpBritannia/Items/Steward.cs
+++ b/Scripts/Services/CleanUpBritannia/Items/Steward.cs
@@ -299,9 +299,9 @@ namespace Server.Mobiles
                 }
                 else
                 {
-                    if (_Mannequin is Steward)
+                    if (_Mannequin is Steward steward)
                     {
-                        ((Steward)_Mannequin).Keyword = text;
+                        steward.Keyword = text;
                         from.SendLocalizedMessage(1153257); // The keyword has been set.
                     }
                 }
diff --git a/Scripts/Services/CleanUpBritannia/PointExchange.cs b/Scripts/Services/CleanUpBritannia/PointExchange.cs
index a05c495cc..54c91329b 100644
--- a/Scripts/Services/CleanUpBritannia/PointExchange.cs
+++ b/Scripts/Services/CleanUpBritannia/PointExchange.cs
@@ -26,10 +26,10 @@ namespace Server.Engines.Points
 
             if (m.InRange(Location, 3))
             {
-                if (m is PlayerMobile)
+                if (m is PlayerMobile playerMobile)
                 {
                     m.CloseGump(typeof(InternalGump));
-                    BaseGump.SendGump(new InternalGump((PlayerMobile)m));
+                    BaseGump.SendGump(new InternalGump(playerMobile));
                 }
             }
             else
diff --git a/Scripts/Services/CommunityCollections/CollectionItem.cs b/Scripts/Services/CommunityCollections/CollectionItem.cs
index f10f1d52e..36aabc00b 100644
--- a/Scripts/Services/CommunityCollections/CollectionItem.cs
+++ b/Scripts/Services/CommunityCollections/CollectionItem.cs
@@ -114,8 +114,8 @@ namespace Server
             {
                 if (m_Title is int)
                     to.SendLocalizedMessage(1073625, "#" + (int)m_Title); // The title "~1_TITLE~" has been bestowed upon you. 
-                else if (m_Title is string)
-                    to.SendLocalizedMessage(1073625, (string)m_Title); // The title "~1_TITLE~" has been bestowed upon you. 
+                else if (m_Title is string s)
+                    to.SendLocalizedMessage(1073625, s); // The title "~1_TITLE~" has been bestowed upon you. 
 
                 to.AddCollectionPoints(collection.CollectionID, (int)Points * -1);
             }
@@ -138,9 +138,7 @@ namespace Server
 
         public override bool Validate(PlayerMobile from, Item item)
         {
-            TreasureMap map = item as TreasureMap;
-
-            if (map != null && map.Level == m_Level)
+            if (item is TreasureMap map && map.Level == m_Level)
                 return true;
 
             return false;
@@ -161,9 +159,8 @@ namespace Server
 
         public override bool Validate(PlayerMobile from, Item item)
         {
-            Spellbook spellbook = item as Spellbook;
 
-            if (spellbook != null && spellbook.SpellbookType == m_Type && spellbook.Content == 0)
+            if (item is Spellbook spellbook && spellbook.SpellbookType == m_Type && spellbook.Content == 0)
                 return true;
 
             return false;
diff --git a/Scripts/Services/CommunityCollections/CommunityCollectionGump.cs b/Scripts/Services/CommunityCollections/CommunityCollectionGump.cs
index 0858aa551..b94dd58b7 100644
--- a/Scripts/Services/CommunityCollections/CommunityCollectionGump.cs
+++ b/Scripts/Services/CommunityCollections/CommunityCollectionGump.cs
@@ -134,13 +134,12 @@ namespace Server.Gumps
             {
                 CollectionItem item = m_Collection.Donations[m_Index];
                 Type type = item.Type;
-                Account acct = m_Owner.Account as Account;
 
                 int height = Math.Max(item.Height, 20);
 
                 int amount = 0;
 
-                if (item.Type == typeof(Gold) && acct != null)
+                if (item.Type == typeof(Gold) && m_Owner.Account is Account acct)
                 {
                     amount = acct.TotalGold + m_Owner.Backpack.GetAmount(item.Type);
                 }
@@ -345,9 +344,9 @@ namespace Server.Gumps
                 {
                     if (item.Points <= points)
                     {
-                        if (item is CollectionHuedItem)
+                        if (item is CollectionHuedItem collectionHuedItem)
                         {
-                            m_Owner.SendGump(new CommunityCollectionGump(m_Owner, m_Collection, m_Location, Section.Hues, (CollectionHuedItem)item));
+                            m_Owner.SendGump(new CommunityCollectionGump(m_Owner, m_Collection, m_Location, Section.Hues, collectionHuedItem));
                         }
                         else
                         {
@@ -616,9 +615,9 @@ namespace Server.Gumps
             {
                 if (CheckType(item, type, derives) && colItem.Validate(pm, GetActual(item)))
                 {
-                    if (item is CommodityDeed)
+                    if (item is CommodityDeed commodityDeed)
                     {
-                        count += ((CommodityDeed)item).Commodity.Amount;
+                        count += commodityDeed.Commodity.Amount;
                     }
                     else
                     {
@@ -650,9 +649,9 @@ namespace Server.Gumps
 
         public static Item GetActual(Item item)
         {
-            if (item is CommodityDeed)
+            if (item is CommodityDeed commodityDeed)
             {
-                return ((CommodityDeed)item).Commodity;
+                return commodityDeed.Commodity;
             }
 
             return item;
diff --git a/Scripts/Services/CommunityCollections/ConfirmRewardGump.cs b/Scripts/Services/CommunityCollections/ConfirmRewardGump.cs
index 4665d1d43..f21d7d633 100644
--- a/Scripts/Services/CommunityCollections/ConfirmRewardGump.cs
+++ b/Scripts/Services/CommunityCollections/ConfirmRewardGump.cs
@@ -33,9 +33,8 @@ namespace Server.Gumps
             if (m_Collection == null || !from.InRange(m_Location, 2))
                 return;
 
-            if (from is PlayerMobile)
+            if (from is PlayerMobile player)
             {
-                PlayerMobile player = (PlayerMobile)from;
                 if (player.GetCollectionPoints(m_Collection.CollectionID) < m_Item.Points)
                 {
                     player.SendLocalizedMessage(1073122); // You don't have enough points for that!
diff --git a/Scripts/Services/CommunityCollections/SelectTitleGump.cs b/Scripts/Services/CommunityCollections/SelectTitleGump.cs
index 6ae2bf79f..4ed23d08b 100644
--- a/Scripts/Services/CommunityCollections/SelectTitleGump.cs
+++ b/Scripts/Services/CommunityCollections/SelectTitleGump.cs
@@ -28,7 +28,7 @@ namespace Server.Gumps
                 if (from.RewardTitles[page] is int)
                     AddHtmlLocalized(20, 35, 230, 40, (int)from.RewardTitles[page], 0x32, true, false);
                 else if (from.RewardTitles[page] is string)
-                    AddHtml(20, 35, 230, 40, string.Format("<BASEFONT COLOR=#{0:X6}>{1}</BASEFONT>", 0x32, (string)from.RewardTitles[page]), true, false);
+                    AddHtml(20, 35, 230, 40, $"<BASEFONT COLOR=#{0x32:X6}>{(string)from.RewardTitles[page]}</BASEFONT>", true, false);
             }
             else
                 AddHtmlLocalized(20, 35, 230, 40, 1073995, 0x32, true, false);
diff --git a/Scripts/Services/Craft/Core/AlterItem.cs b/Scripts/Services/Craft/Core/AlterItem.cs
index 199e97700..fd24c42f0 100644
--- a/Scripts/Services/Craft/Core/AlterItem.cs
+++ b/Scripts/Services/Craft/Core/AlterItem.cs
@@ -85,9 +85,7 @@ namespace Server.Engines.Craft
 
             if (attrs != null && attrs.Length > 0)
             {
-                AlterableAttribute attr = attrs[0] as AlterableAttribute;
-
-                if (attr != null && (!inherit || attr.CheckInherit(t)))
+                if (attrs[0] is AlterableAttribute attr && (!inherit || attr.CheckInherit(t)))
                     return attr;
             }
 
@@ -367,10 +365,8 @@ namespace Server.Engines.Craft
 
         private static bool IsAlterable(Item item)
         {
-            if (item is BaseWeapon)
+            if (item is BaseWeapon weapon)
             {
-                BaseWeapon weapon = (BaseWeapon)item;
-
                 if (weapon.SetID != SetItem.None || !weapon.CanAlter || weapon.NegativeAttributes.Antique != 0)
                     return false;
 
@@ -378,10 +374,8 @@ namespace Server.Engines.Craft
                     return false;
             }
 
-            if (item is BaseArmor)
+            if (item is BaseArmor armor)
             {
-                BaseArmor armor = (BaseArmor)item;
-
                 if (armor.SetID != SetItem.None || !armor.CanAlter || armor.NegativeAttributes.Antique != 0)
                     return false;
 
@@ -392,10 +386,8 @@ namespace Server.Engines.Craft
                     return false;
             }
 
-            if (item is BaseClothing)
+            if (item is BaseClothing cloth)
             {
-                BaseClothing cloth = (BaseClothing)item;
-
                 if (cloth.SetID != SetItem.None || !cloth.CanAlter || cloth.NegativeAttributes.Antique != 0)
                     return false;
 
@@ -403,10 +395,8 @@ namespace Server.Engines.Craft
                     return false;
             }
 
-            if (item is BaseQuiver)
+            if (item is BaseQuiver quiver)
             {
-                BaseQuiver quiver = (BaseQuiver)item;
-
                 if (quiver.SetID != SetItem.None || !quiver.CanAlter)
                     return false;
             }
diff --git a/Scripts/Services/Craft/Core/CraftContext.cs b/Scripts/Services/Craft/Core/CraftContext.cs
index af43ad40b..3cbc88e16 100644
--- a/Scripts/Services/Craft/Core/CraftContext.cs
+++ b/Scripts/Services/Craft/Core/CraftContext.cs
@@ -297,10 +297,7 @@ namespace Server.Engines.Craft
         {
             var gump = m.FindGump<AnvilofArtifactsGump>();
 
-            if (gump != null)
-            {
-                gump.Refresh();
-            }
+            gump?.Refresh();
 
             Anvil = null;
         }
diff --git a/Scripts/Services/Craft/Core/CraftGump.cs b/Scripts/Services/Craft/Core/CraftGump.cs
index 55b609154..70eab73be 100644
--- a/Scripts/Services/Craft/Core/CraftGump.cs
+++ b/Scripts/Services/Craft/Core/CraftGump.cs
@@ -130,7 +130,7 @@ namespace Server.Engines.Craft
                 }
             }
 
-            string args = string.Format("{0}\t{1}", made.ToString(), total.ToString());
+            string args = $"{made.ToString()}\t{total.ToString()}";
 
             AddHtmlLocalized(270, 468, 150, 18, 1079443, args, LabelColor, false, false); //~1_DONE~/~2_TOTAL~ COMPLETED
 
@@ -145,7 +145,7 @@ namespace Server.Engines.Craft
             if (notice is int && (int)notice > 0)
                 AddHtmlLocalized(170, 295, 350, 40, (int)notice, LabelColor, false, false);
             else if (notice is string)
-                AddHtml(170, 295, 350, 40, string.Format("<BASEFONT COLOR=#{0:X6}>{1}</BASEFONT>", FontColor, notice), false, false);
+                AddHtml(170, 295, 350, 40, $"<BASEFONT COLOR=#{FontColor:X6}>{notice}</BASEFONT>", false, false);
 
             // If the system has more than one resource
             if (craftSystem.CraftSubRes.Init)
@@ -195,7 +195,7 @@ namespace Server.Engines.Craft
                     AddHtmlLocalized(50 + (context.DoNotColor ? 13 : 0), 365, 250, 18, nameNumber, resourceCount.ToString(), LabelColor, false, false);
                 }
                 else
-                    AddLabel(50, 362, LabelHue, (context.DoNotColor ? "*" : "") + string.Format("{0} ({1} Available)", nameString, resourceCount));
+                    AddLabel(50, 362, LabelHue, (context.DoNotColor ? "*" : "") + $"{nameString} ({resourceCount} Available)");
             }
             // ****************************************
 
@@ -233,7 +233,7 @@ namespace Server.Engines.Craft
                 if (nameNumber > 0)
                     AddHtmlLocalized(50, 385, 250, 18, nameNumber, resourceCount.ToString(), LabelColor, false, false);
                 else
-                    AddLabel(50, 385, LabelHue, string.Format("{0} ({1} Available)", nameString, resourceCount));
+                    AddLabel(50, 385, LabelHue, $"{nameString} ({resourceCount} Available)");
             }
             // ****************************************
 
@@ -327,7 +327,7 @@ namespace Server.Engines.Craft
                 if (subResource.NameNumber > 0)
                     AddHtmlLocalized(255, 63 + (index * 20), 250, 18, subResource.NameNumber, resourceCount.ToString(), LabelColor, false, false);
                 else
-                    AddLabel(255, 60 + (index * 20), LabelHue, string.Format("{0} ({1})", subResource.NameString, resourceCount));
+                    AddLabel(255, 60 + (index * 20), LabelHue, $"{subResource.NameString} ({resourceCount})");
             }
         }
 
diff --git a/Scripts/Services/Craft/Core/CraftGumpItem.cs b/Scripts/Services/Craft/Core/CraftGumpItem.cs
index d394bdbc3..596c5991d 100644
--- a/Scripts/Services/Craft/Core/CraftGumpItem.cs
+++ b/Scripts/Services/Craft/Core/CraftGumpItem.cs
@@ -194,7 +194,7 @@ namespace Server.Engines.Craft
                     minSkill = 0;
 
                 AddHtmlLocalized(170, 132 + (i * 20), 200, 18, AosSkillBonuses.GetLabel(skill.SkillToMake), LabelColor, false, false);
-                AddLabel(430, 132 + (i * 20), LabelHue, string.Format("{0:F1}", minSkill));
+                AddLabel(430, 132 + (i * 20), LabelHue, $"{minSkill:F1}");
             }
 
             CraftSubResCol res = (m_CraftItem.UseSubRes2 ? m_CraftSystem.CraftSubRes2 : m_CraftSystem.CraftSubRes);
@@ -215,7 +215,7 @@ namespace Server.Engines.Craft
                 chance = 1.0;
 
             AddHtmlLocalized(170, 80, 250, 18, 1044057, LabelColor, false, false); // Success Chance:
-            AddLabel(430, 80, LabelHue, string.Format("{0:F1}%", chance * 100));
+            AddLabel(430, 80, LabelHue, $"{chance * 100:F1}%");
 
             if (m_ShowExceptionalChance)
             {
@@ -225,7 +225,7 @@ namespace Server.Engines.Craft
                     excepChance = 1.0;
 
                 AddHtmlLocalized(170, 100, 250, 18, 1044058, 32767, false, false); // Exceptional Chance:
-                AddLabel(430, 100, LabelHue, string.Format("{0:F1}%", excepChance * 100));
+                AddLabel(430, 100, LabelHue, $"{excepChance * 100:F1}%");
             }
         }
 
diff --git a/Scripts/Services/Craft/Core/CraftItem.cs b/Scripts/Services/Craft/Core/CraftItem.cs
index ec95ebc75..b6bfd0c51 100644
--- a/Scripts/Services/Craft/Core/CraftItem.cs
+++ b/Scripts/Services/Craft/Core/CraftItem.cs
@@ -268,7 +268,7 @@ namespace Server.Engines.Craft
                 {
                     Item item = from.Backpack.FindItemByType(typeof(ChronicleOfTheGargoyleQueen1));
 
-                    if (item != null && item is ChronicleOfTheGargoyleQueen1 && ((ChronicleOfTheGargoyleQueen1)item).Charges > 0)
+                    if (item is ChronicleOfTheGargoyleQueen1 && ((ChronicleOfTheGargoyleQueen1)item).Charges > 0)
                     {
                         if (consume)
                             ((ChronicleOfTheGargoyleQueen1)item).Charges--;
@@ -592,9 +592,9 @@ namespace Server.Engines.Craft
 
             foreach (Item item in eable)
             {
-                if (item is AddonComponent)
+                if (item is AddonComponent addonComponent)
                 {
-                    BaseAddon addon = ((AddonComponent)item).Addon;
+                    BaseAddon addon = addonComponent.Addon;
 
                     if (addon is KoiPondAddon || addon is DragonTurtleFountainAddon || addon is WaterWheelAddon)
                     {
@@ -663,12 +663,9 @@ namespace Server.Engines.Craft
 
                 for (int j = 0; j < items[i].Length; ++j)
                 {
-                    IPlantHue plantHue = items[i][j] as IPlantHue;
-                    IPigmentHue pigmentHue = items[i][j] as IPigmentHue;
-
-                    if (plantHue != null && plantHue.PlantHue != context.RequiredPlantHue)
+                    if (items[i][j] is IPlantHue plantHue && plantHue.PlantHue != context.RequiredPlantHue)
                         continue;
-                    else if (pigmentHue != null && pigmentHue.PigmentHue != context.RequiredPigmentHue)
+                    else if (items[i][j] is IPigmentHue pigmentHue && pigmentHue.PigmentHue != context.RequiredPigmentHue)
                         continue;
 
                     totals[i] += items[i][j].Amount;
@@ -685,14 +682,12 @@ namespace Server.Engines.Craft
                 for (int j = 0; j < items[i].Length; ++j)
                 {
                     Item item = items[i][j];
-                    IPlantHue ph = item as IPlantHue;
-                    IPigmentHue pigh = item as IPigmentHue;
 
                     int theirAmount = item.Amount;
 
-                    if (ph != null && ph.PlantHue != context.RequiredPlantHue)
+                    if (item is IPlantHue ph && ph.PlantHue != context.RequiredPlantHue)
                         continue;
-                    else if (pigh != null && pigh.PigmentHue != context.RequiredPigmentHue)
+                    else if (item is IPigmentHue pigh && pigh.PigmentHue != context.RequiredPigmentHue)
                         continue;
 
                     if (theirAmount < need)
@@ -841,12 +836,10 @@ namespace Server.Engines.Craft
 
             for (int i = 0; i < items.Length; ++i)
             {
-                IPlantHue ph = items[i] as IPlantHue;
-                IPigmentHue pigh = items[i] as IPigmentHue;
 
-                if (context == null || (ph != null && ph.PlantHue != context.RequiredPlantHue))
+                if (context == null || (items[i] is IPlantHue ph && ph.PlantHue != context.RequiredPlantHue))
                     continue;
-                else if (context == null || (pigh != null && pigh.PigmentHue != context.RequiredPigmentHue))
+                else if (context == null || (items[i] is IPigmentHue pigh && pigh.PigmentHue != context.RequiredPigmentHue))
                     continue;
 
                 amount += items[i].Amount;
@@ -1166,10 +1159,7 @@ namespace Server.Engines.Craft
             {
                 if (consumeType != ConsumeType.None)
                 {
-                    if (consumeExtra != null)
-                    {
-                        consumeExtra.Delete();
-                    }
+                    consumeExtra?.Delete();
                 }
 
                 return true;
@@ -1210,13 +1200,13 @@ namespace Server.Engines.Craft
         private void OnResourceConsumed(Item item, int amount)
         {
             #region Plant Pigments
-            if (item is IPlantHue)
+            if (item is IPlantHue iPlantHue)
             {
-                m_PlantHue = ((IPlantHue)item).PlantHue;
+                m_PlantHue = iPlantHue.PlantHue;
             }
-            else if (item is IPigmentHue)
+            else if (item is IPigmentHue iPigmentHue)
             {
-                m_PlantPigmentHue = ((IPigmentHue)item).PigmentHue;
+                m_PlantPigmentHue = iPigmentHue.PigmentHue;
             }
             #endregion
 
@@ -1299,9 +1289,7 @@ namespace Server.Engines.Craft
                 }
             }
 
-            MasterChefsApron apron = from.FindItemOnLayer(Layer.MiddleTorso) as MasterChefsApron;
-
-            if (apron != null)
+            if (from.FindItemOnLayer(Layer.MiddleTorso) is MasterChefsApron apron)
             {
                 bonus += apron.Bonus / 100.0;
             }
@@ -1495,10 +1483,7 @@ namespace Server.Engines.Craft
                                             {
                                                 CraftContext context = craftSystem.GetContext(from);
 
-                                                if (context != null)
-                                                {
-                                                    context.OnMade(this);
-                                                }
+                                                context?.OnMade(this);
 
                                                 int iMin = craftSystem.MinCraftEffect;
                                                 int iMax = (craftSystem.MaxCraftEffect - iMin) + 1;
@@ -1580,7 +1565,7 @@ namespace Server.Engines.Craft
                 case Expansion.TOL:
                     return 1155875; // You must have the Time of Legends expansion to use this feature.
                 default:
-                    return string.Format("The \"{0}\" expansion is required to attempt this item.", ExpansionInfo.GetInfo(expansion).Name);
+                    return $"The \"{ExpansionInfo.GetInfo(expansion).Name}\" expansion is required to attempt this item.";
             }
         }
 
@@ -1625,9 +1610,9 @@ namespace Server.Engines.Craft
                 {
                     from.SendLocalizedMessage((int)checkMessage);
                 }
-                else if (checkMessage is string)
+                else if (checkMessage is string s)
                 {
-                    from.SendMessage((string)checkMessage);
+                    from.SendMessage(s);
                 }
 
                 AutoCraftTimer.EndTimer(from);
@@ -1644,9 +1629,9 @@ namespace Server.Engines.Craft
                 {
                     from.SendLocalizedMessage((int)checkMessage);
                 }
-                else if (checkMessage is string)
+                else if (checkMessage is string s)
                 {
-                    from.SendMessage((string)checkMessage);
+                    from.SendMessage(s);
                 }
 
                 AutoCraftTimer.EndTimer(from);
@@ -1680,9 +1665,9 @@ namespace Server.Engines.Craft
                     {
                         from.SendLocalizedMessage((int)message);
                     }
-                    else if (message is string)
+                    else if (message is string s)
                     {
-                        from.SendMessage((string)message);
+                        from.SendMessage(s);
                     }
 
                     AutoCraftTimer.EndTimer(from);
@@ -1699,9 +1684,9 @@ namespace Server.Engines.Craft
                     {
                         from.SendLocalizedMessage((int)message);
                     }
-                    else if (message is string)
+                    else if (message is string s)
                     {
-                        from.SendMessage((string)message);
+                        from.SendMessage(s);
                     }
 
                     AutoCraftTimer.EndTimer(from);
@@ -1716,8 +1701,7 @@ namespace Server.Engines.Craft
 
                 if (craftSystem is DefBlacksmithy)
                 {
-                    AncientSmithyHammer hammer = from.FindItemOnLayer(Layer.OneHanded) as AncientSmithyHammer;
-                    if (hammer != null && hammer != tool)
+                    if (from.FindItemOnLayer(Layer.OneHanded) is AncientSmithyHammer hammer && hammer != tool)
                     {
                         if (hammer is HammerOfHephaestus)
                         {
@@ -1804,21 +1788,21 @@ namespace Server.Engines.Craft
                         }
                     }
 
-                    if (item is MapItem)
+                    if (item is MapItem mapItem)
                     {
-                        ((MapItem)item).Facet = from.Map;
+                        mapItem.Facet = from.Map;
                     }
 
                     CraftContext context = craftSystem.GetContext(from);
                     int originalHue = item.Hue;
 
-                    if (item is ICraftable)
+                    if (item is ICraftable iCraftable)
                     {
-                        endquality = ((ICraftable)item).OnCraft(quality, makersMark, from, craftSystem, typeRes, tool, this, resHue);
+                        endquality = iCraftable.OnCraft(quality, makersMark, from, craftSystem, typeRes, tool, this, resHue);
                     }
-                    else if (item is Food)
+                    else if (item is Food food)
                     {
-                        ((Food)item).PlayerConstructed = true;
+                        food.PlayerConstructed = true;
                     }
                     else if (item.Hue == 0)
                     {
@@ -1851,10 +1835,10 @@ namespace Server.Engines.Craft
                     #region Plant Pigments
                     if (m_PlantHue != PlantHue.None)
                     {
-                        if (item is IPlantHue)
-                            ((IPlantHue)item).PlantHue = m_PlantHue;
-                        else if (item is IPigmentHue)
-                            ((IPigmentHue)item).PigmentHue = PlantPigmentHueInfo.HueFromPlantHue(m_PlantHue);
+                        if (item is IPlantHue iPlantHue)
+                            iPlantHue.PlantHue = m_PlantHue;
+                        else if (item is IPigmentHue iPigmentHue)
+                            iPigmentHue.PigmentHue = PlantPigmentHueInfo.HueFromPlantHue(m_PlantHue);
                     }
                     else if (m_PlantPigmentHue != PlantPigmentHue.None && item is IPigmentHue)
                     {
@@ -1977,9 +1961,9 @@ namespace Server.Engines.Craft
                     {
                         from.SendLocalizedMessage((int)message);
                     }
-                    else if (message is string)
+                    else if (message is string s)
                     {
-                        from.SendMessage((string)message);
+                        from.SendMessage(s);
                     }
 
                     AutoCraftTimer.EndTimer(from);
@@ -2103,10 +2087,7 @@ namespace Server.Engines.Craft
                             Diagnostics.ExceptionLogging.LogException(e);
                         }
 
-                        if (cc != null)
-                        {
-                            cc.EndCraftAction();
-                        }
+                        cc?.EndCraftAction();
 
                         return;
                     }
diff --git a/Scripts/Services/Craft/Core/CraftSystem.cs b/Scripts/Services/Craft/Core/CraftSystem.cs
index 72988e19c..1f5caf51f 100644
--- a/Scripts/Services/Craft/Core/CraftSystem.cs
+++ b/Scripts/Services/Craft/Core/CraftSystem.cs
@@ -164,10 +164,8 @@ namespace Server.Engines.Craft
 
             Item item = from.FindItemOnLayer(Layer.Talisman);
 
-            if (item is MasterCraftsmanTalisman)
+            if (item is MasterCraftsmanTalisman mct)
             {
-                MasterCraftsmanTalisman mct = (MasterCraftsmanTalisman)item;
-
                 if (mct.Charges > 0)
                 {
                     talisman = mct;
@@ -220,9 +218,9 @@ namespace Server.Engines.Craft
         {
             Item source;
 
-            if (tool is Item)
+            if (tool is Item item)
             {
-                source = (Item)tool;
+                source = item;
             }
             else
             {
diff --git a/Scripts/Services/Craft/Core/Enhance.cs b/Scripts/Services/Craft/Core/Enhance.cs
index 0d50be3b7..2795e83a1 100644
--- a/Scripts/Services/Craft/Core/Enhance.cs
+++ b/Scripts/Services/Craft/Core/Enhance.cs
@@ -66,9 +66,8 @@ namespace Server.Engines.Craft
             if (!CanEnhance(item) || ires == null)
                 return EnhanceResult.BadItem;
 
-            if (item is IArcaneEquip)
+            if (item is IArcaneEquip eq)
             {
-                IArcaneEquip eq = (IArcaneEquip)item;
                 if (eq.IsArcane)
                     return EnhanceResult.BadItem;
             }
@@ -126,8 +125,7 @@ namespace Server.Engines.Craft
 
             if (craftSystem is DefBlacksmithy)
             {
-                AncientSmithyHammer hammer = from.FindItemOnLayer(Layer.OneHanded) as AncientSmithyHammer;
-                if (hammer != null)
+                if (from.FindItemOnLayer(Layer.OneHanded) is AncientSmithyHammer hammer)
                 {
                     hammer.UsesRemaining--;
                     if (hammer.UsesRemaining < 1)
@@ -149,10 +147,8 @@ namespace Server.Engines.Craft
             bool lreqBonus = false;
             bool dincBonus = false;
 
-            if (item is BaseWeapon)
+            if (item is BaseWeapon weapon)
             {
-                BaseWeapon weapon = (BaseWeapon)item;
-
                 if (weapon.ExtendedWeaponAttributes.AssassinHoned > 0)
                     return EnhanceResult.BadItem;
 
@@ -173,10 +169,8 @@ namespace Server.Engines.Craft
                 lreqBonus = (attributes.WeaponLowerRequirements > 0);
                 dincBonus = (dinc > 0);
             }
-            else if (item is BaseArmor)
+            else if (item is BaseArmor armor)
             {
-                BaseArmor armor = (BaseArmor)item;
-
                 baseChance = 20;
 
                 phys = armor.PhysicalResistance;
@@ -200,10 +194,8 @@ namespace Server.Engines.Craft
                 lreqBonus = (attributes.ArmorLowerRequirements > 0);
                 dincBonus = false;
             }
-            else if (item is FishingPole)
+            else if (item is FishingPole pole)
             {
-                FishingPole pole = (FishingPole)item;
-
                 baseChance = 20;
 
                 luck = pole.Attributes.Luck;
@@ -276,12 +268,11 @@ namespace Server.Engines.Craft
                             Caddellite.TryInfuse(from, item, craftSystem);
                         }
 
-                        if (item is IResource)
-                            ((IResource)item).Resource = resource;
+                        if (item is IResource iResource)
+                            iResource.Resource = resource;
 
-                        if (item is BaseWeapon)
+                        if (item is BaseWeapon w)
                         {
-                            BaseWeapon w = (BaseWeapon)item;
                             w.DistributeMaterialBonus(attributes);
 
                             int hue = w.GetElementalDamageHue();
@@ -289,13 +280,13 @@ namespace Server.Engines.Craft
                             if (hue > 0)
                                 w.Hue = hue;
                         }
-                        else if (item is BaseArmor)
+                        else if (item is BaseArmor baseArmor)
                         {
-                            ((BaseArmor)item).DistributeMaterialBonus(attributes);
+                            baseArmor.DistributeMaterialBonus(attributes);
                         }
-                        else if (item is FishingPole)
+                        else if (item is FishingPole fishingPole)
                         {
-                            ((FishingPole)item).DistributeMaterialBonus(attributes);
+                            fishingPole.DistributeMaterialBonus(attributes);
                         }
                         break;
                     }
@@ -390,10 +381,10 @@ namespace Server.Engines.Craft
 
             protected override void OnTarget(Mobile from, object targeted)
             {
-                if (targeted is Item)
+                if (targeted is Item item)
                 {
                     object message = null;
-                    EnhanceResult res = Enhance.Invoke(from, m_CraftSystem, m_Tool, (Item)targeted, m_Resource, m_ResourceType, ref message);
+                    EnhanceResult res = Enhance.Invoke(from, m_CraftSystem, m_Tool, item, m_Resource, m_ResourceType, ref message);
 
                     switch (res)
                     {
diff --git a/Scripts/Services/Craft/Core/Recipes.cs b/Scripts/Services/Craft/Core/Recipes.cs
index 5034fd8b9..5a8deff00 100644
--- a/Scripts/Services/Craft/Core/Recipes.cs
+++ b/Scripts/Services/Craft/Core/Recipes.cs
@@ -80,10 +80,10 @@ namespace Server.Engines.Craft
 
             m.BeginTarget(-1, false, Targeting.TargetFlags.None, delegate (Mobile from, object targeted)
             {
-                if (targeted is PlayerMobile)
+                if (targeted is PlayerMobile playerMobile)
                 {
                     foreach (KeyValuePair<int, Recipe> kvp in m_Recipes)
-                        ((PlayerMobile)targeted).AcquireRecipe(kvp.Key);
+                        playerMobile.AcquireRecipe(kvp.Key);
 
                     m.SendMessage("You teach them all of the recipies.");
                 }
@@ -103,9 +103,9 @@ namespace Server.Engines.Craft
 
             m.BeginTarget(-1, false, Targeting.TargetFlags.None, delegate (Mobile from, object targeted)
             {
-                if (targeted is PlayerMobile)
+                if (targeted is PlayerMobile playerMobile)
                 {
-                    ((PlayerMobile)targeted).ResetRecipes();
+                    playerMobile.ResetRecipes();
 
                     m.SendMessage("They forget all their recipies.");
                 }
diff --git a/Scripts/Services/Craft/Core/Repair.cs b/Scripts/Services/Craft/Core/Repair.cs
index 82c132352..5afb55846 100644
--- a/Scripts/Services/Craft/Core/Repair.cs
+++ b/Scripts/Services/Craft/Core/Repair.cs
@@ -199,9 +199,9 @@ namespace Server.Engines.Craft
                         number = 500426; // You can't repair that.
                     }
                 }
-                else if (targeted is Item)
+                else if (targeted is Item item)
                 {
-                    if (from.InRange(((Item)targeted).GetWorldLocation(), 2))
+                    if (from.InRange(item.GetWorldLocation(), 2))
                     {
                         if (!CheckDeed(from))
                         {
@@ -232,9 +232,8 @@ namespace Server.Engines.Craft
                             else
                                 number = 1044280; // You fail to repair the item.
                         }
-                        else if (targeted is BaseWeapon)
+                        else if (targeted is BaseWeapon weapon)
                         {
-                            BaseWeapon weapon = (BaseWeapon)targeted;
                             SkillName skill = m_CraftSystem.MainSkill;
                             int toWeaken = 1;
 
@@ -283,9 +282,8 @@ namespace Server.Engines.Craft
                                 toDelete = true;
                             }
                         }
-                        else if (targeted is BaseArmor)
+                        else if (targeted is BaseArmor armor)
                         {
-                            BaseArmor armor = (BaseArmor)targeted;
                             SkillName skill = m_CraftSystem.MainSkill;
                             int toWeaken = 1;
 
@@ -334,9 +332,8 @@ namespace Server.Engines.Craft
                                 toDelete = true;
                             }
                         }
-                        else if (targeted is BaseJewel)
+                        else if (targeted is BaseJewel jewel)
                         {
-                            BaseJewel jewel = (BaseJewel)targeted;
                             SkillName skill = m_CraftSystem.MainSkill;
                             int toWeaken = 1;
 
@@ -385,9 +382,8 @@ namespace Server.Engines.Craft
                                 toDelete = true;
                             }
                         }
-                        else if (targeted is BaseClothing)
+                        else if (targeted is BaseClothing clothing)
                         {
-                            BaseClothing clothing = (BaseClothing)targeted;
                             SkillName skill = m_CraftSystem.MainSkill;
                             int toWeaken = 1;
 
@@ -436,9 +432,8 @@ namespace Server.Engines.Craft
                                 toDelete = true;
                             }
                         }
-                        else if (targeted is BaseTalisman)
+                        else if (targeted is BaseTalisman talisman)
                         {
-                            BaseTalisman talisman = (BaseTalisman)targeted;
                             SkillName skill = m_CraftSystem.MainSkill;
                             int toWeaken = 1;
 
@@ -487,7 +482,7 @@ namespace Server.Engines.Craft
                                 toDelete = true;
                             }
                         }
-                        else if (targeted is BlankScroll)
+                        else if (targeted is BlankScroll blankScroll)
                         {
                             if (!usingDeed)
                             {
@@ -495,7 +490,7 @@ namespace Server.Engines.Craft
 
                                 if (from.Skills[skill].Value >= 50.0)
                                 {
-                                    ((BlankScroll)targeted).Consume(1);
+                                    blankScroll.Consume(1);
                                     RepairDeed deed = new RepairDeed(RepairDeed.GetTypeFor(m_CraftSystem), from.Skills[skill].Value, from);
                                     from.AddToBackpack(deed);
 
diff --git a/Scripts/Services/Craft/Core/Resmelt.cs b/Scripts/Services/Craft/Core/Resmelt.cs
index a37b0f1e4..6f3f3e7f7 100644
--- a/Scripts/Services/Craft/Core/Resmelt.cs
+++ b/Scripts/Services/Craft/Core/Resmelt.cs
@@ -65,19 +65,19 @@ namespace Server.Engines.Craft
                     bool isStoreBought = false;
                     int message;
 
-                    if (targeted is BaseArmor)
+                    if (targeted is BaseArmor baseArmor)
                     {
-                        result = Resmelt(from, (BaseArmor)targeted, ((BaseArmor)targeted).Resource);
+                        result = Resmelt(from, baseArmor, ((BaseArmor)targeted).Resource);
                         isStoreBought = !((BaseArmor)targeted).PlayerConstructed;
                     }
-                    else if (targeted is BaseWeapon)
+                    else if (targeted is BaseWeapon baseWeapon)
                     {
-                        result = Resmelt(from, (BaseWeapon)targeted, ((BaseWeapon)targeted).Resource);
+                        result = Resmelt(from, baseWeapon, ((BaseWeapon)targeted).Resource);
                         isStoreBought = !((BaseWeapon)targeted).PlayerConstructed;
                     }
-                    else if (targeted is DragonBardingDeed)
+                    else if (targeted is DragonBardingDeed dragonBardingDeed)
                     {
-                        result = Resmelt(from, (DragonBardingDeed)targeted, ((DragonBardingDeed)targeted).Resource);
+                        result = Resmelt(from, dragonBardingDeed, ((DragonBardingDeed)targeted).Resource);
                         isStoreBought = false;
                     }
 
diff --git a/Scripts/Services/Craft/DefCartography.cs b/Scripts/Services/Craft/DefCartography.cs
index bd3abcf0f..6c8d7e975 100644
--- a/Scripts/Services/Craft/DefCartography.cs
+++ b/Scripts/Services/Craft/DefCartography.cs
@@ -117,9 +117,7 @@ namespace Server.Engines.Craft
 
             foreach (Item item in maps)
             {
-                TreasureMap map = item as TreasureMap;
-
-                if (map != null)
+                if (item is TreasureMap map)
                 {
                     switch (map.Level)
                     {
diff --git a/Scripts/Services/Craft/DefInscription.cs b/Scripts/Services/Craft/DefInscription.cs
index c5742b065..419109b32 100644
--- a/Scripts/Services/Craft/DefInscription.cs
+++ b/Scripts/Services/Craft/DefInscription.cs
@@ -52,15 +52,14 @@ namespace Server.Engines.Craft
                 {
                     object o = Activator.CreateInstance(typeItem);
 
-                    if (o is SpellScroll)
+                    if (o is SpellScroll scroll)
                     {
-                        SpellScroll scroll = (SpellScroll)o;
                         _Buffer[typeItem] = scroll.SpellID;
                         scroll.Delete();
                     }
-                    else if (o is IEntity)
+                    else if (o is IEntity iEntity)
                     {
-                        ((IEntity)o).Delete();
+                        iEntity.Delete();
                         return 1042404; // You don't have that spell!
                     }
                 }
diff --git a/Scripts/Services/Dungeons/BlackthornDungeon/InvasionSpawner/Creatures.cs b/Scripts/Services/Dungeons/BlackthornDungeon/InvasionSpawner/Creatures.cs
index ce82fce76..de1afb6ee 100644
--- a/Scripts/Services/Dungeons/BlackthornDungeon/InvasionSpawner/Creatures.cs
+++ b/Scripts/Services/Dungeons/BlackthornDungeon/InvasionSpawner/Creatures.cs
@@ -45,9 +45,7 @@ namespace Server.Engines.Blackthorn
 
         public override WeaponAbility GetWeaponAbility()
         {
-            BaseWeapon wep = Weapon as BaseWeapon;
-
-            if (wep != null)
+            if (Weapon is BaseWeapon wep)
             {
                 return 0.6 > Utility.RandomDouble() ? wep.PrimaryAbility : wep.SecondaryAbility;
             }
@@ -106,7 +104,7 @@ namespace Server.Engines.Blackthorn
             }
             else
             {
-                title = string.Format("the {0}", Skills[specialty].Info.Title);
+                title = $"the {Skills[specialty].Info.Title}";
                 if (Female && title.EndsWith("man"))
                     title = title.Substring(0, title.Length - 3) + "woman";
             }
diff --git a/Scripts/Services/Dungeons/BlackthornDungeon/InvasionSpawner/InvasionController.cs b/Scripts/Services/Dungeons/BlackthornDungeon/InvasionSpawner/InvasionController.cs
index 78c9eeaba..991aacb10 100644
--- a/Scripts/Services/Dungeons/BlackthornDungeon/InvasionSpawner/InvasionController.cs
+++ b/Scripts/Services/Dungeons/BlackthornDungeon/InvasionSpawner/InvasionController.cs
@@ -79,7 +79,7 @@ namespace Server.Engines.Blackthorn
                     if (kvp.Key.Alive)
                         count++;
 
-                    count += kvp.Value.Where(bc => bc.Alive).Count();
+                    count += kvp.Value.Count(bc => bc.Alive);
                 }
 
                 return count;
@@ -293,7 +293,7 @@ namespace Server.Engines.Blackthorn
                     if (kvp.Value.Contains(bc))
                         kvp.Value.Remove(bc);
 
-                    int count = kvp.Value.Where(b => b != null && b.Alive).Count();
+                    int count = kvp.Value.Count(b => b != null && b.Alive);
 
                     if (count == 0 && kvp.Key.Alive)
                     {
@@ -351,7 +351,7 @@ namespace Server.Engines.Blackthorn
 
             foreach (Mobile m in eable)
             {
-                if (m != null && m.NetState != null)
+                if (m?.NetState != null)
                     m.PrivateOverheadMessage(Network.MessageType.Regular, 1154, 1154550, m.NetState); // *A sound roars in the distance...Minax's Beacon is vulnerable to attack!!*
             }
 
@@ -506,22 +506,19 @@ namespace Server.Engines.Blackthorn
             count = reader.ReadInt();
             for (int i = 0; i < count; i++)
             {
-                BaseCreature captain = reader.ReadMobile() as BaseCreature;
                 int c = reader.ReadInt();
 
                 List<BaseCreature> list = new List<BaseCreature>();
 
                 for (int j = 0; j < c; j++)
                 {
-                    BaseCreature spawn = reader.ReadMobile() as BaseCreature;
-
-                    if (spawn != null)
+                    if (reader.ReadMobile() is BaseCreature spawn)
                     {
                         list.Add(spawn);
                     }
                 }
 
-                if (captain != null)
+                if (reader.ReadMobile() is BaseCreature captain)
                     Spawn[captain] = list;
                 else
                 {
diff --git a/Scripts/Services/Dungeons/BlackthornDungeon/Items/CloakOfDeathBase/EpauletteBearingTheCrestOfBlackthorn.cs b/Scripts/Services/Dungeons/BlackthornDungeon/Items/CloakOfDeathBase/EpauletteBearingTheCrestOfBlackthorn.cs
index 93bd49c06..1828e888d 100644
--- a/Scripts/Services/Dungeons/BlackthornDungeon/Items/CloakOfDeathBase/EpauletteBearingTheCrestOfBlackthorn.cs
+++ b/Scripts/Services/Dungeons/BlackthornDungeon/Items/CloakOfDeathBase/EpauletteBearingTheCrestOfBlackthorn.cs
@@ -42,9 +42,9 @@ namespace Server.Items
 
                 if (Layer != Layer.OuterTorso)
                 {
-                    if (Parent is Mobile)
+                    if (Parent is Mobile mobile)
                     {
-                        ((Mobile)Parent).AddToBackpack(this);
+                        mobile.AddToBackpack(this);
                     }
 
                     Layer = Layer.OuterTorso;
diff --git a/Scripts/Services/Dungeons/BlackthornDungeon/Items/CloakOfDeathBase/GargishEpauletteBearingTheCrestOfBlackthorn.cs b/Scripts/Services/Dungeons/BlackthornDungeon/Items/CloakOfDeathBase/GargishEpauletteBearingTheCrestOfBlackthorn.cs
index 5fbb73c15..a5aa31b43 100644
--- a/Scripts/Services/Dungeons/BlackthornDungeon/Items/CloakOfDeathBase/GargishEpauletteBearingTheCrestOfBlackthorn.cs
+++ b/Scripts/Services/Dungeons/BlackthornDungeon/Items/CloakOfDeathBase/GargishEpauletteBearingTheCrestOfBlackthorn.cs
@@ -42,9 +42,9 @@ namespace Server.Items
 
                 if (Layer != Layer.OuterTorso)
                 {
-                    if (Parent is Mobile)
+                    if (Parent is Mobile mobile)
                     {
-                        ((Mobile)Parent).AddToBackpack(this);
+                        mobile.AddToBackpack(this);
                     }
 
                     Layer = Layer.OuterTorso;
diff --git a/Scripts/Services/Dungeons/BlackthornDungeon/Items/CloakOfLifeBase/EpauletteBearingTheCrestOfBlackthorn.cs b/Scripts/Services/Dungeons/BlackthornDungeon/Items/CloakOfLifeBase/EpauletteBearingTheCrestOfBlackthorn.cs
index 8663eb288..1892fe9d1 100644
--- a/Scripts/Services/Dungeons/BlackthornDungeon/Items/CloakOfLifeBase/EpauletteBearingTheCrestOfBlackthorn.cs
+++ b/Scripts/Services/Dungeons/BlackthornDungeon/Items/CloakOfLifeBase/EpauletteBearingTheCrestOfBlackthorn.cs
@@ -41,9 +41,9 @@ namespace Server.Items
 
                 if (Layer != Layer.OuterTorso)
                 {
-                    if (Parent is Mobile)
+                    if (Parent is Mobile mobile)
                     {
-                        ((Mobile)Parent).AddToBackpack(this);
+                        mobile.AddToBackpack(this);
                     }
 
                     Layer = Layer.OuterTorso;
diff --git a/Scripts/Services/Dungeons/BlackthornDungeon/Items/CloakOfLifeBase/GargishEpauletteBearingTheCrestOfBlackthorn.cs b/Scripts/Services/Dungeons/BlackthornDungeon/Items/CloakOfLifeBase/GargishEpauletteBearingTheCrestOfBlackthorn.cs
index ba23afa6f..6880daee9 100644
--- a/Scripts/Services/Dungeons/BlackthornDungeon/Items/CloakOfLifeBase/GargishEpauletteBearingTheCrestOfBlackthorn.cs
+++ b/Scripts/Services/Dungeons/BlackthornDungeon/Items/CloakOfLifeBase/GargishEpauletteBearingTheCrestOfBlackthorn.cs
@@ -41,9 +41,9 @@ namespace Server.Items
 
                 if (Layer != Layer.OuterTorso)
                 {
-                    if (Parent is Mobile)
+                    if (Parent is Mobile mobile)
                     {
-                        ((Mobile)Parent).AddToBackpack(this);
+                        mobile.AddToBackpack(this);
                     }
 
                     Layer = Layer.OuterTorso;
diff --git a/Scripts/Services/Dungeons/BlackthornDungeon/Items/CloakOfPowerBase/EpauletteBearingTheCrestOfBlackthorn.cs b/Scripts/Services/Dungeons/BlackthornDungeon/Items/CloakOfPowerBase/EpauletteBearingTheCrestOfBlackthorn.cs
index 180712967..08cf37359 100644
--- a/Scripts/Services/Dungeons/BlackthornDungeon/Items/CloakOfPowerBase/EpauletteBearingTheCrestOfBlackthorn.cs
+++ b/Scripts/Services/Dungeons/BlackthornDungeon/Items/CloakOfPowerBase/EpauletteBearingTheCrestOfBlackthorn.cs
@@ -42,9 +42,9 @@ namespace Server.Items
 
                 if (Layer != Layer.OuterTorso)
                 {
-                    if (Parent is Mobile)
+                    if (Parent is Mobile mobile)
                     {
-                        ((Mobile)Parent).AddToBackpack(this);
+                        mobile.AddToBackpack(this);
                     }
 
                     Layer = Layer.OuterTorso;
diff --git a/Scripts/Services/Dungeons/BlackthornDungeon/Items/CloakOfPowerBase/GargishEpauletteBearingTheCrestOfBlackthorn.cs b/Scripts/Services/Dungeons/BlackthornDungeon/Items/CloakOfPowerBase/GargishEpauletteBearingTheCrestOfBlackthorn.cs
index aaeafecde..0ed46aad3 100644
--- a/Scripts/Services/Dungeons/BlackthornDungeon/Items/CloakOfPowerBase/GargishEpauletteBearingTheCrestOfBlackthorn.cs
+++ b/Scripts/Services/Dungeons/BlackthornDungeon/Items/CloakOfPowerBase/GargishEpauletteBearingTheCrestOfBlackthorn.cs
@@ -42,9 +42,9 @@ namespace Server.Items
 
                 if (Layer != Layer.OuterTorso)
                 {
-                    if (Parent is Mobile)
+                    if (Parent is Mobile mobile)
                     {
-                        ((Mobile)Parent).AddToBackpack(this);
+                        mobile.AddToBackpack(this);
                     }
 
                     Layer = Layer.OuterTorso;
diff --git a/Scripts/Services/Dungeons/BlackthornDungeon/Items/CloakOfSilenceBase/EpauletteBearingTheCrestOfBlackthorn.cs b/Scripts/Services/Dungeons/BlackthornDungeon/Items/CloakOfSilenceBase/EpauletteBearingTheCrestOfBlackthorn.cs
index d2e60bd04..d581e59cf 100644
--- a/Scripts/Services/Dungeons/BlackthornDungeon/Items/CloakOfSilenceBase/EpauletteBearingTheCrestOfBlackthorn.cs
+++ b/Scripts/Services/Dungeons/BlackthornDungeon/Items/CloakOfSilenceBase/EpauletteBearingTheCrestOfBlackthorn.cs
@@ -40,9 +40,9 @@ namespace Server.Items
 
                 if (Layer != Layer.OuterTorso)
                 {
-                    if (Parent is Mobile)
+                    if (Parent is Mobile mobile)
                     {
-                        ((Mobile)Parent).AddToBackpack(this);
+                        mobile.AddToBackpack(this);
                     }
 
                     Layer = Layer.OuterTorso;
diff --git a/Scripts/Services/Dungeons/BlackthornDungeon/Items/CloakOfSilenceBase/GargishEpauletteBearingTheCrestOfBlackthorn.cs b/Scripts/Services/Dungeons/BlackthornDungeon/Items/CloakOfSilenceBase/GargishEpauletteBearingTheCrestOfBlackthorn.cs
index f81826897..7c9f33f22 100644
--- a/Scripts/Services/Dungeons/BlackthornDungeon/Items/CloakOfSilenceBase/GargishEpauletteBearingTheCrestOfBlackthorn.cs
+++ b/Scripts/Services/Dungeons/BlackthornDungeon/Items/CloakOfSilenceBase/GargishEpauletteBearingTheCrestOfBlackthorn.cs
@@ -40,9 +40,9 @@ namespace Server.Items
 
                 if (Layer != Layer.OuterTorso)
                 {
-                    if (Parent is Mobile)
+                    if (Parent is Mobile mobile)
                     {
-                        ((Mobile)Parent).AddToBackpack(this);
+                        mobile.AddToBackpack(this);
                     }
 
                     Layer = Layer.OuterTorso;
diff --git a/Scripts/Services/Dungeons/BlackthornDungeon/Items/ConjurersGarbBase/EpauletteBearingTheCrestOfBlackthorn.cs b/Scripts/Services/Dungeons/BlackthornDungeon/Items/ConjurersGarbBase/EpauletteBearingTheCrestOfBlackthorn.cs
index c65d80364..193210578 100644
--- a/Scripts/Services/Dungeons/BlackthornDungeon/Items/ConjurersGarbBase/EpauletteBearingTheCrestOfBlackthorn.cs
+++ b/Scripts/Services/Dungeons/BlackthornDungeon/Items/ConjurersGarbBase/EpauletteBearingTheCrestOfBlackthorn.cs
@@ -42,9 +42,9 @@ namespace Server.Items
 
                 if (Layer != Layer.OuterTorso)
                 {
-                    if (Parent is Mobile)
+                    if (Parent is Mobile mobile)
                     {
-                        ((Mobile)Parent).AddToBackpack(this);
+                        mobile.AddToBackpack(this);
                     }
 
                     Layer = Layer.OuterTorso;
diff --git a/Scripts/Services/Dungeons/BlackthornDungeon/Items/ConjurersGarbBase/GargishEpauletteBearingTheCrestOfBlackthorn.cs b/Scripts/Services/Dungeons/BlackthornDungeon/Items/ConjurersGarbBase/GargishEpauletteBearingTheCrestOfBlackthorn.cs
index ab5fc7077..ffe9ea610 100644
--- a/Scripts/Services/Dungeons/BlackthornDungeon/Items/ConjurersGarbBase/GargishEpauletteBearingTheCrestOfBlackthorn.cs
+++ b/Scripts/Services/Dungeons/BlackthornDungeon/Items/ConjurersGarbBase/GargishEpauletteBearingTheCrestOfBlackthorn.cs
@@ -42,9 +42,9 @@ namespace Server.Items
 
                 if (Layer != Layer.OuterTorso)
                 {
-                    if (Parent is Mobile)
+                    if (Parent is Mobile mobile)
                     {
-                        ((Mobile)Parent).AddToBackpack(this);
+                        mobile.AddToBackpack(this);
                     }
 
                     Layer = Layer.OuterTorso;
diff --git a/Scripts/Services/Dungeons/BlackthornDungeon/Items/MysticsGarbBase/EpauletteBearingTheCrestOfBlackthorn.cs b/Scripts/Services/Dungeons/BlackthornDungeon/Items/MysticsGarbBase/EpauletteBearingTheCrestOfBlackthorn.cs
index 4a86446c6..132299f56 100644
--- a/Scripts/Services/Dungeons/BlackthornDungeon/Items/MysticsGarbBase/EpauletteBearingTheCrestOfBlackthorn.cs
+++ b/Scripts/Services/Dungeons/BlackthornDungeon/Items/MysticsGarbBase/EpauletteBearingTheCrestOfBlackthorn.cs
@@ -41,9 +41,9 @@ namespace Server.Items
 
                 if (Layer != Layer.OuterTorso)
                 {
-                    if (Parent is Mobile)
+                    if (Parent is Mobile mobile)
                     {
-                        ((Mobile)Parent).AddToBackpack(this);
+                        mobile.AddToBackpack(this);
                     }
 
                     Layer = Layer.OuterTorso;
diff --git a/Scripts/Services/Dungeons/BlackthornDungeon/Items/MysticsGarbBase/GargishEpauletteBearingTheCrestOfBlackthorn.cs b/Scripts/Services/Dungeons/BlackthornDungeon/Items/MysticsGarbBase/GargishEpauletteBearingTheCrestOfBlackthorn.cs
index f8acf44fd..a08e9b2a9 100644
--- a/Scripts/Services/Dungeons/BlackthornDungeon/Items/MysticsGarbBase/GargishEpauletteBearingTheCrestOfBlackthorn.cs
+++ b/Scripts/Services/Dungeons/BlackthornDungeon/Items/MysticsGarbBase/GargishEpauletteBearingTheCrestOfBlackthorn.cs
@@ -41,9 +41,9 @@ namespace Server.Items
 
                 if (Layer != Layer.OuterTorso)
                 {
-                    if (Parent is Mobile)
+                    if (Parent is Mobile mobile)
                     {
-                        ((Mobile)Parent).AddToBackpack(this);
+                        mobile.AddToBackpack(this);
                     }
 
                     Layer = Layer.OuterTorso;
diff --git a/Scripts/Services/Dungeons/BlackthornDungeon/Items/ShroudOfTheCondemnedBase/EpauletteBearingTheCrestOfBlackthorn.cs b/Scripts/Services/Dungeons/BlackthornDungeon/Items/ShroudOfTheCondemnedBase/EpauletteBearingTheCrestOfBlackthorn.cs
index ff6fad568..33250d65f 100644
--- a/Scripts/Services/Dungeons/BlackthornDungeon/Items/ShroudOfTheCondemnedBase/EpauletteBearingTheCrestOfBlackthorn.cs
+++ b/Scripts/Services/Dungeons/BlackthornDungeon/Items/ShroudOfTheCondemnedBase/EpauletteBearingTheCrestOfBlackthorn.cs
@@ -41,9 +41,9 @@ namespace Server.Items
 
                 if (Layer != Layer.OuterTorso)
                 {
-                    if (Parent is Mobile)
+                    if (Parent is Mobile mobile)
                     {
-                        ((Mobile)Parent).AddToBackpack(this);
+                        mobile.AddToBackpack(this);
                     }
 
                     Layer = Layer.OuterTorso;
diff --git a/Scripts/Services/Dungeons/BlackthornDungeon/Items/ShroudOfTheCondemnedBase/GargishEpauletteBearingTheCrestOfBlackthorn.cs b/Scripts/Services/Dungeons/BlackthornDungeon/Items/ShroudOfTheCondemnedBase/GargishEpauletteBearingTheCrestOfBlackthorn.cs
index 488045406..61b51a286 100644
--- a/Scripts/Services/Dungeons/BlackthornDungeon/Items/ShroudOfTheCondemnedBase/GargishEpauletteBearingTheCrestOfBlackthorn.cs
+++ b/Scripts/Services/Dungeons/BlackthornDungeon/Items/ShroudOfTheCondemnedBase/GargishEpauletteBearingTheCrestOfBlackthorn.cs
@@ -41,9 +41,9 @@ namespace Server.Items
 
                 if (Layer != Layer.OuterTorso)
                 {
-                    if (Parent is Mobile)
+                    if (Parent is Mobile mobile)
                     {
-                        ((Mobile)Parent).AddToBackpack(this);
+                        mobile.AddToBackpack(this);
                     }
 
                     Layer = Layer.OuterTorso;
diff --git a/Scripts/Services/Dungeons/CovetousVoidSpawn/Gumps.cs b/Scripts/Services/Dungeons/CovetousVoidSpawn/Gumps.cs
index 3e84d1a92..46474b83c 100644
--- a/Scripts/Services/Dungeons/CovetousVoidSpawn/Gumps.cs
+++ b/Scripts/Services/Dungeons/CovetousVoidSpawn/Gumps.cs
@@ -66,7 +66,7 @@ namespace Server.Engines.VoidPool
             if (stats.BestWave != null)
             {
                 AddButton(140, 130, 4005, 4006, 4, GumpButtonType.Reply, 0);
-                AddHtml(180, 130, 200, 16, string.Format("<basefont color=#A52A2A>Best Wave: {0}", stats.BestWave.Waves.ToString()), false, false);
+                AddHtml(180, 130, 200, 16, $"<basefont color=#A52A2A>Best Wave: {stats.BestWave.Waves.ToString()}", false, false);
             }
 
             AddHtmlLocalized(10, 150, 400, 16, 1152552, Orange, false, false);          // See Loyalty Menu for Reward Points
@@ -144,15 +144,15 @@ namespace Server.Engines.VoidPool
             AddHtmlLocalized(10, 10, 200, 16, 1152531, Red, false, false); // The Void Pool
             AddHtmlLocalized(10, 30, 200, 16, Controller.Map == Map.Felucca ? 1012001 : 1012000, Red, false, false); // FEl/Tram
 
-            if (loc is int)
-                AddHtmlLocalized(10, 50, 200, 16, (int)loc, Red, false, false);
-            else if (loc is string)
-                AddHtml(10, 50, 200, 16, string.Format("<basefont color=#8B0000>{0}", (string)loc), false, false);
+            if (loc is int i)
+                AddHtmlLocalized(10, 50, 200, 16, i, Red, false, false);
+            else if (loc is string s)
+                AddHtml(10, 50, 200, 16, $"<basefont color=#8B0000>{s}", false, false);
 
             if (ScoreType == ScoreType.BestWave)
             {
-                AddHtml(200, 30, 200, 16, string.Format("<basefont color=#8B0000>Total Waves: {0}", stats.BestWave.Waves.ToString()), false, false);
-                AddHtml(200, 50, 200, 16, string.Format("<basefont color=#8B0000>Total Score: {0}", stats.BestWave.TotalScore.ToString()), false, false);
+                AddHtml(200, 30, 200, 16, $"<basefont color=#8B0000>Total Waves: {stats.BestWave.Waves.ToString()}", false, false);
+                AddHtml(200, 50, 200, 16, $"<basefont color=#8B0000>Total Score: {stats.BestWave.TotalScore.ToString()}", false, false);
             }
 
             AddHtmlLocalized(10, 90, 100, 16, 1152541, Orange, false, false); // RANK
diff --git a/Scripts/Services/Dungeons/CovetousVoidSpawn/Items/CauldronOfTransmutation.cs b/Scripts/Services/Dungeons/CovetousVoidSpawn/Items/CauldronOfTransmutation.cs
index 68ddf4b55..e4426b8e5 100644
--- a/Scripts/Services/Dungeons/CovetousVoidSpawn/Items/CauldronOfTransmutation.cs
+++ b/Scripts/Services/Dungeons/CovetousVoidSpawn/Items/CauldronOfTransmutation.cs
@@ -68,10 +68,8 @@ namespace Server.Items
 
         public void Decay()
         {
-            if (RootParent is Mobile)
+            if (RootParent is Mobile parent)
             {
-                Mobile parent = (Mobile)RootParent;
-
                 if (Name == null)
                     parent.SendLocalizedMessage(1072515, "#" + LabelNumber); // The ~1_name~ expired...
                 else
@@ -187,8 +185,8 @@ namespace Server.Items
                 if (Addon == null || !from.InRange(Addon.Location, 3))
                     from.SendLocalizedMessage(500295); // You are too far away to do that.
 
-                if (targeted is Item)
-                    Addon.TryTransmutate(from, (Item)targeted);
+                if (targeted is Item item)
+                    Addon.TryTransmutate(from, item);
             }
         }
 
@@ -204,7 +202,7 @@ namespace Server.Items
             public override void AddNameProperty(ObjectPropertyList list)
             {
                 if (Addon != null && Addon.Resource != CraftResource.None)
-                    list.Add(1152600, string.Format("#{0}", CraftResources.GetLocalizationNumber(Addon.Resource).ToString())); // ~1_RES~ Cauldron of Transmutation
+                    list.Add(1152600, $"#{CraftResources.GetLocalizationNumber(Addon.Resource).ToString()}"); // ~1_RES~ Cauldron of Transmutation
                 else
                     base.AddNameProperty(list);
             }
@@ -213,7 +211,7 @@ namespace Server.Items
             {
                 base.GetProperties(list);
 
-                if (Addon == null || !(Addon is CauldronOfTransmutation) || Addon.Resource == CraftResource.None)
+                if (!(Addon is CauldronOfTransmutation) || Addon.Resource == CraftResource.None)
                     return;
 
                 int left = 0;
@@ -225,7 +223,7 @@ namespace Server.Items
                 CraftResource res = Addon.Resource;
                 CraftResource res2 = (CraftResource)res + 1;
 
-                list.Add(1152630, string.Format("#{0}\t#{1}", CraftResources.GetLocalizationNumber(Addon.Resource), CraftResources.GetLocalizationNumber(res2))); // transmutes ~1_SOURCE~ to ~2_DEST~
+                list.Add(1152630, $"#{CraftResources.GetLocalizationNumber(Addon.Resource)}\t#{CraftResources.GetLocalizationNumber(res2)}"); // transmutes ~1_SOURCE~ to ~2_DEST~
                 list.Add(1152631, string.Format("3\t1")); // ratio ~1_INPUT~ to ~2_OUTPUT~
                 list.Add(1060584, ((CauldronOfTransmutation)Addon).Charges.ToString()); // uses remaining: ~1_val~
 
@@ -306,10 +304,8 @@ namespace Server.Items
 
         public void Decay()
         {
-            if (RootParent is Mobile)
+            if (RootParent is Mobile parent)
             {
-                Mobile parent = (Mobile)RootParent;
-
                 if (Name == null)
                     parent.SendLocalizedMessage(1072515, "#" + LabelNumber); // The ~1_name~ expired...
                 else
@@ -340,7 +336,7 @@ namespace Server.Items
 
         public override void AddNameProperty(ObjectPropertyList list)
         {
-            list.Add(1152600, string.Format("#{0}", CraftResources.GetLocalizationNumber(Resource))); // ~1_RES~ Cauldron of Transmutation
+            list.Add(1152600, $"#{CraftResources.GetLocalizationNumber(Resource)}"); // ~1_RES~ Cauldron of Transmutation
         }
 
         public override void GetProperties(ObjectPropertyList list)
diff --git a/Scripts/Services/Dungeons/CovetousVoidSpawn/Items/HarvestMap.cs b/Scripts/Services/Dungeons/CovetousVoidSpawn/Items/HarvestMap.cs
index 8b177a40f..49a52dfcc 100644
--- a/Scripts/Services/Dungeons/CovetousVoidSpawn/Items/HarvestMap.cs
+++ b/Scripts/Services/Dungeons/CovetousVoidSpawn/Items/HarvestMap.cs
@@ -82,10 +82,8 @@ namespace Server.Items
 
         public void Decay()
         {
-            if (RootParent is Mobile)
+            if (RootParent is Mobile parent)
             {
-                Mobile parent = (Mobile)RootParent;
-
                 if (Name == null)
                     parent.SendLocalizedMessage(1072515, "#" + LabelNumber); // The ~1_name~ expired...
                 else
@@ -116,7 +114,7 @@ namespace Server.Items
 
         public override void AddNameProperty(ObjectPropertyList list)
         {
-            list.Add(1152598, string.Format("#{0}\t#{1}", CraftResources.GetLocalizationNumber(Resource), IsMinerMap ? "1152604" : "1152605")); // ~1_RES~ ~2_TYPE~ Map
+            list.Add(1152598, $"#{CraftResources.GetLocalizationNumber(Resource)}\t#{(IsMinerMap ? "1152604" : "1152605")}"); // ~1_RES~ ~2_TYPE~ Map
         }
 
         public override void AddUsesRemainingProperties(ObjectPropertyList list)
@@ -155,7 +153,7 @@ namespace Server.Items
 
             if (Sextant.Format(new Point3D(x, y, TargetMap.GetAverageZ(x, y)), TargetMap, ref xLong, ref yLat, ref xMins, ref yMins, ref xEast, ref ySouth))
             {
-                return string.Format("{0}° {1}'{2}, {3}° {4}'{5}", yLat, yMins, ySouth ? "S" : "N", xLong, xMins, xEast ? "E" : "W");
+                return $"{yLat}° {yMins}'{(ySouth ? "S" : "N")}, {xLong}° {xMins}'{(xEast ? "E" : "W")}";
             }
 
             return "Unknown";
@@ -204,9 +202,8 @@ namespace Server.Items
 
                 foreach (Item item in items)
                 {
-                    HarvestMap harvestmap = item as HarvestMap;
 
-                    if (harvestmap != null && harvestmap.TargetMap == map && harvestmap.UsesRemaining > 0
+                    if (item is HarvestMap harvestmap && harvestmap.TargetMap == map && harvestmap.UsesRemaining > 0
                         && def.GetBank(map, p.X, p.Y) == def.GetBank(harvestmap.TargetMap, harvestmap.Target.X, harvestmap.Target.Y))
                     {
                         return harvestmap;
@@ -228,7 +225,7 @@ namespace Server.Items
 
         public static List<Point2D> LoadLocsFor(Map map, HarvestMap hMap)
         {
-            string path = string.Format("Data/HarvestLocs/{0}_{1}.cfg", hMap.IsMinerMap ? "MinerLocs" : "LumberLocs", map.ToString());
+            string path = $"Data/HarvestLocs/{(hMap.IsMinerMap ? "MinerLocs" : "LumberLocs")}_{map.ToString()}.cfg";
 
             if (!File.Exists(path))
             {
diff --git a/Scripts/Services/Dungeons/CovetousVoidSpawn/Items/MagicFishFinder.cs b/Scripts/Services/Dungeons/CovetousVoidSpawn/Items/MagicFishFinder.cs
index 92c7ed767..c901bb84c 100644
--- a/Scripts/Services/Dungeons/CovetousVoidSpawn/Items/MagicFishFinder.cs
+++ b/Scripts/Services/Dungeons/CovetousVoidSpawn/Items/MagicFishFinder.cs
@@ -38,10 +38,8 @@ namespace Server.Items
 
         public void Decay()
         {
-            if (RootParent is Mobile)
+            if (RootParent is Mobile parent)
             {
-                Mobile parent = (Mobile)RootParent;
-
                 if (Name == null)
                     parent.SendLocalizedMessage(1072515, "#" + LabelNumber); // The ~1_name~ expired...
                 else
@@ -119,7 +117,7 @@ namespace Server.Items
 
         public string GetDirectionString(Direction d)
         {
-            return string.Format("#{0}", 1152639 + (int)d);
+            return $"#{1152639 + (int)d}";
         }
 
         public static bool HasSchool(Mobile m)
diff --git a/Scripts/Services/Dungeons/CovetousVoidSpawn/Items/SmeltersTalisman.cs b/Scripts/Services/Dungeons/CovetousVoidSpawn/Items/SmeltersTalisman.cs
index c4f694f96..dcf2feb57 100644
--- a/Scripts/Services/Dungeons/CovetousVoidSpawn/Items/SmeltersTalisman.cs
+++ b/Scripts/Services/Dungeons/CovetousVoidSpawn/Items/SmeltersTalisman.cs
@@ -69,10 +69,8 @@ namespace Server.Items
 
         public void Decay()
         {
-            if (RootParent is Mobile)
+            if (RootParent is Mobile parent)
             {
-                Mobile parent = (Mobile)RootParent;
-
                 if (Name == null)
                     parent.SendLocalizedMessage(1072515, "#" + LabelNumber); // The ~1_name~ expired...
                 else
@@ -103,7 +101,7 @@ namespace Server.Items
 
         public override void AddNameProperty(ObjectPropertyList list)
         {
-            list.Add(1152599, string.Format("#{0}\t#1152606", CraftResources.GetLocalizationNumber(_Resource))); // ~1_RES~ ~2_TYPE~ Talisman
+            list.Add(1152599, $"#{CraftResources.GetLocalizationNumber(_Resource)}\t#1152606"); // ~1_RES~ ~2_TYPE~ Talisman
         }
 
         public override void AddUsesRemainingProperties(ObjectPropertyList list)
diff --git a/Scripts/Services/Dungeons/CovetousVoidSpawn/Items/TemporaryForge.cs b/Scripts/Services/Dungeons/CovetousVoidSpawn/Items/TemporaryForge.cs
index f6a4255e7..86b5e670e 100644
--- a/Scripts/Services/Dungeons/CovetousVoidSpawn/Items/TemporaryForge.cs
+++ b/Scripts/Services/Dungeons/CovetousVoidSpawn/Items/TemporaryForge.cs
@@ -45,10 +45,8 @@ namespace Server.Items
 
         public void Decay()
         {
-            if (RootParent is Mobile)
+            if (RootParent is Mobile parent)
             {
-                Mobile parent = (Mobile)RootParent;
-
                 if (Name == null)
                     parent.SendLocalizedMessage(1072515, "#" + LabelNumber); // The ~1_name~ expired...
                 else
@@ -90,7 +88,7 @@ namespace Server.Items
             {
                 base.GetProperties(list);
 
-                if (Addon == null || !(Addon is TemporaryForge))
+                if (!(Addon is TemporaryForge))
                     return;
 
                 int left = 0;
@@ -175,10 +173,8 @@ namespace Server.Items
 
         public void Decay()
         {
-            if (RootParent is Mobile)
+            if (RootParent is Mobile parent)
             {
-                Mobile parent = (Mobile)RootParent;
-
                 if (Name == null)
                     parent.SendLocalizedMessage(1072515, "#" + LabelNumber); // The ~1_name~ expired...
                 else
@@ -241,9 +237,9 @@ namespace Server.Items
                 {
                     from.BeginTarget(10, true, Targeting.TargetFlags.None, (m, targeted) =>
                     {
-                        if (targeted is IPoint3D)
+                        if (targeted is IPoint3D iPoint3D)
                         {
-                            Point3D p = new Point3D((IPoint3D)targeted);
+                            Point3D p = new Point3D(iPoint3D);
                             int dist = (int)from.GetDistanceToSqrt(p);
 
                             if (dist < 2 || dist > 5)
@@ -266,8 +262,8 @@ namespace Server.Items
                                     BaseAddon addon = Addon;
                                     addon.MoveToWorld(new Point3D(point), m.Map);
 
-                                    if (addon is TemporaryForge)
-                                        ((TemporaryForge)addon).Owner = from;
+                                    if (addon is TemporaryForge temporaryForge)
+                                        temporaryForge.Owner = from;
 
                                     Delete();
                                 }
diff --git a/Scripts/Services/Dungeons/CovetousVoidSpawn/Items/WoodsmanTalisman.cs b/Scripts/Services/Dungeons/CovetousVoidSpawn/Items/WoodsmanTalisman.cs
index c0db91788..54da28e40 100644
--- a/Scripts/Services/Dungeons/CovetousVoidSpawn/Items/WoodsmanTalisman.cs
+++ b/Scripts/Services/Dungeons/CovetousVoidSpawn/Items/WoodsmanTalisman.cs
@@ -70,10 +70,8 @@ namespace Server.Items
 
         public void Decay()
         {
-            if (RootParent is Mobile)
+            if (RootParent is Mobile parent)
             {
-                Mobile parent = (Mobile)RootParent;
-
                 if (Name == null)
                     parent.SendLocalizedMessage(1072515, "#" + LabelNumber); // The ~1_name~ expired...
                 else
@@ -108,9 +106,8 @@ namespace Server.Items
                 return 0;
 
             CraftResource res = CraftResources.GetFromType(type);
-            WoodsmansTalisman talisman = from.FindItemOnLayer(Layer.Talisman) as WoodsmansTalisman;
 
-            if (talisman != null && talisman.UsesRemaining > 0 && res == talisman.Resource)
+            if (from.FindItemOnLayer(Layer.Talisman) is WoodsmansTalisman talisman && talisman.UsesRemaining > 0 && res == talisman.Resource)
             {
                 talisman.UsesRemaining--;
                 from.SendLocalizedMessage(1152625); // The magic of your talisman guides your hands as you cut the wood.
@@ -122,7 +119,7 @@ namespace Server.Items
 
         public override void AddNameProperty(ObjectPropertyList list)
         {
-            list.Add(1152599, string.Format("#{0}\t#1152605", CraftResources.GetLocalizationNumber(_Resource))); // ~1_RES~ ~2_TYPE~ Talisman
+            list.Add(1152599, $"#{CraftResources.GetLocalizationNumber(_Resource)}\t#1152605"); // ~1_RES~ ~2_TYPE~ Talisman
         }
 
         public override void AddUsesRemainingProperties(ObjectPropertyList list)
diff --git a/Scripts/Services/Dungeons/CovetousVoidSpawn/Level3Spawner.cs b/Scripts/Services/Dungeons/CovetousVoidSpawn/Level3Spawner.cs
index 097e6b78c..ace6e76cc 100644
--- a/Scripts/Services/Dungeons/CovetousVoidSpawn/Level3Spawner.cs
+++ b/Scripts/Services/Dungeons/CovetousVoidSpawn/Level3Spawner.cs
@@ -100,9 +100,7 @@ namespace Server.Engines.VoidPool
 
         public void RemoveFromSpawner(ISpawnable spawnable)
         {
-            BaseCreature bc = spawnable as BaseCreature;
-
-            if (bc != null)
+            if (spawnable is BaseCreature bc)
             {
                 SpawnEntry entry = FindEntryFor(bc);
 
@@ -288,9 +286,7 @@ namespace Server.Engines.VoidPool
 
                 for (int i = 0; i < MaxCount; i++)
                 {
-                    BaseCreature bc = Activator.CreateInstance(types[Utility.Random(types.Length)], Utility.RandomMinMax(5, 15), false) as BaseCreature;
-
-                    if (bc != null)
+                    if (Activator.CreateInstance(types[Utility.Random(types.Length)], Utility.RandomMinMax(5, 15), false) is BaseCreature bc)
                     {
                         Rectangle2D rec = Bounds[Utility.Random(Bounds.Length)];
                         Point3D p = Point3D.Zero;
@@ -341,9 +337,7 @@ namespace Server.Engines.VoidPool
 
                 for (int i = 0; i < count; i++)
                 {
-                    BaseCreature bc = reader.ReadMobile() as BaseCreature;
-
-                    if (bc != null)
+                    if (reader.ReadMobile() is BaseCreature bc)
                     {
                         bc.Spawner = Spawner;
                         Spawn.Add(bc);
diff --git a/Scripts/Services/Dungeons/CovetousVoidSpawn/VoidPoolController.cs b/Scripts/Services/Dungeons/CovetousVoidSpawn/VoidPoolController.cs
index 87f34768c..8d308baa7 100644
--- a/Scripts/Services/Dungeons/CovetousVoidSpawn/VoidPoolController.cs
+++ b/Scripts/Services/Dungeons/CovetousVoidSpawn/VoidPoolController.cs
@@ -276,9 +276,7 @@ namespace Server.Engines.VoidPool
                     case 14: case 15: t = SpawnTable[(int)VoidType][4]; break;
                 }
 
-                BaseCreature bc = Activator.CreateInstance(t, Wave, true) as BaseCreature;
-
-                if (bc != null)
+                if (Activator.CreateInstance(t, Wave, true) is BaseCreature bc)
                 {
                     bc.NoLootOnDeath = true;
                     Timer.DelayCall(TimeSpan.FromSeconds(i * .75), () =>
@@ -424,17 +422,14 @@ namespace Server.Engines.VoidPool
 
             foreach (Mobile m in list.Where(m => CurrentScore.ContainsKey(m)))
             {
-                m.SendLocalizedMessage(1152650, string.Format("{0}\t{1}\t{2}\t{3}", GetTotalWaves(m), Wave.ToString(), Wave.ToString(), CurrentScore[m]));
+                m.SendLocalizedMessage(1152650, $"{GetTotalWaves(m)}\t{Wave.ToString()}\t{Wave.ToString()}\t{CurrentScore[m]}");
                 // During the battle, you helped fight back ~1_COUNT~ out of ~2_TOTAL~ waves of enemy forces. Your final wave was ~3_MAX~. Your total score for the battle was ~4_SCORE~ points.
 
-                if (m is PlayerMobile)
+                if (m is PlayerMobile playerMobile)
                 {
-                    AForcedSacraficeQuest quest = QuestHelper.GetQuest<AForcedSacraficeQuest>((PlayerMobile)m);
+                    AForcedSacraficeQuest quest = QuestHelper.GetQuest<AForcedSacraficeQuest>(playerMobile);
 
-                    if (quest != null)
-                    {
-                        quest.CompleteQuest();
-                    }
+                    quest?.CompleteQuest();
                 }
             }
 
@@ -506,13 +501,13 @@ namespace Server.Engines.VoidPool
 
             foreach (Item item in Region.GetEnumeratedItems().Where(i => i is ISpawner))
             {
-                if (item is XmlSpawner)
+                if (item is XmlSpawner xmlSpawner)
                 {
-                    ((XmlSpawner)item).DoReset = true;
+                    xmlSpawner.DoReset = true;
                 }
-                else if (item is Spawner)
+                else if (item is Spawner spawner)
                 {
-                    ((Spawner)item).RemoveSpawned();
+                    spawner.RemoveSpawned();
                     ((Spawner)item).Running = false;
                 }
             }
@@ -531,13 +526,13 @@ namespace Server.Engines.VoidPool
             foreach (Item item in r.GetEnumeratedItems().Where(i => i is ISpawner
                 && i.X >= 5501 && i.X <= 5627 && i.Y >= 1799 && i.Y <= 1927))
             {
-                if (item is XmlSpawner)
+                if (item is XmlSpawner xmlSpawner)
                 {
-                    ((XmlSpawner)item).DoReset = true;
+                    xmlSpawner.DoReset = true;
                 }
-                else if (item is Spawner)
+                else if (item is Spawner spawner)
                 {
-                    ((Spawner)item).RemoveSpawned();
+                    spawner.RemoveSpawned();
                     ((Spawner)item).Running = false;
                 }
             }
@@ -579,7 +574,7 @@ namespace Server.Engines.VoidPool
 
         public int GetTotalWaves(Mobile from)
         {
-            return Waves.Where(i => i.Wave > 2 && i.Credit.Contains(from)).Count();
+            return Waves.Count(i => i.Wave > 2 && i.Credit.Contains(from));
         }
 
         public static int GetPlayerScore(Dictionary<Mobile, long> score, Mobile m)
@@ -700,17 +695,13 @@ namespace Server.Engines.VoidPool
 
                     for (int i = 0; i < counta; i++)
                     {
-                        WayPoint wp = reader.ReadItem() as WayPoint;
-
-                        if (wp != null)
+                        if (reader.ReadItem() is WayPoint wp)
                             WaypointsA.Add(wp);
                     }
 
                     for (int i = 0; i < countb; i++)
                     {
-                        WayPoint wp = reader.ReadItem() as WayPoint;
-
-                        if (wp != null)
+                        if (reader.ReadItem() is WayPoint wp)
                             WaypointsB.Add(wp);
                     }
 
diff --git a/Scripts/Services/Dungeons/CovetousVoidSpawn/VoidPoolStats.cs b/Scripts/Services/Dungeons/CovetousVoidSpawn/VoidPoolStats.cs
index 39bbcb0cd..0e46da47e 100644
--- a/Scripts/Services/Dungeons/CovetousVoidSpawn/VoidPoolStats.cs
+++ b/Scripts/Services/Dungeons/CovetousVoidSpawn/VoidPoolStats.cs
@@ -264,7 +264,7 @@ namespace Server.Engines.VoidPool
             if (stats.BestWave == null || wave > stats.BestWave.Waves)
             {
                 stats.BestWave = new BestWave(controller.CurrentScore, wave);
-                Timer.DelayCall(TimeSpan.FromSeconds(1.5), () => World.Broadcast(2072, false, string.Format("A new Void Pool Invasion record has been made: {0}!", wave.ToString())));
+                Timer.DelayCall(TimeSpan.FromSeconds(1.5), () => World.Broadcast(2072, false, $"A new Void Pool Invasion record has been made: {wave.ToString()}!"));
             }
         }
 
diff --git a/Scripts/Services/Dungeons/DespiseRevamped/DespiseController.cs b/Scripts/Services/Dungeons/DespiseRevamped/DespiseController.cs
index 8bad08ac8..053b781a9 100644
--- a/Scripts/Services/Dungeons/DespiseRevamped/DespiseController.cs
+++ b/Scripts/Services/Dungeons/DespiseRevamped/DespiseController.cs
@@ -237,7 +237,7 @@ namespace Server.Engines.Despise
 
         public void TryAddToArmy(WispOrb orb)
         {
-            if (orb != null && orb.Owner != null && m_Sequencing && orb.Alignment == m_SequenceAlignment && !m_ToTransport.Contains(orb.Owner))
+            if (orb?.Owner != null && m_Sequencing && orb.Alignment == m_SequenceAlignment && !m_ToTransport.Contains(orb.Owner))
                 m_ToTransport.Add(orb.Owner);
         }
 
@@ -432,7 +432,7 @@ namespace Server.Engines.Despise
                     orb.Delete();
                     m.SendLocalizedMessage(1153312); // The Wisp Orb dissolves into aether.
                 }
-                else if (orb != null && orb.Pet != null && orb.Pet.Alive)
+                else if (orb?.Pet != null && orb.Pet.Alive)
                     orb.Pet.MoveToWorld(p, Map.Trammel);
 
                 m.SendLocalizedMessage(1153346); // You are summoned back to your stronghold.
@@ -461,11 +461,11 @@ namespace Server.Engines.Despise
             {
                 foreach (Mobile m in m_ToTransport)
                 {
-                    if (m != null && m.Region != null && m.Region.IsPartOf<DespiseRegion>())
+                    if (m?.Region != null && m.Region.IsPartOf<DespiseRegion>())
                     {
                         WispOrb orb = GetWispOrb(m);
 
-                        if (orb != null && orb.Pet != null && orb.Pet.Alive)
+                        if (orb?.Pet != null && orb.Pet.Alive)
                         {
                             Point3D p = GetRandomLoc(BossEntranceLocation);
                             m.MoveToWorld(p, Map.Trammel);
@@ -556,7 +556,7 @@ namespace Server.Engines.Despise
 
             DespiseController controller = m_Instance;
 
-            if (controller != null && controller.LowerRegion != null)
+            if (controller?.LowerRegion != null)
             {
                 if (from.Region != null && from.Region.IsPartOf(controller.LowerRegion) && !controller.IsInSequence)
                 {
@@ -575,7 +575,7 @@ namespace Server.Engines.Despise
                         if (Map.Trammel.CanSpawnMobile(x, y, z))
                         {
                             from.MoveToWorld(new Point3D(x, y, z), Map.Trammel);
-                            if (orb != null && orb.Pet != null && orb.Pet.Alive)
+                            if (orb?.Pet != null && orb.Pet.Alive)
                                 orb.Pet.MoveToWorld(new Point3D(x, y, z), Map.Trammel);
                             break;
                         }
diff --git a/Scripts/Services/Dungeons/DespiseRevamped/Region.cs b/Scripts/Services/Dungeons/DespiseRevamped/Region.cs
index 77865792d..f17ccca6c 100644
--- a/Scripts/Services/Dungeons/DespiseRevamped/Region.cs
+++ b/Scripts/Services/Dungeons/DespiseRevamped/Region.cs
@@ -59,13 +59,13 @@ namespace Server.Engines.Despise
         {
             base.OnDeath(m);
 
-            if (m is DespiseBoss)
+            if (m is DespiseBoss despiseBoss)
             {
                 DespiseController controller = DespiseController.Instance;
 
                 if (controller != null && controller.Boss == m)
                 {
-                    Quests.WhisperingWithWispsQuest.OnBossSlain((DespiseBoss)m);
+                    Quests.WhisperingWithWispsQuest.OnBossSlain(despiseBoss);
 
                     controller.OnBossSlain();
                 }
@@ -161,7 +161,7 @@ namespace Server.Engines.Despise
                                 topdam.PlaySound(0x209);
                             }
 
-                            if (master != null && master.Map != null && master.Map != Map.Internal && master.Backpack != null)
+                            if (master?.Map != null && master.Map != Map.Internal && master.Backpack != null)
                             {
                                 PutridHeart heart = new PutridHeart(Utility.RandomMinMax(dc.Power * 8, dc.Power * 10));
 
@@ -282,9 +282,7 @@ namespace Server.Engines.Despise
 
         public void Kick_Callback(object o)
         {
-            Mobile m = o as Mobile;
-
-            if (m != null)
+            if (o is Mobile m)
             {
                 KickFromRegion(m, true);
                 m.SendLocalizedMessage(1153347); // Without the presence of a Wisp Orb, strong magical forces send you back to whence you came...
@@ -313,7 +311,7 @@ namespace Server.Engines.Despise
                     {
                         WispOrb orb = DespiseController.GetWispOrb(m);
 
-                        if (orb != null && orb.Pet != null)
+                        if (orb?.Pet != null)
                             orb.Pet.Kill();
                     }
 
diff --git a/Scripts/Services/Dungeons/DespiseRevamped/Setup.cs b/Scripts/Services/Dungeons/DespiseRevamped/Setup.cs
index ba58fe2f3..f77bebc4c 100644
--- a/Scripts/Services/Dungeons/DespiseRevamped/Setup.cs
+++ b/Scripts/Services/Dungeons/DespiseRevamped/Setup.cs
@@ -49,10 +49,8 @@ namespace Server.Engines.Despise
 
                 foreach (Item item in eable)
                 {
-                    if (item is Teleporter)
+                    if (item is Teleporter old)
                     {
-                        Teleporter old = (Teleporter)item;
-
                         tele = new DespiseTeleporter();
                         WeakEntityCollection.Add("despise", tele);
                         tele.PointDest = old.PointDest;
diff --git a/Scripts/Services/Dungeons/Doom/GaryRoom.cs b/Scripts/Services/Dungeons/Doom/GaryRoom.cs
index 1f44134ef..74001ad80 100644
--- a/Scripts/Services/Dungeons/Doom/GaryRoom.cs
+++ b/Scripts/Services/Dungeons/Doom/GaryRoom.cs
@@ -95,7 +95,7 @@ namespace Server.Engines.Doom
 
         public void OnTick()
         {
-            if (NextRoll < DateTime.UtcNow /*&& (Spawn == null || !Spawn.Alive)*/ && GetEnumeratedMobiles().OfType<PlayerMobile>().Where(p => p.Alive).Count() > 0)
+            if (NextRoll < DateTime.UtcNow /*&& (Spawn == null || !Spawn.Alive)*/ && GetEnumeratedMobiles().OfType<PlayerMobile>().Any(p => p.Alive))
             {
                 DoRoll();
                 NextRoll = DateTime.UtcNow + RollDelay;
@@ -280,9 +280,9 @@ namespace Server.Engines.Doom
 
                 foreach (Mobile m in eable)
                 {
-                    if (m is GaryTheDungeonMaster)
+                    if (m is GaryTheDungeonMaster garyTheDungeonMaster)
                     {
-                        gary = (GaryTheDungeonMaster)m;
+                        gary = garyTheDungeonMaster;
                         break;
                     }
                 }
@@ -515,7 +515,7 @@ namespace Server.Engines.Doom
 
         public void Roll(int roll)
         {
-            PublicOverheadMessage(MessageType.Regular, 0x3B2, false, string.Format("- {0} -", (roll + 1).ToString()));
+            PublicOverheadMessage(MessageType.Regular, 0x3B2, false, $"- {(roll + 1).ToString()} -");
         }
 
         public Sapphired20(Serial serial)
diff --git a/Scripts/Services/Dungeons/Doom/GauntletSpawner.cs b/Scripts/Services/Dungeons/Doom/GauntletSpawner.cs
index 5a3977787..b8ceaf59c 100644
--- a/Scripts/Services/Dungeons/Doom/GauntletSpawner.cs
+++ b/Scripts/Services/Dungeons/Doom/GauntletSpawner.cs
@@ -747,11 +747,11 @@ namespace Server.Engines.Doom
                 Region reg = Region.Find(loc, map).GetRegion("Doom Gauntlet");
 
                 if (reg != null)
-                    playerCount = reg.GetEnumeratedMobiles().Where(m => m is PlayerMobile && m.AccessLevel == AccessLevel.Player).Count();
+                    playerCount = reg.GetEnumeratedMobiles().Count(m => m is PlayerMobile && m.AccessLevel == AccessLevel.Player);
             }
 
             if (playerCount == 0 && m_Region != null)
-                playerCount = m_Region.GetEnumeratedMobiles().Where(m => m.AccessLevel == AccessLevel.Player).Count();
+                playerCount = m_Region.GetEnumeratedMobiles().Count(m => m.AccessLevel == AccessLevel.Player);
 
             int count = (playerCount + PlayersPerSpawn - 1) / PlayersPerSpawn;
 
@@ -803,14 +803,12 @@ namespace Server.Engines.Doom
                 if (obj == null)
                     return;
 
-                if (obj is Item)
+                if (obj is Item item)
                 {
-                    ((Item)obj).Delete();
+                    item.Delete();
                 }
-                else if (obj is Mobile)
+                else if (obj is Mobile mob)
                 {
-                    Mobile mob = (Mobile)obj;
-
                     mob.MoveToWorld(GetWorldLocation(), Map);
 
                     m_Creatures.Add(mob);
diff --git a/Scripts/Services/Dungeons/Doom/LeverPuzzleController.cs b/Scripts/Services/Dungeons/Doom/LeverPuzzleController.cs
index e0af4d493..6c6d5ca7e 100644
--- a/Scripts/Services/Dungeons/Doom/LeverPuzzleController.cs
+++ b/Scripts/Services/Dungeons/Doom/LeverPuzzleController.cs
@@ -343,10 +343,7 @@ namespace Server.Engines.Doom
             NukeItemList(m_Statues);
             NukeItemList(m_Levers);
 
-            if (m_LampRoom != null)
-            {
-                m_LampRoom.Unregister();
-            }
+            m_LampRoom?.Unregister();
             if (m_Tiles != null)
             {
                 foreach (Region region in m_Tiles)
@@ -566,9 +563,8 @@ namespace Server.Engines.Doom
                     return true;
                 }
 
-                if (m is BaseCreature)
+                if (m is BaseCreature bc)
                 {
-                    BaseCreature bc = (BaseCreature)m;
                     if ((bc.Controlled || bc.Summoned) && !bc.IsDeadBondedPet)
                     {
                         return true;
diff --git a/Scripts/Services/Dungeons/Doom/LeverPuzzleItems.cs b/Scripts/Services/Dungeons/Doom/LeverPuzzleItems.cs
index ef402c17f..b2512a0e1 100644
--- a/Scripts/Services/Dungeons/Doom/LeverPuzzleItems.cs
+++ b/Scripts/Services/Dungeons/Doom/LeverPuzzleItems.cs
@@ -176,7 +176,7 @@ namespace Server.Engines.Doom
         public override bool HandlesOnMovement => true;
         public override bool OnMoveOver(Mobile m)
         {
-            if (m != null && m is PlayerMobile)
+            if (m is PlayerMobile)
             {
                 if (SpellHelper.CheckCombat(m))
                 {
diff --git a/Scripts/Services/Dungeons/Doom/LeverPuzzleRegions.cs b/Scripts/Services/Dungeons/Doom/LeverPuzzleRegions.cs
index 2b748ea55..8812e3f87 100644
--- a/Scripts/Services/Dungeons/Doom/LeverPuzzleRegions.cs
+++ b/Scripts/Services/Dungeons/Doom/LeverPuzzleRegions.cs
@@ -46,9 +46,8 @@ namespace Server.Engines.Doom
                         return;
                     }
                 }
-                else if (m is BaseCreature)
+                else if (m is BaseCreature bc)
                 {
-                    BaseCreature bc = (BaseCreature)m;
                     if ((bc.Controlled && bc.ControlMaster == Controller.Successful) || bc.Summoned)
                     {
                         return;
diff --git a/Scripts/Services/Dungeons/Khaldun/KhaldunGen.cs b/Scripts/Services/Dungeons/Khaldun/KhaldunGen.cs
index 50b976e9c..b1d463e00 100644
--- a/Scripts/Services/Dungeons/Khaldun/KhaldunGen.cs
+++ b/Scripts/Services/Dungeons/Khaldun/KhaldunGen.cs
@@ -219,7 +219,7 @@ namespace Server.Commands
             sw.RaisableItem = stone;
             lv.RaisableItem = door;
 
-            e.Mobile.SendMessage(string.Format("{0} dynamic Khaldun item{1} generated.", m_Count, m_Count == 1 ? "" : "s"));
+            e.Mobile.SendMessage($"{m_Count} dynamic Khaldun item{(m_Count == 1 ? "" : "s")} generated.");
         }
     }
 }
diff --git a/Scripts/Services/Dungeons/Khaldun/PuzzleChest.cs b/Scripts/Services/Dungeons/Khaldun/PuzzleChest.cs
index 73cc83b40..4e5fbae7e 100644
--- a/Scripts/Services/Dungeons/Khaldun/PuzzleChest.cs
+++ b/Scripts/Services/Dungeons/Khaldun/PuzzleChest.cs
@@ -503,10 +503,8 @@ namespace Server.Items
             {
                 Item item = Loot.RandomArmorOrShieldOrWeaponOrJewelry();
 
-                if (item is BaseWeapon)
+                if (item is BaseWeapon weapon)
                 {
-                    BaseWeapon weapon = (BaseWeapon)item;
-
                     int attributeCount;
                     int min, max;
 
@@ -516,10 +514,8 @@ namespace Server.Items
 
                     DropItem(item);
                 }
-                else if (item is BaseArmor)
+                else if (item is BaseArmor armor)
                 {
-                    BaseArmor armor = (BaseArmor)item;
-
                     int attributeCount;
                     int min, max;
 
@@ -529,10 +525,8 @@ namespace Server.Items
 
                     DropItem(item);
                 }
-                else if (item is BaseHat)
+                else if (item is BaseHat hat)
                 {
-                    BaseHat hat = (BaseHat)item;
-
                     int attributeCount;
                     int min, max;
 
@@ -542,14 +536,14 @@ namespace Server.Items
 
                     DropItem(item);
                 }
-                else if (item is BaseJewel)
+                else if (item is BaseJewel baseJewel)
                 {
                     int attributeCount;
                     int min, max;
 
                     GetRandomAOSStats(out attributeCount, out min, out max);
 
-                    BaseRunicTool.ApplyAttributesTo((BaseJewel)item, attributeCount, min, max);
+                    BaseRunicTool.ApplyAttributesTo(baseJewel, attributeCount, min, max);
 
                     DropItem(item);
                 }
diff --git a/Scripts/Services/Dungeons/Shadowguard/Addons/ArmoryAddon.cs b/Scripts/Services/Dungeons/Shadowguard/Addons/ArmoryAddon.cs
index 8b29c68d2..d158388f1 100644
--- a/Scripts/Services/Dungeons/Shadowguard/Addons/ArmoryAddon.cs
+++ b/Scripts/Services/Dungeons/Shadowguard/Addons/ArmoryAddon.cs
@@ -1181,7 +1181,7 @@ namespace Server.Items
         {
             AddonComponent ac;
             ac = new AddonComponent(item);
-            if (name != null && name.Length > 0)
+            if (!string.IsNullOrEmpty(name))
                 ac.Name = name;
             if (hue != 0)
                 ac.Hue = hue;
diff --git a/Scripts/Services/Dungeons/Shadowguard/Addons/BarAddon.cs b/Scripts/Services/Dungeons/Shadowguard/Addons/BarAddon.cs
index f14a47a5b..ae7c25f9a 100644
--- a/Scripts/Services/Dungeons/Shadowguard/Addons/BarAddon.cs
+++ b/Scripts/Services/Dungeons/Shadowguard/Addons/BarAddon.cs
@@ -915,7 +915,7 @@ namespace Server.Items
         {
             AddonComponent ac;
             ac = new AddonComponent(item);
-            if (name != null && name.Length > 0)
+            if (!string.IsNullOrEmpty(name))
                 ac.Name = name;
             if (hue != 0)
                 ac.Hue = hue;
diff --git a/Scripts/Services/Dungeons/Shadowguard/Bosses.cs b/Scripts/Services/Dungeons/Shadowguard/Bosses.cs
index 34f3b2b95..4c886eaae 100644
--- a/Scripts/Services/Dungeons/Shadowguard/Bosses.cs
+++ b/Scripts/Services/Dungeons/Shadowguard/Bosses.cs
@@ -69,7 +69,7 @@ namespace Server.Engines.Shadowguard
             if (SummonedHelpers == null || SummonedHelpers.Count == 0)
                 return 0;
 
-            return SummonedHelpers.Where(bc => bc != null && bc.Alive).Count();
+            return SummonedHelpers.Count(bc => bc != null && bc.Alive);
         }
 
         public override void OnGotMeleeAttack(Mobile m)
@@ -256,7 +256,7 @@ namespace Server.Engines.Shadowguard
                     {
                         BaseCreature s = o as BaseCreature;
 
-                        if (s != null && s.Combatant != null)
+                        if (s?.Combatant != null)
                         {
                             if (!(s.Combatant is PlayerMobile) || !((PlayerMobile)s.Combatant).HonorActive)
                                 s.Combatant = Combatant;
@@ -924,8 +924,8 @@ namespace Server.Engines.Shadowguard
 
                 if (mount != null)
                 {
-                    if (m is PlayerMobile)
-                        ((PlayerMobile)m).SetMountBlock(BlockMountType.Dazed, TimeSpan.FromSeconds(10), true);
+                    if (m is PlayerMobile playerMobile)
+                        playerMobile.SetMountBlock(BlockMountType.Dazed, TimeSpan.FromSeconds(10), true);
                     else
                         mount.Rider = null;
                 }
diff --git a/Scripts/Services/Dungeons/Shadowguard/Controller.cs b/Scripts/Services/Dungeons/Shadowguard/Controller.cs
index ba6a598dd..d614a8c43 100644
--- a/Scripts/Services/Dungeons/Shadowguard/Controller.cs
+++ b/Scripts/Services/Dungeons/Shadowguard/Controller.cs
@@ -502,9 +502,7 @@ namespace Server.Engines.Shadowguard
 
         public static ShadowguardEncounter GetEncounter(Point3D p, Map map)
         {
-            ShadowguardRegion r = Region.Find(p, map) as ShadowguardRegion;
-
-            if (r != null)
+            if (Region.Find(p, map) is ShadowguardRegion r)
                 return r.Instance.Encounter;
 
             return null;
@@ -512,9 +510,7 @@ namespace Server.Engines.Shadowguard
 
         public static ShadowguardInstance GetInstance(Point3D p, Map map)
         {
-            ShadowguardRegion r = Region.Find(p, map) as ShadowguardRegion;
-
-            if (r != null)
+            if (Region.Find(p, map) is ShadowguardRegion r)
                 return r.Instance;
 
             return null;
@@ -652,9 +648,7 @@ namespace Server.Engines.Shadowguard
             count = reader.ReadInt();
             for (int i = 0; i < count; i++)
             {
-                BaseAddon addon = reader.ReadItem() as BaseAddon;
-
-                if (addon != null)
+                if (reader.ReadItem() is BaseAddon addon)
                     Addons.Add(addon);
             }
 
@@ -841,7 +835,7 @@ namespace Server.Engines.Shadowguard
         public ShadowguardInstance Instance { get; private set; }
 
         public ShadowguardRegion(Rectangle2D bounds, string regionName, ShadowguardInstance instance)
-            : base(string.Format("Shadowguard_{0}", regionName), Map.TerMur, DefaultPriority, bounds)
+            : base($"Shadowguard_{regionName}", Map.TerMur, DefaultPriority, bounds)
         {
             Instance = instance;
         }
diff --git a/Scripts/Services/Dungeons/Shadowguard/Encounters.cs b/Scripts/Services/Dungeons/Shadowguard/Encounters.cs
index 4c0d64195..0b2e77b7f 100644
--- a/Scripts/Services/Dungeons/Shadowguard/Encounters.cs
+++ b/Scripts/Services/Dungeons/Shadowguard/Encounters.cs
@@ -47,7 +47,7 @@ namespace Server.Engines.Shadowguard
             if (Completed || Bottles == null)
                 return;
 
-            int liquorCount = Bottles.Where(b => b != null && !b.Deleted).Count();
+            int liquorCount = Bottles.Count(b => b != null && !b.Deleted);
 
             if (liquorCount < LiquorCount)
             {
@@ -185,8 +185,7 @@ namespace Server.Engines.Shadowguard
             count = reader.ReadInt();
             for (int i = 0; i < count; i++)
             {
-                ShadowguardBottleOfLiquor b = reader.ReadItem() as ShadowguardBottleOfLiquor;
-                if (b != null)
+                if (reader.ReadItem() is ShadowguardBottleOfLiquor b)
                     Bottles.Add(b);
             }
 
@@ -314,10 +313,7 @@ namespace Server.Engines.Shadowguard
         {
             ClearSpawn();
 
-            if (Apple != null)
-            {
-                Apple.Delete();
-            }
+            Apple?.Delete();
 
             if (Trees != null)
             {
@@ -403,9 +399,7 @@ namespace Server.Engines.Shadowguard
                     int count = reader.ReadInt();
                     for (int i = 0; i < count; i++)
                     {
-                        ShadowguardCypress tree = reader.ReadItem() as ShadowguardCypress;
-
-                        if (tree != null)
+                        if (reader.ReadItem() is ShadowguardCypress tree)
                         {
                             tree.Encounter = this;
                             Trees.Add(tree);
@@ -418,9 +412,7 @@ namespace Server.Engines.Shadowguard
                         if (Spawn == null)
                             Spawn = new List<BaseCreature>();
 
-                        BaseCreature bc = reader.ReadMobile() as BaseCreature;
-
-                        if (bc != null)
+                        if (reader.ReadMobile() is BaseCreature bc)
                             Spawn.Add(bc);
                     }
 
@@ -523,7 +515,7 @@ namespace Server.Engines.Shadowguard
             if (Completed || Armor == null)
                 return;
 
-            if (Armor.Where(a => a != null && !a.Deleted).Count() == 0)
+            if (!Armor.Any(a => a != null && !a.Deleted))
                 CompleteEncounter();
         }
 
@@ -667,8 +659,8 @@ namespace Server.Engines.Shadowguard
 
                 if (it != null)
                 {
-                    if (it is CursedSuitOfArmor)
-                        ((CursedSuitOfArmor)it).Encounter = this;
+                    if (it is CursedSuitOfArmor cursedSuitOfArmor)
+                        cursedSuitOfArmor.Encounter = this;
 
                     Armor.Add(it);
                 }
@@ -689,11 +681,10 @@ namespace Server.Engines.Shadowguard
                 if (Spawn == null)
                     Spawn = new List<BaseCreature>();
 
-                BaseCreature bc = reader.ReadMobile() as BaseCreature;
-                if (bc != null)
+                if (reader.ReadMobile() is BaseCreature bc)
                 {
-                    if (bc is EnsorcelledArmor)
-                        ((EnsorcelledArmor)bc).Encounter = this;
+                    if (bc is EnsorcelledArmor ensorcelledArmor)
+                        ensorcelledArmor.Encounter = this;
 
                     Spawn.Add(bc);
                 }
@@ -763,7 +754,7 @@ namespace Server.Engines.Shadowguard
 
         public override void CheckEncounter()
         {
-            if (FlowCheckers != null && FlowCheckers.Where(c => c.Complete).Count() == 4)
+            if (FlowCheckers != null && FlowCheckers.Count(c => c.Complete)== 4)
                 CompleteEncounter();
         }
 
@@ -1030,17 +1021,17 @@ namespace Server.Engines.Shadowguard
                     {
                         if (Connects(item, next))
                         {
-                            if (next is ShadowguardDrain)
+                            if (next is ShadowguardDrain shadowguardDrain)
                             {
-                                _Drain = (ShadowguardDrain)next;
+                                _Drain = shadowguardDrain;
                                 return;
                             }
-                            else if (next is ShadowguardCanal)
+                            else if (next is ShadowguardCanal shadowguardCanal)
                             {
                                 if (_Checked == null)
                                     _Checked = new List<ShadowguardCanal>();
 
-                                _Checked.Add((ShadowguardCanal)next);
+                                _Checked.Add(shadowguardCanal);
 
                                 RecursiveCheck(next, item);
                             }
@@ -1067,9 +1058,9 @@ namespace Server.Engines.Shadowguard
 
                     return canConnect;
                 }
-                else if (two is ShadowguardCanal)
+                else if (two is ShadowguardCanal shadowguardCanal)
                 {
-                    return ((ShadowguardCanal)one).Connects((ShadowguardCanal)two);
+                    return ((ShadowguardCanal)one).Connects(shadowguardCanal);
                 }
 
                 return false;
@@ -1111,9 +1102,9 @@ namespace Server.Engines.Shadowguard
 
             private void Fill(object o)
             {
-                if (o is ShadowguardCanal)
+                if (o is ShadowguardCanal shadowguardCanal)
                 {
-                    ((ShadowguardCanal)o).Fill();
+                    shadowguardCanal.Fill();
 
                     if (_Checked.IndexOf((ShadowguardCanal)o) == _Checked.Count - 1)
                         _Drain.Hue = 0;
@@ -1186,9 +1177,7 @@ namespace Server.Engines.Shadowguard
             int count = reader.ReadInt();
             for (int i = 0; i < count; i++)
             {
-                BaseCreature bc = reader.ReadMobile() as BaseCreature;
-
-                if (bc != null)
+                if (reader.ReadMobile() is BaseCreature bc)
                     Elementals.Add(bc);
             }
 
@@ -1395,9 +1384,7 @@ namespace Server.Engines.Shadowguard
 
             for (int i = 0; i < count; i++)
             {
-                VileDrake d = reader.ReadMobile() as VileDrake;
-
-                if (d != null)
+                if (reader.ReadMobile() is VileDrake d)
                     Drakes.Add(d);
             }
 
@@ -1405,9 +1392,7 @@ namespace Server.Engines.Shadowguard
 
             for (int i = 0; i < count; i++)
             {
-                FeedingBell b = reader.ReadItem() as FeedingBell;
-
-                if (b != null)
+                if (reader.ReadItem() is FeedingBell b)
                     Bells.Add(b);
             }
 
@@ -1546,10 +1531,7 @@ namespace Server.Engines.Shadowguard
             CurrentBoss = Activator.CreateInstance(Bosses[0]) as ShadowguardBoss;
             Bosses.Remove(Bosses[0]);
 
-            if (CurrentBoss != null)
-            {
-                CurrentBoss.MoveToWorld(p, Map.TerMur);
-            }
+            CurrentBoss?.MoveToWorld(p, Map.TerMur);
 
             if (Bosses.Count == 0)
                 CurrentBoss.IsLastBoss = true;
diff --git a/Scripts/Services/Dungeons/Shadowguard/Items.cs b/Scripts/Services/Dungeons/Shadowguard/Items.cs
index 2e2fe7971..6409039d8 100644
--- a/Scripts/Services/Dungeons/Shadowguard/Items.cs
+++ b/Scripts/Services/Dungeons/Shadowguard/Items.cs
@@ -159,8 +159,8 @@ namespace Server.Engines.Shadowguard
 
                         if (targeted is ShadowguardCypress)
                             tree = targeted as ShadowguardCypress;
-                        else if (targeted is ShadowguardCypress.ShadowguardCypressFoilage)
-                            tree = ((ShadowguardCypress.ShadowguardCypressFoilage)targeted).Tree;
+                        else if (targeted is ShadowguardCypress.ShadowguardCypressFoilage shadowguardCypressFoilage)
+                            tree = shadowguardCypressFoilage.Tree;
 
                         if (tree != null)
                         {
@@ -272,10 +272,7 @@ namespace Server.Engines.Shadowguard
         {
             base.Delete();
 
-            if (Encounter != null)
-            {
-                Encounter.OnAppleDeleted();
-            }
+            Encounter?.OnAppleDeleted();
         }
 
         public ShadowguardApple(Serial serial) : base(serial)
@@ -539,9 +536,7 @@ namespace Server.Engines.Shadowguard
                                 };
                                 item.MoveToWorld(p, Map.TerMur);
 
-                                ArmoryEncounter encounter = ShadowguardController.GetEncounter(p, Map.TerMur) as ArmoryEncounter;
-
-                                if (encounter != null)
+                                if (ShadowguardController.GetEncounter(p, Map.TerMur) is ArmoryEncounter encounter)
                                     encounter.AddDestroyedArmor(item);
 
                                 int ticks = 1;
@@ -814,9 +809,8 @@ namespace Server.Engines.Shadowguard
 
         public override void OnDoubleClick(Mobile m)
         {
-            FountainEncounter encounter = ShadowguardController.GetEncounter(Location, Map) as FountainEncounter;
 
-            if (m.InRange(Location, 2) && encounter != null && ItemID != 17294 && ItemID != 17278)
+            if (m.InRange(Location, 2) && ShadowguardController.GetEncounter(Location, Map) is FountainEncounter encounter && ItemID != 17294 && ItemID != 17278)
             {
                 encounter.UseSpigot(this, m);
             }
@@ -878,9 +872,7 @@ namespace Server.Engines.Shadowguard
 
         public override void OnDoubleClick(Mobile from)
         {
-            BelfryEncounter encounter = ShadowguardController.GetEncounter(from.Location, from.Map) as BelfryEncounter;
-
-            if (encounter != null && IsChildOf(from.Backpack))
+            if (ShadowguardController.GetEncounter(from.Location, from.Map) is BelfryEncounter encounter && IsChildOf(from.Backpack))
             {
                 Point3D p = encounter.SpawnPoints[1];
                 encounter.ConvertOffset(ref p);
@@ -929,7 +921,7 @@ namespace Server.Engines.Shadowguard
             {
                 BelfryEncounter encounter = ShadowguardController.GetEncounter(c.Location, c.Map) as BelfryEncounter;
 
-                if (encounter != null && encounter.Drakes != null && encounter.Drakes.Count == 0)
+                if (encounter?.Drakes != null && encounter.Drakes.Count == 0)
                 {
                     int toSpawn = 2 + (encounter.PartySize() * 3);
 
diff --git a/Scripts/Services/Dungeons/Shadowguard/Mobiles.cs b/Scripts/Services/Dungeons/Shadowguard/Mobiles.cs
index 3ee5e6c33..bbca6bdba 100644
--- a/Scripts/Services/Dungeons/Shadowguard/Mobiles.cs
+++ b/Scripts/Services/Dungeons/Shadowguard/Mobiles.cs
@@ -154,9 +154,7 @@ namespace Server.Engines.Shadowguard
 
         public override bool OnBeforeDeath()
         {
-            FountainEncounter encounter = ShadowguardController.GetEncounter(Location, Map) as FountainEncounter;
-
-            if (encounter != null)
+            if (ShadowguardController.GetEncounter(Location, Map) is FountainEncounter encounter)
             {
                 ShadowguardCanal canal = new ShadowguardCanal();
                 canal.MoveToWorld(Location, Map);
@@ -455,9 +453,7 @@ namespace Server.Engines.Shadowguard
 
         public override void OnDeath(Container c)
         {
-            BelfryEncounter encounter = ShadowguardController.GetEncounter(c.Location, c.Map) as BelfryEncounter;
-
-            if (encounter != null)
+            if (ShadowguardController.GetEncounter(c.Location, c.Map) is BelfryEncounter encounter)
             {
                 c.DropItem(new MagicDrakeWing());
             }
@@ -514,9 +510,7 @@ namespace Server.Engines.Shadowguard
         {
             base.OnThink();
 
-            BelfryEncounter encounter = ShadowguardController.GetEncounter(Location, Map) as BelfryEncounter;
-
-            if (encounter != null && Z == -20)
+            if (ShadowguardController.GetEncounter(Location, Map) is BelfryEncounter encounter && Z == -20)
             {
                 Point3D p = encounter.SpawnPoints[0];
                 encounter.ConvertOffset(ref p);
@@ -695,9 +689,7 @@ namespace Server.Engines.Shadowguard
 
         protected override bool OnMove(Direction d)
         {
-            RoofEncounter encounter = ShadowguardController.GetEncounter(Location, Map) as RoofEncounter;
-
-            if (encounter != null)
+            if (ShadowguardController.GetEncounter(Location, Map) is RoofEncounter encounter)
             {
                 Point3D spawn = encounter.SpawnPoints[0];
 
@@ -747,9 +739,7 @@ namespace Server.Engines.Shadowguard
         {
             base.OnThink();
 
-            RoofEncounter encounter = ShadowguardController.GetEncounter(Location, Map) as RoofEncounter;
-
-            if (encounter != null)
+            if (ShadowguardController.GetEncounter(Location, Map) is RoofEncounter encounter)
             {
                 Point3D spawn = encounter.SpawnPoints[0];
                 Point3D p = Location;
@@ -764,9 +754,7 @@ namespace Server.Engines.Shadowguard
 
         public override int Damage(int amount, Mobile from, bool informMount, bool checkfizzle)
         {
-            RoofEncounter encounter = ShadowguardController.GetEncounter(Location, Map) as RoofEncounter;
-
-            if (encounter != null && from != null)
+            if (ShadowguardController.GetEncounter(Location, Map) is RoofEncounter encounter && from != null)
             {
                 from.SendLocalizedMessage(1156254); // Minax laughs as she deflects your puny attacks! Defeat her minions to close the Time Gate!
                 return 0;
diff --git a/Scripts/Services/Dungeons/Shadowguard/ShadowguardEncounter.cs b/Scripts/Services/Dungeons/Shadowguard/ShadowguardEncounter.cs
index 10307e650..ff0121de2 100644
--- a/Scripts/Services/Dungeons/Shadowguard/ShadowguardEncounter.cs
+++ b/Scripts/Services/Dungeons/Shadowguard/ShadowguardEncounter.cs
@@ -236,9 +236,9 @@ namespace Server.Engines.Shadowguard
             MovePlayer(m, p, false);
             m.CloseGump(typeof(ShadowguardGump));
 
-            if (m is PlayerMobile)
+            if (m is PlayerMobile playerMobile)
             {
-                Participants.Add((PlayerMobile)m);
+                Participants.Add(playerMobile);
             }
         }
 
@@ -328,9 +328,7 @@ namespace Server.Engines.Shadowguard
 
         public static void MovePlayer(Mobile m, Point3D p, bool pets = true)
         {
-            var pm = m as PlayerMobile;
-
-            if (pm != null && pets)
+            if (m is PlayerMobile pm && pets)
             {
                 MovePets(pm, p, m.Map);
             }
diff --git a/Scripts/Services/Dungeons/Shadowguard/ShadowguardInstance.cs b/Scripts/Services/Dungeons/Shadowguard/ShadowguardInstance.cs
index 2832b85c2..6ec37dc17 100644
--- a/Scripts/Services/Dungeons/Shadowguard/ShadowguardInstance.cs
+++ b/Scripts/Services/Dungeons/Shadowguard/ShadowguardInstance.cs
@@ -40,7 +40,7 @@ namespace Server.Engines.Shadowguard
             Center = center;
             Index = index;
 
-            Region = new ShadowguardRegion(bounds, index >= 13 ? string.Format("Roof {0}", (index - 12).ToString()) : index.ToString(), this);
+            Region = new ShadowguardRegion(bounds, index >= 13 ? $"Roof {(index - 12).ToString()}" : index.ToString(), this);
             Region.Register();
         }
 
@@ -95,18 +95,16 @@ namespace Server.Engines.Shadowguard
         {
             foreach (Item item in Region.GetEnumeratedItems())
             {
-                Corpse corpse = item as Corpse;
-
-                if (corpse != null)
+                if (item is Corpse corpse)
                 {
                     if (corpse.Owner is PlayerMobile)
                         corpse.MoveToWorld(Controller.KickLocation, Map.TerMur);
                     else
                         corpse.Delete();
                 }
-                else if (item is BaseAddon)
+                else if (item is BaseAddon baseAddon)
                 {
-                    ((BaseAddon)item).Internalize();
+                    baseAddon.Internalize();
                 }
                 else if (item.Movable || IsInDeleteList(item))
                     item.Delete();
diff --git a/Scripts/Services/Dungeons/TheExodusEncounter/Items/ExodusNexus.cs b/Scripts/Services/Dungeons/TheExodusEncounter/Items/ExodusNexus.cs
index 61cc394ce..9c40183ad 100644
--- a/Scripts/Services/Dungeons/TheExodusEncounter/Items/ExodusNexus.cs
+++ b/Scripts/Services/Dungeons/TheExodusEncounter/Items/ExodusNexus.cs
@@ -272,7 +272,7 @@ namespace Server.Items
                 m_To.PlaySound(0x28);
 
                 m_To.LocalOverheadMessage(MessageType.Regular, 0xC9, true, "* Your body convulses from electric shock *");
-                m_To.NonlocalOverheadMessage(MessageType.Regular, 0xC9, true, string.Format("* {0} spasms from electric shock *", m_To.Name));
+                m_To.NonlocalOverheadMessage(MessageType.Regular, 0xC9, true, $"* {m_To.Name} spasms from electric shock *");
 
                 AOS.Damage(m_To, m_To, 20, 0, 0, 0, 0, 100);
 
diff --git a/Scripts/Services/Dungeons/TheExodusEncounter/Items/ExodusSacrificalDagger.cs b/Scripts/Services/Dungeons/TheExodusEncounter/Items/ExodusSacrificalDagger.cs
index 4b85c8963..eb29c0c35 100644
--- a/Scripts/Services/Dungeons/TheExodusEncounter/Items/ExodusSacrificalDagger.cs
+++ b/Scripts/Services/Dungeons/TheExodusEncounter/Items/ExodusSacrificalDagger.cs
@@ -73,10 +73,8 @@ namespace Server.Items
 
             protected override void OnTarget(Mobile from, object targeted)
             {
-                if (targeted is ExodusTomeAltar)
+                if (targeted is ExodusTomeAltar altar)
                 {
-                    ExodusTomeAltar altar = (ExodusTomeAltar)targeted;
-
                     if (altar.CheckParty(altar.Owner, from))
                     {
                         bool SacrificalRitual = altar.Rituals.Find(s => s.RitualMobile == from).Ritual2;
@@ -139,13 +137,13 @@ namespace Server.Items
                 int minutes = t.Minutes;
 
                 if (weeks > 0)
-                    list.Add(string.Format("Lifespan: {0} {1}", weeks, weeks == 1 ? "week" : "weeks"));
+                    list.Add($"Lifespan: {weeks} {(weeks == 1 ? "week" : "weeks")}");
                 else if (days > 0)
-                    list.Add(string.Format("Lifespan: {0} {1}", days, days == 1 ? "day" : "days"));
+                    list.Add($"Lifespan: {days} {(days == 1 ? "day" : "days")}");
                 else if (hours > 0)
-                    list.Add(string.Format("Lifespan: {0} {1}", hours, hours == 1 ? "hour" : "hours"));
+                    list.Add($"Lifespan: {hours} {(hours == 1 ? "hour" : "hours")}");
                 else if (minutes > 0)
-                    list.Add(string.Format("Lifespan: {0} {1}", minutes, minutes == 1 ? "minute" : "minutes"));
+                    list.Add($"Lifespan: {minutes} {(minutes == 1 ? "minute" : "minutes")}");
                 else
                     list.Add(1072517, m_Lifespan.ToString()); // Lifespan: ~1_val~ seconds
             }
@@ -180,10 +178,8 @@ namespace Server.Items
 
         public virtual void Decay()
         {
-            if (RootParent is Mobile)
+            if (RootParent is Mobile parent)
             {
-                Mobile parent = (Mobile)RootParent;
-
                 if (Name == null)
                     parent.SendLocalizedMessage(1072515, "#" + LabelNumber); // The ~1_name~ expired...
                 else
diff --git a/Scripts/Services/Dungeons/TheExodusEncounter/Items/ExodusSummoningAltar.cs b/Scripts/Services/Dungeons/TheExodusEncounter/Items/ExodusSummoningAltar.cs
index 03a583946..73464a154 100644
--- a/Scripts/Services/Dungeons/TheExodusEncounter/Items/ExodusSummoningAltar.cs
+++ b/Scripts/Services/Dungeons/TheExodusEncounter/Items/ExodusSummoningAltar.cs
@@ -72,10 +72,8 @@ namespace Server.Items
 
             protected override void OnTarget(Mobile from, object targeted)
             {
-                if (targeted is StaticTarget)
+                if (targeted is StaticTarget targ)
                 {
-                    StaticTarget targ = (StaticTarget)targeted;
-
                     if (IsValidTile(targ.ItemID) && (from.Map == Map.Felucca || from.Map == Map.Trammel))
                     {
                         bool alter = from.Map.GetItemsInRange(targ.Location, 5).Where(x => x is ExodusTomeAltar).Any();
diff --git a/Scripts/Services/Dungeons/TheExodusEncounter/Items/ExodusSummoningRite.cs b/Scripts/Services/Dungeons/TheExodusEncounter/Items/ExodusSummoningRite.cs
index 5faee9bb2..97df9b7c1 100644
--- a/Scripts/Services/Dungeons/TheExodusEncounter/Items/ExodusSummoningRite.cs
+++ b/Scripts/Services/Dungeons/TheExodusEncounter/Items/ExodusSummoningRite.cs
@@ -59,13 +59,11 @@ namespace Server.Items
 
             protected override void OnTarget(Mobile from, object targeted)
             {
-                if (targeted is ExodusTomeAltar)
+                if (targeted is ExodusTomeAltar altar)
                 {
-                    ExodusTomeAltar altar = (ExodusTomeAltar)targeted;
-
                     if (altar.CheckParty(altar.Owner, from))
                     {
-                        if (altar.Rituals.Count(s => s.RitualMobile == from) == 0)
+                        if (!altar.Rituals.Any(s => s.RitualMobile == from))
                         {
                             altar.Rituals.Add(new RitualArray { RitualMobile = from, Ritual1 = false, Ritual2 = false });
                         }
diff --git a/Scripts/Services/Dungeons/TheExodusEncounter/Items/ExodusTomeAltar.cs b/Scripts/Services/Dungeons/TheExodusEncounter/Items/ExodusTomeAltar.cs
index 0f872a074..1bbc4cafa 100644
--- a/Scripts/Services/Dungeons/TheExodusEncounter/Items/ExodusTomeAltar.cs
+++ b/Scripts/Services/Dungeons/TheExodusEncounter/Items/ExodusTomeAltar.cs
@@ -166,7 +166,7 @@ namespace Server.Items
 
             if (party != null)
             {
-                int MemberRange = party.Members.Where(x => !from.InRange(x.Mobile, 5)).Count();
+                int MemberRange = party.Members.Count(x => !from.InRange(x.Mobile, 5));
 
                 if (MemberRange != 0)
                 {
@@ -180,7 +180,7 @@ namespace Server.Items
                 {
                     robe = info.Mobile.FindItemOnLayer(Layer.OuterTorso) as RobeofRite;
 
-                    if (!m_Rituals.Where(z => z.RitualMobile == info.Mobile && z.Ritual1 && z.Ritual2).Any() || robe == null)
+                    if (!m_Rituals.Any(z => z.RitualMobile == info.Mobile && z.Ritual1 && z.Ritual2)|| robe == null)
                     {
                         from.SendLocalizedMessage(1153609, info.Mobile.Name); // ~1_PLAYER~ has not fulfilled all the requirements of the Ritual! You cannot commence until they do.
                         return;
@@ -211,10 +211,7 @@ namespace Server.Items
                 // Robe of Rite Delete
                 RobeofRite robe = from.FindItemOnLayer(Layer.OuterTorso) as RobeofRite;
 
-                if (robe != null)
-                {
-                    robe.Delete();
-                }
+                robe?.Delete();
 
                 // Altar Delete
                 Timer.DelayCall(TimeSpan.FromSeconds(2), Delete);
diff --git a/Scripts/Services/Dungeons/TheExodusEncounter/Items/KeypunchReader.cs b/Scripts/Services/Dungeons/TheExodusEncounter/Items/KeypunchReader.cs
index 5ac283ecd..a661ba849 100644
--- a/Scripts/Services/Dungeons/TheExodusEncounter/Items/KeypunchReader.cs
+++ b/Scripts/Services/Dungeons/TheExodusEncounter/Items/KeypunchReader.cs
@@ -63,7 +63,7 @@ namespace Server.Items
             IEnumerable<Item> punch = items.Where(x => x is PunchCard);
             IEnumerable<Item> kit = items.Where(x => x is ExoticToolkit);
 
-            if (punch.Count() >= 50 && kit.Count() >= 1)
+            if (punch.Count() >= 50 && kit.Any())
             {
                 punch.ToList().ForEach(f => f.Delete());
 
diff --git a/Scripts/Services/Dungeons/TheExodusEncounter/Items/RobeofRite.cs b/Scripts/Services/Dungeons/TheExodusEncounter/Items/RobeofRite.cs
index 3409b5159..559815a64 100644
--- a/Scripts/Services/Dungeons/TheExodusEncounter/Items/RobeofRite.cs
+++ b/Scripts/Services/Dungeons/TheExodusEncounter/Items/RobeofRite.cs
@@ -95,10 +95,8 @@ namespace Server.Items
 
         public virtual void Decay()
         {
-            if (RootParent is Mobile)
+            if (RootParent is Mobile parent)
             {
-                Mobile parent = (Mobile)RootParent;
-
                 if (Name == null)
                     parent.SendLocalizedMessage(1072515, "#" + LabelNumber); // The ~1_name~ expired...
                 else
diff --git a/Scripts/Services/Dungeons/TheExodusEncounter/Mobiles/ClockworkExodus.cs b/Scripts/Services/Dungeons/TheExodusEncounter/Mobiles/ClockworkExodus.cs
index 7c5517cea..91ad0d48e 100644
--- a/Scripts/Services/Dungeons/TheExodusEncounter/Mobiles/ClockworkExodus.cs
+++ b/Scripts/Services/Dungeons/TheExodusEncounter/Mobiles/ClockworkExodus.cs
@@ -106,10 +106,7 @@ namespace Server.Mobiles
 
                 to.SendLocalizedMessage(502088); // A special gift has been placed in your backpack.
             }
-            else if (artifact != null)
-            {
-                artifact.Delete();
-            }
+            else artifact?.Delete();
         }
 
         public override bool OnBeforeDeath()
diff --git a/Scripts/Services/Dungeons/TombOfKings/Chambers/ChamberBarrier.cs b/Scripts/Services/Dungeons/TombOfKings/Chambers/ChamberBarrier.cs
index 7914ad567..36c7960c2 100644
--- a/Scripts/Services/Dungeons/TombOfKings/Chambers/ChamberBarrier.cs
+++ b/Scripts/Services/Dungeons/TombOfKings/Chambers/ChamberBarrier.cs
@@ -79,20 +79,14 @@ namespace Server.Engines.TombOfKings
             {
                 m_Blocker = reader.ReadItem() as Blocker;
 
-                if (m_Blocker != null)
-                {
-                    m_Blocker.Delete();
-                }
+                m_Blocker?.Delete();
             }
 
             if (reader.ReadBool())
             {
                 m_LOSBlocker = reader.ReadItem() as LOSBlocker;
 
-                if (m_LOSBlocker != null)
-                {
-                    m_LOSBlocker.Delete();
-                }
+                m_LOSBlocker?.Delete();
             }
 
             Delete();
diff --git a/Scripts/Services/Dungeons/TombOfKings/Chambers/ChamberSpawner.cs b/Scripts/Services/Dungeons/TombOfKings/Chambers/ChamberSpawner.cs
index 335daf9a7..33e7892dd 100644
--- a/Scripts/Services/Dungeons/TombOfKings/Chambers/ChamberSpawner.cs
+++ b/Scripts/Services/Dungeons/TombOfKings/Chambers/ChamberSpawner.cs
@@ -90,9 +90,7 @@ namespace Server.Engines.TombOfKings
                 Mobile m = (Mobile)Activator.CreateInstance(creatureType);
                 m.MoveToWorld(Map.GetSpawnPosition(Location, 4), Map);
 
-                BaseCreature bc = m as BaseCreature;
-
-                if (bc != null)
+                if (m is BaseCreature bc)
                 {
                     bc.RangeHome = 5;
                     bc.Home = Location;
diff --git a/Scripts/Services/Dungeons/TombOfKings/SacredQuestBlocker.cs b/Scripts/Services/Dungeons/TombOfKings/SacredQuestBlocker.cs
index 38fbfa66a..0a11707e6 100644
--- a/Scripts/Services/Dungeons/TombOfKings/SacredQuestBlocker.cs
+++ b/Scripts/Services/Dungeons/TombOfKings/SacredQuestBlocker.cs
@@ -26,8 +26,8 @@ namespace Server.Items
 
             PlayerMobile pm = m as PlayerMobile;
 
-            if (m is BaseCreature)
-                pm = ((BaseCreature)m).ControlMaster as PlayerMobile;
+            if (m is BaseCreature baseCreature)
+                pm = baseCreature.ControlMaster as PlayerMobile;
 
             if (pm != null && pm.AbyssEntry)
             {
diff --git a/Scripts/Services/Dungeons/Underworld/ExperimentalRoom/ExperimentalRoomChest.cs b/Scripts/Services/Dungeons/Underworld/ExperimentalRoom/ExperimentalRoomChest.cs
index 5546fd8a4..9c9a9190d 100644
--- a/Scripts/Services/Dungeons/Underworld/ExperimentalRoom/ExperimentalRoomChest.cs
+++ b/Scripts/Services/Dungeons/Underworld/ExperimentalRoom/ExperimentalRoomChest.cs
@@ -30,7 +30,7 @@ namespace Server.Items
             {
                 Item item = pack.FindItemByType(typeof(ExperimentalGem));
 
-                if (item != null && item is ExperimentalGem && ((ExperimentalGem)item).Complete)
+                if (item is ExperimentalGem && ((ExperimentalGem)item).Complete)
                 {
                     item.Delete();
 
diff --git a/Scripts/Services/Dungeons/Underworld/ExperimentalRoom/Region.cs b/Scripts/Services/Dungeons/Underworld/ExperimentalRoom/Region.cs
index bfeb8d918..d919e976e 100644
--- a/Scripts/Services/Dungeons/Underworld/ExperimentalRoom/Region.cs
+++ b/Scripts/Services/Dungeons/Underworld/ExperimentalRoom/Region.cs
@@ -24,7 +24,7 @@ namespace Server.Regions
                         KickToEntrance(m);
                         Mobile master = ((BaseCreature)m).GetMaster();
 
-                        if (master != null && master.NetState != null)
+                        if (master?.NetState != null)
                             master.SendLocalizedMessage(1113472); // Your pet has been kicked out of the room. This is not a stable!
                     }
                 }
diff --git a/Scripts/Services/Dungeons/Underworld/Maze of Death/GoldenCompass.cs b/Scripts/Services/Dungeons/Underworld/Maze of Death/GoldenCompass.cs
index a4469711e..deee931d6 100644
--- a/Scripts/Services/Dungeons/Underworld/Maze of Death/GoldenCompass.cs	
+++ b/Scripts/Services/Dungeons/Underworld/Maze of Death/GoldenCompass.cs	
@@ -83,9 +83,7 @@ namespace Server.Items
         {
             base.OnDelete();
 
-            Mobile m = RootParent as Mobile;
-
-            if (m != null)
+            if (RootParent is Mobile m)
                 m.CloseGump(typeof(CompassDirectionGump));
         }
 
diff --git a/Scripts/Services/Dungeons/Underworld/Maze of Death/UnderworldPuzzle.cs b/Scripts/Services/Dungeons/Underworld/Maze of Death/UnderworldPuzzle.cs
index c4fbc4679..ed7795d90 100644
--- a/Scripts/Services/Dungeons/Underworld/Maze of Death/UnderworldPuzzle.cs	
+++ b/Scripts/Services/Dungeons/Underworld/Maze of Death/UnderworldPuzzle.cs	
@@ -463,7 +463,7 @@ namespace Server.Items
             AddButton(120, 345, 0x7DB, 0x7DB, 0, GumpButtonType.Reply, 0);	// Log out
 
             AddHtmlLocalized(72, 285, 170, 20, 1150180, false, false); // Command Functions: 
-            AddHtml(200, 285, 100, 20, string.Format("{0}/{1}", m_Item.Attempts, m_Solution.MaxAttempts), false, false);
+            AddHtml(200, 285, 100, 20, $"{m_Item.Attempts}/{m_Solution.MaxAttempts}", false, false);
 
             if (from.Skills[SkillName.Lockpicking].Base >= 100.0)
             {
diff --git a/Scripts/Services/Dungeons/Underworld/PuzzleRoom/MagicKey.cs b/Scripts/Services/Dungeons/Underworld/PuzzleRoom/MagicKey.cs
index 052e19640..e08671b51 100644
--- a/Scripts/Services/Dungeons/Underworld/PuzzleRoom/MagicKey.cs
+++ b/Scripts/Services/Dungeons/Underworld/PuzzleRoom/MagicKey.cs
@@ -46,10 +46,8 @@ namespace Server.Items
 
         public override void Decay()
         {
-            if (RootParent is Mobile)
+            if (RootParent is Mobile m)
             {
-                Mobile m = (Mobile)RootParent;
-
                 if (m != null && m.Map != Map.Internal)
                 {
                     if (m_PuzzleRoom.Contains(m.Location))
diff --git a/Scripts/Services/Dungeons/Underworld/PuzzleRoom/MastermindPuzzleItem.cs b/Scripts/Services/Dungeons/Underworld/PuzzleRoom/MastermindPuzzleItem.cs
index 01141ed78..003118ca0 100644
--- a/Scripts/Services/Dungeons/Underworld/PuzzleRoom/MastermindPuzzleItem.cs
+++ b/Scripts/Services/Dungeons/Underworld/PuzzleRoom/MastermindPuzzleItem.cs
@@ -65,10 +65,8 @@ namespace Server.Items
 
         public virtual void Decay()
         {
-            if (RootParent is Mobile)
+            if (RootParent is Mobile parent)
             {
-                Mobile parent = (Mobile)RootParent;
-
                 if (Name == null)
                     parent.SendLocalizedMessage(1072515, "#" + LabelNumber); // The ~1_name~ expired...
                 else
diff --git a/Scripts/Services/Dungeons/Underworld/PuzzleRoom/MazePuzzleItem.cs b/Scripts/Services/Dungeons/Underworld/PuzzleRoom/MazePuzzleItem.cs
index 9e0cbd39a..d4eaa325e 100644
--- a/Scripts/Services/Dungeons/Underworld/PuzzleRoom/MazePuzzleItem.cs
+++ b/Scripts/Services/Dungeons/Underworld/PuzzleRoom/MazePuzzleItem.cs
@@ -50,9 +50,7 @@ namespace Server.Items
 
         public override void OnDelete()
         {
-            Mobile m = RootParent as Mobile;
-
-            if (m != null)
+            if (RootParent is Mobile m)
             {
                 if (m.HasGump(typeof(CircuitTrapGump)))
                 {
diff --git a/Scripts/Services/Dungeons/WrongDungeon/EnchantedHotItem.cs b/Scripts/Services/Dungeons/WrongDungeon/EnchantedHotItem.cs
index d951b2d4f..53978602e 100644
--- a/Scripts/Services/Dungeons/WrongDungeon/EnchantedHotItem.cs
+++ b/Scripts/Services/Dungeons/WrongDungeon/EnchantedHotItem.cs
@@ -39,9 +39,8 @@ namespace Server.Items
                         for (int i = 0; i < count; i++)
                         {
                             Item item = reader.ReadItem();
-                            Container c = reader.ReadItem() as Container;
 
-                            if (item != null && c != null)
+                            if (item != null && reader.ReadItem() is Container c)
                             {
                                 item.AttachSocket(new EnchantedHotItemSocket(c));
                             }
diff --git a/Scripts/Services/Dungeons/WrongDungeon/Items/BedrollSpawner.cs b/Scripts/Services/Dungeons/WrongDungeon/Items/BedrollSpawner.cs
index 332c53111..bb8d56dc1 100644
--- a/Scripts/Services/Dungeons/WrongDungeon/Items/BedrollSpawner.cs
+++ b/Scripts/Services/Dungeons/WrongDungeon/Items/BedrollSpawner.cs
@@ -204,7 +204,7 @@ namespace Server.Items
                 else
                 {
                     mt.PointDest = m_RoomDestinations[Utility.Random(m_RoomDestinations.Length)];
-                    bedroll = Bedrolls.Where(x => x.InRange(mt.PointDest, 4) && x.PointDest == Point3D.Zero).FirstOrDefault();
+                    bedroll = Bedrolls.FirstOrDefault(x => x.InRange(mt.PointDest, 4) && x.PointDest == Point3D.Zero);
 
                     if (bedroll != null)
                     {
@@ -265,17 +265,11 @@ namespace Server.Items
 
             writer.Write(Bedrolls == null ? 0 : Bedrolls.Count);
 
-            if (Bedrolls != null)
-            {
-                Bedrolls.ForEach(x => writer.Write(x));
-            }
+            Bedrolls?.ForEach(x => writer.Write(x));
 
             writer.Write(MysteriousTunnels == null ? 0 : MysteriousTunnels.Count);
 
-            if (MysteriousTunnels != null)
-            {
-                MysteriousTunnels.ForEach(y => writer.Write(y));
-            }
+            MysteriousTunnels?.ForEach(y => writer.Write(y));
         }
 
         public override void Deserialize(GenericReader reader)
@@ -302,18 +296,14 @@ namespace Server.Items
             int bedrollcount = reader.ReadInt();
             for (int x = 0; x < bedrollcount; x++)
             {
-                WrongBedrollBase wb = reader.ReadItem() as WrongBedrollBase;
-
-                if (wb != null)
+                if (reader.ReadItem() is WrongBedrollBase wb)
                     Bedrolls.Add(wb);
             }
 
             int mysteriouscount = reader.ReadInt();
             for (int y = 0; y < mysteriouscount; y++)
             {
-                MysteriousTunnel mt = reader.ReadItem() as MysteriousTunnel;
-
-                if (mt != null)
+                if (reader.ReadItem() is MysteriousTunnel mt)
                     MysteriousTunnels.Add(mt);
             }
 
diff --git a/Scripts/Services/Dungeons/WrongDungeon/Mobile/DemonicJailor.cs b/Scripts/Services/Dungeons/WrongDungeon/Mobile/DemonicJailor.cs
index e0b019e2c..47f61dc76 100644
--- a/Scripts/Services/Dungeons/WrongDungeon/Mobile/DemonicJailor.cs
+++ b/Scripts/Services/Dungeons/WrongDungeon/Mobile/DemonicJailor.cs
@@ -94,8 +94,8 @@ namespace Server.Mobiles
 
         private void EndParalyze_Callback(object state)
         {
-            if (state is Mobile)
-                ParalyzeEnd((Mobile)state);
+            if (state is Mobile mobile)
+                ParalyzeEnd(mobile);
         }
 
         public virtual void ParalyzeEnd(Mobile from)
@@ -141,10 +141,8 @@ namespace Server.Mobiles
 
         private void Terrorize(object o)
         {
-            if (o is Mobile)
+            if (o is Mobile m)
             {
-                Mobile m = (Mobile)o;
-
                 m.Frozen = false;
                 m.SendLocalizedMessage(1005603); // You can move again!
 
diff --git a/Scripts/Services/ExploringTheDeep/Items/Decorate/MasterThinkerContoller.cs b/Scripts/Services/ExploringTheDeep/Items/Decorate/MasterThinkerContoller.cs
index 5311fa3ec..6e7c7542e 100644
--- a/Scripts/Services/ExploringTheDeep/Items/Decorate/MasterThinkerContoller.cs
+++ b/Scripts/Services/ExploringTheDeep/Items/Decorate/MasterThinkerContoller.cs
@@ -144,7 +144,7 @@ namespace Server.Items
         {
             if (m_Controller != null)
             {
-                if (m_Controller.Array.Where(s => s.Mobile == from).Count() == 0)
+                if (!m_Controller.Array.Any(s => s.Mobile == from))
                 {
                     m_Controller.Array.Add(new MasterThinkerContoller.MasterThinkerArray { Mobile = from, Book = false, Pant = false, Tunic = false });
                 }
@@ -180,7 +180,7 @@ namespace Server.Items
 
         public int ClickCheck(Mobile from)
         {
-            return m_Controller.Array.Where(s => s.Mobile == from && s.Pant == true && s.Book == true && s.Tunic == true).Count();
+            return m_Controller.Array.Count(s => s.Mobile == from && s.Pant == true && s.Book == true && s.Tunic == true);
         }
 
         public override void Serialize(GenericWriter writer)
diff --git a/Scripts/Services/ExploringTheDeep/Items/QuestItems/LockerKey.cs b/Scripts/Services/ExploringTheDeep/Items/QuestItems/LockerKey.cs
index 2538a6499..d70c2b9ab 100644
--- a/Scripts/Services/ExploringTheDeep/Items/QuestItems/LockerKey.cs
+++ b/Scripts/Services/ExploringTheDeep/Items/QuestItems/LockerKey.cs
@@ -66,10 +66,8 @@ namespace Server.Items
                     return;
                 }
 
-                if (targeted is StorageLocker)
+                if (targeted is StorageLocker sl)
                 {
-                    StorageLocker sl = (StorageLocker)targeted;
-
                     if (sl.Type == m_Key.Type)
                     {
                         sl.Locked = false;
@@ -104,7 +102,7 @@ namespace Server.Items
         {
             base.GetProperties(list);
 
-            list.Add(1154445, string.Format("#{0}", 1154427 + (int)m_Type)); // A Key to the Spare ~1_PART~ Parts Locker
+            list.Add(1154445, $"#{1154427 + (int)m_Type}"); // A Key to the Spare ~1_PART~ Parts Locker
             list.Add(1072351); // Quest Item
         }
 
diff --git a/Scripts/Services/ExploringTheDeep/Items/QuestItems/MercutiosCutlass.cs b/Scripts/Services/ExploringTheDeep/Items/QuestItems/MercutiosCutlass.cs
index d4b967ff5..e6aff913a 100644
--- a/Scripts/Services/ExploringTheDeep/Items/QuestItems/MercutiosCutlass.cs
+++ b/Scripts/Services/ExploringTheDeep/Items/QuestItems/MercutiosCutlass.cs
@@ -47,13 +47,13 @@ namespace Server.Items
                 int minutes = t.Minutes;
 
                 if (weeks > 0)
-                    list.Add(string.Format("Lifespan: {0} {1}", weeks, weeks == 1 ? "week" : "weeks"));
+                    list.Add($"Lifespan: {weeks} {(weeks == 1 ? "week" : "weeks")}");
                 else if (days > 0)
-                    list.Add(string.Format("Lifespan: {0} {1}", days, days == 1 ? "day" : "days"));
+                    list.Add($"Lifespan: {days} {(days == 1 ? "day" : "days")}");
                 else if (hours > 0)
-                    list.Add(string.Format("Lifespan: {0} {1}", hours, hours == 1 ? "hour" : "hours"));
+                    list.Add($"Lifespan: {hours} {(hours == 1 ? "hour" : "hours")}");
                 else if (minutes > 0)
-                    list.Add(string.Format("Lifespan: {0} {1}", minutes, minutes == 1 ? "minute" : "minutes"));
+                    list.Add($"Lifespan: {minutes} {(minutes == 1 ? "minute" : "minutes")}");
                 else
                     list.Add(1072517, m_Lifespan.ToString()); // Lifespan: ~1_val~ seconds
             }
@@ -88,10 +88,8 @@ namespace Server.Items
 
         public virtual void Decay()
         {
-            if (RootParent is Mobile)
+            if (RootParent is Mobile parent)
             {
-                Mobile parent = (Mobile)RootParent;
-
                 if (Name == null)
                     parent.SendLocalizedMessage(1072515, "#" + LabelNumber); // The ~1_name~ expired...
                 else
diff --git a/Scripts/Services/ExploringTheDeep/Items/QuestItems/StorageLocker.cs b/Scripts/Services/ExploringTheDeep/Items/QuestItems/StorageLocker.cs
index 0a9bcb543..816714779 100644
--- a/Scripts/Services/ExploringTheDeep/Items/QuestItems/StorageLocker.cs
+++ b/Scripts/Services/ExploringTheDeep/Items/QuestItems/StorageLocker.cs
@@ -88,7 +88,7 @@ namespace Server.Items
         {
             base.GetProperties(list);
 
-            list.Add(1154425, string.Format("#{0}", 1154427 + (int)m_Type)); // *You barely make out some words on a rusted nameplate*<BR>REPLACEMENT PARTS: ~1_PART~
+            list.Add(1154425, $"#{1154427 + (int)m_Type}"); // *You barely make out some words on a rusted nameplate*<BR>REPLACEMENT PARTS: ~1_PART~
         }
 
         public static int[][] WoodenToMetalBarrelCoordinate =
diff --git a/Scripts/Services/ExploringTheDeep/Items/QuestItems/WillemHartesHat.cs b/Scripts/Services/ExploringTheDeep/Items/QuestItems/WillemHartesHat.cs
index 957d2808a..4b8589006 100644
--- a/Scripts/Services/ExploringTheDeep/Items/QuestItems/WillemHartesHat.cs
+++ b/Scripts/Services/ExploringTheDeep/Items/QuestItems/WillemHartesHat.cs
@@ -103,10 +103,8 @@ namespace Server.Items
 
         public virtual void Decay()
         {
-            if (RootParent is Mobile)
+            if (RootParent is Mobile parent)
             {
-                Mobile parent = (Mobile)RootParent;
-
                 if (Name == null)
                     parent.SendLocalizedMessage(1072515, "#" + LabelNumber); // The ~1_name~ expired...
                 else
diff --git a/Scripts/Services/ExploringTheDeep/Items/SorcerersPlates.cs b/Scripts/Services/ExploringTheDeep/Items/SorcerersPlates.cs
index 1f2d9fb8e..cd27f2848 100644
--- a/Scripts/Services/ExploringTheDeep/Items/SorcerersPlates.cs
+++ b/Scripts/Services/ExploringTheDeep/Items/SorcerersPlates.cs
@@ -128,7 +128,7 @@ namespace Server.Items
 
         public bool Validate(SorcerersPlate plate)
         {
-            return (plate != null && plate.Reg != null && !plate.Reg.Deleted);
+            return (plate?.Reg != null && !plate.Reg.Deleted);
         }
 
         public override void Serialize(GenericWriter writer)
@@ -295,10 +295,8 @@ namespace Server.Items
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is Item)
+                if (o is Item item)
                 {
-                    Item item = (Item)o;
-
                     if (!item.IsChildOf(from.Backpack))
                     {
                         from.SendLocalizedMessage(1054107); // This item must be in your backpack.
diff --git a/Scripts/Services/ExploringTheDeep/Items/Teleporter/Whirlpool.cs b/Scripts/Services/ExploringTheDeep/Items/Teleporter/Whirlpool.cs
index 23ae271ab..0aeb1a213 100644
--- a/Scripts/Services/ExploringTheDeep/Items/Teleporter/Whirlpool.cs
+++ b/Scripts/Services/ExploringTheDeep/Items/Teleporter/Whirlpool.cs
@@ -178,7 +178,7 @@ namespace Server.Items
 
             else if (m_Active && CanTeleport(from))
             {
-                int equipment = mobile.Items.Where(i => (i is CanvassRobe || i is BootsOfBallast || i is NictitatingLens || i is AquaPendant || i is GargishNictitatingLens) && (i.Parent is Mobile && ((Mobile)i.Parent).FindItemOnLayer(i.Layer) == i)).Count();
+                int equipment = mobile.Items.Count(i => (i is CanvassRobe || i is BootsOfBallast || i is NictitatingLens || i is AquaPendant || i is GargishNictitatingLens) && (i.Parent is Mobile && ((Mobile)i.Parent).FindItemOnLayer(i.Layer) == i));
 
                 if (equipment < 4)
                 {
@@ -248,11 +248,11 @@ namespace Server.Items
 
             BaseCreature.TeleportPets(m, p, map);
 
-            if (m is PlayerMobile)
+            if (m is PlayerMobile playerMobile)
             {
                 Timer.DelayCall(TimeSpan.FromSeconds(1.0), () =>
                     {
-                        ExploringTheDeepQuest spell = QuestHelper.GetQuest<ExploringTheDeepQuest>((PlayerMobile)m);
+                        ExploringTheDeepQuest spell = QuestHelper.GetQuest<ExploringTheDeepQuest>(playerMobile);
 
                         if (spell != null)
                         {
diff --git a/Scripts/Services/ExploringTheDeep/Items/WinchAssembly.cs b/Scripts/Services/ExploringTheDeep/Items/WinchAssembly.cs
index 609496abc..26f4f50e7 100644
--- a/Scripts/Services/ExploringTheDeep/Items/WinchAssembly.cs
+++ b/Scripts/Services/ExploringTheDeep/Items/WinchAssembly.cs
@@ -67,10 +67,7 @@ namespace Server.Items
 
             var ladder = Map.Trammel.FindItem<ShipLadder>(new Point3D(6400, 1656, 0), 0);
 
-            if (ladder != null)
-            {
-                ladder.Delete();
-            }
+            ladder?.Delete();
         }
 
         public override int LabelNumber => 1154433;  // Winch Assembly
@@ -106,10 +103,7 @@ namespace Server.Items
         {
             base.StopTimers();
 
-            if (Hatch != null)
-            {
-                Hatch.Reset();  
-            }
+            Hatch?.Reset();
         }
 
         public override void GetProperties(ObjectPropertyList list)
diff --git a/Scripts/Services/ExploringTheDeep/Mobiles/Djinn.cs b/Scripts/Services/ExploringTheDeep/Mobiles/Djinn.cs
index 3b4981206..152aa5833 100644
--- a/Scripts/Services/ExploringTheDeep/Mobiles/Djinn.cs
+++ b/Scripts/Services/ExploringTheDeep/Mobiles/Djinn.cs
@@ -165,7 +165,7 @@ namespace Server.Mobiles
 
                 foreach (Mobile m in eable)
                 {
-                    if (m == null || !(m is PlayerMobile))
+                    if (!(m is PlayerMobile))
                         continue;
 
                     if (m_Owner.CanBeHarmful(m) && m_Owner.Mana >= 100)
diff --git a/Scripts/Services/ExploringTheDeep/Questers/ChampHuthwait.cs b/Scripts/Services/ExploringTheDeep/Questers/ChampHuthwait.cs
index ece0c88fe..8a1ca0278 100644
--- a/Scripts/Services/ExploringTheDeep/Questers/ChampHuthwait.cs
+++ b/Scripts/Services/ExploringTheDeep/Questers/ChampHuthwait.cs
@@ -53,9 +53,7 @@ namespace Server.Mobiles
 
         public override bool OnDragDrop(Mobile from, Item dropped)
         {
-            PlayerMobile m = from as PlayerMobile;
-
-            if (m != null)
+            if (from is PlayerMobile m)
             {
                 if (m.ExploringTheDeepQuest == ExploringTheDeepQuestChain.CollectTheComponent)
                 {
diff --git a/Scripts/Services/ExploringTheDeep/Questers/CusteauPerron.cs b/Scripts/Services/ExploringTheDeep/Questers/CusteauPerron.cs
index 6513d1ee7..3f18a623d 100644
--- a/Scripts/Services/ExploringTheDeep/Questers/CusteauPerron.cs
+++ b/Scripts/Services/ExploringTheDeep/Questers/CusteauPerron.cs
@@ -86,9 +86,7 @@ namespace Server.Mobiles
 
         public override bool OnDragDrop(Mobile from, Item dropped)
         {
-            PlayerMobile pm = from as PlayerMobile;
-
-            if (pm != null)
+            if (from is PlayerMobile pm)
             {
                 if (pm.ExploringTheDeepQuest < ExploringTheDeepQuestChain.CusteauPerron)
                 {
diff --git a/Scripts/Services/ExploringTheDeep/Questers/GipsyGemologist.cs b/Scripts/Services/ExploringTheDeep/Questers/GipsyGemologist.cs
index 2b5a5634d..42ec73239 100644
--- a/Scripts/Services/ExploringTheDeep/Questers/GipsyGemologist.cs
+++ b/Scripts/Services/ExploringTheDeep/Questers/GipsyGemologist.cs
@@ -51,9 +51,7 @@ namespace Server.Mobiles
 
         public override bool OnDragDrop(Mobile from, Item dropped)
         {
-            PlayerMobile m = from as PlayerMobile;
-
-            if (m != null)
+            if (from is PlayerMobile m)
             {
                 if (m.ExploringTheDeepQuest == ExploringTheDeepQuestChain.CollectTheComponent)
                 {
diff --git a/Scripts/Services/ExploringTheDeep/Questers/HeplerPaulson.cs b/Scripts/Services/ExploringTheDeep/Questers/HeplerPaulson.cs
index f4cc4d395..aaf48f2e3 100644
--- a/Scripts/Services/ExploringTheDeep/Questers/HeplerPaulson.cs
+++ b/Scripts/Services/ExploringTheDeep/Questers/HeplerPaulson.cs
@@ -107,9 +107,7 @@ namespace Server.Mobiles
 
         public override bool OnDragDrop(Mobile from, Item dropped)
         {
-            PlayerMobile m = from as PlayerMobile;
-
-            if (m != null)
+            if (from is PlayerMobile m)
             {
                 if (dropped is BrokenShipwreckRemains)
                 {
diff --git a/Scripts/Services/ExploringTheDeep/Questers/JosefSkimmons.cs b/Scripts/Services/ExploringTheDeep/Questers/JosefSkimmons.cs
index 76555d501..245fa5fff 100644
--- a/Scripts/Services/ExploringTheDeep/Questers/JosefSkimmons.cs
+++ b/Scripts/Services/ExploringTheDeep/Questers/JosefSkimmons.cs
@@ -67,9 +67,7 @@ namespace Server.Mobiles
 
         public override bool OnDragDrop(Mobile from, Item dropped)
         {
-            PlayerMobile m = from as PlayerMobile;
-
-            if (m != null)
+            if (from is PlayerMobile m)
             {
                 if (m.ExploringTheDeepQuest == ExploringTheDeepQuestChain.CollectTheComponent)
                 {
diff --git a/Scripts/Services/ExploringTheDeep/Questers/MadelineHarte.cs b/Scripts/Services/ExploringTheDeep/Questers/MadelineHarte.cs
index 4c11b523e..01306ccec 100644
--- a/Scripts/Services/ExploringTheDeep/Questers/MadelineHarte.cs
+++ b/Scripts/Services/ExploringTheDeep/Questers/MadelineHarte.cs
@@ -58,9 +58,7 @@ namespace Server.Mobiles
 
         public override bool OnDragDrop(Mobile from, Item dropped)
         {
-            PlayerMobile m = from as PlayerMobile;
-
-            if (m != null)
+            if (from is PlayerMobile m)
             {
                 if (m.ExploringTheDeepQuest == ExploringTheDeepQuestChain.CollectTheComponent)
                 {
diff --git a/Scripts/Services/ExploringTheDeep/Regions.cs b/Scripts/Services/ExploringTheDeep/Regions.cs
index 72422067a..f9ae42744 100644
--- a/Scripts/Services/ExploringTheDeep/Regions.cs
+++ b/Scripts/Services/ExploringTheDeep/Regions.cs
@@ -101,7 +101,7 @@ namespace Server.Regions
 
             if (m is PlayerMobile)
             {
-                int equipment = m.Items.Where(i => (i is CanvassRobe || i is BootsOfBallast || i is NictitatingLens || i is AquaPendant || i is GargishNictitatingLens) && (i.Parent is Mobile && ((Mobile)i.Parent).FindItemOnLayer(i.Layer) == i)).Count();
+                int equipment = m.Items.Count(i => (i is CanvassRobe || i is BootsOfBallast || i is NictitatingLens || i is AquaPendant || i is GargishNictitatingLens) && (i.Parent is Mobile && ((Mobile)i.Parent).FindItemOnLayer(i.Layer) == i));
 
                 PlayerMobile pm = m as PlayerMobile;
 
@@ -114,7 +114,7 @@ namespace Server.Regions
                     }
                     else if (pm.AllFollowers.Count != 0)
                     {
-                        if (pm.AllFollowers.Where(x => x is Paralithode).Count() == 0)
+                        if (!pm.AllFollowers.Any(x => x is Paralithode))
                         {
                             pm.SendLocalizedMessage(1154412); // You cannot proceed while pets are under your control!
                             return false;
diff --git a/Scripts/Services/FireCasino/CasinoGumps.cs b/Scripts/Services/FireCasino/CasinoGumps.cs
index 0c3eee718..cb8887dc3 100644
--- a/Scripts/Services/FireCasino/CasinoGumps.cs
+++ b/Scripts/Services/FireCasino/CasinoGumps.cs
@@ -247,12 +247,12 @@ namespace Server.Engines.ResortAndCasino
 
         protected string Color(string color, string str)
         {
-            return string.Format("<basefont color={0}>{1}", color, str);
+            return $"<basefont color={color}>{str}";
         }
 
         protected string ColorAndCenter(string color, string str)
         {
-            return string.Format("<basefont color={0}><center>{1}</center>", color, str);
+            return $"<basefont color={color}><center>{str}</center>";
         }
     }
 
@@ -377,12 +377,12 @@ namespace Server.Engines.ResortAndCasino
 
         protected string Color(string color, string str)
         {
-            return string.Format("<basefont color={0}>{1}", color, str);
+            return $"<basefont color={color}>{str}";
         }
 
         protected string ColorAndCenter(string color, string str)
         {
-            return string.Format("<basefont color={0}><center>{1}</center>", color, str);
+            return $"<basefont color={color}><center>{str}</center>";
         }
     }
 
@@ -461,7 +461,7 @@ namespace Server.Engines.ResortAndCasino
                 int matches = Game.GetMatches();
                 int win = Game.CurrentBet * matches;
 
-                AddHtmlLocalized(20, 250, 240, 32, 1153384, string.Format("{0}\t{1}", matches.ToString(), win.ToString(CultureInfo.GetCultureInfo("en-US"))), Yellow, false, false); // The dice matched your number ~1_COUNT~ times. You win ~2_AMT~ chips!
+                AddHtmlLocalized(20, 250, 240, 32, 1153384, $"{matches.ToString()}\t{win.ToString(CultureInfo.GetCultureInfo("en-US"))}", Yellow, false, false); // The dice matched your number ~1_COUNT~ times. You win ~2_AMT~ chips!
             }
 
             AddHtml(55, 293, 150, 16, Color("#FFFF00", Game.Winner ? "COLLECT" : "CONTINUE"), false, false);
@@ -815,7 +815,7 @@ namespace Server.Engines.ResortAndCasino
                 }
                 else
                 {
-                    AddHtmlLocalized(15, 375, Width - 30, 16, 1153640, string.Format("{0}\t#{1}", Game.WinningTotal, WinningHand()), Yellow, false, false); // You won ~1_AMT~ for making a ~2_HAND_NAME~!
+                    AddHtmlLocalized(15, 375, Width - 30, 16, 1153640, $"{Game.WinningTotal}\t#{WinningHand()}", Yellow, false, false); // You won ~1_AMT~ for making a ~2_HAND_NAME~!
                 }
 
                 AddHtml(55, Height - 35, 150, 16, Color("#FFFF00", Game.Winner ? "COLLECT" : "CONTINUE"), false, false);
diff --git a/Scripts/Services/FireCasino/DiceGames.cs b/Scripts/Services/FireCasino/DiceGames.cs
index 9bb831874..9ce20e8cf 100644
--- a/Scripts/Services/FireCasino/DiceGames.cs
+++ b/Scripts/Services/FireCasino/DiceGames.cs
@@ -69,7 +69,7 @@ namespace Server.Engines.ResortAndCasino
             if (Roll == null)
                 return 0;
 
-            return Roll.Where(i => i == BettingOn).Count();
+            return Roll.Count(i => i == BettingOn);
         }
 
         public virtual int GetTotal()
@@ -108,9 +108,7 @@ namespace Server.Engines.ResortAndCasino
         {
             if (Player != null)
             {
-                GettingEvenQuest q = QuestHelper.GetQuest(Player, typeof(GettingEvenQuest)) as GettingEvenQuest;
-
-                if (q != null)
+                if (QuestHelper.GetQuest(Player, typeof(GettingEvenQuest)) is GettingEvenQuest q)
                     q.Update(GetType());
             }
         }
@@ -138,7 +136,7 @@ namespace Server.Engines.ResortAndCasino
         {
             base.BeginRollDice();
 
-            Player.PrivateOverheadMessage(MessageType.Regular, 0x35, 1153375, string.Format("{0}\t{1}", CurrentBet.ToString(), BettingOn.ToString()), Player.NetState); // *bets ~1_AMT~ chips on ~2_PROP~*
+            Player.PrivateOverheadMessage(MessageType.Regular, 0x35, 1153375, $"{CurrentBet.ToString()}\t{BettingOn.ToString()}", Player.NetState); // *bets ~1_AMT~ chips on ~2_PROP~*
         }
 
         public override void OnDiceRolled()
@@ -149,11 +147,11 @@ namespace Server.Engines.ResortAndCasino
 
             int matches = GetMatches();
 
-            Dealer.PrivateOverheadMessage(MessageType.Regular, 0x35, 1153391, string.Format("{0}\t{1}\t{2}", Roll[0], Roll[1], Roll[2]), Player.NetState); // *rolls the dice; they land on ~1_FIRST~ ~2_SECOND~ ~3_THIRD~*
+            Dealer.PrivateOverheadMessage(MessageType.Regular, 0x35, 1153391, $"{Roll[0]}\t{Roll[1]}\t{Roll[2]}", Player.NetState); // *rolls the dice; they land on ~1_FIRST~ ~2_SECOND~ ~3_THIRD~*
 
             if (matches == 0)
             {
-                Dealer.PrivateOverheadMessage(MessageType.Regular, 0x35, 1153376, string.Format("{0}\t{1}", Player.Name, CurrentBet.ToString(CultureInfo.GetCultureInfo("en-US"))), Player.NetState); // *rakes in ~1_NAME~'s ~2_VAL~-chip bet*
+                Dealer.PrivateOverheadMessage(MessageType.Regular, 0x35, 1153376, $"{Player.Name}\t{CurrentBet.ToString(CultureInfo.GetCultureInfo("en-US"))}", Player.NetState); // *rakes in ~1_NAME~'s ~2_VAL~-chip bet*
             }
             else
             {
@@ -162,15 +160,13 @@ namespace Server.Engines.ResortAndCasino
 
                 Winner = true;
                 OnWin();
-                Dealer.PrivateOverheadMessage(MessageType.Regular, 0x35, 1153377, string.Format("{0}\t{1}", Player.Name, winnings.ToString(CultureInfo.GetCultureInfo("en-US"))), Player.NetState); // *pays out ~2_VAL~ chips to ~1_NAME~*
+                Dealer.PrivateOverheadMessage(MessageType.Regular, 0x35, 1153377, $"{Player.Name}\t{winnings.ToString(CultureInfo.GetCultureInfo("en-US"))}", Player.NetState); // *pays out ~2_VAL~ chips to ~1_NAME~*
             }
         }
 
         public override void SendGump()
         {
-            ChucklesLuckGump g = Player.FindGump(typeof(ChucklesLuckGump)) as ChucklesLuckGump;
-
-            if (g != null)
+            if (Player.FindGump(typeof(ChucklesLuckGump)) is ChucklesLuckGump g)
                 g.Refresh();
             else
             {
@@ -202,7 +198,7 @@ namespace Server.Engines.ResortAndCasino
         {
             base.BeginRollDice();
 
-            Player.PrivateOverheadMessage(MessageType.Regular, 0x35, 1153375, string.Format("{0}\t{1}", CurrentBet.ToString(), ((HighMiddleLowType)BettingOn).ToString()), Player.NetState); // *bets ~1_AMT~ chips on ~2_PROP~*
+            Player.PrivateOverheadMessage(MessageType.Regular, 0x35, 1153375, $"{CurrentBet.ToString()}\t{((HighMiddleLowType)BettingOn).ToString()}", Player.NetState); // *bets ~1_AMT~ chips on ~2_PROP~*
         }
 
         public override void OnDiceRolled()
@@ -220,7 +216,7 @@ namespace Server.Engines.ResortAndCasino
                 int total = Roll[0] + Roll[1] + Roll[2];
                 int winnings = 0;
 
-                Dealer.PrivateOverheadMessage(MessageType.Regular, 0x35, 1153391, string.Format("{0}\t{1}\t{2}", Roll[0], Roll[1], Roll[2]), Player.NetState); // *rolls the dice; they land on ~1_FIRST~ ~2_SECOND~ ~3_THIRD~*
+                Dealer.PrivateOverheadMessage(MessageType.Regular, 0x35, 1153391, $"{Roll[0]}\t{Roll[1]}\t{Roll[2]}", Player.NetState); // *rolls the dice; they land on ~1_FIRST~ ~2_SECOND~ ~3_THIRD~*
 
                 switch (BetType)
                 {
@@ -241,11 +237,11 @@ namespace Server.Engines.ResortAndCasino
                     Winner = true;
                     OnWin();
 
-                    Dealer.PrivateOverheadMessage(MessageType.Regular, 0x35, 1153377, string.Format("{0}\t{1}", Player.Name, winnings.ToString(CultureInfo.GetCultureInfo("en-US"))), Player.NetState); // *pays out ~2_VAL~ chips to ~1_NAME~*
+                    Dealer.PrivateOverheadMessage(MessageType.Regular, 0x35, 1153377, $"{Player.Name}\t{winnings.ToString(CultureInfo.GetCultureInfo("en-US"))}", Player.NetState); // *pays out ~2_VAL~ chips to ~1_NAME~*
                 }
                 else
                 {
-                    Dealer.PrivateOverheadMessage(MessageType.Regular, 0x35, 1153376, string.Format("{0}\t{1}", Player.Name, CurrentBet.ToString(CultureInfo.GetCultureInfo("en-US"))), Player.NetState); // *rakes in ~1_NAME~'s ~2_VAL~-chip bet*
+                    Dealer.PrivateOverheadMessage(MessageType.Regular, 0x35, 1153376, $"{Player.Name}\t{CurrentBet.ToString(CultureInfo.GetCultureInfo("en-US"))}", Player.NetState); // *rakes in ~1_NAME~'s ~2_VAL~-chip bet*
                 }
             }
         }
@@ -259,9 +255,7 @@ namespace Server.Engines.ResortAndCasino
 
         public override void SendGump()
         {
-            HiMiddleLowGump g = Player.FindGump(typeof(HiMiddleLowGump)) as HiMiddleLowGump;
-
-            if (g != null)
+            if (Player.FindGump(typeof(HiMiddleLowGump)) is HiMiddleLowGump g)
                 g.Refresh();
             else
             {
@@ -328,7 +322,7 @@ namespace Server.Engines.ResortAndCasino
             if (RollNumber == 1)
             {
                 RollDice(3);
-                Dealer.PrivateOverheadMessage(MessageType.Regular, 0x35, 1153391, string.Format("{0}\t{1}\t{2}", GetRoll(0), GetRoll(1), GetRoll(2)), Player.NetState); // *rolls the dice; they land on ~1_FIRST~ ~2_SECOND~ ~3_THIRD~*
+                Dealer.PrivateOverheadMessage(MessageType.Regular, 0x35, 1153391, $"{GetRoll(0)}\t{GetRoll(1)}\t{GetRoll(2)}", Player.NetState); // *rolls the dice; they land on ~1_FIRST~ ~2_SECOND~ ~3_THIRD~*
             }
             else
             {
@@ -360,11 +354,11 @@ namespace Server.Engines.ResortAndCasino
                     WinningTotal = winnings;
                     PointsSystem.CasinoData.AwardPoints(Player, winnings);
 
-                    Dealer.PrivateOverheadMessage(MessageType.Regular, 0x35, 1153377, string.Format("{0}\t{1}", Player.Name, winnings.ToString(CultureInfo.GetCultureInfo("en-US"))), Player.NetState); // *pays out ~2_VAL~ chips to ~1_NAME~*
+                    Dealer.PrivateOverheadMessage(MessageType.Regular, 0x35, 1153377, $"{Player.Name}\t{winnings.ToString(CultureInfo.GetCultureInfo("en-US"))}", Player.NetState); // *pays out ~2_VAL~ chips to ~1_NAME~*
                 }
                 else
                 {
-                    Dealer.PrivateOverheadMessage(MessageType.Regular, 0x35, 1153376, string.Format("{0}\t{1}", Player.Name, TotalBet.ToString(CultureInfo.GetCultureInfo("en-US"))), Player.NetState); // *rakes in ~1_NAME~'s ~2_VAL~-chip bet*
+                    Dealer.PrivateOverheadMessage(MessageType.Regular, 0x35, 1153376, $"{Player.Name}\t{TotalBet.ToString(CultureInfo.GetCultureInfo("en-US"))}", Player.NetState); // *rakes in ~1_NAME~'s ~2_VAL~-chip bet*
                 }
             }
             else
@@ -400,9 +394,7 @@ namespace Server.Engines.ResortAndCasino
 
         public override void SendGump()
         {
-            DiceRiderGump g = Player.FindGump(typeof(DiceRiderGump)) as DiceRiderGump;
-
-            if (g != null)
+            if (Player.FindGump(typeof(DiceRiderGump)) is DiceRiderGump g)
                 g.Refresh();
             else
             {
diff --git a/Scripts/Services/FireCasino/Mobiles.cs b/Scripts/Services/FireCasino/Mobiles.cs
index c6c46138c..bb63f3f0e 100644
--- a/Scripts/Services/FireCasino/Mobiles.cs
+++ b/Scripts/Services/FireCasino/Mobiles.cs
@@ -192,9 +192,7 @@ namespace Server.Engines.ResortAndCasino
                 AddGame(pm, game);
             }
 
-            ChucklesLuckGump g = pm.FindGump(typeof(ChucklesLuckGump)) as ChucklesLuckGump;
-
-            if (g != null)
+            if (pm.FindGump(typeof(ChucklesLuckGump)) is ChucklesLuckGump g)
                 g.Refresh();
             else
             {
@@ -238,9 +236,7 @@ namespace Server.Engines.ResortAndCasino
                 AddGame(pm, game);
             }
 
-            HiMiddleLowGump g = pm.FindGump(typeof(HiMiddleLowGump)) as HiMiddleLowGump;
-
-            if (g != null)
+            if (pm.FindGump(typeof(HiMiddleLowGump)) is HiMiddleLowGump g)
                 g.Refresh();
             else
             {
@@ -284,9 +280,7 @@ namespace Server.Engines.ResortAndCasino
                 AddGame(pm, game);
             }
 
-            DiceRiderGump g = pm.FindGump(typeof(DiceRiderGump)) as DiceRiderGump;
-
-            if (g != null)
+            if (pm.FindGump(typeof(DiceRiderGump)) is DiceRiderGump g)
                 g.Refresh();
             else
             {
diff --git a/Scripts/Services/FireCasino/TentBrownAddon.cs b/Scripts/Services/FireCasino/TentBrownAddon.cs
index 3726e3b70..e43bdb20e 100644
--- a/Scripts/Services/FireCasino/TentBrownAddon.cs
+++ b/Scripts/Services/FireCasino/TentBrownAddon.cs
@@ -121,7 +121,7 @@ namespace Server.Items
         {
             AddonComponent ac;
             ac = new AddonComponent(item);
-            if (name != null && name.Length > 0)
+            if (!string.IsNullOrEmpty(name))
                 ac.Name = name;
             if (hue != 0)
                 ac.Hue = hue;
diff --git a/Scripts/Services/FireCasino/TentWhiteAddon.cs b/Scripts/Services/FireCasino/TentWhiteAddon.cs
index b7394b71a..1d798e07f 100644
--- a/Scripts/Services/FireCasino/TentWhiteAddon.cs
+++ b/Scripts/Services/FireCasino/TentWhiteAddon.cs
@@ -134,7 +134,7 @@ namespace Server.Items
         {
             AddonComponent ac;
             ac = new AddonComponent(item);
-            if (name != null && name.Length > 0)
+            if (!string.IsNullOrEmpty(name))
                 ac.Name = name;
             if (hue != 0)
                 ac.Hue = hue;
diff --git a/Scripts/Services/GiftGiving/18thAnniversary/AnniversaryCard.cs b/Scripts/Services/GiftGiving/18thAnniversary/AnniversaryCard.cs
index ea07ca95c..f57e93453 100644
--- a/Scripts/Services/GiftGiving/18thAnniversary/AnniversaryCard.cs
+++ b/Scripts/Services/GiftGiving/18thAnniversary/AnniversaryCard.cs
@@ -19,7 +19,7 @@ namespace Server.Items
         {
             Hue = 124;
 
-            Args = string.Format("{0}\t{1}", _Staff[Utility.Random(_Staff.Length)], m != null ? m.Name : "you");
+            Args = $"{_Staff[Utility.Random(_Staff.Length)]}\t{(m != null ? m.Name : "you")}";
         }
 
         public override void AddNameProperty(ObjectPropertyList list)
diff --git a/Scripts/Services/GiftGiving/18thAnniversary/AnniversaryPlate.cs b/Scripts/Services/GiftGiving/18thAnniversary/AnniversaryPlate.cs
index 0c8d6907d..f1183617e 100644
--- a/Scripts/Services/GiftGiving/18thAnniversary/AnniversaryPlate.cs
+++ b/Scripts/Services/GiftGiving/18thAnniversary/AnniversaryPlate.cs
@@ -17,7 +17,7 @@ namespace Server.Items
         public AnniversaryPlate(Mobile m) : base(0x9BC8)
         {
             if (m != null && .01 > Utility.RandomDouble())
-                LabelType = string.Format("{0} first adventure in Britannia!", m.Name); // No Cliloc???
+                LabelType = $"{m.Name} first adventure in Britannia!"; // No Cliloc???
             else
                 LabelType = Utility.RandomMinMax(1156150, 1156157);
         }
@@ -27,7 +27,7 @@ namespace Server.Items
             list.Add(1156149); // An Ornately Decorated Commemorative Plate
 
             if (LabelType.Number > 0)
-                list.Add(1062613, string.Format("#{0}", LabelType.Number.ToString()));
+                list.Add(1062613, $"#{LabelType.Number.ToString()}");
             else if (LabelType.String != null)
                 list.Add(1062613, LabelType.String);
         }
diff --git a/Scripts/Services/GiftGiving/21stAnniversary/Anniversary21Card.cs b/Scripts/Services/GiftGiving/21stAnniversary/Anniversary21Card.cs
index 34bf20602..daabb4147 100644
--- a/Scripts/Services/GiftGiving/21stAnniversary/Anniversary21Card.cs
+++ b/Scripts/Services/GiftGiving/21stAnniversary/Anniversary21Card.cs
@@ -19,7 +19,7 @@ namespace Server.Items
         {
             Hue = 85;
 
-            Args = string.Format("{0}\t{1}", _Staff[Utility.Random(_Staff.Length)], m != null ? m.Name : "you");
+            Args = $"{_Staff[Utility.Random(_Staff.Length)]}\t{(m != null ? m.Name : "you")}";
         }
 
         public override void AddNameProperty(ObjectPropertyList list)
diff --git a/Scripts/Services/GiftGiving/23rdAnniversary/SilverPlatedTome.cs b/Scripts/Services/GiftGiving/23rdAnniversary/SilverPlatedTome.cs
index 779f4e9c8..7b29aed40 100644
--- a/Scripts/Services/GiftGiving/23rdAnniversary/SilverPlatedTome.cs
+++ b/Scripts/Services/GiftGiving/23rdAnniversary/SilverPlatedTome.cs
@@ -15,7 +15,7 @@ namespace Server.Items
             : base(0xA5CE)
         {
             Hue = Utility.RandomMinMax(8, 254);
-            _DisplayName = string.Format("{0} of {1}", _Titles[Utility.Random(_Titles.Length)], _Names[Utility.Random(_Names.Length)]);
+            _DisplayName = $"{_Titles[Utility.Random(_Titles.Length)]} of {_Names[Utility.Random(_Names.Length)]}";
         }
 
         public SilverPlatedTome(Serial serial)
diff --git a/Scripts/Services/Guilds/Guild.cs b/Scripts/Services/Guilds/Guild.cs
index bb8cae1d6..133da13a5 100644
--- a/Scripts/Services/Guilds/Guild.cs
+++ b/Scripts/Services/Guilds/Guild.cs
@@ -648,9 +648,9 @@ namespace Server.Guilds
 
                 Guild g = null;
 
-                if (o is Mobile)
+                if (o is Mobile mobile)
                 {
-                    g = ((Mobile)o).Guild as Guild;
+                    g = mobile.Guild as Guild;
                 }
 
                 if (g != null)
@@ -1014,9 +1014,9 @@ namespace Server.Guilds
 
             AddMember(m_Leader);
 
-            if (m_Leader is PlayerMobile)
+            if (m_Leader is PlayerMobile playerMobile)
             {
-                ((PlayerMobile)m_Leader).GuildRank = RankDefinition.Leader;
+                playerMobile.GuildRank = RankDefinition.Leader;
             }
 
             AcceptedWars = new List<WarDeclaration>();
@@ -1120,9 +1120,9 @@ namespace Server.Guilds
 
                 m_Leader = value;
 
-                if (m_Leader is PlayerMobile)
+                if (m_Leader is PlayerMobile playerMobile)
                 {
-                    ((PlayerMobile)m_Leader).GuildRank = RankDefinition.Leader;
+                    playerMobile.GuildRank = RankDefinition.Leader;
                 }
             }
         }
@@ -1144,9 +1144,9 @@ namespace Server.Guilds
             {
                 m.SendLocalizedMessage(502131); // Your guild has disbanded.
 
-                if (m is PlayerMobile)
+                if (m is PlayerMobile playerMobile)
                 {
-                    ((PlayerMobile)m).GuildRank = RankDefinition.Lowest;
+                    playerMobile.GuildRank = RankDefinition.Lowest;
                 }
 
                 m.Guild = null;
@@ -1231,10 +1231,7 @@ namespace Server.Guilds
 
             CheckExpiredWars();
 
-            if (Alliance != null)
-            {
-                Alliance.CheckLeader();
-            }
+            Alliance?.CheckLeader();
 
             writer.Write(7); //version
 
@@ -1364,9 +1361,9 @@ namespace Server.Guilds
                     {
                         m_Leader = reader.ReadMobile();
 
-                        if (m_Leader is PlayerMobile)
+                        if (m_Leader is PlayerMobile playerMobile)
                         {
-                            ((PlayerMobile)m_Leader).GuildRank = RankDefinition.Leader;
+                            playerMobile.GuildRank = RankDefinition.Leader;
                         }
 
                         m_Name = reader.ReadString();
@@ -1428,10 +1425,7 @@ namespace Server.Guilds
 
             AllianceInfo alliance = Alliance;
 
-            if (alliance != null)
-            {
-                alliance.CheckLeader();
-            }
+            alliance?.CheckLeader();
 
             alliance = Alliance; //CheckLeader could possibly change the value of this.Alliance
 
@@ -1461,17 +1455,14 @@ namespace Server.Guilds
 
                 m.GuildFealty = null;
 
-                if (m is PlayerMobile)
+                if (m is PlayerMobile playerMobile)
                 {
-                    ((PlayerMobile)m).GuildRank = RankDefinition.Lowest;
+                    playerMobile.GuildRank = RankDefinition.Lowest;
                 }
 
                 Guild guild = m.Guild as Guild;
 
-                if (guild != null)
-                {
-                    guild.InvalidateWarNotoriety();
-                }
+                guild?.InvalidateWarNotoriety();
             }
         }
 
@@ -1490,9 +1481,9 @@ namespace Server.Guilds
 
                 m.Guild = null;
 
-                if (m is PlayerMobile)
+                if (m is PlayerMobile playerMobile)
                 {
-                    ((PlayerMobile)m).GuildRank = RankDefinition.Lowest;
+                    playerMobile.GuildRank = RankDefinition.Lowest;
                 }
 
                 if (message > 0)
@@ -1515,10 +1506,7 @@ namespace Server.Guilds
                     Disband();
                 }
 
-                if (guild != null)
-                {
-                    guild.InvalidateWarNotoriety();
-                }
+                guild?.InvalidateWarNotoriety();
 
                 Engines.Points.PointsSystem.ViceVsVirtue.OnResign(m, message == 1063411);
 
diff --git a/Scripts/Services/Guilds/GuildGumps/BaseGuildGump.cs b/Scripts/Services/Guilds/GuildGumps/BaseGuildGump.cs
index d78970440..845c01c7c 100644
--- a/Scripts/Services/Guilds/GuildGumps/BaseGuildGump.cs
+++ b/Scripts/Services/Guilds/GuildGumps/BaseGuildGump.cs
@@ -81,7 +81,7 @@ namespace Server.Guilds
 
         public static string Color(string text, int color)
         {
-            return string.Format("<BASEFONT COLOR=#{0:X6}>{1}</BASEFONT>", color, text);
+            return $"<BASEFONT COLOR=#{color:X6}>{text}</BASEFONT>";
         }
 
         //There's prolly a way to have all the vars set of inherited classes before something is called in the Ctor... but... I can't think of it right now, and I can't use Timer.DelayCall here :<
diff --git a/Scripts/Services/Guilds/GuildGumps/CreateGuildGump.cs b/Scripts/Services/Guilds/GuildGumps/CreateGuildGump.cs
index 4948fc604..47da89062 100644
--- a/Scripts/Services/Guilds/GuildGumps/CreateGuildGump.cs
+++ b/Scripts/Services/Guilds/GuildGumps/CreateGuildGump.cs
@@ -45,7 +45,7 @@ namespace Server.Guilds
         {
             PlayerMobile pm = sender.Mobile as PlayerMobile;
 
-            if (pm == null || pm.Guild != null)
+            if (pm?.Guild != null)
                 return;		//Sanity
 
             switch (info.ButtonID)
diff --git a/Scripts/Services/Guilds/GuildGumps/GuildInvitationRequest.cs b/Scripts/Services/Guilds/GuildGumps/GuildInvitationRequest.cs
index 1d1d0a560..156c56516 100644
--- a/Scripts/Services/Guilds/GuildGumps/GuildInvitationRequest.cs
+++ b/Scripts/Services/Guilds/GuildGumps/GuildInvitationRequest.cs
@@ -21,7 +21,7 @@ namespace Server.Guilds
 
             AddBackground(0, 0, 350, 170, 0x2422);
             AddHtmlLocalized(25, 20, 300, 45, 1062946, 0x0, true, false); // <center>You have been invited to join a guild! (Warning: Accepting will make you attackable!)</center>
-            AddHtml(25, 75, 300, 25, string.Format("<center>{0}</center>", guild.Name), true, false);
+            AddHtml(25, 75, 300, 25, $"<center>{guild.Name}</center>", true, false);
             AddButton(265, 130, 0xF7, 0xF8, 1, GumpButtonType.Reply, 0);
             AddButton(195, 130, 0xF2, 0xF1, 0, GumpButtonType.Reply, 0);
             AddButton(20, 130, 0xD2, 0xD3, 2, GumpButtonType.Reply, 0);
@@ -37,14 +37,14 @@ namespace Server.Guilds
             {
                 case 0:
                     {
-                        m_Inviter.SendLocalizedMessage(1063250, string.Format("{0}\t{1}", player.Name, guild.Name)); // ~1_val~ has declined your invitation to join ~2_val~.
+                        m_Inviter.SendLocalizedMessage(1063250, $"{player.Name}\t{guild.Name}"); // ~1_val~ has declined your invitation to join ~2_val~.
                         break;
                     }
                 case 1:
                     {
                         guild.AddMember(player);
                         player.SendLocalizedMessage(1063056, guild.Name); // You have joined ~1_val~.
-                        m_Inviter.SendLocalizedMessage(1063249, string.Format("{0}\t{1}", player.Name, guild.Name)); // ~1_val~ has accepted your invitation to join ~2_val~.
+                        m_Inviter.SendLocalizedMessage(1063249, $"{player.Name}\t{guild.Name}"); // ~1_val~ has accepted your invitation to join ~2_val~.
 
                         break;
                     }
diff --git a/Scripts/Services/Guilds/GuildGumps/GuildRosterGump.cs b/Scripts/Services/Guilds/GuildGumps/GuildRosterGump.cs
index 298f458f7..55fdfdbfb 100644
--- a/Scripts/Services/Guilds/GuildGumps/GuildRosterGump.cs
+++ b/Scripts/Services/Guilds/GuildGumps/GuildRosterGump.cs
@@ -125,10 +125,7 @@ namespace Server.Guilds
         {
             TextDefinition[] defs = new TextDefinition[aryLength];
 
-            string name = string.Format("{0} {1}{2}",
-                pm.Name,
-                Engines.VvV.ViceVsVirtueSystem.IsVvV(pm) ? "VvV" : "",
-                (player.GuildFealty == pm && player.GuildFealty != guild.Leader) ? " *" : "");
+            string name = $"{pm.Name} {(Engines.VvV.ViceVsVirtueSystem.IsVvV(pm) ? "VvV" : "")}{((player.GuildFealty == pm && player.GuildFealty != guild.Leader) ? " *" : "")}";
 
             if (pm == player)
                 name = Color(name, 0x006600);
diff --git a/Scripts/Services/Guilds/GuildGumps/OtherGuildInfo.cs b/Scripts/Services/Guilds/GuildGumps/OtherGuildInfo.cs
index e449cc30f..2dd6f07f5 100644
--- a/Scripts/Services/Guilds/GuildGumps/OtherGuildInfo.cs
+++ b/Scripts/Services/Guilds/GuildGumps/OtherGuildInfo.cs
@@ -76,7 +76,7 @@ namespace Server.Guilds
 
             if (ActiveWar)
             {
-                kills = string.Format("{0}/{1}", activeWar.Kills, activeWar.MaxKills);
+                kills = $"{activeWar.Kills}/{activeWar.MaxKills}";
 
                 TimeSpan timeRemaining = TimeSpan.Zero;
 
@@ -88,17 +88,17 @@ namespace Server.Guilds
 
                 otherWar = m_Other.FindActiveWar(guild);
                 if (otherWar != null)
-                    otherKills = string.Format("{0}/{1}", otherWar.Kills, otherWar.MaxKills);
+                    otherKills = $"{otherWar.Kills}/{otherWar.MaxKills}";
             }
             else if (PendingWar)
             {
-                kills = Color(string.Format("{0}/{1}", war.Kills, war.MaxKills), 0x990000);
+                kills = Color($"{war.Kills}/{war.MaxKills}", 0x990000);
                 //time = Color( String.Format( "{0}:{1}", war.WarLength.Hours, ((TimeSpan)(war.WarLength - TimeSpan.FromHours( war.WarLength.Hours ))).Minutes ), 0xFF0000 );
                 time = Color(string.Format("{0:D2}:{1:mm}", war.WarLength.Hours, DateTime.MinValue + war.WarLength), 0x990000);
 
                 otherWar = m_Other.FindPendingWar(guild);
                 if (otherWar != null)
-                    otherKills = Color(string.Format("{0}/{1}", otherWar.Kills, otherWar.MaxKills), 0x990000);
+                    otherKills = Color($"{otherWar.Kills}/{otherWar.MaxKills}", 0x990000);
             }
 
             AddHtmlLocalized(280, 110, 120, 26, 1062966, 0x0, true, false); // <i>Your Kills</i>
@@ -222,7 +222,7 @@ namespace Server.Guilds
                             }
                             else if (alliance != null && alliance.Leader != guild)
                             {
-                                pm.SendLocalizedMessage(1063239, string.Format("{0}\t{1}", guild.Name, alliance.Name)); // ~1_val~ is not the leader of the ~2_val~ alliance.
+                                pm.SendLocalizedMessage(1063239, $"{guild.Name}\t{alliance.Name}"); // ~1_val~ is not the leader of the ~2_val~ alliance.
                                 pm.SendLocalizedMessage(1070707, alliance.Leader.Name); // You need to negotiate via ~1_val~ instead.
                             }
                             else
@@ -273,7 +273,7 @@ namespace Server.Guilds
                             }
                             else if (alliance != null && alliance.Leader != guild)
                             {
-                                pm.SendLocalizedMessage(1063239, string.Format("{0}\t{1}", guild.Name, alliance.Name)); // ~1_val~ is not the leader of the ~2_val~ alliance.
+                                pm.SendLocalizedMessage(1063239, $"{guild.Name}\t{alliance.Name}"); // ~1_val~ is not the leader of the ~2_val~ alliance.
                                 pm.SendLocalizedMessage(1070707, alliance.Leader.Name); // You need to negotiate via ~1_val~ instead.
                             }
                             else
@@ -293,7 +293,7 @@ namespace Server.Guilds
                             }
                             else if (alliance != null && alliance.Leader != guild)
                             {
-                                pm.SendLocalizedMessage(1063239, string.Format("{0}\t{1}", guild.Name, alliance.Name)); // ~1_val~ is not the leader of the ~2_val~ alliance.
+                                pm.SendLocalizedMessage(1063239, $"{guild.Name}\t{alliance.Name}"); // ~1_val~ is not the leader of the ~2_val~ alliance.
                                 pm.SendLocalizedMessage(1070707, alliance.Leader.Name); // You need to negotiate via ~1_val~ instead.
                             }
                             else
@@ -315,7 +315,7 @@ namespace Server.Guilds
                         }
                         else if (alliance != null && alliance.Leader != guild)
                         {
-                            pm.SendLocalizedMessage(1063239, string.Format("{0}\t{1}", guild.Name, alliance.Name)); // ~1_val~ is not the leader of the ~2_val~ alliance.
+                            pm.SendLocalizedMessage(1063239, $"{guild.Name}\t{alliance.Name}"); // ~1_val~ is not the leader of the ~2_val~ alliance.
                             pm.SendLocalizedMessage(1070707, alliance.Leader.Name); // You need to negotiate via ~1_val~ instead.
                         }
                         else
@@ -361,12 +361,12 @@ namespace Server.Guilds
                             }
                             else if (alliance != null && alliance.Leader != guild)
                             {
-                                pm.SendLocalizedMessage(1063239, string.Format("{0}\t{1}", guild.Name, alliance.Name)); // ~1_val~ is not the leader of the ~2_val~ alliance.
+                                pm.SendLocalizedMessage(1063239, $"{guild.Name}\t{alliance.Name}"); // ~1_val~ is not the leader of the ~2_val~ alliance.
                                 pm.SendLocalizedMessage(1070707, alliance.Leader.Name); // You need to negotiate via ~1_val~ instead.
                             }
                             else if (otherAlliance != null && otherAlliance.Leader != m_Other)
                             {
-                                pm.SendLocalizedMessage(1063239, string.Format("{0}\t{1}", m_Other.Name, otherAlliance.Name)); // ~1_val~ is not the leader of the ~2_val~ alliance.
+                                pm.SendLocalizedMessage(1063239, $"{m_Other.Name}\t{otherAlliance.Name}"); // ~1_val~ is not the leader of the ~2_val~ alliance.
                                 pm.SendLocalizedMessage(1070707, otherAlliance.Leader.Name); // You need to negotiate via ~1_val~ instead.
                             }
                             else
@@ -415,7 +415,7 @@ namespace Server.Guilds
                             }
                             else if (alliance.Leader != guild)
                             {
-                                pm.SendLocalizedMessage(1063239, string.Format("{0}\t{1}", guild.Name, alliance.Name)); // ~1_val~ is not the leader of the ~2_val~ alliance.
+                                pm.SendLocalizedMessage(1063239, $"{guild.Name}\t{alliance.Name}"); // ~1_val~ is not the leader of the ~2_val~ alliance.
                             }
                             else if (otherAlliance != null)
                             {
@@ -479,7 +479,7 @@ namespace Server.Guilds
                         }
                         else if (alliance != null && alliance.Leader != guild)
                         {
-                            pm.SendLocalizedMessage(1063239, string.Format("{0}\t{1}", guild.Name, alliance.Name)); // ~1_val~ is not the leader of the ~2_val~ alliance.
+                            pm.SendLocalizedMessage(1063239, $"{guild.Name}\t{alliance.Name}"); // ~1_val~ is not the leader of the ~2_val~ alliance.
                         }
                         else if (alliance != null && alliance.IsMember(guild) && alliance.IsMember(m_Other))
                         {
@@ -499,11 +499,11 @@ namespace Server.Guilds
                         }
                         else if (alliance != null && alliance.Leader != guild)
                         {
-                            pm.SendLocalizedMessage(1063239, string.Format("{0}\t{1}", guild.Name, alliance.Name)); // ~1_val~ is not the leader of the ~2_val~ alliance.
+                            pm.SendLocalizedMessage(1063239, $"{guild.Name}\t{alliance.Name}"); // ~1_val~ is not the leader of the ~2_val~ alliance.
                         }
                         else if (alliance != null && alliance.IsMember(guild) && alliance.IsMember(m_Other))
                         {
-                            pm.SendLocalizedMessage(1063434, string.Format("{0}\t{1}", m_Other.Name, alliance.Name)); // ~1_val~ is now the leader of ~2_val~.
+                            pm.SendLocalizedMessage(1063434, $"{m_Other.Name}\t{alliance.Name}"); // ~1_val~ is now the leader of ~2_val~.
 
                             alliance.Leader = m_Other;
                         }
diff --git a/Scripts/Services/Guilds/GuildGumps/WarDeclarationGump.cs b/Scripts/Services/Guilds/GuildGumps/WarDeclarationGump.cs
index d073fd00e..d1275cad3 100644
--- a/Scripts/Services/Guilds/GuildGumps/WarDeclarationGump.cs
+++ b/Scripts/Services/Guilds/GuildGumps/WarDeclarationGump.cs
@@ -58,12 +58,12 @@ namespace Server.Guilds
                         }
                         else if (alliance != null && alliance.Leader != guild)
                         {
-                            pm.SendLocalizedMessage(1063239, string.Format("{0}\t{1}", guild.Name, alliance.Name)); // ~1_val~ is not the leader of the ~2_val~ alliance.
+                            pm.SendLocalizedMessage(1063239, $"{guild.Name}\t{alliance.Name}"); // ~1_val~ is not the leader of the ~2_val~ alliance.
                             pm.SendLocalizedMessage(1070707, alliance.Leader.Name); // You need to negotiate via ~1_val~ instead.
                         }
                         else if (otherAlliance != null && otherAlliance.Leader != m_Other)
                         {
-                            pm.SendLocalizedMessage(1063239, string.Format("{0}\t{1}", m_Other.Name, otherAlliance.Name)); // ~1_val~ is not the leader of the ~2_val~ alliance.
+                            pm.SendLocalizedMessage(1063239, $"{m_Other.Name}\t{otherAlliance.Name}"); // ~1_val~ is not the leader of the ~2_val~ alliance.
                             pm.SendLocalizedMessage(1070707, otherAlliance.Leader.Name); // You need to negotiate via ~1_val~ instead.
                         }
                         else
diff --git a/Scripts/Services/Harvest/Core/HarvestDefinition.cs b/Scripts/Services/Harvest/Core/HarvestDefinition.cs
index fa456850c..6a387d629 100644
--- a/Scripts/Services/Harvest/Core/HarvestDefinition.cs
+++ b/Scripts/Services/Harvest/Core/HarvestDefinition.cs
@@ -45,10 +45,10 @@ namespace Server.Engines.Harvest
 
         public void SendMessageTo(Mobile from, object message)
         {
-            if (message is int)
-                from.SendLocalizedMessage((int)message);
-            else if (message is string)
-                from.SendMessage((string)message);
+            if (message is int i)
+                from.SendLocalizedMessage(i);
+            else if (message is string s)
+                from.SendMessage(s);
         }
 
         public HarvestBank GetBank(Map map, int x, int y)
diff --git a/Scripts/Services/Harvest/Core/HarvestResource.cs b/Scripts/Services/Harvest/Core/HarvestResource.cs
index 8099f7108..f8223cb89 100644
--- a/Scripts/Services/Harvest/Core/HarvestResource.cs
+++ b/Scripts/Services/Harvest/Core/HarvestResource.cs
@@ -21,10 +21,10 @@ namespace Server.Engines.Harvest
 
         public void SendSuccessTo(Mobile m)
         {
-            if (SuccessMessage is int)
-                m.SendLocalizedMessage((int)SuccessMessage);
-            else if (SuccessMessage is string)
-                m.SendMessage((string)SuccessMessage);
+            if (SuccessMessage is int i)
+                m.SendLocalizedMessage(i);
+            else if (SuccessMessage is string s)
+                m.SendMessage(s);
         }
     }
 }
diff --git a/Scripts/Services/Harvest/Core/HarvestTarget.cs b/Scripts/Services/Harvest/Core/HarvestTarget.cs
index 11b482f0c..e1ae85be1 100644
--- a/Scripts/Services/Harvest/Core/HarvestTarget.cs
+++ b/Scripts/Services/Harvest/Core/HarvestTarget.cs
@@ -24,24 +24,21 @@ namespace Server.Engines.Harvest
         {
             if (m_System is Mining)
             {
-                if (targeted is StaticTarget)
+                if (targeted is StaticTarget staticTarget)
                 {
-                    int itemID = ((StaticTarget)targeted).ItemID;
+                    int itemID = staticTarget.ItemID;
 
                     // grave
                     if (itemID == 0xED3 || itemID == 0xEDF || itemID == 0xEE0 || itemID == 0xEE1 || itemID == 0xEE2 || itemID == 0xEE8)
                     {
-                        PlayerMobile player = from as PlayerMobile;
-
-                        if (player != null)
+                        if (from is PlayerMobile player)
                         {
                             QuestSystem qs = player.Quest;
 
                             if (qs is WitchApprenticeQuest)
                             {
-                                FindIngredientObjective obj = qs.FindObjective(typeof(FindIngredientObjective)) as FindIngredientObjective;
 
-                                if (obj != null && !obj.Completed && obj.Ingredient == Ingredient.Bones)
+                                if (qs.FindObjective(typeof(FindIngredientObjective)) is FindIngredientObjective obj && !obj.Completed && obj.Ingredient == Ingredient.Bones)
                                 {
                                     player.SendLocalizedMessage(1055037); // You finish your grim work, finding some of the specific bones listed in the Hag's recipe.
                                     obj.Complete();
@@ -113,12 +110,12 @@ namespace Server.Engines.Harvest
             from.SendLocalizedMessage(500461); // You destroy the item.
             Effects.PlaySound(item.GetWorldLocation(), item.Map, 0x3B3);
 
-            if (item is Container)
+            if (item is Container container)
             {
                 if (item is TrapableContainer)
                     (item as TrapableContainer).ExecuteTrap(from);
 
-                ((Container)item).Destroy();
+                container.Destroy();
             }
             else
             {
diff --git a/Scripts/Services/Harvest/Fishing/Bait.cs b/Scripts/Services/Harvest/Fishing/Bait.cs
index ca65bff2b..de10f7ac2 100644
--- a/Scripts/Services/Harvest/Fishing/Bait.cs
+++ b/Scripts/Services/Harvest/Fishing/Bait.cs
@@ -89,15 +89,15 @@ namespace Server.Items
             if (m_Enhanced)
             {
                 //~1_token~ ~2_token~ bait
-                if (label is int)
-                    list.Add(1116464, "#{0}\t#{1}", 1116470, (int)label);
-                else if (label is string)
-                    list.Add(1116464, "#{0}\t{1}", 1116470, (string)label);
+                if (label is int i)
+                    list.Add(1116464, "#{0}\t#{1}", 1116470, i);
+                else if (label is string s)
+                    list.Add(1116464, "#{0}\t{1}", 1116470, s);
             }
-            else if (label is int)
-                list.Add(1116465, string.Format("#{0}", (int)label)); //~1_token~ bait
-            else if (label is string)
-                list.Add(1116465, (string)label);
+            else if (label is int i)
+                list.Add(1116465, $"#{i}"); //~1_token~ bait
+            else if (label is string s)
+                list.Add(1116465, s);
         }
 
         public override void GetProperties(ObjectPropertyList list)
@@ -145,7 +145,7 @@ namespace Server.Items
                 if (targeted == m_Bait)
                     return;
 
-                if (targeted is FishingPole)
+                if (targeted is FishingPole pole)
                 {
                     if (!m_Bait.IsFishBait())
                     {
@@ -153,8 +153,6 @@ namespace Server.Items
                         return;
                     }
 
-                    FishingPole pole = (FishingPole)targeted;
-
                     bool hasBait = pole.BaitType != null;
 
                     if (hasBait && pole.BaitType != m_Bait.BaitType)
@@ -174,7 +172,7 @@ namespace Server.Items
                     from.SendLocalizedMessage(1149759);  //You bait the hook.
                     m_Bait.UsesRemaining -= m_Amount;
                 }
-                else if (targeted is LobsterTrap)
+                else if (targeted is LobsterTrap trap)
                 {
                     if (m_Bait.IsFishBait())
                     {
@@ -182,8 +180,6 @@ namespace Server.Items
                         return;
                     }
 
-                    LobsterTrap trap = (LobsterTrap)targeted;
-
                     bool hasBait = trap.BaitType != null;
 
                     trap.BaitType = m_Bait.BaitType;
diff --git a/Scripts/Services/Harvest/Fishing/FishInfo.cs b/Scripts/Services/Harvest/Fishing/FishInfo.cs
index 60f25cd59..8bce71d1f 100644
--- a/Scripts/Services/Harvest/Fishing/FishInfo.cs
+++ b/Scripts/Services/Harvest/Fishing/FishInfo.cs
@@ -250,9 +250,7 @@ namespace Server.Items
             Type item = null;
             bool enhanced = false;
 
-            var baitable = harvestItem as IBaitable;
-
-            if (baitable != null)
+            if (harvestItem is IBaitable baitable)
             {
                 bait = baitable.BaitType;
                 enhanced = baitable.EnhancedBait;
@@ -364,9 +362,9 @@ namespace Server.Items
 
                 if (item is IFishingAttire)
                 {
-                    if (item is ISetItem)
+                    if (item is ISetItem iSetItem)
                     {
-                        if (((ISetItem)item).SetEquipped)
+                        if (iSetItem.SetEquipped)
                         {
                             str += ((double)((IFishingAttire)item).SetBonus / 100) / ((ISetItem)item).Pieces;
                         }
diff --git a/Scripts/Services/Harvest/Fishing/FishPies.cs b/Scripts/Services/Harvest/Fishing/FishPies.cs
index 77a2f0edd..a1bad1319 100644
--- a/Scripts/Services/Harvest/Fishing/FishPies.cs
+++ b/Scripts/Services/Harvest/Fishing/FishPies.cs
@@ -207,7 +207,7 @@ namespace Server.Items
             {
                 from.FixedEffect(0x375A, 10, 15);
                 from.PlaySound(0x1E7);
-                from.SendLocalizedMessage(1116285, string.Format("#{0}", LabelNumber)); //You eat the ~1_val~.  Mmm, tasty!
+                from.SendLocalizedMessage(1116285, $"#{LabelNumber}"); //You eat the ~1_val~.  Mmm, tasty!
                 Delete();
             }
         }
diff --git a/Scripts/Services/Harvest/Fishing/Fishing.cs b/Scripts/Services/Harvest/Fishing/Fishing.cs
index 00ba924eb..a6f22b29f 100644
--- a/Scripts/Services/Harvest/Fishing/Fishing.cs
+++ b/Scripts/Services/Harvest/Fishing/Fishing.cs
@@ -158,11 +158,10 @@ namespace Server.Engines.Harvest
 
         public override bool SpecialHarvest(Mobile from, Item tool, HarvestDefinition def, Map map, Point3D loc)
         {
-            PlayerMobile player = from as PlayerMobile;
 
             Container pack = from.Backpack;
 
-            if (player != null)
+            if (from is PlayerMobile player)
             {
                 QuestSystem qs = player.Quest;
 
@@ -639,13 +638,13 @@ namespace Server.Engines.Harvest
                         from.SendLocalizedMessage(1043297, "a fish");
                     }
                     else
-                        from.SendLocalizedMessage(1043297, string.Format("#{0}", item.LabelNumber));
+                        from.SendLocalizedMessage(1043297, $"#{item.LabelNumber}");
 
                     return;
                 }
                 else if (item.LabelNumber > 0)
                 {
-                    from.SendLocalizedMessage(1043297, string.Format("#{0}", item.LabelNumber));
+                    from.SendLocalizedMessage(1043297, $"#{item.LabelNumber}");
                     return;
                 }
                 else
diff --git a/Scripts/Services/Harvest/Fishing/Hooks.cs b/Scripts/Services/Harvest/Fishing/Hooks.cs
index 090d288e5..a35b57fb9 100644
--- a/Scripts/Services/Harvest/Fishing/Hooks.cs
+++ b/Scripts/Services/Harvest/Fishing/Hooks.cs
@@ -39,7 +39,7 @@ namespace Server.Items
             base.GetProperties(list);
 
             int condition = GetCondition(m_Uses);
-            list.Add(1149847, string.Format("#{0}", condition)); //Condition: ~1_val~
+            list.Add(1149847, $"#{condition}"); //Condition: ~1_val~
         }
 
         public static int GetCondition(int uses)
@@ -93,10 +93,8 @@ namespace Server.Items
 
             protected override void OnTarget(Mobile from, object targeted)
             {
-                if (targeted is FishingPole)
+                if (targeted is FishingPole pole)
                 {
-                    FishingPole pole = (FishingPole)targeted;
-
                     if (pole.HookType != HookType.None)
                     {
                         Item hook = null;
diff --git a/Scripts/Services/Harvest/Fishing/LobsterTrap.cs b/Scripts/Services/Harvest/Fishing/LobsterTrap.cs
index 611094004..6d61be0fc 100644
--- a/Scripts/Services/Harvest/Fishing/LobsterTrap.cs
+++ b/Scripts/Services/Harvest/Fishing/LobsterTrap.cs
@@ -109,7 +109,7 @@ namespace Server.Items
             {
                 object label = FishInfo.GetFishLabel(m_BaitType);
                 if (label is int)
-                    list.Add(1116468, string.Format("#{0}", (int)label)); //baited to attract: ~1_val~
+                    list.Add(1116468, $"#{(int)label}"); //baited to attract: ~1_val~
                 else if (label is string)
                     list.Add(1116468, (string)label);
 
@@ -165,7 +165,7 @@ namespace Server.Items
                 if (!pack.TryDropItem(from, item, false))
                     item.MoveToWorld(from.Location, from.Map);
 
-                from.SendLocalizedMessage(1116386, string.Format("#{0}", item.LabelNumber));
+                from.SendLocalizedMessage(1116386, $"#{item.LabelNumber}");
             }
         }
 
diff --git a/Scripts/Services/Harvest/Fishing/Trophies.cs b/Scripts/Services/Harvest/Fishing/Trophies.cs
index 988b8c3b3..b2c1c5aa5 100644
--- a/Scripts/Services/Harvest/Fishing/Trophies.cs
+++ b/Scripts/Services/Harvest/Fishing/Trophies.cs
@@ -387,13 +387,13 @@ namespace Server.Items
         {
             base.GetProperties(list);
 
-            if (Addon != null && Addon is FishTrophy)
+            if (Addon is FishTrophy)
             {
                 FishTrophy trophy = Addon as FishTrophy;
 
                 list.Add(1070858, trophy.FishWeight.ToString());
                 list.Add(1070857, trophy.Fisher != null ? trophy.Fisher.Name : "Unknown");
-                list.Add(string.Format("[{0}]", trophy.DateCaught.ToShortDateString()));
+                list.Add($"[{trophy.DateCaught.ToShortDateString()}]");
             }
         }
 
diff --git a/Scripts/Services/Harvest/HarvestSystem.cs b/Scripts/Services/Harvest/HarvestSystem.cs
index a1ea95eca..8dc754204 100644
--- a/Scripts/Services/Harvest/HarvestSystem.cs
+++ b/Scripts/Services/Harvest/HarvestSystem.cs
@@ -213,7 +213,7 @@ namespace Server.Engines.Harvest
                         BonusHarvestResource bonus = def.GetBonusResource();
                         Item bonusItem = null;
 
-                        if (bonus != null && bonus.Type != null && skillBase >= bonus.ReqSkill)
+                        if (bonus?.Type != null && skillBase >= bonus.ReqSkill)
                         {
                             if (bonus.RequiredMap == null || bonus.RequiredMap == from.Map)
                             {
diff --git a/Scripts/Services/Harvest/Lumberjacking.cs b/Scripts/Services/Harvest/Lumberjacking.cs
index 6d13e507e..4aba196dc 100644
--- a/Scripts/Services/Harvest/Lumberjacking.cs
+++ b/Scripts/Services/Harvest/Lumberjacking.cs
@@ -139,13 +139,13 @@ namespace Server.Engines.Harvest
 
                 if (newType != type)
                 {
-                    if (tool is HarvestersAxe)
+                    if (tool is HarvestersAxe harvestersAxe)
                     {
-                        ((HarvestersAxe)tool).Charges--;
+                        harvestersAxe.Charges--;
                     }
-                    else if (tool is GargishHarvestersAxe)
+                    else if (tool is GargishHarvestersAxe gargishHarvestersAxe)
                     {
-                        ((GargishHarvestersAxe)tool).Charges--;
+                        gargishHarvestersAxe.Charges--;
                     }
                 }
             }
@@ -233,10 +233,10 @@ namespace Server.Engines.Harvest
 
         public override void OnBadHarvestTarget(Mobile from, Item tool, object toHarvest)
         {
-            if (toHarvest is Mobile)
-                ((Mobile)toHarvest).PrivateOverheadMessage(MessageType.Regular, 0x3B2, 500450, from.NetState); // You can only skin dead creatures.
-            else if (toHarvest is Item)
-                ((Item)toHarvest).LabelTo(from, 500464); // Use this on corpses to carve away meat and hide
+            if (toHarvest is Mobile mobile)
+                mobile.PrivateOverheadMessage(MessageType.Regular, 0x3B2, 500450, from.NetState); // You can only skin dead creatures.
+            else if (toHarvest is Item item)
+                item.LabelTo(from, 500464); // Use this on corpses to carve away meat and hide
             else if (toHarvest is Targeting.StaticTarget || toHarvest is Targeting.LandTarget)
                 from.SendLocalizedMessage(500489); // You can't use an axe on that.
             else
diff --git a/Scripts/Services/Help/HelpGump.cs b/Scripts/Services/Help/HelpGump.cs
index 982a22764..bef75fe9e 100644
--- a/Scripts/Services/Help/HelpGump.cs
+++ b/Scripts/Services/Help/HelpGump.cs
@@ -307,8 +307,8 @@ namespace Server.Engines.Help
 
         private static bool IsYoung(Mobile m)
         {
-            if (m is PlayerMobile)
-                return ((PlayerMobile)m).Young;
+            if (m is PlayerMobile playerMobile)
+                return playerMobile.Young;
 
             return false;
         }
diff --git a/Scripts/Services/Help/PageQueue.cs b/Scripts/Services/Help/PageQueue.cs
index 6dda6ea86..f3dab9444 100644
--- a/Scripts/Services/Help/PageQueue.cs
+++ b/Scripts/Services/Help/PageQueue.cs
@@ -92,10 +92,7 @@ namespace Server.Engines.Help
 
         public void Stop()
         {
-            if (m_Timer != null)
-            {
-                m_Timer.Stop();
-            }
+            m_Timer?.Stop();
 
             m_Timer = null;
         }
@@ -110,7 +107,7 @@ namespace Server.Engines.Help
             m_PageMap = sender.Map;
 
             PlayerMobile pm = sender as PlayerMobile;
-            if (pm != null && pm.SpeechLog != null && Array.IndexOf(SpeechLogAttachment, type) >= 0)
+            if (pm?.SpeechLog != null && Array.IndexOf(SpeechLogAttachment, type) >= 0)
             {
                 m_SpeechLog = new List<SpeechLogEntry>(pm.SpeechLog);
             }
diff --git a/Scripts/Services/Help/PageQueueGump.cs b/Scripts/Services/Help/PageQueueGump.cs
index 8b0c75e48..cbee730e3 100644
--- a/Scripts/Services/Help/PageQueueGump.cs
+++ b/Scripts/Services/Help/PageQueueGump.cs
@@ -25,7 +25,7 @@ namespace Server.Engines.Help
 
             AddBackground(0, 0, 92, 75, 0xA3C);
 
-            if (mobile != null && mobile.NetState != null && mobile.NetState.IsEnhancedClient)
+            if (mobile?.NetState != null && mobile.NetState.IsEnhancedClient)
                 AddBackground(5, 7, 82, 61, 9300);
             else
             {
@@ -55,7 +55,7 @@ namespace Server.Engines.Help
         {
             Add(new GumpPage(0));
 
-            if (m != null && m.NetState != null && m.NetState.IsEnhancedClient)
+            if (m?.NetState != null && m.NetState.IsEnhancedClient)
                 AddBackground(1, 1, 408, 446, 9300);
             else
             {
@@ -102,7 +102,7 @@ namespace Server.Engines.Help
 
                     string typeString = PageQueue.GetPageTypeName(e.Type);
 
-                    string html = string.Format("[{0}] {1} <basefont color=#{2:X6}>[<u>{3}</u>]</basefont>", typeString, e.Message, e.Handler == null ? 0xFF0000 : 0xFF, e.Handler == null ? "Unhandled" : "Handling");
+                    string html = $"[{typeString}] {e.Message} <basefont color=#{(e.Handler == null ? 0xFF0000 : 0xFF):X6}>[<u>{(e.Handler == null ? "Unhandled" : "Handling")}</u>]</basefont>";
 
                     Add(new GumpHtml(12, 44 + ((i % 5) * 80), 350, 70, html, true, true));
                     AddButton(370, 44 + ((i % 5) * 80) + 24, 0xFA5, 0xFA7, i + 1, GumpButtonType.Reply, 0);
@@ -279,7 +279,7 @@ namespace Server.Engines.Help
 
             if (response == null)
             {
-                if (from != null && from.NetState != null && from.NetState.IsEnhancedClient)
+                if (from?.NetState != null && from.NetState.IsEnhancedClient)
                     AddBackground(1, 1, 408, 446, 9300);
                 else
                 {
@@ -308,7 +308,7 @@ namespace Server.Engines.Help
 
                     PredefinedResponse resp = (PredefinedResponse)list[i];
 
-                    string html = string.Format("<u>{0}</u><br>{1}", resp.Title, resp.Message);
+                    string html = $"<u>{resp.Title}</u><br>{resp.Message}";
 
                     AddHtml(12, 44 + ((i % 5) * 80), 350, 70, html, true, true);
 
@@ -369,12 +369,12 @@ namespace Server.Engines.Help
 
         public string Center(string text)
         {
-            return string.Format("<CENTER>{0}</CENTER>", text);
+            return $"<CENTER>{text}</CENTER>";
         }
 
         public string Color(string text, int color)
         {
-            return string.Format("<BASEFONT COLOR=#{0:X6}>{1}</BASEFONT>", color, text);
+            return $"<BASEFONT COLOR=#{color:X6}>{text}</BASEFONT>";
         }
 
         public void AddTextInput(int x, int y, int w, int h, int id, string def)
@@ -529,7 +529,7 @@ namespace Server.Engines.Help
 
                 AddPage(0);
 
-                if (m != null && m.NetState != null && m.NetState.IsEnhancedClient)
+                if (m?.NetState != null && m.NetState.IsEnhancedClient)
                     AddBackground(1, 1, 408, 454, 9300);
                 else
                 {
@@ -543,7 +543,7 @@ namespace Server.Engines.Help
                 AddLabelCropped(128, 18, 264, 20, 2100, entry.Sent.ToString());
 
                 AddLabel(18, 38, 2100, "Sender:");
-                AddLabelCropped(128, 38, 264, 20, 2100, string.Format("{0} {1} [{2}]", entry.Sender.RawName, entry.Sender.Location, entry.Sender.Map));
+                AddLabelCropped(128, 38, 264, 20, 2100, $"{entry.Sender.RawName} {entry.Sender.Location} [{entry.Sender.Map}]");
 
                 AddButton(18, bottom - (buttons * 22), 0xFAB, 0xFAD, 8, GumpButtonType.Reply, 0);
                 AddImageTiled(52, bottom - (buttons * 22) + 1, 340, 80, 0xA40/*0xBBC*//*0x2458*/);
@@ -591,7 +591,7 @@ namespace Server.Engines.Help
                 }
 
                 AddLabel(18, 78, 2100, "Page Location:");
-                AddLabelCropped(128, 78, 264, 20, 2100, string.Format("{0} [{1}]", entry.PageLocation, entry.PageMap));
+                AddLabelCropped(128, 78, 264, 20, 2100, $"{entry.PageLocation} [{entry.PageMap}]");
 
                 AddButton(18, bottom - (buttons * 22), 0xFA5, 0xFA7, 3, GumpButtonType.Reply, 0);
                 AddLabel(52, bottom - (buttons++ * 22), 2100, "Go to Page Location");
diff --git a/Scripts/Services/Help/PageResponseGump.cs b/Scripts/Services/Help/PageResponseGump.cs
index 146f0cf02..6e69a29e2 100644
--- a/Scripts/Services/Help/PageResponseGump.cs
+++ b/Scripts/Services/Help/PageResponseGump.cs
@@ -21,7 +21,7 @@ namespace Server.Engines.Help
 
             AddHtmlLocalized(150, 40, 360, 40, 1062610, false, false); // <CENTER><U>Ultima Online Help Response</U></CENTER>
 
-            AddHtml(80, 90, 480, 290, string.Format("{0} tells {1}: {2}", name, from.Name, text), true, true);
+            AddHtml(80, 90, 480, 290, $"{name} tells {from.Name}: {text}", true, true);
 
             AddHtmlLocalized(80, 390, 480, 40, 1062611, false, false); // Clicking the OKAY button will remove the reponse you have received.
             AddButton(400, 417, 2074, 2075, 1, GumpButtonType.Reply, 0); // OKAY
diff --git a/Scripts/Services/Help/SpeechLogGump.cs b/Scripts/Services/Help/SpeechLogGump.cs
index 24ba39446..b7daebf62 100644
--- a/Scripts/Services/Help/SpeechLogGump.cs
+++ b/Scripts/Services/Help/SpeechLogGump.cs
@@ -36,7 +36,7 @@ namespace Server.Engines.Help
             string playerName = player.Name;
             string playerAccount = player.Account is Account ? player.Account.Username : "???";
 
-            AddHtml(10, 10, 280, 20, string.Format("<basefont color=#A0A0FF><center>SPEECH LOG - {0} (<i>{1}</i>)</center></basefont>", playerName, Utility.FixHtml(playerAccount)), false, false);
+            AddHtml(10, 10, 280, 20, $"<basefont color=#A0A0FF><center>SPEECH LOG - {playerName} (<i>{Utility.FixHtml(playerAccount)}</i>)</center></basefont>", false, false);
 
             int lastPage = (log.Count - 1) / MaxEntriesPerPage;
 
@@ -77,7 +77,7 @@ namespace Server.Engines.Help
             if (page > 0)
                 AddButton(10, 395, 0xFAE, 0xFB0, 1, GumpButtonType.Reply, 0); // Previous page
 
-            AddLabel(45, 395, 0x481, string.Format("Current page: {0}/{1}", page + 1, lastPage + 1));
+            AddLabel(45, 395, 0x481, $"Current page: {page + 1}/{lastPage + 1}");
 
             if (page < lastPage)
                 AddButton(261, 395, 0xFA5, 0xFA7, 2, GumpButtonType.Reply, 0); // Next page
diff --git a/Scripts/Services/HuntmasterChallenge/BestKillBoard.cs b/Scripts/Services/HuntmasterChallenge/BestKillBoard.cs
index 1d923b229..73d71c901 100644
--- a/Scripts/Services/HuntmasterChallenge/BestKillBoard.cs
+++ b/Scripts/Services/HuntmasterChallenge/BestKillBoard.cs
@@ -94,7 +94,7 @@ namespace Server.Items
                     y += 20;
                 }
 
-                AddHtml(0, 365, 500, 16, string.Format("<Center>{0}</Center>", GetHuntTypeString()), false, false);
+                AddHtml(0, 365, 500, 16, $"<Center>{GetHuntTypeString()}</Center>", false, false);
 
                 AddButton(150, 365, 4014, 4016, 1, GumpButtonType.Reply, 0);
                 AddButton(328, 365, 4005, 4007, 2, GumpButtonType.Reply, 0);
@@ -104,7 +104,7 @@ namespace Server.Items
             {
                 int hue = 080000 + (100000 * index);
 
-                return string.Format("<BaseFont Color=#{0}>{1}</basefont>", hue.ToString(), str);
+                return $"<BaseFont Color=#{hue.ToString()}>{str}</basefont>";
             }
 
             public override void OnResponse(Network.NetState state, RelayInfo info)
diff --git a/Scripts/Services/HuntmasterChallenge/ComplexHuntTrophy.cs b/Scripts/Services/HuntmasterChallenge/ComplexHuntTrophy.cs
index c9d31d47d..5696dc4c2 100644
--- a/Scripts/Services/HuntmasterChallenge/ComplexHuntTrophy.cs
+++ b/Scripts/Services/HuntmasterChallenge/ComplexHuntTrophy.cs
@@ -157,9 +157,7 @@ namespace Server.Items
             {
                 base.GetProperties(list);
 
-                HuntTrophyAddon addon = Addon as HuntTrophyAddon;
-
-                if (addon != null)
+                if (Addon is HuntTrophyAddon addon)
                 {
                     list.Add(1155708, addon.Owner != null ? addon.Owner : "Unknown"); // Hunter: ~1_NAME~
                     list.Add(1155709, addon.DateKilled); // Date of Kill: ~1_DATE~
diff --git a/Scripts/Services/HuntmasterChallenge/HuntTrophy.cs b/Scripts/Services/HuntmasterChallenge/HuntTrophy.cs
index 8f88a4a5c..e5d189bee 100644
--- a/Scripts/Services/HuntmasterChallenge/HuntTrophy.cs
+++ b/Scripts/Services/HuntmasterChallenge/HuntTrophy.cs
@@ -374,9 +374,9 @@ namespace Server.Items
         {
             HuntTrophy trophy = new HuntTrophy(m_Owner, Index, m_Measurement, m_DateKilled, m_Location);
 
-            if (Parent is Container)
+            if (Parent is Container container)
             {
-                ((Container)Parent).DropItem(trophy);
+                container.DropItem(trophy);
             }
             else
             {
diff --git a/Scripts/Services/HuntmasterChallenge/HuntingPermit.cs b/Scripts/Services/HuntmasterChallenge/HuntingPermit.cs
index 283f46e82..96052941b 100644
--- a/Scripts/Services/HuntmasterChallenge/HuntingPermit.cs
+++ b/Scripts/Services/HuntmasterChallenge/HuntingPermit.cs
@@ -166,9 +166,7 @@ namespace Server.Items
 
             private bool IsOnlyAttacker(Mobile from, Mobile creature)
             {
-                BaseCreature bc = creature as BaseCreature;
-
-                if (bc != null)
+                if (creature is BaseCreature bc)
                 {
                     List<DamageStore> rights = bc.GetLootingRights();
 
diff --git a/Scripts/Services/HuntmasterChallenge/HuntingSystem.cs b/Scripts/Services/HuntmasterChallenge/HuntingSystem.cs
index 346072181..ae631b0f8 100644
--- a/Scripts/Services/HuntmasterChallenge/HuntingSystem.cs
+++ b/Scripts/Services/HuntmasterChallenge/HuntingSystem.cs
@@ -215,13 +215,13 @@ namespace Server.Engines.HuntsmasterChallenge
 
                     CheckKill(info.HuntType, permit.KillEntry);
 
-                    if (from is PlayerMobile)
+                    if (from is PlayerMobile playerMobile)
                     {
-                        BaseQuest quest = QuestHelper.GetQuest((PlayerMobile)from, typeof(HuntmastersChallengeQuest));
+                        BaseQuest quest = QuestHelper.GetQuest(playerMobile, typeof(HuntmastersChallengeQuest));
 
-                        if (quest != null && quest is HuntmastersChallengeQuest)
+                        if (quest is HuntmastersChallengeQuest huntmastersChallengeQuest)
                         {
-                            ((HuntmastersChallengeQuest)quest).CompleteChallenge();
+                            huntmastersChallengeQuest.CompleteChallenge();
                         }
                     }
                 }
diff --git a/Scripts/Services/HuntmasterChallenge/ResourceSatchels.cs b/Scripts/Services/HuntmasterChallenge/ResourceSatchels.cs
index 2cb71faa2..d1e217555 100644
--- a/Scripts/Services/HuntmasterChallenge/ResourceSatchels.cs
+++ b/Scripts/Services/HuntmasterChallenge/ResourceSatchels.cs
@@ -67,10 +67,8 @@ namespace Server.Items
 
         public void InvalidateWeight()
         {
-            if (RootParent is Mobile)
+            if (RootParent is Mobile m)
             {
-                Mobile m = (Mobile)RootParent;
-
                 m.UpdateTotals();
             }
         }
diff --git a/Scripts/Services/InstancedPeerless/InstanceRegion.cs b/Scripts/Services/InstancedPeerless/InstanceRegion.cs
index e49a071d9..103beaf73 100644
--- a/Scripts/Services/InstancedPeerless/InstanceRegion.cs
+++ b/Scripts/Services/InstancedPeerless/InstanceRegion.cs
@@ -43,9 +43,7 @@ namespace Server.Engines.InstancedPeerless
         {
             Mobile from = e.Mobile;
 
-            InstanceRegion region = from.Region as InstanceRegion;
-
-            if (region != null)
+            if (from.Region is InstanceRegion region)
                 region.Owner.Kick(from);
         }
 
diff --git a/Scripts/Services/InstancedPeerless/PeerlessPlatform.cs b/Scripts/Services/InstancedPeerless/PeerlessPlatform.cs
index a916b01f1..ee28f2403 100644
--- a/Scripts/Services/InstancedPeerless/PeerlessPlatform.cs
+++ b/Scripts/Services/InstancedPeerless/PeerlessPlatform.cs
@@ -137,9 +137,8 @@ namespace Server.Engines.InstancedPeerless
         private List<Mobile> GetParty(Mobile from)
         {
             List<Mobile> list = new List<Mobile>();
-            Party p = from.Party as Party;
 
-            if (p != null)
+            if (from.Party is Party p)
             {
                 foreach (PartyMemberInfo pmInfo in p.Members)
                     list.Add(pmInfo.Mobile);
diff --git a/Scripts/Services/LootGeneration/Imbuing/Core/Imbuing.cs b/Scripts/Services/LootGeneration/Imbuing/Core/Imbuing.cs
index 01a8dd7dd..386586979 100644
--- a/Scripts/Services/LootGeneration/Imbuing/Core/Imbuing.cs
+++ b/Scripts/Services/LootGeneration/Imbuing/Core/Imbuing.cs
@@ -278,9 +278,7 @@ namespace Server.SkillHandlers
 
         public static int GetQualityBonus(Item item)
         {
-            IQuality quality = item as IQuality;
-
-            if (quality != null)
+            if (item is IQuality quality)
             {
                 if (quality.Quality == ItemQuality.Exceptional)
                     return 20;
@@ -859,9 +857,7 @@ namespace Server.SkillHandlers
         {
             int maxWeight = 450;
 
-            IQuality quality = item as IQuality;
-
-            if (quality != null && quality.Quality == ItemQuality.Exceptional)
+            if (item is IQuality quality && quality.Quality == ItemQuality.Exceptional)
                 maxWeight += 50;
 
             if (item is BaseWeapon)
@@ -956,7 +952,7 @@ namespace Server.SkillHandlers
             {
                 int ids = GetTotalMods((Item)targeted);
 
-                ((Item)targeted).LabelTo(from, string.Format("Total Mods: {0}", ids.ToString()));
+                ((Item)targeted).LabelTo(from, $"Total Mods: {ids.ToString()}");
             }
             else
                 from.SendMessage("That is not an item!");
@@ -1301,11 +1297,11 @@ namespace Server.SkillHandlers
             if (targeted is Item)
             {
                 int w = GetTotalWeight((Item)targeted, -1, false, true);
-                ((Item)targeted).LabelTo(from, string.Format("Imbuing Weight: {0}", w.ToString()));
+                ((Item)targeted).LabelTo(from, $"Imbuing Weight: {w.ToString()}");
                 w = GetTotalWeight((Item)targeted, -1, false, false);
-                ((Item)targeted).LabelTo(from, string.Format("Loot Weight: {0}", w.ToString()));
+                ((Item)targeted).LabelTo(from, $"Loot Weight: {w.ToString()}");
                 w = GetTotalWeight((Item)targeted, -1, true, true);
-                ((Item)targeted).LabelTo(from, string.Format("True Weight: {0}", w.ToString()));
+                ((Item)targeted).LabelTo(from, $"True Weight: {w.ToString()}");
             }
             else
                 from.SendMessage("That is not an item!");
diff --git a/Scripts/Services/LootGeneration/Imbuing/Gumps/ImbueGump.cs b/Scripts/Services/LootGeneration/Imbuing/Gumps/ImbueGump.cs
index 4f277132b..58a920aec 100644
--- a/Scripts/Services/LootGeneration/Imbuing/Gumps/ImbueGump.cs
+++ b/Scripts/Services/LootGeneration/Imbuing/Gumps/ImbueGump.cs
@@ -125,23 +125,23 @@ namespace Server.Gumps
 
             // Weight Modifier
             AddHtmlLocalized(25, 120, 200, 20, 1114272, 0xFFFFFF, false, false); // Weight:
-            AddLabel(95, 120, IceHue, string.Format("{0}x", (m_Info.Weight / 100.0).ToString("0.0")));
+            AddLabel(95, 120, IceHue, $"{(m_Info.Weight / 100.0).ToString("0.0")}x");
 
             AddHtmlLocalized(25, 140, 200, 20, 1114273, LabelColor, false, false); // Intensity:
-            AddLabel(95, 140, IceHue, string.Format("{0}%", currentIntensity));
+            AddLabel(95, 140, IceHue, $"{currentIntensity}%");
 
             // Materials needed
             AddHtmlLocalized(100, 200, 80, 20, 1044055, LabelColor, false, false); // <CENTER>MATERIALS</CENTER>
 
-            AddHtmlLocalized(40, 220, 390, 20, 1114057, string.Format("#{0}", m_Info.PrimaryName.Number), LabelColor, false, false);
+            AddHtmlLocalized(40, 220, 390, 20, 1114057, $"#{m_Info.PrimaryName.Number}", LabelColor, false, false);
             AddLabel(210, 220, IceHue, primResAmount.ToString());
 
-            AddHtmlLocalized(40, 240, 390, 20, 1114057, string.Format("#{0}", m_Info.GemName.Number), LabelColor, false, false);
+            AddHtmlLocalized(40, 240, 390, 20, 1114057, $"#{m_Info.GemName.Number}", LabelColor, false, false);
             AddLabel(210, 240, IceHue, gemAmount.ToString());
 
             if (specResAmount > 0)
             {
-                AddHtmlLocalized(40, 260, 390, 20, 1114057, string.Format("#{0}", ItemPropertyInfo.GetSpecialResName(m_Item, m_Info).Number), LabelColor, false, false);
+                AddHtmlLocalized(40, 260, 390, 20, 1114057, $"#{ItemPropertyInfo.GetSpecialResName(m_Item, m_Info).Number}", LabelColor, false, false);
                 AddLabel(210, 260, IceHue, specResAmount.ToString());
             }
 
@@ -151,14 +151,14 @@ namespace Server.Gumps
             AddHtmlLocalized(350, 200, 65, 20, 1113650, LabelColor, false, false); // RESULTS
 
             AddHtmlLocalized(280, 220, 140, 20, 1113645, LabelColor, false, false); // Properties:
-            AddLabel(430, 220, GetColor(m_TotalProps + 1, 5), string.Format("{0}/{1}", m_TotalProps + 1, Imbuing.GetMaxProps(m_Item)));
+            AddLabel(430, 220, GetColor(m_TotalProps + 1, 5), $"{m_TotalProps + 1}/{Imbuing.GetMaxProps(m_Item)}");
 
             int projWeight = m_TotalItemWeight + propWeight;
             AddHtmlLocalized(280, 240, 260, 20, 1113646, LabelColor, false, false); // Total Property Weight:
-            AddLabel(430, 240, GetColor(projWeight, m_MaxWeight), string.Format("{0}/{1}", projWeight, m_MaxWeight));
+            AddLabel(430, 240, GetColor(projWeight, m_MaxWeight), $"{projWeight}/{m_MaxWeight}");
 
             AddHtmlLocalized(280, 260, 200, 20, 1113647, LabelColor, false, false); // Times Imbued:
-            AddLabel(430, 260, GetColor(timesImbued, 20), string.Format("{0}/20", timesImbued));
+            AddLabel(430, 260, GetColor(timesImbued, 20), $"{timesImbued}/20");
 
             // ===== CALCULATE DIFFICULTY =====
             int truePropWeight = (int)((propWeight / (double)weight) * 100);
@@ -167,7 +167,7 @@ namespace Server.Gumps
             double suc = Imbuing.GetSuccessChance(User, m_Item, trueTotalWeight, truePropWeight, bonus);
 
             AddHtmlLocalized(300, 300, 250, 20, 1044057, 0xFFFFFF, false, false); // Success Chance:
-            AddLabel(420, 300, GetSuccessChanceHue(suc), string.Format("{0}%", suc.ToString("0.0")));
+            AddLabel(420, 300, GetSuccessChanceHue(suc), $"{suc.ToString("0.0")}%");
 
             // - Attribute Level
             if (maxInt > 1)
@@ -176,15 +176,15 @@ namespace Server.Gumps
 
                 if (m_ID == 41) // - Mage Weapon Value ( i.e [Mage Weapon -25] )
                 {
-                    AddLabel(250, 370, IceHue, string.Format("-{0}", 30 - m_Value));
+                    AddLabel(250, 370, IceHue, $"-{30 - m_Value}");
                 }
                 else if (m_ID > 150 && m_ID < 184) // Skill Property
                 {
-                    AddLabel(m_Value > 9 ? 252 : 256, 370, IceHue, string.Format("+{0}", m_Value));
+                    AddLabel(m_Value > 9 ? 252 : 256, 370, IceHue, $"+{m_Value}");
                 }
                 else if (maxInt <= 8 || m_ID == 21 || m_ID == 17) // - Show Property Value as just Number ( i.e [Mana Regen 2] )
                 {
-                    AddLabel(m_Value > 9 ? 252 : 256, 370, IceHue, string.Format("{0}", m_Value)); // - Show Property Value as % ( i.e [Hit Fireball 25%] )
+                    AddLabel(m_Value > 9 ? 252 : 256, 370, IceHue, $"{m_Value}"); // - Show Property Value as % ( i.e [Hit Fireball 25%] )
                 }
                 else
                 {
@@ -204,7 +204,7 @@ namespace Server.Gumps
                         }
                     }
 
-                    AddLabel(val > 9 ? 252 : 256, 370, IceHue, string.Format("{0}%", val));
+                    AddLabel(val > 9 ? 252 : 256, 370, IceHue, $"{val}%");
                 }
 
                 // Buttons
diff --git a/Scripts/Services/LootGeneration/Imbuing/Gumps/ImbuingGump.cs b/Scripts/Services/LootGeneration/Imbuing/Gumps/ImbuingGump.cs
index 977dfe6c9..47f15bb5c 100644
--- a/Scripts/Services/LootGeneration/Imbuing/Gumps/ImbuingGump.cs
+++ b/Scripts/Services/LootGeneration/Imbuing/Gumps/ImbuingGump.cs
@@ -267,14 +267,14 @@ namespace Server.Gumps
                     m.SendLocalizedMessage(1111814, "0\t0"); // Unraveled: ~1_COUNT~/~2_NUM~ items
                     m.EndAction(typeof(Imbuing));
                 }
-                else if (m is PlayerMobile)
+                else if (m is PlayerMobile playerMobile)
                 {
                     bool unraveled = cont.Items.FirstOrDefault(x => Imbuing.CanUnravelItem(m, x, false)) != null;
 
                     if (unraveled)
                     {
                         m.BeginAction(typeof(Imbuing));
-                        SendGump(new UnravelContainerGump((PlayerMobile)m, cont));
+                        SendGump(new UnravelContainerGump(playerMobile, cont));
                     }
                     else
                     {
@@ -296,7 +296,7 @@ namespace Server.Gumps
                     Imbuing.CanUnravelItem(User, y, true);
                 });
 
-                User.SendLocalizedMessage(1111814, string.Format("{0}\t{1}", 0, c.Items.Count)); // Unraveled: ~1_COUNT~/~2_NUM~ items
+                User.SendLocalizedMessage(1111814, $"{0}\t{c.Items.Count}"); // Unraveled: ~1_COUNT~/~2_NUM~ items
             }
 
             private class UnravelContainerGump : BaseGump
@@ -360,7 +360,7 @@ namespace Server.Gumps
                         User.SendLocalizedMessage(1072223); // An item has been placed in your backpack.
                     }
 
-                    User.SendLocalizedMessage(1111814, string.Format("{0}\t{1}", count, m_List.Count));
+                    User.SendLocalizedMessage(1111814, $"{count}\t{m_List.Count}");
 
                     ColUtility.Free(m_List);
                 }
diff --git a/Scripts/Services/LootGeneration/Imbuing/ResourceDrops.cs b/Scripts/Services/LootGeneration/Imbuing/ResourceDrops.cs
index 94383a6b5..2f8cf132a 100644
--- a/Scripts/Services/LootGeneration/Imbuing/ResourceDrops.cs
+++ b/Scripts/Services/LootGeneration/Imbuing/ResourceDrops.cs
@@ -152,10 +152,9 @@ namespace Server.Items
 
         public static void OnCreatureDeath(CreatureDeathEventArgs e)
         {
-            BaseCreature bc = e.Creature as BaseCreature;
             Container c = e.Corpse;
 
-            if (bc != null && c != null && !c.Deleted && !bc.Controlled && !bc.Summoned)
+            if (e.Creature is BaseCreature bc && c != null && !c.Deleted && !bc.Controlled && !bc.Summoned)
             {
                 CheckDrop(bc, c);
             }
@@ -204,9 +203,9 @@ namespace Server.Items
                     double toBeat = entry.Chance;
                     List<Item> drops = new List<Item>();
 
-                    if (bc is BaseVoidCreature)
+                    if (bc is BaseVoidCreature baseVoidCreature)
                     {
-                        toBeat *= ((BaseVoidCreature)bc).Stage + 1;
+                        toBeat *= baseVoidCreature.Stage + 1;
                     }
 
                     if (entry.DropMultiples)
diff --git a/Scripts/Services/LootGeneration/ItemPropertiesGump.cs b/Scripts/Services/LootGeneration/ItemPropertiesGump.cs
index ec0b1cdcb..b786065cf 100644
--- a/Scripts/Services/LootGeneration/ItemPropertiesGump.cs
+++ b/Scripts/Services/LootGeneration/ItemPropertiesGump.cs
@@ -45,11 +45,11 @@ namespace Server.Gumps
             AddBackground(0, 0, 900, 600, 0x2454);
             AddPage(0);
 
-            AddHtml(0, 5, 900, 20, string.Format("Item Properties: {0}", Filter.ToString()), false, false);
+            AddHtml(0, 5, 900, 20, $"Item Properties: {Filter.ToString()}", false, false);
             AddHtml(275, 15, 625, 20, Center("Item Description: (Imbuing/Runic Cap) - (Loot Cap) [Scale]"), false, false);
 
             AddButton(5, 550, 4005, 4007, 1, GumpButtonType.Reply, 0);
-            AddHtml(40, 550, 200, 20, string.Format("Filter: {0}", Filter.ToString()), false, false);
+            AddHtml(40, 550, 200, 20, $"Filter: {Filter.ToString()}", false, false);
 
             //
             AddButton(105, 575, TypeFilter == ItemType.Melee ? 4006 : 4005, 4007, 2, GumpButtonType.Reply, 0);
@@ -129,7 +129,7 @@ namespace Server.Gumps
 
             if (typeInfo != null)
             {
-                AddLabel(x, y, TypeFilter == type ? 0x9E : 0, string.Format("{0}-{1}[{2}]", typeInfo.StandardMax, typeInfo.LootMax, typeInfo.Scale > 1 ? typeInfo.Scale.ToString() : scale.ToString()));
+                AddLabel(x, y, TypeFilter == type ? 0x9E : 0, $"{typeInfo.StandardMax}-{typeInfo.LootMax}[{(typeInfo.Scale > 1 ? typeInfo.Scale.ToString() : scale.ToString())}]");
             }
             else
             {
@@ -345,11 +345,11 @@ namespace Server.Gumps
 
                             if (j == typeInfo.PowerfulLootRange.Length - 1)
                             {
-                                str += string.Format(" {0}", v.ToString());
+                                str += $" {v.ToString()}";
                             }
                             else
                             {
-                                str += string.Format(" {0},", v.ToString());
+                                str += $" {v.ToString()},";
                             }
                         }
 
diff --git a/Scripts/Services/LootGeneration/ItemPropertyInfo.cs b/Scripts/Services/LootGeneration/ItemPropertyInfo.cs
index 2f6991570..616f8ea18 100644
--- a/Scripts/Services/LootGeneration/ItemPropertyInfo.cs
+++ b/Scripts/Services/LootGeneration/ItemPropertyInfo.cs
@@ -160,7 +160,7 @@ namespace Server.Items
                     }
                     else
                     {
-                        throw new ArgumentException(string.Format("Property Category {0} already exists for {1}!", cat.ItemType.ToString(), attribute.ToString()));
+                        throw new ArgumentException($"Property Category {cat.ItemType.ToString()} already exists for {attribute.ToString()}!");
                     }
                 }
             }
@@ -613,7 +613,7 @@ namespace Server.Items
         {
             if (Table.ContainsKey(id))
             {
-                throw new ArgumentException(string.Format("ID Already Exists: {0}", id));
+                throw new ArgumentException($"ID Already Exists: {id}");
             }
             else
             {
@@ -788,7 +788,7 @@ namespace Server.Items
             {
                 PropInfo info = Table[id].GetItemTypeInfo(GetItemType(item));
 
-                if (info != null && info.PowerfulLootRange != null && info.PowerfulLootRange.Length > 0)
+                if (info?.PowerfulLootRange != null && info.PowerfulLootRange.Length > 0)
                 {
                     return info.PowerfulLootRange;
                 }
@@ -938,35 +938,35 @@ namespace Server.Items
         {
             int id = -1;
 
-            if (attr is AosAttribute)
-                id = GetIDForAttribute((AosAttribute)attr);
+            if (attr is AosAttribute aosAttribute)
+                id = GetIDForAttribute(aosAttribute);
 
-            else if (attr is AosWeaponAttribute)
-                id = GetIDForAttribute((AosWeaponAttribute)attr);
+            else if (attr is AosWeaponAttribute aosWeaponAttribute)
+                id = GetIDForAttribute(aosWeaponAttribute);
 
-            else if (attr is ExtendedWeaponAttribute)
-                id = GetIDForAttribute((ExtendedWeaponAttribute)attr);
+            else if (attr is ExtendedWeaponAttribute extendedWeaponAttribute)
+                id = GetIDForAttribute(extendedWeaponAttribute);
 
-            else if (attr is SkillName)
-                id = GetIDForAttribute((SkillName)attr);
+            else if (attr is SkillName skillName)
+                id = GetIDForAttribute(skillName);
 
-            else if (attr is SlayerName)
-                id = GetIDForAttribute((SlayerName)attr);
+            else if (attr is SlayerName slayerName)
+                id = GetIDForAttribute(slayerName);
 
-            else if (attr is SAAbsorptionAttribute)
-                id = GetIDForAttribute((SAAbsorptionAttribute)attr);
+            else if (attr is SAAbsorptionAttribute sAAbsorptionAttribute)
+                id = GetIDForAttribute(sAAbsorptionAttribute);
 
-            else if (attr is AosArmorAttribute)
-                id = GetIDForAttribute((AosArmorAttribute)attr);
+            else if (attr is AosArmorAttribute aosArmorAttribute)
+                id = GetIDForAttribute(aosArmorAttribute);
 
-            else if (attr is AosElementAttribute)
-                id = GetIDForAttribute((AosElementAttribute)attr);
+            else if (attr is AosElementAttribute aosElementAttribute)
+                id = GetIDForAttribute(aosElementAttribute);
 
-            else if (attr is TalismanSlayerName)
-                id = GetIDForAttribute((TalismanSlayerName)attr);
+            else if (attr is TalismanSlayerName talismanSlayerName)
+                id = GetIDForAttribute(talismanSlayerName);
 
-            else if (attr is string)
-                id = GetIDForAttribute((string)attr);
+            else if (attr is string s)
+                id = GetIDForAttribute(s);
 
             return id;
         }
diff --git a/Scripts/Services/LootGeneration/RunicReforging/Gumps.cs b/Scripts/Services/LootGeneration/RunicReforging/Gumps.cs
index 792bc8fb5..fd52c1fd6 100644
--- a/Scripts/Services/LootGeneration/RunicReforging/Gumps.cs
+++ b/Scripts/Services/LootGeneration/RunicReforging/Gumps.cs
@@ -472,11 +472,11 @@ namespace Server.Gumps
 
             int durability = 0;
 
-            if (item is BaseWeapon)
-                attr = ((BaseWeapon)item).Attributes;
+            if (item is BaseWeapon baseWeapon)
+                attr = baseWeapon.Attributes;
 
-            else if (item is BaseArmor)
-                attr = ((BaseArmor)item).Attributes;
+            else if (item is BaseArmor baseArmor)
+                attr = baseArmor.Attributes;
 
             if (attr != null && (m_Options & ReforgingOption.Structural) != 0)
             {
diff --git a/Scripts/Services/LootGeneration/RunicReforging/RunicReforging.cs b/Scripts/Services/LootGeneration/RunicReforging/RunicReforging.cs
index c77d66fe8..d5e3358be 100644
--- a/Scripts/Services/LootGeneration/RunicReforging/RunicReforging.cs
+++ b/Scripts/Services/LootGeneration/RunicReforging/RunicReforging.cs
@@ -826,13 +826,13 @@ namespace Server.Items
 
             if (!_Elements.ContainsKey(item))
             {
-                if (item is BaseArmor)
+                if (item is BaseArmor baseArmor)
                 {
-                    _Elements[item] = new int[] { ((BaseArmor)item).PhysicalBonus, ((BaseArmor)item).FireBonus, ((BaseArmor)item).ColdBonus, ((BaseArmor)item).PoisonBonus, ((BaseArmor)item).EnergyBonus };
+                    _Elements[item] = new int[] { baseArmor.PhysicalBonus, ((BaseArmor)item).FireBonus, ((BaseArmor)item).ColdBonus, ((BaseArmor)item).PoisonBonus, ((BaseArmor)item).EnergyBonus };
                 }
-                else if (item is BaseWeapon)
+                else if (item is BaseWeapon baseWeapon)
                 {
-                    _Elements[item] = new int[] { ((BaseWeapon)item).WeaponAttributes.ResistPhysicalBonus, ((BaseWeapon)item).WeaponAttributes.ResistFireBonus,
+                    _Elements[item] = new int[] { baseWeapon.WeaponAttributes.ResistPhysicalBonus, ((BaseWeapon)item).WeaponAttributes.ResistFireBonus,
                             ((BaseWeapon)item).WeaponAttributes.ResistColdBonus, ((BaseWeapon)item).WeaponAttributes.ResistPoisonBonus, ((BaseWeapon)item).WeaponAttributes.ResistEnergyBonus };
                 }
                 else if (resists != null)
@@ -1018,26 +1018,26 @@ namespace Server.Items
         {
             int id = -1;
 
-            if (attr is AosAttribute)
-                id = ItemPropertyInfo.GetIDForAttribute((AosAttribute)attr);
+            if (attr is AosAttribute aosAttribute)
+                id = ItemPropertyInfo.GetIDForAttribute(aosAttribute);
 
-            else if (attr is AosWeaponAttribute)
-                id = ItemPropertyInfo.GetIDForAttribute((AosWeaponAttribute)attr);
+            else if (attr is AosWeaponAttribute aosWeaponAttribute)
+                id = ItemPropertyInfo.GetIDForAttribute(aosWeaponAttribute);
 
-            else if (attr is SkillName)
-                id = ItemPropertyInfo.GetIDForAttribute((SkillName)attr);
+            else if (attr is SkillName skillName)
+                id = ItemPropertyInfo.GetIDForAttribute(skillName);
 
-            else if (attr is SlayerName)
-                id = ItemPropertyInfo.GetIDForAttribute((SlayerName)attr);
+            else if (attr is SlayerName slayerName)
+                id = ItemPropertyInfo.GetIDForAttribute(slayerName);
 
-            else if (attr is SAAbsorptionAttribute)
-                id = ItemPropertyInfo.GetIDForAttribute((SAAbsorptionAttribute)attr);
+            else if (attr is SAAbsorptionAttribute sAAbsorptionAttribute)
+                id = ItemPropertyInfo.GetIDForAttribute(sAAbsorptionAttribute);
 
-            else if (attr is AosArmorAttribute)
-                id = ItemPropertyInfo.GetIDForAttribute((AosArmorAttribute)attr);
+            else if (attr is AosArmorAttribute aosArmorAttribute)
+                id = ItemPropertyInfo.GetIDForAttribute(aosArmorAttribute);
 
-            else if (attr is AosElementAttribute)
-                id = ItemPropertyInfo.GetIDForAttribute((AosElementAttribute)attr);
+            else if (attr is AosElementAttribute aosElementAttribute)
+                id = ItemPropertyInfo.GetIDForAttribute(aosElementAttribute);
 
             if (ItemPropertyInfo.Table.ContainsKey(id))
                 return ItemPropertyInfo.Table[id];
@@ -1151,9 +1151,9 @@ namespace Server.Items
                 {
                     e.Mobile.BeginTarget(12, false, TargetFlags.None, (from, targeted) =>
                         {
-                            if (targeted is BaseCreature)
+                            if (targeted is BaseCreature baseCreature)
                             {
-                                ((BaseCreature)targeted).PrivateOverheadMessage(Network.MessageType.Regular, 0x25, false, GetDifficultyFor((BaseCreature)targeted).ToString(), e.Mobile.NetState);
+                                baseCreature.PrivateOverheadMessage(Network.MessageType.Regular, 0x25, false, GetDifficultyFor((BaseCreature)targeted).ToString(), e.Mobile.NetState);
                             }
                         });
                 });
@@ -1667,38 +1667,38 @@ namespace Server.Items
 
         public static void ApplyPrefixName(Item item, ReforgedPrefix prefix)
         {
-            if (item is BaseWeapon)
-                ((BaseWeapon)item).ReforgedPrefix = prefix;
+            if (item is BaseWeapon baseWeapon)
+                baseWeapon.ReforgedPrefix = prefix;
 
-            else if (item is BaseShield)
-                ((BaseShield)item).ReforgedPrefix = prefix;
+            else if (item is BaseShield baseShield)
+                baseShield.ReforgedPrefix = prefix;
 
-            else if (item is BaseArmor)
-                ((BaseArmor)item).ReforgedPrefix = prefix;
+            else if (item is BaseArmor baseArmor)
+                baseArmor.ReforgedPrefix = prefix;
 
-            else if (item is BaseJewel)
-                ((BaseJewel)item).ReforgedPrefix = prefix;
+            else if (item is BaseJewel baseJewel)
+                baseJewel.ReforgedPrefix = prefix;
 
-            else if (item is BaseClothing)
-                ((BaseClothing)item).ReforgedPrefix = prefix;
+            else if (item is BaseClothing baseClothing)
+                baseClothing.ReforgedPrefix = prefix;
         }
 
         public static void ApplySuffixName(Item item, ReforgedSuffix suffix)
         {
-            if (item is BaseWeapon)
-                ((BaseWeapon)item).ReforgedSuffix = suffix;
+            if (item is BaseWeapon baseWeapon)
+                baseWeapon.ReforgedSuffix = suffix;
 
-            else if (item is BaseShield)
-                ((BaseShield)item).ReforgedSuffix = suffix;
+            else if (item is BaseShield baseShield)
+                baseShield.ReforgedSuffix = suffix;
 
-            else if (item is BaseArmor)
-                ((BaseArmor)item).ReforgedSuffix = suffix;
+            else if (item is BaseArmor baseArmor)
+                baseArmor.ReforgedSuffix = suffix;
 
-            else if (item is BaseJewel)
-                ((BaseJewel)item).ReforgedSuffix = suffix;
+            else if (item is BaseJewel baseJewel)
+                baseJewel.ReforgedSuffix = suffix;
 
-            else if (item is BaseClothing)
-                ((BaseClothing)item).ReforgedSuffix = suffix;
+            else if (item is BaseClothing baseClothing)
+                baseClothing.ReforgedSuffix = suffix;
         }
 
         public static int GetPrefixName(ReforgedPrefix prefix)
@@ -1742,7 +1742,7 @@ namespace Server.Items
             }
             else
             {
-                list.Add(1151758, string.Format("{0}\t#{1}", name, GetSuffixName(suffix)));// ~1_ITEM~ of ~2_SUFFIX~
+                list.Add(1151758, $"{name}\t#{GetSuffixName(suffix)}");// ~1_ITEM~ of ~2_SUFFIX~
             }
         }
 
@@ -2531,9 +2531,9 @@ namespace Server.Items
         {
             ItemPower ip = GetItemPower(item, Imbuing.GetTotalWeight(item, -1, false, false), Imbuing.GetTotalMods(item), reforged);
 
-            if (item is ICombatEquipment)
+            if (item is ICombatEquipment iCombatEquipment)
             {
-                ((ICombatEquipment)item).ItemPower = ip;
+                iCombatEquipment.ItemPower = ip;
             }
 
             return ip;
@@ -2693,163 +2693,163 @@ namespace Server.Items
 
         public static AosAttributes GetAosAttributes(Item item)
         {
-            if (item is BaseWeapon)
-                return ((BaseWeapon)item).Attributes;
+            if (item is BaseWeapon baseWeapon)
+                return baseWeapon.Attributes;
 
-            if (item is BaseArmor)
-                return ((BaseArmor)item).Attributes;
+            if (item is BaseArmor baseArmor)
+                return baseArmor.Attributes;
 
-            if (item is BaseClothing)
-                return ((BaseClothing)item).Attributes;
+            if (item is BaseClothing baseClothing)
+                return baseClothing.Attributes;
 
-            if (item is BaseJewel)
-                return ((BaseJewel)item).Attributes;
+            if (item is BaseJewel baseJewel)
+                return baseJewel.Attributes;
 
-            if (item is BaseTalisman)
-                return ((BaseTalisman)item).Attributes;
+            if (item is BaseTalisman baseTalisman)
+                return baseTalisman.Attributes;
 
-            if (item is BaseQuiver)
-                return ((BaseQuiver)item).Attributes;
+            if (item is BaseQuiver baseQuiver)
+                return baseQuiver.Attributes;
 
-            if (item is Spellbook)
-                return ((Spellbook)item).Attributes;
+            if (item is Spellbook spellbook)
+                return spellbook.Attributes;
 
-            if (item is FishingPole)
-                return ((FishingPole)item).Attributes;
+            if (item is FishingPole fishingPole)
+                return fishingPole.Attributes;
 
             return null;
         }
 
         public static AosArmorAttributes GetAosArmorAttributes(Item item)
         {
-            if (item is BaseArmor)
-                return ((BaseArmor)item).ArmorAttributes;
+            if (item is BaseArmor baseArmor)
+                return baseArmor.ArmorAttributes;
 
-            if (item is BaseClothing)
-                return ((BaseClothing)item).ClothingAttributes;
+            if (item is BaseClothing baseClothing)
+                return baseClothing.ClothingAttributes;
 
             return null;
         }
 
         public static AosWeaponAttributes GetAosWeaponAttributes(Item item)
         {
-            if (item is BaseWeapon)
-                return ((BaseWeapon)item).WeaponAttributes;
+            if (item is BaseWeapon baseWeapon)
+                return baseWeapon.WeaponAttributes;
 
-            if (item is Glasses)
-                return ((Glasses)item).WeaponAttributes;
+            if (item is Glasses glasses)
+                return glasses.WeaponAttributes;
 
-            if (item is GargishGlasses)
-                return ((GargishGlasses)item).WeaponAttributes;
+            if (item is GargishGlasses gargishGlasses)
+                return gargishGlasses.WeaponAttributes;
 
-            if (item is ElvenGlasses)
-                return ((ElvenGlasses)item).WeaponAttributes;
+            if (item is ElvenGlasses elvenGlasses)
+                return elvenGlasses.WeaponAttributes;
 
-            if (item is BaseArmor)
-                return ((BaseArmor)item).WeaponAttributes;
+            if (item is BaseArmor baseArmor)
+                return baseArmor.WeaponAttributes;
 
-            if(item is BaseClothing)
-                return ((BaseClothing)item).WeaponAttributes;
+            if(item is BaseClothing baseClothing)
+                return baseClothing.WeaponAttributes;
 
             return null;
         }
 
         public static ExtendedWeaponAttributes GetExtendedWeaponAttributes(Item item)
         {
-            if (item is BaseWeapon)
-                return ((BaseWeapon)item).ExtendedWeaponAttributes;
+            if (item is BaseWeapon baseWeapon)
+                return baseWeapon.ExtendedWeaponAttributes;
 
             return null;
         }
 
         public static AosElementAttributes GetElementalAttributes(Item item)
         {
-            if (item is BaseClothing)
-                return ((BaseClothing)item).Resistances;
+            if (item is BaseClothing baseClothing)
+                return baseClothing.Resistances;
 
-            else if (item is BaseJewel)
-                return ((BaseJewel)item).Resistances;
+            else if (item is BaseJewel baseJewel)
+                return baseJewel.Resistances;
 
-            else if (item is BaseWeapon)
-                return ((BaseWeapon)item).AosElementDamages;
+            else if (item is BaseWeapon baseWeapon)
+                return baseWeapon.AosElementDamages;
 
-            else if (item is BaseQuiver)
-                return ((BaseQuiver)item).Resistances;
+            else if (item is BaseQuiver baseQuiver)
+                return baseQuiver.Resistances;
 
             return null;
         }
 
         public static SAAbsorptionAttributes GetSAAbsorptionAttributes(Item item)
         {
-            if (item is BaseArmor)
-                return ((BaseArmor)item).AbsorptionAttributes;
+            if (item is BaseArmor baseArmor)
+                return baseArmor.AbsorptionAttributes;
 
-            else if (item is BaseJewel)
-                return ((BaseJewel)item).AbsorptionAttributes;
+            else if (item is BaseJewel baseJewel)
+                return baseJewel.AbsorptionAttributes;
 
-            else if (item is BaseWeapon)
-                return ((BaseWeapon)item).AbsorptionAttributes;
+            else if (item is BaseWeapon baseWeapon)
+                return baseWeapon.AbsorptionAttributes;
 
-            else if (item is BaseClothing)
-                return ((BaseClothing)item).SAAbsorptionAttributes;
+            else if (item is BaseClothing baseClothing)
+                return baseClothing.SAAbsorptionAttributes;
 
             return null;
         }
 
         public static AosSkillBonuses GetAosSkillBonuses(Item item)
         {
-            if (item is BaseJewel)
-                return ((BaseJewel)item).SkillBonuses;
+            if (item is BaseJewel baseJewel)
+                return baseJewel.SkillBonuses;
 
-            else if (item is BaseWeapon)
-                return ((BaseWeapon)item).SkillBonuses;
+            else if (item is BaseWeapon baseWeapon)
+                return baseWeapon.SkillBonuses;
 
-            else if (item is BaseArmor)
-                return ((BaseArmor)item).SkillBonuses;
+            else if (item is BaseArmor baseArmor)
+                return baseArmor.SkillBonuses;
 
-            else if (item is BaseTalisman)
-                return ((BaseTalisman)item).SkillBonuses;
+            else if (item is BaseTalisman baseTalisman)
+                return baseTalisman.SkillBonuses;
 
-            else if (item is Spellbook)
-                return ((Spellbook)item).SkillBonuses;
+            else if (item is Spellbook spellbook)
+                return spellbook.SkillBonuses;
 
-            else if (item is BaseQuiver)
-                return ((BaseQuiver)item).SkillBonuses;
+            else if (item is BaseQuiver baseQuiver)
+                return baseQuiver.SkillBonuses;
 
-            else if (item is BaseClothing)
-                return ((BaseClothing)item).SkillBonuses;
+            else if (item is BaseClothing baseClothing)
+                return baseClothing.SkillBonuses;
 
             return null;
         }
 
         public static NegativeAttributes GetNegativeAttributes(Item item)
         {
-            if (item is BaseWeapon)
-                return ((BaseWeapon)item).NegativeAttributes;
+            if (item is BaseWeapon baseWeapon)
+                return baseWeapon.NegativeAttributes;
 
-            if (item is BaseArmor)
-                return ((BaseArmor)item).NegativeAttributes;
+            if (item is BaseArmor baseArmor)
+                return baseArmor.NegativeAttributes;
 
-            if (item is BaseClothing)
-                return ((BaseClothing)item).NegativeAttributes;
+            if (item is BaseClothing baseClothing)
+                return baseClothing.NegativeAttributes;
 
-            if (item is BaseJewel)
-                return ((BaseJewel)item).NegativeAttributes;
+            if (item is BaseJewel baseJewel)
+                return baseJewel.NegativeAttributes;
 
-            if (item is BaseTalisman)
-                return ((BaseTalisman)item).NegativeAttributes;
+            if (item is BaseTalisman baseTalisman)
+                return baseTalisman.NegativeAttributes;
 
-            if (item is Spellbook)
-                return ((Spellbook)item).NegativeAttributes;
+            if (item is Spellbook spellbook)
+                return spellbook.NegativeAttributes;
 
             return null;
         }
 
         public static int GetArtifactRarity(Item item)
         {
-            if (item is IArtifact)
+            if (item is IArtifact iArtifact)
             {
-                return ((IArtifact)item).ArtifactRarity;
+                return iArtifact.ArtifactRarity;
             }
 
             return 0;
@@ -3264,7 +3264,7 @@ namespace Server.Items
                 }
             }
 
-            SpawnerPersistence.ToConsole(string.Format("Removed Self Repair from {0} items.", fix));
+            SpawnerPersistence.ToConsole($"Removed Self Repair from {fix} items.");
         }
 
         public static void ItemNerfVersion6()
@@ -3325,7 +3325,7 @@ namespace Server.Items
                 }
             }
 
-            SpawnerPersistence.ToConsole(string.Format("Cleauned up {0} items: {1} fc2, {2} non-Armor eater, {3} non armor casting focus, {4} brittle jewels converted to Antique.", fc2 + eater + focus + brittle, fc2, eater, focus, brittle));
+            SpawnerPersistence.ToConsole($"Cleauned up {fc2 + eater + focus + brittle} items: {fc2} fc2, {eater} non-Armor eater, {focus} non armor casting focus, {brittle} brittle jewels converted to Antique.");
         }
         #endregion
     }
@@ -3346,7 +3346,7 @@ namespace Server.Items
             {
                 Item item = targeted as Item;
 
-                if (item is BaseRunicTool)
+                if (item is BaseRunicTool baseRunicTool)
                 {
                     if (item.IsChildOf(from.Backpack))
                     {
@@ -3354,7 +3354,7 @@ namespace Server.Items
                             from.SendLocalizedMessage(1010087); // You cannot use that!
                         else if (item.GetType() != m_Tool.GetType())
                             from.SendLocalizedMessage(1152274); // You may only combine runic tools of the same type.
-                        else if (((BaseRunicTool)item).Resource != m_Tool.Resource)
+                        else if (baseRunicTool.Resource != m_Tool.Resource)
                             from.SendLocalizedMessage(1152275); // You may only combine runic tools of the same material.
                         else if (m_Tool.UsesRemaining + ((BaseRunicTool)item).UsesRemaining > 100)
                             from.SendLocalizedMessage(1152276); // The combined charges of the two tools cannot exceed 100.
diff --git a/Scripts/Services/LoyaltySystem/LoyaltyRatingGump.cs b/Scripts/Services/LoyaltySystem/LoyaltyRatingGump.cs
index 40035efea..8cf027a78 100644
--- a/Scripts/Services/LoyaltySystem/LoyaltyRatingGump.cs
+++ b/Scripts/Services/LoyaltySystem/LoyaltyRatingGump.cs
@@ -57,9 +57,8 @@ namespace Server.Engines.Points
 
         public override void OnResponse(NetState state, RelayInfo info)
         {
-            PlayerMobile pm = state.Mobile as PlayerMobile;
 
-            if (CityLoyaltySystem.Enabled && CityLoyaltySystem.Cities != null && pm != null && info.ButtonID == 1)
+            if (CityLoyaltySystem.Enabled && CityLoyaltySystem.Cities != null && state.Mobile is PlayerMobile pm && info.ButtonID == 1)
                 BaseGump.SendGump(new CityLoyaltyGump(pm));
         }
     }
diff --git a/Scripts/Services/Malas/Sphynx/Generate.cs b/Scripts/Services/Malas/Sphynx/Generate.cs
index 1710c0000..0d090ec1a 100644
--- a/Scripts/Services/Malas/Sphynx/Generate.cs
+++ b/Scripts/Services/Malas/Sphynx/Generate.cs
@@ -35,10 +35,7 @@ namespace Server.Engines
                 item.MoveToWorld(new Point3D(1824, 1783, -110), Map.Malas);
             }
 
-            if (m != null)
-            {
-                m.SendMessage("Forgotten Pyramid generation complete.");
-            }
+            m?.SendMessage("Forgotten Pyramid generation complete.");
         }
     }
 }
diff --git a/Scripts/Services/MondainsLegacy.cs b/Scripts/Services/MondainsLegacy.cs
index e316a6fad..e2faec38f 100644
--- a/Scripts/Services/MondainsLegacy.cs
+++ b/Scripts/Services/MondainsLegacy.cs
@@ -341,10 +341,9 @@ namespace Server
 
         public static void OnKilledBy(OnKilledByEventArgs e)
         {
-            BaseCreature killed = e.Killed as BaseCreature;
             Mobile killer = e.KilledBy;
 
-            if (killed != null && killer != null && killer.Alive && killed.GivesMLMinorArtifact && CheckArtifactChance(killer, killed))
+            if (e.Killed is BaseCreature killed && killer != null && killer.Alive && killed.GivesMLMinorArtifact && CheckArtifactChance(killer, killed))
             {
                 GiveArtifactTo(killer);
             }
@@ -388,8 +387,8 @@ namespace Server
         {
             Item item = Activator.CreateInstance(m_Artifacts[Utility.Random(m_Artifacts.Length)]) as Item;
 
-            if (item is ICanBeElfOrHuman)
-                ((ICanBeElfOrHuman)item).ElfOnly = false;
+            if (item is ICanBeElfOrHuman iCanBeElfOrHuman)
+                iCanBeElfOrHuman.ElfOnly = false;
 
             peerlessCorpse.DropItem(item);
         }
@@ -645,8 +644,8 @@ namespace Server
 
             m.BeginTarget(-1, false, Targeting.TargetFlags.None, delegate (Mobile from, object targeted)
             {
-                if (targeted is PlayerMobile)
-                    m.SendGump(new MondainQuestGump((PlayerMobile)targeted));
+                if (targeted is PlayerMobile playerMobile)
+                    m.SendGump(new MondainQuestGump(playerMobile));
                 else
                     m.SendMessage("That is not a player!");
             });
diff --git a/Scripts/Services/MondainsLegacyQuests/ApprenticeRegion.cs b/Scripts/Services/MondainsLegacyQuests/ApprenticeRegion.cs
index 69b4b3893..2fe83727e 100644
--- a/Scripts/Services/MondainsLegacyQuests/ApprenticeRegion.cs
+++ b/Scripts/Services/MondainsLegacyQuests/ApprenticeRegion.cs
@@ -18,10 +18,8 @@ namespace Server.Regions
         {
             base.OnEnter(m);
 
-            if (m is PlayerMobile)
+            if (m is PlayerMobile player)
             {
-                PlayerMobile player = (PlayerMobile)m;
-
                 for (int i = 0; i < player.Quests.Count; i++)
                 {
                     BaseQuest quest = player.Quests[i];
@@ -55,10 +53,8 @@ namespace Server.Regions
         {
             base.OnExit(m);
 
-            if (m is PlayerMobile)
+            if (m is PlayerMobile player)
             {
-                PlayerMobile player = (PlayerMobile)m;
-
                 for (int i = 0; i < player.Quests.Count; i++)
                 {
                     BaseQuest quest = player.Quests[i];
diff --git a/Scripts/Services/MondainsLegacyQuests/BaseEscort.cs b/Scripts/Services/MondainsLegacyQuests/BaseEscort.cs
index 6cb3e62f6..2bc46449e 100644
--- a/Scripts/Services/MondainsLegacyQuests/BaseEscort.cs
+++ b/Scripts/Services/MondainsLegacyQuests/BaseEscort.cs
@@ -220,9 +220,8 @@ namespace Server.Engines.Quests
             {
                 for (int i = 0; i < Quest.Objectives.Count; i++)
                 {
-                    EscortObjective escort = Quest.Objectives[i] as EscortObjective;
 
-                    if (escort != null && !escort.Completed && !escort.Failed)
+                    if (Quest.Objectives[i] is EscortObjective escort && !escort.Completed && !escort.Failed)
                         return escort;
                 }
             }
@@ -326,9 +325,7 @@ namespace Server.Engines.Quests
                         // compassion
                         bool gainedPath = false;
 
-                        PlayerMobile pm = escorter as PlayerMobile;
-
-                        if (pm != null)
+                        if (escorter is PlayerMobile pm)
                         {
                             if (pm.CompassionGains > 0 && DateTime.UtcNow > pm.NextCompassionDay)
                             {
diff --git a/Scripts/Services/MondainsLegacyQuests/BaseQuest.cs b/Scripts/Services/MondainsLegacyQuests/BaseQuest.cs
index d2f15e0ad..48f9d580c 100644
--- a/Scripts/Services/MondainsLegacyQuests/BaseQuest.cs
+++ b/Scripts/Services/MondainsLegacyQuests/BaseQuest.cs
@@ -198,10 +198,8 @@ namespace Server.Engines.Quests
                 objective.OnAccept();
             }
 
-            if (m_Quester is BaseEscort)
+            if (m_Quester is BaseEscort escort)
             {
-                BaseEscort escort = (BaseEscort)m_Quester;
-
                 if (escort.SetControlMaster(m_Owner))
                 {
                     escort.Quest = this;
@@ -256,10 +254,8 @@ namespace Server.Engines.Quests
             }
 
             // delete escorter
-            if (m_Quester is BaseEscort)
+            if (m_Quester is BaseEscort escort)
             {
-                BaseEscort escort = (BaseEscort)m_Quester;
-
                 escort.Say(1005653); // Hmmm.  I seem to have lost my master.
                 escort.PlaySound(0x5B3);
                 escort.BeginDelete(m_Owner);
@@ -444,15 +440,15 @@ namespace Server.Engines.Quests
 
             if (m_Quester == null)
                 writer.Write(0x0);
-            else if (m_Quester is Mobile)
+            else if (m_Quester is Mobile mobile)
             {
                 writer.Write(0x1);
-                writer.Write((Mobile)m_Quester);
+                writer.Write(mobile);
             }
-            else if (m_Quester is Item)
+            else if (m_Quester is Item item)
             {
                 writer.Write(0x2);
-                writer.Write((Item)m_Quester);
+                writer.Write(item);
             }
 
             for (int i = 0; i < m_Objectives.Count; i++)
@@ -488,16 +484,12 @@ namespace Server.Engines.Quests
                     break;
             }
 
-            if (m_Quester is BaseEscort)
+            if (m_Quester is BaseEscort escort)
             {
-                BaseEscort escort = (BaseEscort)m_Quester;
-
                 escort.Quest = this;
             }
-            else if (m_Quester is BaseQuestItem)
+            else if (m_Quester is BaseQuestItem item)
             {
-                BaseQuestItem item = (BaseQuestItem)m_Quester;
-
                 item.Quest = this;
             }
 
diff --git a/Scripts/Services/MondainsLegacyQuests/BaseQuestItem.cs b/Scripts/Services/MondainsLegacyQuests/BaseQuestItem.cs
index 5459ebc4c..e25a496ea 100644
--- a/Scripts/Services/MondainsLegacyQuests/BaseQuestItem.cs
+++ b/Scripts/Services/MondainsLegacyQuests/BaseQuestItem.cs
@@ -74,7 +74,7 @@ namespace Server.Engines.Quests
             {
                 BaseChain chain = pair.Value;
 
-                if (chain != null && chain.Quester != null && chain.Quester.IsAssignableFrom(GetType()))
+                if (chain?.Quester != null && chain.Quester.IsAssignableFrom(GetType()))
                 {
                     BaseQuest quest = QuestHelper.RandomQuest(player, new Type[] { chain.CurrentQuest }, this);
 
@@ -156,10 +156,8 @@ namespace Server.Engines.Quests
             {
                 StopTimer();
 
-                if (Parent is Backpack)
+                if (Parent is Backpack pack)
                 {
-                    Backpack pack = (Backpack)Parent;
-
                     if (pack.Parent is PlayerMobile)
                         QuestHelper.RemoveStatus((PlayerMobile)pack.Parent, this);
                 }
diff --git a/Scripts/Services/MondainsLegacyQuests/Gumps/ConfirmHeritageGump.cs b/Scripts/Services/MondainsLegacyQuests/Gumps/ConfirmHeritageGump.cs
index 918fa2775..66005a4ac 100644
--- a/Scripts/Services/MondainsLegacyQuests/Gumps/ConfirmHeritageGump.cs
+++ b/Scripts/Services/MondainsLegacyQuests/Gumps/ConfirmHeritageGump.cs
@@ -22,10 +22,10 @@ namespace Server.Engines.Quests
 
             object message = m_Quester.ConfirmMessage;
 
-            if (message is int)
-                AddHtmlLocalized(15, 15, 210, 75, (int)message, 0x0, false, false);
-            else if (message is string)
-                AddHtml(15, 15, 210, 75, (string)message, false, false);
+            if (message is int i)
+                AddHtmlLocalized(15, 15, 210, 75, i, 0x0, false, false);
+            else if (message is string s)
+                AddHtml(15, 15, 210, 75, s, false, false);
 
             AddButton(160, 95, 0xF7, 0xF8, (int)Buttons.Okay, GumpButtonType.Reply, 0);
             AddButton(90, 95, 0xF2, 0xF1, (int)Buttons.Close, GumpButtonType.Reply, 0);
@@ -57,10 +57,8 @@ namespace Server.Engines.Quests
 
         private void CloseHeritageGump(object args)
         {
-            if (args is Mobile)
+            if (args is Mobile m)
             {
-                Mobile m = (Mobile)args;
-
                 if (HeritageQuester.IsPending(m))
                 {
                     m.Send(HeritagePacket.Close);
diff --git a/Scripts/Services/MondainsLegacyQuests/Gumps/MondainQuestGump.cs b/Scripts/Services/MondainsLegacyQuests/Gumps/MondainQuestGump.cs
index 014d9753d..22d87ab6e 100644
--- a/Scripts/Services/MondainsLegacyQuests/Gumps/MondainQuestGump.cs
+++ b/Scripts/Services/MondainsLegacyQuests/Gumps/MondainQuestGump.cs
@@ -249,10 +249,8 @@ namespace Server.Engines.Quests
                 {
                     BaseObjective objective = m_Quest.Objectives[i];
 
-                    if (objective is SlayObjective)
+                    if (objective is SlayObjective slay)
                     {
-                        SlayObjective slay = (SlayObjective)objective;
-
                         if (slay != null)
                         {
                             AddHtmlLocalized(98, offset, 30, 16, 1072204, 0x15F90, false, false); // Slay
@@ -313,10 +311,8 @@ namespace Server.Engines.Quests
                             }
                         }
                     }
-                    else if (objective is ObtainObjective)
+                    else if (objective is ObtainObjective obtain)
                     {
-                        ObtainObjective obtain = (ObtainObjective)objective;
-
                         if (obtain != null)
                         {
                             AddHtmlLocalized(98, offset, 40, 16, 1072205, 0x15F90, false, false); // Obtain						
@@ -363,10 +359,8 @@ namespace Server.Engines.Quests
                             }
                         }
                     }
-                    else if (objective is DeliverObjective)
+                    else if (objective is DeliverObjective deliver)
                     {
-                        DeliverObjective deliver = (DeliverObjective)objective;
-
                         if (deliver != null)
                         {
                             AddHtmlLocalized(98, offset, 40, 16, 1072207, 0x15F90, false, false); // Deliver						
@@ -388,10 +382,8 @@ namespace Server.Engines.Quests
                             }
                         }
                     }
-                    else if (objective is EscortObjective)
+                    else if (objective is EscortObjective escort)
                     {
-                        EscortObjective escort = (EscortObjective)objective;
-
                         if (escort != null)
                         {
                             AddHtmlLocalized(98, offset, 312, 16, 1072206, 0x15F90, false, false); // Escort to
@@ -416,10 +408,8 @@ namespace Server.Engines.Quests
                             }
                         }
                     }
-                    else if (objective is ApprenticeObjective)
+                    else if (objective is ApprenticeObjective apprentice)
                     {
-                        ApprenticeObjective apprentice = (ApprenticeObjective)objective;
-
                         if (apprentice != null)
                         {
                             AddHtmlLocalized(98, offset, 200, 16, 1077485, "#" + (1044060 + (int)apprentice.Skill) + "\t" + apprentice.MaxProgress, 0x15F90, false, false); // Increase ~1_SKILL~ to ~2_VALUE~
@@ -618,9 +608,9 @@ namespace Server.Engines.Quests
                 string returnTo = m_Quest.StartingMobile.Name;
 
                 if (m_Quest.StartingMobile.Region != null)
-                    returnTo = string.Format("{0} ({1})", returnTo, m_Quest.StartingMobile.Region.Name);
+                    returnTo = $"{returnTo} ({m_Quest.StartingMobile.Region.Name})";
                 else
-                    returnTo = string.Format("{0}", returnTo);
+                    returnTo = $"{returnTo}";
 
                 return returnTo;
             }
diff --git a/Scripts/Services/MondainsLegacyQuests/Gumps/QAndAGump.cs b/Scripts/Services/MondainsLegacyQuests/Gumps/QAndAGump.cs
index 6f55b76ad..d764f0a9f 100644
--- a/Scripts/Services/MondainsLegacyQuests/Gumps/QAndAGump.cs
+++ b/Scripts/Services/MondainsLegacyQuests/Gumps/QAndAGump.cs
@@ -60,7 +60,7 @@ namespace Server.Gumps
                 if (selection is int)
                     AddHtmlLocalized(80, 102 + (i * 40), 200, 18, (int)selection, 0x0, false, false);
                 else
-                    AddHtml(80, 102 + (i * 40), 200, 18, string.Format("<BASEFONT COLOR=#{0:X6}>{1}</BASEFONT>", FontColor, selection), false, false);
+                    AddHtml(80, 102 + (i * 40), 200, 18, $"<BASEFONT COLOR=#{FontColor:X6}>{selection}</BASEFONT>", false, false);
             }
         }
 
diff --git a/Scripts/Services/MondainsLegacyQuests/Helpers/PlayerQuestInfo.cs b/Scripts/Services/MondainsLegacyQuests/Helpers/PlayerQuestInfo.cs
index 465a21eaf..f555918fe 100644
--- a/Scripts/Services/MondainsLegacyQuests/Helpers/PlayerQuestInfo.cs
+++ b/Scripts/Services/MondainsLegacyQuests/Helpers/PlayerQuestInfo.cs
@@ -25,20 +25,16 @@ namespace Server.Engines.Quests
         {
             var pm = e.Mobile as PlayerMobile;
 
-            if (pm != null)
-            {
-                pm.BeginTarget(-1, false, TargetFlags.None, (m, targeted) =>
-                {
-                    if (targeted is PlayerMobile subject)
-                    {
-                        var quests = subject.Quests;
-                        var chains = subject.Chains;
-                        var done = subject.DoneQuests;
-
-                        SendGump(new PlayerQuestInfoGump(pm, subject));
-                    }
-                });
-            }
+            pm?.BeginTarget(-1, false, TargetFlags.None, (m, targeted) =>
+{
+    if (targeted is PlayerMobile subject)
+    {
+        var quests = subject.Quests;
+        var chains = subject.Chains;
+        var done = subject.DoneQuests;
+        SendGump(new PlayerQuestInfoGump(pm, subject));
+    }
+});
         }
 
         public PlayerMobile Subject { get; private set; }
@@ -54,7 +50,7 @@ namespace Server.Engines.Quests
         {
             AddBackground(0, 0, 600, 400, 3000);
             AddPage(0);
-            AddHtml(0, 10, 600, 20, Center(string.Format("Quest Info for {0}", Subject.Name)), false, false);
+            AddHtml(0, 10, 600, 20, Center($"Quest Info for {Subject.Name}"), false, false);
 
             AddButton(10, 20, Page == QuestPage.Quests ? 4006 : 4005, 4007, 1, GumpButtonType.Reply, 0);
             AddLabel(43, 20, 0, "Active Quests");
@@ -106,8 +102,8 @@ namespace Server.Engines.Quests
                         AddHtml(10, y, 200, 20, (string)quest.Title, false, false);
                     }
 
-                    AddLabel(210, y, 0, string.Format("{0}/{1}", ObjectivesComplete(quest).ToString(), quest.Objectives.Count));
-                    AddLabelCropped(300, y, 100, 20, 0, string.Format("{0}", quest.ChainID != QuestChain.None ? quest.ChainID.ToString() : "N/A"));
+                    AddLabel(210, y, 0, $"{ObjectivesComplete(quest).ToString()}/{quest.Objectives.Count}");
+                    AddLabelCropped(300, y, 100, 20, 0, $"{(quest.ChainID != QuestChain.None ? quest.ChainID.ToString() : "N/A")}");
                     AddButton(400, y, 0xFB1, 0xFB3, i + 100, GumpButtonType.Reply, 0);
 
                     y += 20;
diff --git a/Scripts/Services/MondainsLegacyQuests/Helpers/QuestHelper.cs b/Scripts/Services/MondainsLegacyQuests/Helpers/QuestHelper.cs
index 5dc764373..91057cb1b 100644
--- a/Scripts/Services/MondainsLegacyQuests/Helpers/QuestHelper.cs
+++ b/Scripts/Services/MondainsLegacyQuests/Helpers/QuestHelper.cs
@@ -43,9 +43,9 @@ namespace Server.Engines.Quests
 
             BaseQuest quest = null;
 
-            if (quester is ITierQuester)
+            if (quester is ITierQuester iTierQuester)
             {
-                quest = TierQuestInfo.RandomQuest(from, (ITierQuester)quester);
+                quest = TierQuestInfo.RandomQuest(from, iTierQuester);
             }
             else if (quests.Length > 0)
             {
@@ -67,13 +67,13 @@ namespace Server.Engines.Quests
                 }
                 else if (quester is Mobile && message)
                 {
-                    if (quester is MondainQuester)
+                    if (quester is MondainQuester mondainQuester)
                     {
-                        ((MondainQuester)quester).OnOfferFailed();
+                        mondainQuester.OnOfferFailed();
                     }
-                    else if (quester is Mobile)
+                    else if (quester is Mobile mobile)
                     {
-                        ((Mobile)quester).Say(1080107); // I'm sorry, I have nothing for you at this time.
+                        mobile.Say(1080107); // I'm sorry, I have nothing for you at this time.
                     }
                 }
             }
@@ -153,11 +153,11 @@ namespace Server.Engines.Quests
                         string str;
 
                         if (ts.TotalDays > 1)
-                            str = string.Format("I cannot offer this quest again for about {0} more days.", ts.TotalDays);
+                            str = $"I cannot offer this quest again for about {ts.TotalDays} more days.";
                         else if (ts.TotalHours > 1)
-                            str = string.Format("I cannot offer this quest again for about {0} more hours.", ts.TotalHours);
+                            str = $"I cannot offer this quest again for about {ts.TotalHours} more hours.";
                         else if (ts.TotalMinutes > 1)
-                            str = string.Format("I cannot offer this quest again for about {0} more minutes.", ts.TotalMinutes);
+                            str = $"I cannot offer this quest again for about {ts.TotalMinutes} more minutes.";
                         else
                             str = "I can offer this quest again very soon.";
 
@@ -219,15 +219,15 @@ namespace Server.Engines.Quests
 
                         if (ts.Days > 0)
                         {
-                            player.SendLocalizedMessage(1158377, string.Format("{0}\t{1}", ts.Days.ToString(), "day[s]"));
+                            player.SendLocalizedMessage(1158377, $"{ts.Days.ToString()}\t{"day[s]"}");
                         }
                         else if (ts.Hours > 0)
                         {
-                            player.SendLocalizedMessage(1158377, string.Format("{0}\t{1}", ts.Hours.ToString(), "hour[s]"));
+                            player.SendLocalizedMessage(1158377, $"{ts.Hours.ToString()}\t{"hour[s]"}");
                         }
                         else
                         {
-                            player.SendLocalizedMessage(1158377, string.Format("{0}\t{1}", ts.Minutes.ToString(), "minute[s]"));
+                            player.SendLocalizedMessage(1158377, $"{ts.Minutes.ToString()}\t{"minute[s]"}");
                         }
 
                         return false;
@@ -398,10 +398,8 @@ namespace Server.Engines.Quests
                 {
                     BaseObjective objective = quest.Objectives[j];
 
-                    if (objective is DeliverObjective)
+                    if (objective is DeliverObjective deliver)
                     {
-                        DeliverObjective deliver = (DeliverObjective)objective;
-
                         if (deliver.Update(vendor))
                         {
                             if (quest.Completed)
@@ -411,8 +409,8 @@ namespace Server.Engines.Quests
 
                                 quest.OnCompleted();
 
-                                if (vendor is MondainQuester)
-                                    player.SendGump(new MondainQuestGump(player, quest, MondainQuestGump.Section.Complete, false, true, (MondainQuester)vendor));
+                                if (vendor is MondainQuester mondainQuester)
+                                    player.SendGump(new MondainQuestGump(player, quest, MondainQuestGump.Section.Complete, false, true, mondainQuester));
                                 else
                                     player.SendGump(new MondainQuestGump(quest, MondainQuestGump.Section.Complete, false, true));
                             }
@@ -718,10 +716,8 @@ namespace Server.Engines.Quests
                 {
                     BaseObjective objective = quest.Objectives[j];
 
-                    if (objective is ObtainObjective)
+                    if (objective is ObtainObjective obtain)
                     {
-                        ObtainObjective obtain = (ObtainObjective)objective;
-
                         if (obtain.Update(item))
                         {
                             if (quest.Completed)
@@ -771,10 +767,8 @@ namespace Server.Engines.Quests
                 {
                     BaseObjective objective = quest.Objectives[j];
 
-                    if (objective is ApprenticeObjective)
+                    if (objective is ApprenticeObjective apprentice)
                     {
-                        ApprenticeObjective apprentice = (ApprenticeObjective)objective;
-
                         if (apprentice.Update(skill))
                         {
                             if (quest.Completed)
@@ -938,14 +932,10 @@ namespace Server.Engines.Quests
 
         private void ToggleQuestItem_Callback(Mobile from, object obj)
         {
-            if (from is PlayerMobile)
+            if (from is PlayerMobile player)
             {
-                PlayerMobile player = (PlayerMobile)from;
-
-                if (obj is Item)
+                if (obj is Item item)
                 {
-                    Item item = (Item)obj;
-
                     if (item.Parent != null && item.Parent == player.Backpack)
                     {
                         if (!QuestHelper.CheckItem(player, item))
diff --git a/Scripts/Services/MondainsLegacyQuests/Helpers/QuestWriter.cs b/Scripts/Services/MondainsLegacyQuests/Helpers/QuestWriter.cs
index ce5b0c4cd..9e82113f8 100644
--- a/Scripts/Services/MondainsLegacyQuests/Helpers/QuestWriter.cs
+++ b/Scripts/Services/MondainsLegacyQuests/Helpers/QuestWriter.cs
@@ -124,25 +124,25 @@ namespace Server.Engines.Quests
 
             Version(writer, 0);
 
-            if (obj is int)
+            if (obj is int i)
             {
                 writer.Write((byte)0x1);
-                writer.Write((int)obj);
+                writer.Write(i);
             }
-            else if (obj is string)
+            else if (obj is string s)
             {
                 writer.Write((byte)0x2);
-                writer.Write((string)obj);
+                writer.Write(s);
             }
-            else if (obj is Item)
+            else if (obj is Item item)
             {
                 writer.Write((byte)0x3);
-                writer.Write((Item)obj);
+                writer.Write(item);
             }
-            else if (obj is Mobile)
+            else if (obj is Mobile mobile)
             {
                 writer.Write((byte)0x4);
-                writer.Write((Mobile)obj);
+                writer.Write(mobile);
             }
             else
             {
@@ -152,10 +152,7 @@ namespace Server.Engines.Quests
 
         public static void Type(GenericWriter writer, Type type)
         {
-            if (writer != null)
-            {
-                writer.Write(type == null ? null : type.FullName);
-            }
+            writer?.Write(type == null ? null : type.FullName);
         }
     }
 }
diff --git a/Scripts/Services/MondainsLegacyQuests/HeritageQuester.cs b/Scripts/Services/MondainsLegacyQuests/HeritageQuester.cs
index 73207d466..648ad3004 100644
--- a/Scripts/Services/MondainsLegacyQuests/HeritageQuester.cs
+++ b/Scripts/Services/MondainsLegacyQuests/HeritageQuester.cs
@@ -186,8 +186,8 @@ namespace Server.Engines.Quests
 
         private void SayInstructions(object args)
         {
-            if (args is List<object>)
-                SayInstructions((List<object>)args);
+            if (args is List<object> objects)
+                SayInstructions(objects);
         }
 
         public void SayInstructions(List<object> incomplete)
@@ -202,8 +202,8 @@ namespace Server.Engines.Quests
 
         private void SayStory(object args)
         {
-            if (args is Mobile)
-                SayStory((Mobile)args);
+            if (args is Mobile mobile)
+                SayStory(mobile);
         }
 
         public void SayStory(Mobile m)
@@ -249,10 +249,10 @@ namespace Server.Engines.Quests
 
         public static void Say(Mobile m, object message)
         {
-            if (message is int)
-                m.Say((int)message);
-            else if (message is string)
-                m.Say((string)message);
+            if (message is int i)
+                m.Say(i);
+            else if (message is string s)
+                m.Say(s);
         }
 
         public static bool Check(Mobile m)
diff --git a/Scripts/Services/MondainsLegacyQuests/MondainQuester.cs b/Scripts/Services/MondainsLegacyQuests/MondainQuester.cs
index 9f1b65c77..35534ad05 100644
--- a/Scripts/Services/MondainsLegacyQuests/MondainQuester.cs
+++ b/Scripts/Services/MondainsLegacyQuests/MondainQuester.cs
@@ -65,7 +65,7 @@ namespace Server.Engines.Quests
             {
                 BaseChain chain = pair.Value;
 
-                if (chain != null && chain.Quester != null && chain.Quester == GetType())
+                if (chain?.Quester != null && chain.Quester == GetType())
                 {
                     BaseQuest quest = QuestHelper.RandomQuest(player, new Type[] { chain.CurrentQuest }, this);
 
diff --git a/Scripts/Services/MondainsLegacyQuests/QuestObjectives.cs b/Scripts/Services/MondainsLegacyQuests/QuestObjectives.cs
index e387e69d6..de5cee331 100644
--- a/Scripts/Services/MondainsLegacyQuests/QuestObjectives.cs
+++ b/Scripts/Services/MondainsLegacyQuests/QuestObjectives.cs
@@ -221,7 +221,7 @@ namespace Server.Engines.Quests
                 Region = QuestHelper.ValidateRegion(region) ? region : null;
 
                 if (Region == null)
-                    Console.WriteLine(string.Format("Invalid region name ('{0}') in '{1}' objective!", region, GetType()));
+                    Console.WriteLine($"Invalid region name ('{region}') in '{GetType()}' objective!");
             }
         }
 
@@ -259,10 +259,8 @@ namespace Server.Engines.Quests
 
         public override bool Update(object obj)
         {
-            if (obj is Mobile)
+            if (obj is Mobile mob)
             {
-                Mobile mob = (Mobile)obj;
-
                 if (IsObjective(mob))
                 {
                     if (!Completed)
@@ -371,10 +369,8 @@ namespace Server.Engines.Quests
         }
         public override bool Update(object obj)
         {
-            if (obj is Item)
+            if (obj is Item obtained)
             {
-                Item obtained = (Item)obj;
-
                 if (IsObjective(obtained))
                 {
                     if (!obtained.QuestItem)
@@ -637,7 +633,7 @@ namespace Server.Engines.Quests
                 Region = QuestHelper.ValidateRegion(region) ? region : null;
 
                 if (Region == null)
-                    Console.WriteLine(string.Format("Invalid region name ('{0}') in '{1}' objective!", region, GetType()));
+                    Console.WriteLine($"Invalid region name ('{region}') in '{GetType()}' objective!");
             }
 
             Fame = fame;
@@ -694,7 +690,7 @@ namespace Server.Engines.Quests
                 m_Leave = leaveRegion;
 
                 if (m_Region == null)
-                    Console.WriteLine(string.Format("Invalid region name ('{0}') in '{1}' objective!", region, GetType()));
+                    Console.WriteLine($"Invalid region name ('{region}') in '{GetType()}' objective!");
             }
         }
 
@@ -747,10 +743,8 @@ namespace Server.Engines.Quests
             if (Completed)
                 return false;
 
-            if (obj is Skill)
+            if (obj is Skill skill)
             {
-                Skill skill = (Skill)obj;
-
                 if (skill.SkillName != m_Skill)
                     return false;
 
diff --git a/Scripts/Services/Monster Stealing/Core/StealingHandler.cs b/Scripts/Services/Monster Stealing/Core/StealingHandler.cs
index 9deac3791..ee9e4e015 100644
--- a/Scripts/Services/Monster Stealing/Core/StealingHandler.cs	
+++ b/Scripts/Services/Monster Stealing/Core/StealingHandler.cs	
@@ -82,9 +82,7 @@ namespace Server.Engines.CreatureStealing
 
                     if (chance >= Utility.Random(100))
                     {
-                        Item item = Activator.CreateInstance(SpecialItemList[Utility.Random(SpecialItemList.Length)]) as Item;
-
-                        if (item != null)
+                        if (Activator.CreateInstance(SpecialItemList[Utility.Random(SpecialItemList.Length)]) is Item item)
                         {
                             thief.AddToBackpack(item);
 
diff --git a/Scripts/Services/Monster Stealing/Items/GemOfSalvation.cs b/Scripts/Services/Monster Stealing/Items/GemOfSalvation.cs
index 53b349522..deb54736c 100644
--- a/Scripts/Services/Monster Stealing/Items/GemOfSalvation.cs	
+++ b/Scripts/Services/Monster Stealing/Items/GemOfSalvation.cs	
@@ -27,7 +27,7 @@ namespace Server.Items
         {
             PlayerMobile pm = (PlayerMobile)args.Mobile;
 
-            if (pm != null && pm.Backpack != null)
+            if (pm?.Backpack != null)
             {
                 GemOfSalvation gem = pm.Backpack.FindItemByType<GemOfSalvation>();
 
diff --git a/Scripts/Services/Myrmidex Invasion/AllegianceIdol.cs b/Scripts/Services/Myrmidex Invasion/AllegianceIdol.cs
index 30cb23a8f..8cd453259 100644
--- a/Scripts/Services/Myrmidex Invasion/AllegianceIdol.cs	
+++ b/Scripts/Services/Myrmidex Invasion/AllegianceIdol.cs	
@@ -49,7 +49,7 @@ namespace Server.Engines.MyrmidexInvasion
                 {
                     if (entry.Allegiance == _AllegianceType)
                     {
-                        from.SendLocalizedMessage(1156637, string.Format("#{0}", ((int)entry.Allegiance).ToString())); // You have already declared allegiance to the ~1_SIDE~!  You may only change your allegiance once every 2 hours.
+                        from.SendLocalizedMessage(1156637, $"#{((int)entry.Allegiance).ToString()}"); // You have already declared allegiance to the ~1_SIDE~!  You may only change your allegiance once every 2 hours.
                     }
                     else if (entry.JoinTime + TimeSpan.FromHours(2) > DateTime.UtcNow)
                     {
@@ -60,7 +60,7 @@ namespace Server.Engines.MyrmidexInvasion
                         from.SendGump(
                             new ConfirmCallbackGump((PlayerMobile)from,
                             (int)_AllegianceType,
-                            string.Format("Your current allegiance is with the {0}.  Select yes to pledge your allegiance to the {1}.", entry.Allegiance == Allegiance.Tribes ? "Eodonians" : "Myrmidex", _AllegianceType == Allegiance.Tribes ? "Eodonians" : "Myrmidex"),
+                            $"Your current allegiance is with the {(entry.Allegiance == Allegiance.Tribes ? "Eodonians" : "Myrmidex")}.  Select yes to pledge your allegiance to the {(_AllegianceType == Allegiance.Tribes ? "Eodonians" : "Myrmidex")}.",
                             entry,
                             confirm: (m, state) =>
                                 {
diff --git a/Scripts/Services/Myrmidex Invasion/BattleFlag.cs b/Scripts/Services/Myrmidex Invasion/BattleFlag.cs
index 1660bd6eb..764dd8ce5 100644
--- a/Scripts/Services/Myrmidex Invasion/BattleFlag.cs	
+++ b/Scripts/Services/Myrmidex Invasion/BattleFlag.cs	
@@ -60,11 +60,11 @@ namespace Server.Engines.MyrmidexInvasion
                 if (kvp.Value.Count > 0)
                 {
                     int wave = kvp.Key + 1;
-                    int count = kvp.Value.Where(bc => bc.Alive).Count();
+                    int count = kvp.Value.Count(bc => bc.Alive);
 
                     Timer.DelayCall(TimeSpan.FromSeconds(delay), () =>
                     {
-                        m.SendLocalizedMessage(1156606, string.Format("{0}\t{1}\t{2}", (BattleSpawner.WaveCount - count).ToString(), BattleSpawner.WaveCount.ToString(), wave.ToString())); // Myrmidex have lost ~1_VAL~ of ~2_VAL~ from wave ~3_VAL~ of their front line.	
+                        m.SendLocalizedMessage(1156606, $"{(BattleSpawner.WaveCount - count).ToString()}\t{BattleSpawner.WaveCount.ToString()}\t{wave.ToString()}"); // Myrmidex have lost ~1_VAL~ of ~2_VAL~ from wave ~3_VAL~ of their front line.	
                     });
                 }
 
@@ -77,11 +77,11 @@ namespace Server.Engines.MyrmidexInvasion
                 if (kvp.Value.Count > 0)
                 {
                     int wave = kvp.Key + 1;
-                    int count = kvp.Value.Where(bc => bc.Alive).Count();
+                    int count = kvp.Value.Count(bc => bc.Alive);
 
                     Timer.DelayCall(TimeSpan.FromSeconds(delay), () =>
                     {
-                        m.SendLocalizedMessage(1156607, string.Format("{0}\t{1}\t{2}", (BattleSpawner.WaveCount - count).ToString(), BattleSpawner.WaveCount.ToString(), wave.ToString())); // Myrmidex have lost ~1_VAL~ of ~2_VAL~ from wave ~3_VAL~ of their front line.	
+                        m.SendLocalizedMessage(1156607, $"{(BattleSpawner.WaveCount - count).ToString()}\t{BattleSpawner.WaveCount.ToString()}\t{wave.ToString()}"); // Myrmidex have lost ~1_VAL~ of ~2_VAL~ from wave ~3_VAL~ of their front line.	
                     });
                 }
 
diff --git a/Scripts/Services/Myrmidex Invasion/BattleSpawner.cs b/Scripts/Services/Myrmidex Invasion/BattleSpawner.cs
index bcd15540b..7881617e8 100644
--- a/Scripts/Services/Myrmidex Invasion/BattleSpawner.cs	
+++ b/Scripts/Services/Myrmidex Invasion/BattleSpawner.cs	
@@ -925,9 +925,7 @@ namespace Server.Engines.MyrmidexInvasion
 
                 for (int j = 0; j < c; j++)
                 {
-                    BaseCreature bc = reader.ReadMobile() as BaseCreature;
-
-                    if (bc != null)
+                    if (reader.ReadMobile() is BaseCreature bc)
                     {
                         MyrmidexTeam[wave].Add(bc);
                         //AssignNavpoints(bc, Allegiance.Myrmidex);
@@ -945,9 +943,7 @@ namespace Server.Engines.MyrmidexInvasion
 
                 for (int j = 0; j < c; j++)
                 {
-                    BaseCreature bc = reader.ReadMobile() as BaseCreature;
-
-                    if (bc != null)
+                    if (reader.ReadMobile() is BaseCreature bc)
                     {
                         TribeTeam[wave].Add(bc);
                         //AssignNavpoints(bc, Allegiance.Tribes);
@@ -958,10 +954,9 @@ namespace Server.Engines.MyrmidexInvasion
             count = reader.ReadInt();
             for (int i = 0; i < count; i++)
             {
-                PlayerMobile pm = reader.ReadMobile() as PlayerMobile;
                 int score = reader.ReadInt();
 
-                if (pm != null)
+                if (reader.ReadMobile() is PlayerMobile pm)
                     Players[pm] = score;
             }
 
diff --git a/Scripts/Services/Myrmidex Invasion/MoonstonePowerGenerator.cs b/Scripts/Services/Myrmidex Invasion/MoonstonePowerGenerator.cs
index 088bc664a..36d93f523 100644
--- a/Scripts/Services/Myrmidex Invasion/MoonstonePowerGenerator.cs	
+++ b/Scripts/Services/Myrmidex Invasion/MoonstonePowerGenerator.cs	
@@ -251,9 +251,7 @@ namespace Server.Items
 
                 Active = reader.ReadBool();
 
-                MoonstonePowerGeneratorAddon chamber = Addon as MoonstonePowerGeneratorAddon;
-
-                if (chamber != null)
+                if (Addon is MoonstonePowerGeneratorAddon chamber)
                 {
                     if (chamber.Activator1 == null)
                         chamber.Activator1 = this;
diff --git a/Scripts/Services/Myrmidex Invasion/System.cs b/Scripts/Services/Myrmidex Invasion/System.cs
index 75d633d2e..f6f8955f2 100644
--- a/Scripts/Services/Myrmidex Invasion/System.cs	
+++ b/Scripts/Services/Myrmidex Invasion/System.cs	
@@ -38,7 +38,7 @@ namespace Server.Engines.MyrmidexInvasion
             if (entry != null)
                 AllianceEntries.Remove(entry);
 
-            pm.SendLocalizedMessage(1156636, string.Format("#{0}", ((int)type).ToString())); // You have declared allegiance to the ~1_SIDE~!  You may only change your allegiance once every 2 hours.
+            pm.SendLocalizedMessage(1156636, $"#{((int)type).ToString()}"); // You have declared allegiance to the ~1_SIDE~!  You may only change your allegiance once every 2 hours.
 
             AllianceEntries.Add(new AllianceEntry(pm, type));
         }
@@ -122,9 +122,9 @@ namespace Server.Engines.MyrmidexInvasion
             {
                 e.Mobile.BeginTarget(10, false, TargetFlags.None, (from, targeted) =>
                     {
-                        if (targeted is PlayerMobile)
+                        if (targeted is PlayerMobile playerMobile)
                         {
-                            AllianceEntry entry = GetEntry((PlayerMobile)targeted);
+                            AllianceEntry entry = GetEntry(playerMobile);
 
                             if (entry != null)
                             {
diff --git a/Scripts/Services/New Magincia/Distillation/DistillationGump.cs b/Scripts/Services/New Magincia/Distillation/DistillationGump.cs
index 9e92aabf0..83f36b188 100644
--- a/Scripts/Services/New Magincia/Distillation/DistillationGump.cs	
+++ b/Scripts/Services/New Magincia/Distillation/DistillationGump.cs	
@@ -74,7 +74,7 @@ namespace Server.Engines.Distillation
                 }
             }
 
-            AddHtmlLocalized(250, 54, 240, 20, 1150735, string.Format("#{0}", DistillationSystem.GetLabel(liquor, false)), LabelColor, false, false); // <center>Ingredients of ~1_NAME~</center>
+            AddHtmlLocalized(250, 54, 240, 20, 1150735, $"#{DistillationSystem.GetLabel(liquor, false)}", LabelColor, false, false); // <center>Ingredients of ~1_NAME~</center>
 
             y = 80;
             for (int i = 0; i < m_Def.Ingredients.Length; i++)
@@ -102,7 +102,7 @@ namespace Server.Engines.Distillation
                     int amount = DistillationTarget.GetAmount(from, type, liquor);
                     if (amount > total)
                         amount = total;
-                    AddHtmlLocalized(295, y, 200, 20, 1150733, string.Format("#{0}\t{1}", m_Def.Labels[i], string.Format("{0}/{1}", amount.ToString(), total.ToString())), LabelColor, false, false); // ~1_NAME~ : ~2_NUMBER~
+                    AddHtmlLocalized(295, y, 200, 20, 1150733, $"#{m_Def.Labels[i]}\t{string.Format("{0}/{1}", amount.ToString(), total.ToString())}", LabelColor, false, false); // ~1_NAME~ : ~2_NUMBER~
                 }
 
                 y += 26;
@@ -117,7 +117,7 @@ namespace Server.Engines.Distillation
             AddHtmlLocalized(295, 320, 200, 20, m_Context.Mark ? 1150731 : 1150732, LabelColor, false, false); // Mark Distiller Name - Do Not Mark
 
             AddButton(15, 395, 4005, 4007, 6, GumpButtonType.Reply, 0);
-            AddHtmlLocalized(55, 395, 200, 20, 1150733, string.Format("Label\t{0}", m_Context.Label == null ? "None" : m_Context.Label), LabelColor, false, false); // ~1_NAME~ : ~2_NUMBER~
+            AddHtmlLocalized(55, 395, 200, 20, 1150733, $"Label\t{(m_Context.Label == null ? "None" : m_Context.Label)}", LabelColor, false, false); // ~1_NAME~ : ~2_NUMBER~
 
             AddButton(15, 465, 4005, 4007, 7, GumpButtonType.Reply, 0);
             AddHtmlLocalized(55, 465, 200, 20, 1150771, LabelColor, false, false); // Execute Distillation
diff --git a/Scripts/Services/New Magincia/Distillation/DistillationSystem.cs b/Scripts/Services/New Magincia/Distillation/DistillationSystem.cs
index 599a33cbc..8ac5e6ec8 100644
--- a/Scripts/Services/New Magincia/Distillation/DistillationSystem.cs	
+++ b/Scripts/Services/New Magincia/Distillation/DistillationSystem.cs	
@@ -128,9 +128,7 @@ namespace Server.Engines.Distillation
 
         public static void SendGump(object o)
         {
-            Mobile from = o as Mobile;
-
-            if (from != null)
+            if (o is Mobile from)
                 from.SendGump(new DistillationGump(from));
         }
     }
diff --git a/Scripts/Services/New Magincia/Distillation/Items/BottleOfLiquor.cs b/Scripts/Services/New Magincia/Distillation/Items/BottleOfLiquor.cs
index 2dd3428e7..2b02d759c 100644
--- a/Scripts/Services/New Magincia/Distillation/Items/BottleOfLiquor.cs	
+++ b/Scripts/Services/New Magincia/Distillation/Items/BottleOfLiquor.cs	
@@ -40,10 +40,10 @@ namespace Server.Engines.Distillation
 
         public override void AddNameProperty(ObjectPropertyList list)
         {
-            if (m_Label != null && m_Label.Length > 0)
+            if (!string.IsNullOrEmpty(m_Label))
                 list.Add(1049519, m_Label); // a bottle of ~1_DRINK_NAME~
             else
-                list.Add(1049519, string.Format("#{0}", DistillationSystem.GetLabel(m_Liquor, m_IsStrong))); // a bottle of ~1_DRINK_NAME~
+                list.Add(1049519, $"#{DistillationSystem.GetLabel(m_Liquor, m_IsStrong)}"); // a bottle of ~1_DRINK_NAME~
         }
 
         public override void GetProperties(ObjectPropertyList list)
@@ -51,7 +51,7 @@ namespace Server.Engines.Distillation
             base.GetProperties(list);
 
             if (m_Liquor != Liquor.None)
-                list.Add(1150454, string.Format("#{0}", DistillationSystem.GetLabel(m_Liquor, m_IsStrong))); // Liquor Type: ~1_TYPE~
+                list.Add(1150454, $"#{DistillationSystem.GetLabel(m_Liquor, m_IsStrong)}"); // Liquor Type: ~1_TYPE~
 
             if (m_Distiller != null)
                 list.Add(1150679, m_Distiller.Name); // Distiller: ~1_NAME~
diff --git a/Scripts/Services/New Magincia/Distillation/Items/LiquorBarrel.cs b/Scripts/Services/New Magincia/Distillation/Items/LiquorBarrel.cs
index 021a1e14d..5853f1b12 100644
--- a/Scripts/Services/New Magincia/Distillation/Items/LiquorBarrel.cs	
+++ b/Scripts/Services/New Magincia/Distillation/Items/LiquorBarrel.cs	
@@ -89,7 +89,7 @@ namespace Server.Items
                     {
                         TimeSpan remaining = (m_MaturationBegin + m_MaturationDuration) - DateTime.UtcNow;
                         if (remaining.TotalDays > 0)
-                            from.SendLocalizedMessage(1150814, string.Format("{0}\t{1}", remaining.Days.ToString(), remaining.Hours.ToString()));
+                            from.SendLocalizedMessage(1150814, $"{remaining.Days.ToString()}\t{remaining.Hours.ToString()}");
                         else
                             from.SendLocalizedMessage(1150813, remaining.TotalHours.ToString());
                     }
@@ -117,11 +117,11 @@ namespace Server.Items
                 int cliloc = IsMature ? 1150804 : 1150812;  // maturing: ~1_NAME~ / // matured: ~1_NAME~
 
                 if (m_Label == null)
-                    list.Add(cliloc, string.Format("#{0}", DistillationSystem.GetLabel(m_Liquor, m_IsStrong)));
+                    list.Add(cliloc, $"#{DistillationSystem.GetLabel(m_Liquor, m_IsStrong)}");
                 else
                     list.Add(cliloc, m_Label);
 
-                list.Add(1150454, string.Format("#{0}", DistillationSystem.GetLabel(m_Liquor, m_IsStrong))); // Liquor Type: ~1_TYPE~
+                list.Add(1150454, $"#{DistillationSystem.GetLabel(m_Liquor, m_IsStrong)}"); // Liquor Type: ~1_TYPE~
 
                 if (m_Distiller != null)
                     list.Add(1150679, m_Distiller.Name); // Distiller: ~1_NAME~
diff --git a/Scripts/Services/New Magincia/Housing Lotto/Core/MaginciaHousingPlot.cs b/Scripts/Services/New Magincia/Housing Lotto/Core/MaginciaHousingPlot.cs
index ad00026bf..aab93f2cd 100644
--- a/Scripts/Services/New Magincia/Housing Lotto/Core/MaginciaHousingPlot.cs	
+++ b/Scripts/Services/New Magincia/Housing Lotto/Core/MaginciaHousingPlot.cs	
@@ -199,9 +199,7 @@ namespace Server.Engines.NewMagincia
 
         public void SendMessage_Callback(object o)
         {
-            object[] obj = o as object[];
-
-            if (obj != null)
+            if (o is object[] obj)
             {
                 Mobile winner = obj[0] as Mobile;
                 NewMaginciaMessage message = obj[1] as NewMaginciaMessage;
diff --git a/Scripts/Services/New Magincia/Housing Lotto/Core/MaginciaLottoSystem.cs b/Scripts/Services/New Magincia/Housing Lotto/Core/MaginciaLottoSystem.cs
index feb017451..6e5892163 100644
--- a/Scripts/Services/New Magincia/Housing Lotto/Core/MaginciaLottoSystem.cs	
+++ b/Scripts/Services/New Magincia/Housing Lotto/Core/MaginciaLottoSystem.cs	
@@ -213,9 +213,8 @@ namespace Server.Engines.NewMagincia
 
                 foreach (Item item in items)
                 {
-                    WritOfLease lease = item as WritOfLease;
 
-                    if (lease != null && !lease.Expired && lease.Plot != null && lease.Plot.Bounds.Contains(center) && from.Map == lease.Plot.Map)
+                    if (item is WritOfLease lease && !lease.Expired && lease.Plot != null && lease.Plot.Bounds.Contains(center) && from.Map == lease.Plot.Map)
                     {
                         lease.OnExpired();
                         return;
@@ -371,7 +370,7 @@ namespace Server.Engines.NewMagincia
 
             if (Sextant.Format(p, map, ref xLong, ref yLat, ref xMins, ref yMins, ref xEast, ref ySouth))
             {
-                return string.Format("{0}° {1}'{2}, {3}° {4}'{5}", yLat, yMins, ySouth ? "S" : "N", xLong, xMins, xEast ? "E" : "W");
+                return $"{yLat}° {yMins}'{(ySouth ? "S" : "N")}, {xLong}° {xMins}'{(xEast ? "E" : "W")}";
             }
 
             return p.ToString();
diff --git a/Scripts/Services/New Magincia/Housing Lotto/Core/Region.cs b/Scripts/Services/New Magincia/Housing Lotto/Core/Region.cs
index 6f9bf7aea..37d37205d 100644
--- a/Scripts/Services/New Magincia/Housing Lotto/Core/Region.cs	
+++ b/Scripts/Services/New Magincia/Housing Lotto/Core/Region.cs	
@@ -29,9 +29,8 @@ namespace Server.Engines.NewMagincia
 
                 foreach (Item item in items)
                 {
-                    WritOfLease lease = item as WritOfLease;
 
-                    if (lease != null && !lease.Expired && lease.Plot != null && lease.Plot.Bounds.Contains(p) && from.Map == lease.Plot.Map)
+                    if (item is WritOfLease lease && !lease.Expired && lease.Plot != null && lease.Plot.Bounds.Contains(p) && from.Map == lease.Plot.Map)
                         return true;
                 }
             }
diff --git a/Scripts/Services/New Magincia/Housing Lotto/Gumps/LottoTrackingGump.cs b/Scripts/Services/New Magincia/Housing Lotto/Gumps/LottoTrackingGump.cs
index 6293b64f9..d83ecab4a 100644
--- a/Scripts/Services/New Magincia/Housing Lotto/Gumps/LottoTrackingGump.cs	
+++ b/Scripts/Services/New Magincia/Housing Lotto/Gumps/LottoTrackingGump.cs	
@@ -14,7 +14,7 @@ namespace Server.Engines.NewMagincia
             AddBackground(0, 0, 410, 564, 9500);
 
             AddHtml(205, 10, 205, 20, "<DIV ALIGN=RIGHT><Basefont Color=#FFFFFF>New Magincia Lotto Tracking</DIV>", false, false);
-            AddHtml(10, 10, 205, 20, Color(string.Format("Gold Sink: {0}", MaginciaLottoSystem.GoldSink.ToString("###,###,###")), 0xFFFFFF), false, false);
+            AddHtml(10, 10, 205, 20, Color($"Gold Sink: {MaginciaLottoSystem.GoldSink.ToString("###,###,###")}", 0xFFFFFF), false, false);
 
             AddHtml(45, 40, 40, 20, Color("ID", LabelColor), false, false);
             AddHtml(85, 40, 60, 20, Color("Facet", LabelColor), false, false);
@@ -62,12 +62,12 @@ namespace Server.Engines.NewMagincia
 
         private string Color(string str, int color)
         {
-            return string.Format("<BASEFONT COLOR=#{0:X6}>{1}</BASEFONT>", color, str);
+            return $"<BASEFONT COLOR=#{color:X6}>{str}</BASEFONT>";
         }
 
         private string Color(string str, string color)
         {
-            return string.Format("<BASEFONT COLOR={0}>{1}</BASEFONT>", color, str);
+            return $"<BASEFONT COLOR={color}>{str}</BASEFONT>";
         }
 
         public override void OnResponse(NetState state, RelayInfo info)
@@ -101,7 +101,7 @@ namespace Server.Engines.NewMagincia
 
             AddBackground(0, 0, x, y, 9500);
 
-            AddHtml(10, 10, 580, 20, string.Format("<Center><Basefont Color=#FFFFFF>Plot {0}</Center>", plot.Identifier), false, false);
+            AddHtml(10, 10, 580, 20, $"<Center><Basefont Color=#FFFFFF>Plot {plot.Identifier}</Center>", false, false);
 
             AddHtml(10, 40, 80, 20, Color("Player", 0xFFFFFF), false, false);
             AddHtml(92, 40, 60, 20, Color("Tickets", 0xFFFFFF), false, false);
@@ -147,7 +147,7 @@ namespace Server.Engines.NewMagincia
                     y += 22;
             }
 
-            AddHtml(10, 10, 150, 20, Color(string.Format("Gold Sink: {0}", goldSink.ToString()), 0xFFFFFF), false, false);
+            AddHtml(10, 10, 150, 20, Color($"Gold Sink: {goldSink.ToString()}", 0xFFFFFF), false, false);
 
             AddButton(10, 544 - 32, 4014, 4016, 1, GumpButtonType.Reply, 0);
             AddHtml(45, 544 - 32, 150, 20, Color("Back", 0xFFFFFF), false, false);
@@ -155,7 +155,7 @@ namespace Server.Engines.NewMagincia
 
         private string Color(string str, int color)
         {
-            return string.Format("<BASEFONT COLOR=#{0:X6}>{1}</BASEFONT>", color, str);
+            return $"<BASEFONT COLOR=#{color:X6}>{str}</BASEFONT>";
         }
 
         public override void OnResponse(NetState state, RelayInfo info)
diff --git a/Scripts/Services/New Magincia/Housing Lotto/Gumps/MaginciaLottoGump.cs b/Scripts/Services/New Magincia/Housing Lotto/Gumps/MaginciaLottoGump.cs
index d9a7ef74c..9c1a8436d 100644
--- a/Scripts/Services/New Magincia/Housing Lotto/Gumps/MaginciaLottoGump.cs	
+++ b/Scripts/Services/New Magincia/Housing Lotto/Gumps/MaginciaLottoGump.cs	
@@ -34,18 +34,18 @@ namespace Server.Engines.NewMagincia
             AddHtmlLocalized(10, 10, 200, 20, 1150460, BlueColor, false, false); // New Magincia Housing Lottery
 
             AddHtmlLocalized(10, 50, 75, 20, 1150461, BlueColor, false, false); // This Facet:
-            AddHtml(170, 50, 100, 16, string.Format("<BASEFONT COLOR=#{0:X6}>{1}</BASEFONT>", LabelColor, plot.Map.ToString()), false, false);
+            AddHtml(170, 50, 100, 16, $"<BASEFONT COLOR=#{LabelColor:X6}>{plot.Map.ToString()}</BASEFONT>", false, false);
 
             AddHtmlLocalized(10, 70, 75, 20, 1150462, BlueColor, false, false); // This Plot:
-            AddHtml(170, 70, 100, 16, string.Format("<BASEFONT COLOR=#{0:X6}>{1}</BASEFONT>", EntryColor, plot.Identifier), false, false);
+            AddHtml(170, 70, 100, 16, $"<BASEFONT COLOR=#{EntryColor:X6}>{plot.Identifier}</BASEFONT>", false, false);
 
             AddHtmlLocalized(10, 95, 130, 20, 1150463, BlueColor, false, false); // Total Tickets Sold:
-            AddHtml(170, 95, 100, 16, string.Format("<BASEFONT COLOR=#{0:X6}>{1}</BASEFONT>", EntryColor, totalTicketsSold.ToString()), false, false);
+            AddHtml(170, 95, 100, 16, $"<BASEFONT COLOR=#{EntryColor:X6}>{totalTicketsSold.ToString()}</BASEFONT>", false, false);
 
             AddHtmlLocalized(10, 110, 320, 40, prime ? 1150464 : 1150465, LabelColor, false, false);
 
             AddHtmlLocalized(10, 160, 90, 20, 1150466, BlueColor, false, false); // Your Tickets:
-            AddHtml(170, 160, 100, 20, string.Format("<BASEFONT COLOR=#{0:X6}>{1}</BASEFONT>", EntryColor, ticketsBought.ToString()), false, false);
+            AddHtml(170, 160, 100, 20, $"<BASEFONT COLOR=#{EntryColor:X6}>{ticketsBought.ToString()}</BASEFONT>", false, false);
 
             if (ticketsBought == 0)
                 AddHtmlLocalized(10, 175, 320, 40, 1150467, LabelColor, false, false); // You have not bought a ticket, so you have no chance of winning this plot.
@@ -57,7 +57,7 @@ namespace Server.Engines.NewMagincia
             }
 
             AddHtmlLocalized(10, 225, 115, 20, 1150472, BlueColor, false, false); // Price Per Ticket:
-            AddHtml(170, 225, 100, 20, string.Format("<BASEFONT COLOR=#{0:X6}>{1}</BASEFONT>", EntryColor, plot.LottoPrice.ToString("###,###,###")), false, false);
+            AddHtml(170, 225, 100, 20, $"<BASEFONT COLOR=#{EntryColor:X6}>{plot.LottoPrice.ToString("###,###,###")}</BASEFONT>", false, false);
 
             if (plot.LottoOngoing)
             {
@@ -131,11 +131,11 @@ namespace Server.Engines.NewMagincia
             if (Banker.Withdraw(m_From, total))
             {
                 MaginciaLottoSystem.GoldSink += total;
-                m_From.SendLocalizedMessage(1150480, string.Format("{0}\t{1}\t{2}", toBuy.ToString(), pricePer.ToString(), total.ToString())); // Purchase of ~1_COUNT~ ticket(s) at ~2_PRICE~gp each costs a total of ~3_TOTAL~. The funds have been withdrawn from your bank box and your ticket purchase has been recorded.
+                m_From.SendLocalizedMessage(1150480, $"{toBuy.ToString()}\t{pricePer.ToString()}\t{total.ToString()}"); // Purchase of ~1_COUNT~ ticket(s) at ~2_PRICE~gp each costs a total of ~3_TOTAL~. The funds have been withdrawn from your bank box and your ticket purchase has been recorded.
                 m_Plot.PurchaseLottoTicket(m_From, toBuy);
             }
             else
-                m_From.SendLocalizedMessage(1150479, string.Format("{0}\t{1}\t{2}", toBuy.ToString(), pricePer.ToString(), total.ToString())); // Purchase of ~1_COUNT~ ticket(s) at ~2_PRICE~gp each costs a total of ~3_TOTAL~. You do not have the required funds in your bank box to make the purchase.
+                m_From.SendLocalizedMessage(1150479, $"{toBuy.ToString()}\t{pricePer.ToString()}\t{total.ToString()}"); // Purchase of ~1_COUNT~ ticket(s) at ~2_PRICE~gp each costs a total of ~3_TOTAL~. You do not have the required funds in your bank box to make the purchase.
         }
     }
 }
diff --git a/Scripts/Services/New Magincia/Housing Lotto/Gumps/NewMaginciaMessageGump.cs b/Scripts/Services/New Magincia/Housing Lotto/Gumps/NewMaginciaMessageGump.cs
index fd3473303..ac6cb7e19 100644
--- a/Scripts/Services/New Magincia/Housing Lotto/Gumps/NewMaginciaMessageGump.cs	
+++ b/Scripts/Services/New Magincia/Housing Lotto/Gumps/NewMaginciaMessageGump.cs	
@@ -24,7 +24,7 @@ namespace Server.Engines.NewMagincia
 
             AddBackground(0, 0, 164, 32, 0x24B8);
             AddButton(7, 7, 0x1523, 0x1523, 1, GumpButtonType.Reply, 0);
-            AddHtmlLocalized(37, 7, 120, 18, 1150425, string.Format("{0}", Messages.Count), GreenColor, false, false); // ~1_COUNT~ Messages
+            AddHtmlLocalized(37, 7, 120, 18, 1150425, $"{Messages.Count}", GreenColor, false, false); // ~1_COUNT~ Messages
         }
 
         public override void OnResponse(RelayInfo info)
@@ -79,7 +79,7 @@ namespace Server.Engines.NewMagincia
             AddBackground(0, 0, 314 + width, 241 + width, 0x24B8);
             AddButton(7, 7, 0x1523, 0x1523, 0, GumpButtonType.Reply, 0);
             AddButton(290 + width, 7, buttonid, buttonid, 1, GumpButtonType.Reply, 0);
-            AddHtmlLocalized(47, 7, Widescreen ? 460 : 194, 18, 1150425, string.Format("{0}", Messages.Count), GreenColor, false, false); // ~1_COUNT~ Messages   
+            AddHtmlLocalized(47, 7, Widescreen ? 460 : 194, 18, 1150425, $"{Messages.Count}", GreenColor, false, false); // ~1_COUNT~ Messages   
 
             int page = 1;
             int y = 0;
@@ -216,7 +216,7 @@ namespace Server.Engines.NewMagincia
                 }
                 else
                 {
-                    AddHtmlLocalized(47, 7, 360, 18, 1150425, string.Format("{0}", Messages.Count), GreenColor, false, false); // ~1_COUNT~ Messages
+                    AddHtmlLocalized(47, 7, 360, 18, 1150425, $"{Messages.Count}", GreenColor, false, false); // ~1_COUNT~ Messages
                 }
 
                 if (Message.Body != null)
@@ -240,7 +240,7 @@ namespace Server.Engines.NewMagincia
 
                 TimeSpan ts = Message.Expires - DateTime.UtcNow;
 
-                AddHtmlLocalized(7, 194, 400, 18, 1150432, string.Format("@{0}@{1}@{2}", ts.Days, ts.Hours, ts.Minutes), GreenColor, false, false); // This message will expire in ~1_DAYS~ days, ~2_HOURS~ hours, and ~3_MIN~ minutes.
+                AddHtmlLocalized(7, 194, 400, 18, 1150432, $"@{ts.Days}@{ts.Hours}@{ts.Minutes}", GreenColor, false, false); // This message will expire in ~1_DAYS~ days, ~2_HOURS~ hours, and ~3_MIN~ minutes.
 
                 AddHtmlLocalized(47, 212, 360, 22, 1150433, EntryColor, false, false); // DELETE NOW
                 AddButton(7, 212, 4005, 4007, 2, GumpButtonType.Reply, 0);
diff --git a/Scripts/Services/New Magincia/Housing Lotto/Gumps/PlotWinnerGump.cs b/Scripts/Services/New Magincia/Housing Lotto/Gumps/PlotWinnerGump.cs
index a69160f90..7de170377 100644
--- a/Scripts/Services/New Magincia/Housing Lotto/Gumps/PlotWinnerGump.cs	
+++ b/Scripts/Services/New Magincia/Housing Lotto/Gumps/PlotWinnerGump.cs	
@@ -20,7 +20,7 @@ namespace Server.Engines.NewMagincia
 
             AddHtmlLocalized(170, 13, 150, 16, 1150484, GreenColor, false, false); // WRIT OF LEASE
 
-            string args = string.Format("{0}\t{1}\t{2}", plot.Identifier, plot.Map, string.Format("{0} {1}", plot.Bounds.X, plot.Bounds.Y));
+            string args = $"{plot.Identifier}\t{plot.Map}\t{string.Format("{0} {1}", plot.Bounds.X, plot.Bounds.Y)}";
             AddHtmlLocalized(10, 40, 404, 180, 1150499, args, BlueColor, true, true);
 
             AddButton(5, 235, 4005, 4007, 1, GumpButtonType.Reply, 0);
diff --git a/Scripts/Services/New Magincia/Housing Lotto/Items/WritOfLease.cs b/Scripts/Services/New Magincia/Housing Lotto/Items/WritOfLease.cs
index 77082bd9d..0ca8960b4 100644
--- a/Scripts/Services/New Magincia/Housing Lotto/Items/WritOfLease.cs	
+++ b/Scripts/Services/New Magincia/Housing Lotto/Items/WritOfLease.cs	
@@ -144,13 +144,13 @@ namespace Server.Engines.NewMagincia
 
                 if (lease.Expired)
                 {
-                    args = string.Format("{0}\t{1}\t{2}\t{3}\t{4}", lease.Identifier, lease.Facet.ToString(), Misc.ServerList.ServerName, "", string.Format("{0} {1}", lease.RecallLoc.X, lease.RecallLoc.Y));
+                    args = $"{lease.Identifier}\t{lease.Facet.ToString()}\t{Misc.ServerList.ServerName}\t{""}\t{string.Format("{0} {1}", lease.RecallLoc.X, lease.RecallLoc.Y)}";
                     AddHtmlLocalized(38, 55, 215, 178, 1150488, args, 1, false, true);
                     //This deed once entitled the bearer to build a house on the plot of land designated "~1_PLOT~" (located at ~5_SEXTANT~) in the City of New Magincia on the ~2_FACET~ facet of the ~3_SHARD~ shard.<br><br>The deed has expired, and now the indicated plot of land is subject to normal house construction rules.<br><br>This deed was won by lottery, and while it is no longer valid for land ownership it does serve to commemorate the winning of land during the Rebuilding of Magincia.<br><br>This deed functions as a recall rune marked for the location of the plot it represents.
                 }
                 else
                 {
-                    args = string.Format("{0}\t{1}\t{2}\t{3}\t{4}", lease.Identifier, lease.Facet.ToString(), Misc.ServerList.ServerName, MaginciaLottoSystem.WritExpirePeriod.ToString(), string.Format("{0} {1}", lease.RecallLoc.X, lease.RecallLoc.Y));
+                    args = $"{lease.Identifier}\t{lease.Facet.ToString()}\t{Misc.ServerList.ServerName}\t{MaginciaLottoSystem.WritExpirePeriod.ToString()}\t{string.Format("{0} {1}", lease.RecallLoc.X, lease.RecallLoc.Y)}";
                     AddHtmlLocalized(38, 55, 215, 178, 1150483, args, 1, false, true);
                     //This deed entitles the bearer to build a house on the plot of land designated "~1_PLOT~" (located at ~5_SEXTANT~) in the City of New Magincia on the ~2_FACET~ facet of the ~3_SHARD~ shard.<br><br>The deed will expire once it is used to construct a house, and thereafter the indicated plot of land will be subject to normal house construction rules. The deed will expire after ~4_DAYS~ more days have passed, and at that time the right to place a house reverts to normal house construction rules.<br><br>This deed functions as a recall rune marked for the location of the plot it represents.<br><br>To place a house on the deeded plot, you must simply have this deed in your backpack or bank box when using a House Placement Tool there.
                 }
diff --git a/Scripts/Services/New Magincia/Magincia Bazaar/Core/BrokerEntries.cs b/Scripts/Services/New Magincia/Magincia Bazaar/Core/BrokerEntries.cs
index c7beba9c8..254aa82cd 100644
--- a/Scripts/Services/New Magincia/Magincia Bazaar/Core/BrokerEntries.cs	
+++ b/Scripts/Services/New Magincia/Magincia Bazaar/Core/BrokerEntries.cs	
@@ -69,8 +69,8 @@ namespace Server.Engines.NewMagincia
             m_Broker = broker;
             m_Stock = amount;
 
-            if (item is ICommodity)
-                m_Label = ((ICommodity)item).Description;
+            if (item is ICommodity iCommodity)
+                m_Label = iCommodity.Description;
             else
                 m_Label = item.LabelNumber;
         }
@@ -162,9 +162,7 @@ namespace Server.Engines.NewMagincia
             if (m_NameBuffer.ContainsKey(t))
                 return m_NameBuffer[t];
 
-            BaseCreature c = Activator.CreateInstance(t) as BaseCreature;
-
-            if (c != null)
+            if (Activator.CreateInstance(t) is BaseCreature c)
             {
                 c.Delete();
                 AddToBuffer(t, c.Name);
@@ -176,7 +174,7 @@ namespace Server.Engines.NewMagincia
 
         public static void AddToBuffer(Type type, string s)
         {
-            if (s != null && s.Length > 0 && !m_NameBuffer.ContainsKey(type))
+            if (!string.IsNullOrEmpty(s) && !m_NameBuffer.ContainsKey(type))
                 m_NameBuffer[type] = s;
         }
 
diff --git a/Scripts/Services/New Magincia/Magincia Bazaar/Core/MaginciaBizaar.cs b/Scripts/Services/New Magincia/Magincia Bazaar/Core/MaginciaBizaar.cs
index 5fa036387..6fec0ef09 100644
--- a/Scripts/Services/New Magincia/Magincia Bazaar/Core/MaginciaBizaar.cs	
+++ b/Scripts/Services/New Magincia/Magincia Bazaar/Core/MaginciaBizaar.cs	
@@ -417,7 +417,7 @@ namespace Server.Engines.NewMagincia
                     /*You won a lease on Stall ~1_STALLNAME~ at the ~2_FACET~ New Magincia Bazaar. 
                      *Your bid amount of ~3_BIDAMT~gp won the auction and has been remitted. Your 
                      *lease begins immediately and will continue for 7 days.*/
-                    MaginciaLottoSystem.SendMessageTo(winner, new NewMaginciaMessage(null, new TextDefinition(1150426), string.Format("{0}\t{1}\t{2}", plot.PlotDef.ID, plot.PlotDef.Map.ToString(), highest.ToString("###,###,###"))));
+                    MaginciaLottoSystem.SendMessageTo(winner, new NewMaginciaMessage(null, new TextDefinition(1150426), $"{plot.PlotDef.ID}\t{plot.PlotDef.Map.ToString()}\t{highest.ToString("###,###,###")}"));
                 }
 
                 plot.Reset();
@@ -429,7 +429,7 @@ namespace Server.Engines.NewMagincia
                      *Bazaar. The lease on your previous stall has been terminated. Your hired 
                      *merchant, if any, has relocated your stall and goods to the new lot. Your 
                      *bid amount of ~3_BIDAMT~gp has been remitted.*/
-                    MaginciaLottoSystem.SendMessageTo(winner, new NewMaginciaMessage(null, new TextDefinition(1150428), string.Format("{0}\t{1}\t{2}", plot.PlotDef.ID, plot.PlotDef.Map, highest.ToString("###,###,###"))));
+                    MaginciaLottoSystem.SendMessageTo(winner, new NewMaginciaMessage(null, new TextDefinition(1150428), $"{plot.PlotDef.ID}\t{plot.PlotDef.Map}\t{highest.ToString("###,###,###")}"));
 
                     plot.PlotMulti = current.PlotMulti;
                     plot.Merchant = current.Merchant;
@@ -472,11 +472,9 @@ namespace Server.Engines.NewMagincia
         {
             if (check == null || checkAgainst == null)
                 return false;
-
-            Account acct1 = checkAgainst.Account as Account;
             Account acct2 = check.Account as Account;
 
-            if (acct1 != null && acct1 == acct2)
+            if (checkAgainst.Account is Account acct1 && acct1 == acct2)
                 return true;
 
             return false;
diff --git a/Scripts/Services/New Magincia/Magincia Bazaar/Core/MaginciaBizaarPlot.cs b/Scripts/Services/New Magincia/Magincia Bazaar/Core/MaginciaBizaarPlot.cs
index 0c5855928..400ae877f 100644
--- a/Scripts/Services/New Magincia/Magincia Bazaar/Core/MaginciaBizaarPlot.cs	
+++ b/Scripts/Services/New Magincia/Magincia Bazaar/Core/MaginciaBizaarPlot.cs	
@@ -115,10 +115,7 @@ namespace Server.Engines.NewMagincia
             if (from == m_Owner)
                 return true;
 
-            Account acct1 = from.Account as Account;
-            Account acct2 = m_Owner.Account as Account;
-
-            return acct1 != null && acct2 != null && acct1 == acct2;
+            return from.Account is Account acct1 && m_Owner.Account is Account acct2 && acct1 == acct2;
         }
 
         public void AddPlotSign()
diff --git a/Scripts/Services/New Magincia/Magincia Bazaar/Core/MaginciaPlotAuction.cs b/Scripts/Services/New Magincia/Magincia Bazaar/Core/MaginciaPlotAuction.cs
index 312ab91e5..f114be940 100644
--- a/Scripts/Services/New Magincia/Magincia Bazaar/Core/MaginciaPlotAuction.cs	
+++ b/Scripts/Services/New Magincia/Magincia Bazaar/Core/MaginciaPlotAuction.cs	
@@ -140,7 +140,7 @@ namespace Server.Engines.NewMagincia
 					 *from your Match Bid of ~4_MATCHAMT~gp. Your Match Bid balance is now 
 					 *~5_NEWMATCH~gp. You may reclaim any additional match bid funds or adjust 
 					 *your match bid for next week at the bazaar.*/
-                    MaginciaLottoSystem.SendMessageTo(m_Plot.Owner, new NewMaginciaMessage(null, new TextDefinition(1150427), string.Format("@{0}@{1}@{2}@{3}@{4}", m_Plot.PlotDef.ID, m_Plot.PlotDef.Map.ToString(), highest.ToString("N0"), matching.ToString("N0"), newreserve.ToString("N0"))));
+                    MaginciaLottoSystem.SendMessageTo(m_Plot.Owner, new NewMaginciaMessage(null, new TextDefinition(1150427), $"@{m_Plot.PlotDef.ID}@{m_Plot.PlotDef.Map.ToString()}@{highest.ToString("N0")}@{matching.ToString("N0")}@{newreserve.ToString("N0")}"));
                 }
                 else
                 {
@@ -150,13 +150,13 @@ namespace Server.Engines.NewMagincia
 					 *merchant, if any, has deposited your proceeds and remaining inventory at the 
 					 *Warehouse in New Magincia. You must retrieve these within one week or they 
 					 *will be destroyed.*/
-                    MaginciaLottoSystem.SendMessageTo(m_Plot.Owner, new NewMaginciaMessage(null, new TextDefinition(1150528), string.Format("@{0}@{1}@{2}", m_Plot.PlotDef.ID, m_Plot.PlotDef.Map.ToString(), matching.ToString("N0"))));
+                    MaginciaLottoSystem.SendMessageTo(m_Plot.Owner, new NewMaginciaMessage(null, new TextDefinition(1150528), $"@{m_Plot.PlotDef.ID}@{m_Plot.PlotDef.Map.ToString()}@{matching.ToString("N0")}"));
                 }
             }
             else if (m_Plot.Owner != null)
             {
                 /*Your lease has expired on Stall ~1_STALLNAME~ at the ~2_FACET~ New Magincia Bazaar.*/
-                MaginciaLottoSystem.SendMessageTo(m_Plot.Owner, new NewMaginciaMessage(null, new TextDefinition(1150430), string.Format("@{0}@{1}", m_Plot.PlotDef.ID, m_Plot.PlotDef.Map.ToString())));
+                MaginciaLottoSystem.SendMessageTo(m_Plot.Owner, new NewMaginciaMessage(null, new TextDefinition(1150430), $"@{m_Plot.PlotDef.ID}@{m_Plot.PlotDef.Map.ToString()}"));
             }
 
             if (winner == null)
diff --git a/Scripts/Services/New Magincia/Magincia Bazaar/Core/StorageEntry.cs b/Scripts/Services/New Magincia/Magincia Bazaar/Core/StorageEntry.cs
index adae7fe60..c7a7c259f 100644
--- a/Scripts/Services/New Magincia/Magincia Bazaar/Core/StorageEntry.cs	
+++ b/Scripts/Services/New Magincia/Magincia Bazaar/Core/StorageEntry.cs	
@@ -26,9 +26,9 @@ namespace Server.Engines.NewMagincia
             m_Funds += broker.BankBalance;
             m_Expires = DateTime.UtcNow + TimeSpan.FromDays(7);
 
-            if (broker is CommodityBroker)
+            if (broker is CommodityBroker commodityBroker)
             {
-                foreach (CommodityBrokerEntry entry in ((CommodityBroker)broker).CommodityEntries)
+                foreach (CommodityBrokerEntry entry in commodityBroker.CommodityEntries)
                 {
                     if (entry.Stock > 0)
                     {
@@ -36,9 +36,9 @@ namespace Server.Engines.NewMagincia
                     }
                 }
             }
-            else if (broker is PetBroker)
+            else if (broker is PetBroker petBroker)
             {
-                foreach (PetBrokerEntry entry in ((PetBroker)broker).BrokerEntries)
+                foreach (PetBrokerEntry entry in petBroker.BrokerEntries)
                 {
                     if (entry.Pet.Map != Map.Internal || !entry.Pet.IsStabled)
                     {
diff --git a/Scripts/Services/New Magincia/Magincia Bazaar/Gumps/BaseBazaarGump.cs b/Scripts/Services/New Magincia/Magincia Bazaar/Gumps/BaseBazaarGump.cs
index 7e72e82fc..3373400e0 100644
--- a/Scripts/Services/New Magincia/Magincia Bazaar/Gumps/BaseBazaarGump.cs	
+++ b/Scripts/Services/New Magincia/Magincia Bazaar/Gumps/BaseBazaarGump.cs	
@@ -39,7 +39,7 @@ namespace Server.Engines.NewMagincia
 
         protected string Color(string str, int color)
         {
-            return string.Format("<BASEFONT COLOR=#{0:X6}>{1}</BASEFONT>", color, str);
+            return $"<BASEFONT COLOR=#{color:X6}>{str}</BASEFONT>";
         }
 
         protected string FormatAmt(int amount)
@@ -49,22 +49,22 @@ namespace Server.Engines.NewMagincia
 
         protected string FormatStallName(string str)
         {
-            return string.Format("<DIV ALIGN=CENTER><i>{0}</i></DIV>", str);
+            return $"<DIV ALIGN=CENTER><i>{str}</i></DIV>";
         }
 
         protected string FormatBrokerName(string str)
         {
-            return string.Format("<DIV ALIGN=CENTER>{0}</DIV>", str);
+            return $"<DIV ALIGN=CENTER>{str}</DIV>";
         }
 
         protected string AlignRight(string str)
         {
-            return string.Format("<DIV ALIGN=RIGHT>{0}</DIV>", str);
+            return $"<DIV ALIGN=RIGHT>{str}</DIV>";
         }
 
         protected string AlignLeft(string str)
         {
-            return string.Format("<DIV ALIGN=LEFT>{0}</DIV>", str);
+            return $"<DIV ALIGN=LEFT>{str}</DIV>";
         }
     }
 }
diff --git a/Scripts/Services/New Magincia/Magincia Bazaar/Gumps/BizaarSignGump.cs b/Scripts/Services/New Magincia/Magincia Bazaar/Gumps/BizaarSignGump.cs
index a4e00d977..a255fb9bf 100644
--- a/Scripts/Services/New Magincia/Magincia Bazaar/Gumps/BizaarSignGump.cs	
+++ b/Scripts/Services/New Magincia/Magincia Bazaar/Gumps/BizaarSignGump.cs	
@@ -622,7 +622,7 @@ namespace Server.Engines.NewMagincia
 					  *bank balance is now ~5_NEWBAL~gp. */
 
                     cliloc1 = 1150576;
-                    args1 = string.Format("@{0}@{1}@{2}@{3}@{4}", FormatAmt(oldBid), "empty", "empty", FormatAmt(bankBal), FormatAmt(bankBal + oldBid));
+                    args1 = $"@{FormatAmt(oldBid)}@{"empty"}@{"empty"}@{FormatAmt(bankBal)}@{FormatAmt(bankBal + oldBid)}";
                 }
                 else
                 {
@@ -630,7 +630,7 @@ namespace Server.Engines.NewMagincia
 					 *refunded to your bank account, because your bank box cannot hold the additional 
 					 *funds. Your current bank balance is ~4_OLDVAL~gp.<br><br>Your bid status has not changed.*/
                     cliloc1 = 1150575;
-                    args1 = string.Format("@{0}@{1}@{2}@{3}", FormatAmt(oldBid), "empty", "empty", FormatAmt(bankBal));
+                    args1 = $"@{FormatAmt(oldBid)}@{"empty"}@{"empty"}@{FormatAmt(bankBal)}";
                 }
             }
             else if (oldBid == newBid)
@@ -650,7 +650,7 @@ namespace Server.Engines.NewMagincia
 
                             //You were previously bidding on Stall ~1_OLDSTALL~ and now you are bidding on Stall ~2_NEWSTALL~.
                             cliloc1 = 1150582;
-                            args1 = string.Format("@{0}@{1}", oldPlot.PlotDef.ID, newPlot.PlotDef.ID);
+                            args1 = $"@{oldPlot.PlotDef.ID}@{newPlot.PlotDef.ID}";
 
                             // You are now bidding on Stall ~1_NEWSTALL~
                             cliloc2 = 1150585;
@@ -664,7 +664,7 @@ namespace Server.Engines.NewMagincia
 
                             // You are still bidding on Stall ~2_NEWSTALL~.
                             cliloc2 = 1150583;
-                            args2 = string.Format("@{0}@{1}", "empty", oldPlot.PlotDef.ID);
+                            args2 = $"@{"empty"}@{oldPlot.PlotDef.ID}";
                         }
                     }
                     else
@@ -690,7 +690,7 @@ namespace Server.Engines.NewMagincia
 
                         //You were previously bidding on the first available stall, and now you are bidding specifically for Stall ~2_NEWSTALL~.
                         cliloc1 = 1150579;
-                        args1 = string.Format("@{0}@{1}", "empty", newPlot.PlotDef.ID);
+                        args1 = $"@{"empty"}@{newPlot.PlotDef.ID}";
 
                         // You are now bidding on the next available stall.
                         cliloc2 = 1150584;
@@ -721,13 +721,13 @@ namespace Server.Engines.NewMagincia
 						 *your bank account. Your current bank balance is ~4_CURBAL~gp.<br><br>The 
 						 *status of your bid has not changed.*/
                         cliloc1 = 1150571;
-                        args1 = string.Format("@{0}@{1}@{2}@{3}", FormatAmt(oldBid), FormatAmt(newBid), FormatAmt(dif), FormatAmt(bankBal));
+                        args1 = $"@{FormatAmt(oldBid)}@{FormatAmt(newBid)}@{FormatAmt(dif)}@{FormatAmt(bankBal)}";
 
                         if (hasbidspecific)
                         {
                             // You are still bidding on Stall ~2_NEWSTALL~.
                             cliloc2 = 1150583;
-                            args2 = string.Format("@{0}@{1}", "empty", oldPlot.PlotDef.ID);
+                            args2 = $"@{"empty"}@{oldPlot.PlotDef.ID}";
                         }
                         else if (hasbidnextavailable)
                         {
@@ -748,13 +748,13 @@ namespace Server.Engines.NewMagincia
 						 *funds. Your current bank balance is ~4_OLDVAL~gp.<br><br>Your bid status has not 
 						 changed.*/
                         cliloc1 = 1150575;
-                        args1 = string.Format("@{0}@{1}@{2}@{3}", FormatAmt(oldBid), "empty", "empty", FormatAmt(bankBal));
+                        args1 = $"@{FormatAmt(oldBid)}@{"empty"}@{"empty"}@{FormatAmt(bankBal)}";
 
                         if (hasbidspecific)
                         {
                             // You are still bidding on Stall ~2_NEWSTALL~.
                             cliloc2 = 1150583;
-                            args2 = string.Format("@{0}@{1}", "empty", oldPlot.PlotDef.ID);
+                            args2 = $"@{"empty"}@{oldPlot.PlotDef.ID}";
                         }
                         else if (hasbidnextavailable)
                         {
@@ -776,7 +776,7 @@ namespace Server.Engines.NewMagincia
 						*withdrawn from your bank box. Your previous bank balance was 
 						~4_OLDBAL~gp and your new bank balance is ~5_NEWBAL~gp.*/
                         cliloc1 = 1150578;
-                        args1 = string.Format("@{0}@{1}@{2}@{3}@{4}", "empty", FormatAmt(newBid), "empty", FormatAmt(bankBal), FormatAmt(bankBal - dif));
+                        args1 = $"@{"empty"}@{FormatAmt(newBid)}@{"empty"}@{FormatAmt(bankBal)}@{FormatAmt(bankBal - dif)}";
 
                         if (hasbidspecific && oldPlot == newPlot)       // same plot
                         {
@@ -787,20 +787,20 @@ namespace Server.Engines.NewMagincia
                             cliloc1 = 1150572;
                             //You are still bidding on Stall ~2_NEWSTALL~.
                             cliloc2 = 1150583;
-                            args1 = string.Format("@{0}@{1}@{2}@{3}@{4}", FormatAmt(oldBid), FormatAmt(newBid), FormatAmt(dif), FormatAmt(bankBal), FormatAmt(bankBal - dif));
-                            args2 = string.Format("@{0}@{1}", "empty", newPlot.PlotDef.ID);
+                            args1 = $"@{FormatAmt(oldBid)}@{FormatAmt(newBid)}@{FormatAmt(dif)}@{FormatAmt(bankBal)}@{FormatAmt(bankBal - dif)}";
+                            args2 = $"@{"empty"}@{newPlot.PlotDef.ID}";
                         }
                         else if (hasbidspecific && oldPlot != newPlot)  // switching plots
                         {
                             //You were previously bidding on Stall ~1_OLDSTALL~ and now you are bidding on Stall ~2_NEWSTALL~.
                             cliloc2 = 1150582;
-                            args2 = string.Format("@{0}@{1}", oldPlot.PlotDef.ID, newPlot.PlotDef.ID);
+                            args2 = $"@{oldPlot.PlotDef.ID}@{newPlot.PlotDef.ID}";
                         }
                         else if (hasbidnextavailable)                   // had next available
                         {
                             //You were previously bidding on the first available stall, and now you are bidding specifically for Stall ~2_NEWSTALL~.
                             cliloc2 = 1150579;
-                            args2 = string.Format("@{0}@{1}", "empty", newPlot.PlotDef.ID);
+                            args2 = $"@{"empty"}@{newPlot.PlotDef.ID}";
                         }
                         else                                            // no bids before
                         {
@@ -821,13 +821,13 @@ namespace Server.Engines.NewMagincia
 						 *funds. Your current bank balance is ~4_OLDVAL~gp.<br><br>Your bid status has not 
 						 changed.*/
                         cliloc1 = 1150575;
-                        args1 = string.Format("@{0}@{1}@{2}@{3}", FormatAmt(oldBid), "empty", "empty", FormatAmt(bankBal));
+                        args1 = $"@{FormatAmt(oldBid)}@{"empty"}@{"empty"}@{FormatAmt(bankBal)}";
 
                         if (hasbidspecific)
                         {
                             // You are still bidding on Stall ~2_NEWSTALL~.
                             cliloc2 = 1150583;
-                            args2 = string.Format("@{0}@{1}", "empty", oldPlot.PlotDef.ID);
+                            args2 = $"@{"empty"}@{oldPlot.PlotDef.ID}";
                         }
                         else if (hasbidnextavailable)
                         {
@@ -847,7 +847,7 @@ namespace Server.Engines.NewMagincia
 						*withdrawn from your bank box. Your previous bank balance was 
 						~4_OLDBAL~gp and your new bank balance is ~5_NEWBAL~gp.*/
                         cliloc1 = 1150578;
-                        args1 = string.Format("@{0}@{1}@{2}@{3}@{4}", "empty", FormatAmt(newBid), "empty", FormatAmt(bankBal), FormatAmt(bankBal - dif));
+                        args1 = $"@{"empty"}@{FormatAmt(newBid)}@{"empty"}@{FormatAmt(bankBal)}@{FormatAmt(bankBal - dif)}";
 
                         Banker.Withdraw(from, newBid);
                         newPlot.Auction.MakeBid(from, newBid);
@@ -861,20 +861,20 @@ namespace Server.Engines.NewMagincia
                             cliloc1 = 1150574;
                             //You are still bidding on Stall ~2_NEWSTALL~.
                             cliloc2 = 1150583;
-                            args1 = string.Format("@{0}@{1}@{2}@{3}@{4}", FormatAmt(oldBid), FormatAmt(newBid), FormatAmt(dif), FormatAmt(bankBal), FormatAmt(bankBal + dif));
-                            args2 = string.Format("@{0}@{1}", "empty", oldPlot.PlotDef.ID);
+                            args1 = $"@{FormatAmt(oldBid)}@{FormatAmt(newBid)}@{FormatAmt(dif)}@{FormatAmt(bankBal)}@{FormatAmt(bankBal + dif)}";
+                            args2 = $"@{"empty"}@{oldPlot.PlotDef.ID}";
                         }
                         else if (hasbidspecific && oldPlot != newPlot)  // switch plots
                         {
                             //You were previously bidding on Stall ~1_OLDSTALL~ and now you are bidding on Stall ~2_NEWSTALL~.
                             cliloc2 = 1150582;
-                            args2 = string.Format("@{0}@{1}", oldPlot.PlotDef.ID, newPlot.PlotDef.ID);
+                            args2 = $"@{oldPlot.PlotDef.ID}@{newPlot.PlotDef.ID}";
                         }
                         else if (hasbidnextavailable)                   // new plot
                         {
                             //You were previously bidding on the first available stall, and now you are bidding specifically for Stall ~2_NEWSTALL~.
                             cliloc2 = 1150579;
-                            args2 = string.Format("@{0}@{1}", "empty", newPlot.PlotDef.ID);
+                            args2 = $"@{"empty"}@{newPlot.PlotDef.ID}";
                         }
                         else
                         {
@@ -897,13 +897,13 @@ namespace Server.Engines.NewMagincia
                          *your current bank balance of ~4_OLDBAL~gp.<br><br>Your bid status has not 
                          changed.*/
                         cliloc1 = 1150577;
-                        args1 = string.Format("@{0}@{1}@{2}@{3}", "empty", FormatAmt(newBid), "empty", FormatAmt(bankBal));
+                        args1 = $"@{"empty"}@{FormatAmt(newBid)}@{"empty"}@{FormatAmt(bankBal)}";
 
                         if (hasbidspecific)
                         {
                             // You are still bidding on Stall ~2_NEWSTALL~.
                             cliloc2 = 1150583;
-                            args2 = string.Format("@{0}@{1}", "empty", oldPlot.PlotDef.ID);
+                            args2 = $"@{"empty"}@{oldPlot.PlotDef.ID}";
                         }
                         else if (hasbidnextavailable)
                         {
@@ -924,13 +924,13 @@ namespace Server.Engines.NewMagincia
 						 *funds. Your current bank balance is ~4_OLDVAL~gp.<br><br>Your bid status has not 
 						 changed.*/
                         cliloc1 = 1150575;
-                        args1 = string.Format("@{0}@{1}@{2}@{3}", FormatAmt(oldBid), "empty", "empty", FormatAmt(bankBal));
+                        args1 = $"@{FormatAmt(oldBid)}@{"empty"}@{"empty"}@{FormatAmt(bankBal)}";
 
                         if (hasbidspecific)
                         {
                             // You are still bidding on Stall ~2_NEWSTALL~.
                             cliloc2 = 1150583;
-                            args2 = string.Format("@{0}@{1}", "empty", oldPlot.PlotDef.ID);
+                            args2 = $"@{"empty"}@{oldPlot.PlotDef.ID}";
                         }
                         else if (hasbidnextavailable)
                         {
@@ -953,7 +953,7 @@ namespace Server.Engines.NewMagincia
 						*withdrawn from your bank box. Your previous bank balance was 
 						*~4_OLDBAL~gp and your new bank balance is ~5_NEWBAL~gp.*/
                         cliloc1 = 1150578;
-                        args1 = string.Format("@{0}@{1}@{2}@{3}@{4}", "empty", FormatAmt(newBid), "empty", FormatAmt(bankBal), FormatAmt(bankBal - newBid));
+                        args1 = $"@{"empty"}@{FormatAmt(newBid)}@{"empty"}@{FormatAmt(bankBal)}@{FormatAmt(bankBal - newBid)}";
 
                         if (hasbidspecific)             // Change from specific to next available
                         {
@@ -986,13 +986,13 @@ namespace Server.Engines.NewMagincia
 						 *funds. Your current bank balance is ~4_OLDVAL~gp.<br><br>Your bid status has not 
 						 changed.*/
                         cliloc1 = 1150575;
-                        args1 = string.Format("@{0}@{1}@{2}@{3}", FormatAmt(oldBid), "empty", "empty", FormatAmt(bankBal));
+                        args1 = $"@{FormatAmt(oldBid)}@{"empty"}@{"empty"}@{FormatAmt(bankBal)}";
 
                         if (hasbidspecific)
                         {
                             // You are still bidding on Stall ~2_NEWSTALL~.
                             cliloc2 = 1150583;
-                            args2 = string.Format("@{0}@{1}", "empty", oldPlot.PlotDef.ID);
+                            args2 = $"@{"empty"}@{oldPlot.PlotDef.ID}";
                         }
                         else if (hasbidnextavailable)
                         {
@@ -1012,7 +1012,7 @@ namespace Server.Engines.NewMagincia
 						*withdrawn from your bank box. Your previous bank balance was 
 						*~4_OLDBAL~gp and your new bank balance is ~5_NEWBAL~gp.*/
                         cliloc1 = 1150578;
-                        args1 = string.Format("@{0}@{1}@{2}@{3}@{4}", "empty", FormatAmt(newBid), "empty", FormatAmt(bankBal), FormatAmt(bankBal - newBid));
+                        args1 = $"@{"empty"}@{FormatAmt(newBid)}@{"empty"}@{FormatAmt(bankBal)}@{FormatAmt(bankBal - newBid)}";
 
                         Banker.Withdraw(from, newBid);
                         MaginciaBazaar.MakeBidNextAvailable(from, newBid);
@@ -1181,7 +1181,7 @@ namespace Server.Engines.NewMagincia
 					 *failed. The difference of ~3_CHANGE~gp could not be withdrawn from your bank 
 					 *account balance. Your current bank balance is ~5_NEWBAL~gp.*/
                     cliloc1 = 1150588;
-                    args1 = string.Format("@{0}@{1}@{2}@{3}", FormatAmt(current), FormatAmt(amount), FormatAmt(dif), FormatAmt(bankBal));
+                    args1 = $"@{FormatAmt(current)}@{FormatAmt(amount)}@{FormatAmt(dif)}@{FormatAmt(bankBal)}";
                 }
                 else
                 {
@@ -1192,7 +1192,7 @@ namespace Server.Engines.NewMagincia
 					 *Your previous bank balance was ~4_OLDBAL~gp and your current bank balance is 
 					 ~5_NEWBAL~gp.*/
                     cliloc1 = 1150589;
-                    args1 = string.Format("@{0}@{1}@{2}@{3}@{4}", FormatAmt(current), FormatAmt(amount), FormatAmt(dif), FormatAmt(bankBal), FormatAmt(bankBal - dif));
+                    args1 = $"@{FormatAmt(current)}@{FormatAmt(amount)}@{FormatAmt(dif)}@{FormatAmt(bankBal)}@{FormatAmt(bankBal - dif)}";
                 }
             }
             else if (amount < current)
@@ -1205,7 +1205,7 @@ namespace Server.Engines.NewMagincia
 					 *failed. The difference of ~3_CHANGE~gp could not be deposited into your bank 
 					 box. Your current bank balance is ~5_NEWBAL~gp.*/
                     cliloc1 = 1150590;
-                    args1 = string.Format("@{0}@{1}@{2}@{3}", FormatAmt(current), FormatAmt(amount), FormatAmt(dif), FormatAmt(bankBal));
+                    args1 = $"@{FormatAmt(current)}@{FormatAmt(amount)}@{FormatAmt(dif)}@{FormatAmt(bankBal)}";
                 }
                 else
                 {
@@ -1215,7 +1215,7 @@ namespace Server.Engines.NewMagincia
 					 *previous bank balance was ~4_OLDBAL~gp and your current bank balance is 
 					 ~5_NEWBAL~gp.*/
                     cliloc1 = 1150591;
-                    args1 = string.Format("@{0}@{1}@{2}@{3}@{4}", FormatAmt(current), FormatAmt(amount), FormatAmt(dif), FormatAmt(bankBal), FormatAmt(bankBal + dif));
+                    args1 = $"@{FormatAmt(current)}@{FormatAmt(amount)}@{FormatAmt(dif)}@{FormatAmt(bankBal)}@{FormatAmt(bankBal + dif)}";
                 }
             }
             else
@@ -1268,9 +1268,9 @@ namespace Server.Engines.NewMagincia
             AddHtmlLocalized(10, 10, 500, 18, 1114513, "#1150385", useHue, false, false); // New Magincia Bazaar
 
             if (title > 0)
-                AddHtmlLocalized(10, 48, 500, 40, 1114513, string.Format("#{0}", title), useHue, false, false);
+                AddHtmlLocalized(10, 48, 500, 40, 1114513, $"#{title}", useHue, false, false);
 
-            AddHtmlLocalized(10, 95, 500, 375, 1114513, string.Format("#{0}", message), useHue, true, true);
+            AddHtmlLocalized(10, 95, 500, 375, 1114513, $"#{message}", useHue, true, true);
 
             if (g != null)
             {
@@ -1323,7 +1323,7 @@ namespace Server.Engines.NewMagincia
                     {
                         Target = from.Location,
                         TargetMap = from.Map,
-                        Description = string.Format("Lot: {0}", m_Sign.Plot.PlotDef.ID),
+                        Description = $"Lot: {m_Sign.Plot.PlotDef.ID}",
                         Marked = true
                     };
 
diff --git a/Scripts/Services/New Magincia/Magincia Bazaar/Gumps/CommodityBrokerGump.cs b/Scripts/Services/New Magincia/Magincia Bazaar/Gumps/CommodityBrokerGump.cs
index 0e9e98ce1..c7bcb3eae 100644
--- a/Scripts/Services/New Magincia/Magincia Bazaar/Gumps/CommodityBrokerGump.cs	
+++ b/Scripts/Services/New Magincia/Magincia Bazaar/Gumps/CommodityBrokerGump.cs	
@@ -29,7 +29,7 @@ namespace Server.Engines.NewMagincia
             }
 
             AddHtmlLocalized(10, 55, 260, 18, 1114514, "#1150313", BlueColor16, false, false); // Proprietor:
-            AddHtml(280, 55, 260, 18, Color(string.Format("{0}", broker.Name), BlueColor), false, false);
+            AddHtml(280, 55, 260, 18, Color($"{broker.Name}", BlueColor), false, false);
 
             AddHtmlLocalized(10, 100, 500, 18, 1114513, "#1150328", GreenColor16, false, false); // OWNER MENU
 
@@ -247,7 +247,7 @@ namespace Server.Engines.NewMagincia
             }
 
             AddHtmlLocalized(10, 55, 260, 18, 1114514, "#1150313", BlueColor16, false, false); // Proprietor:
-            AddHtml(280, 55, 260, 18, Color(string.Format("{0}", broker.Name), BlueColor), false, false);
+            AddHtml(280, 55, 260, 18, Color($"{broker.Name}", BlueColor), false, false);
 
             /* Target commodity items or filled commodity deeds in your backpack to add them to the 
 			 * broker's inventory. These items will be retrievable, and the broker will not trade them 
@@ -311,7 +311,7 @@ namespace Server.Engines.NewMagincia
                 int col16 = col == YellowColor ? YellowColor16 : OrangeColor16;
                 CommodityBrokerEntry entry = broker.CommodityEntries[i];
 
-                AddHtmlLocalized(1, y, 130, 18, 1114514, string.Format("#{0}", entry.Label), col16, false, false); // <DIV ALIGN=RIGHT>~1_TOKEN~</DIV>
+                AddHtmlLocalized(1, y, 130, 18, 1114514, $"#{entry.Label}", col16, false, false); // <DIV ALIGN=RIGHT>~1_TOKEN~</DIV>
                 AddHtml(170, y, 45, 18, Color(AlignRight(FormatAmt(entry.BuyPricePer)), col), false, false);
                 AddHtml(230, y, 80, 18, Color(AlignRight(FormatAmt(entry.BuyLimit)), col), false, false);
                 AddHtml(315, y, 45, 18, Color(AlignRight(FormatAmt(entry.SellPricePer)), col), false, false);
@@ -484,7 +484,7 @@ namespace Server.Engines.NewMagincia
                 int col16 = col == YellowColor ? YellowColor16 : OrangeColor16;
                 CommodityBrokerEntry entry = broker.CommodityEntries[i];
 
-                AddHtmlLocalized(1, y, 260, 18, 1114514, string.Format("#{0}", entry.Label), col16, false, false); // <DIV ALIGN=RIGHT>~1_TOKEN~</DIV>
+                AddHtmlLocalized(1, y, 260, 18, 1114514, $"#{entry.Label}", col16, false, false); // <DIV ALIGN=RIGHT>~1_TOKEN~</DIV>
                 AddHtml(360, y, 55, 18, Color(AlignRight(FormatAmt(entry.Stock)), col), false, false);
 
                 AddButton(440, y, 4014, 4016, 1000 + i, GumpButtonType.Reply, 0); // SELECT
@@ -654,7 +654,7 @@ namespace Server.Engines.NewMagincia
             }
 
             AddHtmlLocalized(10, 55, 310, 18, 1114514, "#1150313", BlueColor16, false, false); // Proprietor:
-            AddHtml(330, 55, 320, 18, Color(string.Format("{0}", broker.Name), BlueColor), false, false);
+            AddHtml(330, 55, 320, 18, Color($"{broker.Name}", BlueColor), false, false);
 
             if (cliloc != 0)
             {
@@ -674,7 +674,7 @@ namespace Server.Engines.NewMagincia
                 }
                 else
                 {
-                    AddHtmlLocalized(10, 127, 640, 354, 1114513, string.Format("#{0}", cliloc), OrangeColor16, false, false);
+                    AddHtmlLocalized(10, 127, 640, 354, 1114513, $"#{cliloc}", OrangeColor16, false, false);
                 }
 
                 AddButton(10, 490, 0xFAE, 0xFAF, 999, GumpButtonType.Reply, 0);
@@ -729,7 +729,7 @@ namespace Server.Engines.NewMagincia
                         }
 
                         // what we're selling/buying
-                        AddHtmlLocalized(200, y, 164, 20, 1114514, string.Format("#{0}", entry.Label), OrangeColor16, false, false); // <DIV ALIGN=RIGHT>~1_TOKEN~</DIV>
+                        AddHtmlLocalized(200, y, 164, 20, 1114514, $"#{entry.Label}", OrangeColor16, false, false); // <DIV ALIGN=RIGHT>~1_TOKEN~</DIV>
                         AddTooltip(entry.Label);
 
                         // buy from player
@@ -957,7 +957,7 @@ namespace Server.Engines.NewMagincia
             }
 
             AddHtmlLocalized(10, 55, 310, 18, 1114514, "#1150313", BlueColor16, false, false); // Proprietor:
-            AddHtml(330, 55, 320, 18, Color(string.Format("{0}", broker.Name), BlueColor), false, false);
+            AddHtml(330, 55, 320, 18, Color($"{broker.Name}", BlueColor), false, false);
 
             AddHtmlLocalized(10, 127, 640, 64, 1114513, "#1150666", RedColor16, false, false); // Please review the details of this transaction. If you wish to make this trade, click the TRADE button below. Otherwise, click the MAIN MENU button to return to the price list.
 
@@ -969,7 +969,7 @@ namespace Server.Engines.NewMagincia
                 AddHtmlLocalized(230, 193, 420, 18, m_Broker.GetLabelID(entry), DarkGreenColor16, false, false);
 
                 AddHtmlLocalized(10, 213, 210, 18, 1114514, "#1150152", OrangeColor16, false, false); // Quantity to Buy:
-                AddHtml(230, 213, 420, 18, Color(string.Format("{0}", amount), DarkGreenColor), false, false);
+                AddHtml(230, 213, 420, 18, Color($"{amount}", DarkGreenColor), false, false);
 
                 AddHtmlLocalized(10, 233, 210, 18, 1114514, "#1150246", OrangeColor16, false, false); // Total Cost:
                 AddHtml(230, 233, 420, 18, Color(FormatAmt(cost), DarkGreenColor), false, false);
@@ -985,7 +985,7 @@ namespace Server.Engines.NewMagincia
                 AddHtmlLocalized(230, 193, 420, 18, m_Broker.GetLabelID(entry), DarkGreenColor16, false, false);
 
                 AddHtmlLocalized(10, 213, 210, 18, 1114514, "#1150153", OrangeColor16, false, false); // Quantity to Sell:
-                AddHtml(230, 213, 420, 18, Color(string.Format("{0}", amount), DarkGreenColor), false, false);
+                AddHtml(230, 213, 420, 18, Color($"{amount}", DarkGreenColor), false, false);
 
                 AddHtmlLocalized(10, 233, 210, 18, 1114514, "#1150251", OrangeColor16, false, false); // Gold You Will Receive:
                 AddHtml(230, 233, 420, 18, Color(FormatAmt(cost), DarkGreenColor), false, false);
diff --git a/Scripts/Services/New Magincia/Magincia Bazaar/Gumps/PetBrokerGumps.cs b/Scripts/Services/New Magincia/Magincia Bazaar/Gumps/PetBrokerGumps.cs
index da7d6d3e4..75f8aafd3 100644
--- a/Scripts/Services/New Magincia/Magincia Bazaar/Gumps/PetBrokerGumps.cs	
+++ b/Scripts/Services/New Magincia/Magincia Bazaar/Gumps/PetBrokerGumps.cs	
@@ -21,7 +21,7 @@ namespace Server.Engines.NewMagincia
             else
                 AddHtmlLocalized(180, 40, 200, 18, 1150314, BlueColor16, false, false); // This Shop Has No Name
 
-            AddHtml(173, 65, 173, 18, Color(FormatBrokerName(string.Format("Proprietor: {0}", broker.Name)), BlueColor), false, false);
+            AddHtml(173, 65, 173, 18, Color(FormatBrokerName($"Proprietor: {broker.Name}"), BlueColor), false, false);
 
             AddHtmlLocalized(215, 100, 200, 18, 1150328, GreenColor16, false, false); // Owner Menu
 
@@ -195,7 +195,7 @@ namespace Server.Engines.NewMagincia
                     continue;
 
                 AddButton(10, y, 4005, 4007, i + 1, GumpButtonType.Reply, 0);
-                AddHtmlLocalized(60, y, 200, 18, 1150340, string.Format("{0}\t{1}", bc.Name, PetBrokerEntry.GetOriginalName(bc)), col, false, false); // ~1_NAME~ (~2_type~)
+                AddHtmlLocalized(60, y, 200, 18, 1150340, $"{bc.Name}\t{PetBrokerEntry.GetOriginalName(bc)}", col, false, false); // ~1_NAME~ (~2_type~)
                 y += 22;
             }
 
@@ -247,7 +247,7 @@ namespace Server.Engines.NewMagincia
                         {
                             from.Stabled.Remove(bc);
                             from.SendGump(new SetPetPricesGump(m_Broker));
-                            from.SendLocalizedMessage(1150345, string.Format("{0}\t{1}\t{2}\t{3}", PetBrokerEntry.GetOriginalName(bc), bc.Name, m_Broker.Name, cost)); // Your pet ~1_TYPE~ named ~2_NAME~ has been transferred to the inventory of your animal broker named ~3_SHOP~ with an asking price of ~4_PRICE~.
+                            from.SendLocalizedMessage(1150345, $"{PetBrokerEntry.GetOriginalName(bc)}\t{bc.Name}\t{m_Broker.Name}\t{cost}"); // Your pet ~1_TYPE~ named ~2_NAME~ has been transferred to the inventory of your animal broker named ~3_SHOP~ with an asking price of ~4_PRICE~.
                         }
                     }
                     else
@@ -312,7 +312,7 @@ namespace Server.Engines.NewMagincia
                 BaseCreature bc = broker.BrokerEntries[i].Pet;
                 int col = index == i ? YellowColor16 : OrangeColor16;
                 AddButton(10, y, 4005, 4007, i + 1, GumpButtonType.Reply, 0);
-                AddHtmlLocalized(50, y, 200, 18, 1150340, string.Format("{0}\t{1}", bc.Name, PetBrokerEntry.GetOriginalName(bc)), col, false, false); // ~1_NAME~ (~2_type~)
+                AddHtmlLocalized(50, y, 200, 18, 1150340, $"{bc.Name}\t{PetBrokerEntry.GetOriginalName(bc)}", col, false, false); // ~1_NAME~ (~2_type~)
 
                 y += 20;
             }
@@ -351,7 +351,7 @@ namespace Server.Engines.NewMagincia
 
                         PetBroker.SendToStables(from, bc);
 
-                        from.SendLocalizedMessage(1150635, string.Format("{0}\t{1}", entry.TypeName, bc.Name)); // Your pet ~1_TYPE~ named ~2_NAME~ has been transferred to the stables.
+                        from.SendLocalizedMessage(1150635, $"{entry.TypeName}\t{bc.Name}"); // Your pet ~1_TYPE~ named ~2_NAME~ has been transferred to the stables.
                         from.SendGump(new PetBrokerGump(m_Broker, from));
                         return;
                     }
@@ -478,7 +478,7 @@ namespace Server.Engines.NewMagincia
             }
 
             AddHtmlLocalized(10, 55, 240, 18, 1114514, "#1150313", BlueColor16, false, false); // Proprietor:
-            AddHtml(260, 55, 250, 18, Color(string.Format("{0}", broker.Name), BlueColor), false, false);
+            AddHtml(260, 55, 250, 18, Color($"{broker.Name}", BlueColor), false, false);
 
             if (m_Entries.Count != 0)
             {
@@ -537,15 +537,15 @@ namespace Server.Engines.NewMagincia
                 {
                     PetBrokerEntry entry = m_Entries[id];
 
-                    if (entry != null && entry.Pet != null && m_Broker.BrokerEntries.Contains(entry))
+                    if (entry?.Pet != null && m_Broker.BrokerEntries.Contains(entry))
                     {
                         from.SendGump(new PetInventoryGump(m_Broker, from));
 
-                        if (from is PlayerMobile)
+                        if (from is PlayerMobile playerMobile)
                         {
                             Timer.DelayCall(TimeSpan.FromSeconds(1), () =>
                             {
-                                BaseGump.SendGump(new NewAnimalLoreGump((PlayerMobile)from, entry.Pet));
+                                BaseGump.SendGump(new NewAnimalLoreGump(playerMobile, entry.Pet));
                             });
                         }
                     }
@@ -563,7 +563,7 @@ namespace Server.Engines.NewMagincia
                 {
                     PetBrokerEntry entry = m_Entries[id];
 
-                    if (entry != null && entry.Pet != null && m_Broker.BrokerEntries.Contains(entry) && entry.Pet.IsStabled)
+                    if (entry?.Pet != null && m_Broker.BrokerEntries.Contains(entry) && entry.Pet.IsStabled)
                     {
                         BaseCreature pet = entry.Pet;
 
@@ -578,7 +578,7 @@ namespace Server.Engines.NewMagincia
                         pet.Loyalty = BaseCreature.MaxLoyalty;
 
                         PetBroker.AddToViewTimer(pet);
-                        from.SendLocalizedMessage(1150369, string.Format("{0}\t{1}", entry.TypeName, pet.Name)); // The ~1_TYPE~ named "~2_NAME~" is now in the animal broker's pen for inspection.
+                        from.SendLocalizedMessage(1150369, $"{entry.TypeName}\t{pet.Name}"); // The ~1_TYPE~ named "~2_NAME~" is now in the animal broker's pen for inspection.
                     }
                     else
                         from.SendLocalizedMessage(1150368); // The selected animal is not available.
@@ -594,7 +594,7 @@ namespace Server.Engines.NewMagincia
                 {
                     PetBrokerEntry entry = m_Entries[id];
 
-                    if (entry != null && entry.Pet != null && m_Broker.BrokerEntries.Contains(entry))
+                    if (entry?.Pet != null && m_Broker.BrokerEntries.Contains(entry))
                         from.SendGump(new ConfirmBuyPetGump(m_Broker, entry));
                 }
             }
@@ -621,7 +621,7 @@ namespace Server.Engines.NewMagincia
             }
 
             AddHtmlLocalized(10, 55, 240, 18, 1114514, "#1150313", BlueColor16, false, false); // Proprietor:
-            AddHtml(260, 55, 250, 18, Color(string.Format("{0}", broker.Name), BlueColor), false, false);
+            AddHtml(260, 55, 250, 18, Color($"{broker.Name}", BlueColor), false, false);
 
             AddHtmlLocalized(10, 91, 500, 18, 1114513, "#1150375", GreenColor16, false, false); // PURCHASE PET
             AddHtmlLocalized(10, 118, 500, 72, 1114513, "#1150370", GreenColor16, false, false); // Please confirm your purchase order below, and click "ACCEPT" if you wish to purchase this animal.
@@ -693,9 +693,9 @@ namespace Server.Engines.NewMagincia
             }
 
             AddHtmlLocalized(10, 55, 240, 18, 1114514, "#1150313", BlueColor16, false, false); // Proprietor:
-            AddHtml(260, 55, 250, 18, Color(string.Format("{0}", broker.Name), BlueColor), false, false);
+            AddHtml(260, 55, 250, 18, Color($"{broker.Name}", BlueColor), false, false);
 
-            AddHtmlLocalized(10, 127, 500, 534, 1114513, string.Format("#{0}", cliloc), OrangeColor16, false, false);
+            AddHtmlLocalized(10, 127, 500, 534, 1114513, $"#{cliloc}", OrangeColor16, false, false);
 
             AddButton(10, 490, 0xFAE, 0xFAF, 1, GumpButtonType.Reply, 0);
             AddHtmlLocalized(50, 490, 210, 20, 1149777, BlueColor16, false, false); // MAIN MENU
diff --git a/Scripts/Services/New Magincia/Magincia Bazaar/Mobiles/CommodityBroker.cs b/Scripts/Services/New Magincia/Magincia Bazaar/Mobiles/CommodityBroker.cs
index 58ca1416e..8ae5c3696 100644
--- a/Scripts/Services/New Magincia/Magincia Bazaar/Mobiles/CommodityBroker.cs	
+++ b/Scripts/Services/New Magincia/Magincia Bazaar/Mobiles/CommodityBroker.cs	
@@ -53,8 +53,8 @@ namespace Server.Engines.NewMagincia
         {
             Item realItem = item;
 
-            if (item is CommodityDeed)
-                realItem = ((CommodityDeed)item).Commodity;
+            if (item is CommodityDeed commodityDeed)
+                realItem = commodityDeed.Commodity;
 
             Type type = realItem.GetType();
             int amount = realItem.Amount;
@@ -66,7 +66,7 @@ namespace Server.Engines.NewMagincia
             m_CommodityEntries.Add(entry);
 
             if (amount > 0)
-                from.SendLocalizedMessage(1150220, string.Format("{0}\t#{1}\t{2}", amount.ToString(), entry.Label, Plot.ShopName == null ? "an unnamed shop" : Plot.ShopName)); // You have added ~1_QUANTITY~ units of ~2_ITEMNAME~ to the inventory of "~3_SHOPNAME~"
+                from.SendLocalizedMessage(1150220, $"{amount.ToString()}\t#{entry.Label}\t{(Plot.ShopName == null ? "an unnamed shop" : Plot.ShopName)}"); // You have added ~1_QUANTITY~ units of ~2_ITEMNAME~ to the inventory of "~3_SHOPNAME~"
 
             item.Delete();
 
@@ -99,9 +99,9 @@ namespace Server.Engines.NewMagincia
             Type type = item.GetType();
             int amountToAdd = item.Amount;
 
-            if (item is CommodityDeed)
+            if (item is CommodityDeed commodityDeed)
             {
-                type = ((CommodityDeed)item).Commodity.GetType();
+                type = commodityDeed.Commodity.GetType();
                 amountToAdd = ((CommodityDeed)item).Commodity.Amount;
             }
 
@@ -113,7 +113,7 @@ namespace Server.Engines.NewMagincia
                     item.Delete();
 
                     if (from != null && Plot.Owner == from)
-                        from.SendLocalizedMessage(1150220, string.Format("{0}\t#{1}\t{2}", amountToAdd.ToString(), entry.Label, Plot.ShopName == null ? "an unnamed shop" : Plot.ShopName)); // You have added ~1_QUANTITY~ units of ~2_ITEMNAME~ to the inventory of "~3_SHOPNAME~"
+                        from.SendLocalizedMessage(1150220, $"{amountToAdd.ToString()}\t#{entry.Label}\t{(Plot.ShopName == null ? "an unnamed shop" : Plot.ShopName)}"); // You have added ~1_QUANTITY~ units of ~2_ITEMNAME~ to the inventory of "~3_SHOPNAME~"
                     break;
                 }
             }
@@ -164,7 +164,7 @@ namespace Server.Engines.NewMagincia
             }
 
             if (Plot != null && from == Plot.Owner)
-                from.SendLocalizedMessage(1150221, string.Format("{0}\t#{1}\t{2}", amount.ToString(), entry.Label, Plot.ShopName != null ? Plot.ShopName : "a shop with no name")); // You have removed ~1_QUANTITY~ units of ~2_ITEMNAME~ from the inventory of "~3_SHOPNAME~"
+                from.SendLocalizedMessage(1150221, $"{amount.ToString()}\t#{entry.Label}\t{(Plot.ShopName != null ? Plot.ShopName : "a shop with no name")}"); // You have removed ~1_QUANTITY~ units of ~2_ITEMNAME~ from the inventory of "~3_SHOPNAME~"
         }
 
         public int GetBuyCost(Mobile from, CommodityBrokerEntry entry, int amount)
@@ -183,7 +183,7 @@ namespace Server.Engines.NewMagincia
 
             if (Banker.Withdraw(from, totalCost, true))
             {
-                from.SendLocalizedMessage(1150643, string.Format("{0}\t#{1}", amount.ToString("###,###,###"), entry.Label)); // A commodity deed worth ~1_AMOUNT~ ~2_ITEM~ has been placed in your backpack.
+                from.SendLocalizedMessage(1150643, $"{amount.ToString("###,###,###")}\t#{entry.Label}"); // A commodity deed worth ~1_AMOUNT~ ~2_ITEM~ has been placed in your backpack.
                 WithdrawInventory(from, amount, entry);
                 BankBalance += toAdd;
             }
@@ -237,7 +237,7 @@ namespace Server.Engines.NewMagincia
                         TakeCommodities(from.Backpack, type, ref total);
 
                     BankBalance -= totalCost + (int)(totalCost * (ComissionFee / 100.0));
-                    from.SendLocalizedMessage(1150668, string.Format("{0}\t#{1}", amount.ToString(), entry.Label)); // You have sold ~1_QUANTITY~ units of ~2_COMMODITY~ to the broker. These have been transferred from deeds and/or items in your backpack.
+                    from.SendLocalizedMessage(1150668, $"{amount.ToString()}\t#{entry.Label}"); // You have sold ~1_QUANTITY~ units of ~2_COMMODITY~ to the broker. These have been transferred from deeds and/or items in your backpack.
                 }
                 else
                     from.SendLocalizedMessage(1150265); // Your bank box cannot hold the proceeds from this transaction.
@@ -256,7 +256,7 @@ namespace Server.Engines.NewMagincia
             {
                 CommodityDeed commodityDeed = item as CommodityDeed;
 
-                if (commodityDeed != null && commodityDeed.Commodity != null && commodityDeed.Commodity.GetType() == type)
+                if (commodityDeed?.Commodity != null && commodityDeed.Commodity.GetType() == type)
                 {
                     Item commodity = commodityDeed.Commodity;
 
diff --git a/Scripts/Services/New Magincia/Magincia Bazaar/Mobiles/PetBroker.cs b/Scripts/Services/New Magincia/Magincia Bazaar/Mobiles/PetBroker.cs
index 8308b955e..de4b7172c 100644
--- a/Scripts/Services/New Magincia/Magincia Bazaar/Mobiles/PetBroker.cs	
+++ b/Scripts/Services/New Magincia/Magincia Bazaar/Mobiles/PetBroker.cs	
@@ -152,7 +152,7 @@ namespace Server.Engines.NewMagincia
 
                 SendToStables(from, pet);
 
-                from.SendLocalizedMessage(1150380, string.Format("{0}\t{1}", entry.TypeName, pet.Name)); // You have purchased ~1_TYPE~ named "~2_NAME~". The animal is now in the stables and you may retrieve it there.
+                from.SendLocalizedMessage(1150380, $"{entry.TypeName}\t{pet.Name}"); // You have purchased ~1_TYPE~ named "~2_NAME~". The animal is now in the stables and you may retrieve it there.
                 m_BrokerEntries.Remove(entry);
                 return 0;
             }
@@ -175,8 +175,8 @@ namespace Server.Engines.NewMagincia
 
         public static void SendToBrokerStables(BaseCreature pet)
         {
-            if (pet is BaseMount)
-                ((BaseMount)pet).Rider = null;
+            if (pet is BaseMount baseMount)
+                baseMount.Rider = null;
 
             pet.ControlTarget = null;
             pet.ControlOrder = OrderType.Stay;
diff --git a/Scripts/Services/New Magincia/Magincia Bazaar/Mobiles/WarehouseSuperintendent.cs b/Scripts/Services/New Magincia/Magincia Bazaar/Mobiles/WarehouseSuperintendent.cs
index 0ad3f94c9..bf7402d44 100644
--- a/Scripts/Services/New Magincia/Magincia Bazaar/Mobiles/WarehouseSuperintendent.cs	
+++ b/Scripts/Services/New Magincia/Magincia Bazaar/Mobiles/WarehouseSuperintendent.cs	
@@ -65,7 +65,7 @@ namespace Server.Engines.NewMagincia
             if (fees < 0)
             {
                 int owed = fees * -1;
-                SayTo(from, string.Format("It looks like you owe {0}gp as back fees. How much would you like to pay now?", owed.ToString("###,###,###")));
+                SayTo(from, $"It looks like you owe {owed.ToString("###,###,###")}gp as back fees. How much would you like to pay now?");
                 from.Prompt = new BackfeePrompt(this, entry);
                 return;
             }
@@ -201,7 +201,7 @@ namespace Server.Engines.NewMagincia
                     }
                     else
                     {
-                        SayTo(from, string.Format("Thank you! You have a remaining balance of {0}gp as backfees!", newAmount * -1));
+                        SayTo(from, $"Thank you! You have a remaining balance of {newAmount * -1}gp as backfees!");
                     }
                 }
                 else
diff --git a/Scripts/Services/New Magincia/MaginciaPlants/GardeningContract.cs b/Scripts/Services/New Magincia/MaginciaPlants/GardeningContract.cs
index a261a6242..4b79e1689 100644
--- a/Scripts/Services/New Magincia/MaginciaPlants/GardeningContract.cs	
+++ b/Scripts/Services/New Magincia/MaginciaPlants/GardeningContract.cs	
@@ -45,10 +45,8 @@ namespace Server.Items
 
             protected override void OnTarget(Mobile from, object targeted)
             {
-                if (targeted is MaginciaPlantItem)
+                if (targeted is MaginciaPlantItem plant)
                 {
-                    MaginciaPlantItem plant = (MaginciaPlantItem)targeted;
-
                     if (!plant.IsContract)
                     {
                         if (plant.ContractTime.Month == DateTime.UtcNow.Month)
diff --git a/Scripts/Services/New Magincia/MaginciaPlants/Hoe.cs b/Scripts/Services/New Magincia/MaginciaPlants/Hoe.cs
index 5b1253e59..9b883d6de 100644
--- a/Scripts/Services/New Magincia/MaginciaPlants/Hoe.cs	
+++ b/Scripts/Services/New Magincia/MaginciaPlants/Hoe.cs	
@@ -107,15 +107,12 @@ namespace Server.Items
 
             private void MoveItem_Callback(object o)
             {
-                object[] objs = o as object[];
-
-                if (objs != null)
+                if (o is object[] objs)
                 {
-                    Item dirt = objs[0] as Item;
                     Point3D p = (Point3D)objs[1];
                     Map map = objs[2] as Map;
 
-                    if (dirt != null)
+                    if (objs[0] is Item dirt)
                         dirt.MoveToWorld(p, map);
                 }
             }
diff --git a/Scripts/Services/New Magincia/MaginciaPlants/MaginciaPlantItem.cs b/Scripts/Services/New Magincia/MaginciaPlants/MaginciaPlantItem.cs
index 72d2c110c..50af17923 100644
--- a/Scripts/Services/New Magincia/MaginciaPlants/MaginciaPlantItem.cs	
+++ b/Scripts/Services/New Magincia/MaginciaPlants/MaginciaPlantItem.cs	
@@ -124,7 +124,7 @@ namespace Server.Engines.Plants
 
             if (Owner != null)
             {
-                list.Add(1150474, string.Format("{0}\t{1}", "#1011345", Owner.Name)); // Planted in ~1_val~ by: ~2_val~
+                list.Add(1150474, $"{"#1011345"}\t{Owner.Name}"); // Planted in ~1_val~ by: ~2_val~
                 list.Add(1150478, m_Planted.ToShortDateString());
 
                 if (IsContract)
diff --git a/Scripts/Services/New Magincia/MaginciaPlants/MaginciaPlantSystem.cs b/Scripts/Services/New Magincia/MaginciaPlants/MaginciaPlantSystem.cs
index 1b2222fe8..ae2ebabf2 100644
--- a/Scripts/Services/New Magincia/MaginciaPlants/MaginciaPlantSystem.cs	
+++ b/Scripts/Services/New Magincia/MaginciaPlants/MaginciaPlantSystem.cs	
@@ -45,7 +45,7 @@ namespace Server.Engines.Plants
                     TimeSpan left = PlantDelayTable[from] - DateTime.UtcNow;
 
                     // Time remaining to plant on the Isle of Magincia again: ~1_val~ days ~2_val~ hours ~3_val~ minutes.
-                    from.SendLocalizedMessage(1150459, string.Format("{0}\t{1}\t{2}", left.Days.ToString(), left.Hours.ToString(), left.Minutes.ToString()));
+                    from.SendLocalizedMessage(1150459, $"{left.Days.ToString()}\t{left.Hours.ToString()}\t{left.Minutes.ToString()}");
                     return false;
                 }
             }
diff --git a/Scripts/Services/PVP Arena System/ArenaDuel.cs b/Scripts/Services/PVP Arena System/ArenaDuel.cs
index 55aef0e80..eb6d683a3 100644
--- a/Scripts/Services/PVP Arena System/ArenaDuel.cs	
+++ b/Scripts/Services/PVP Arena System/ArenaDuel.cs	
@@ -848,10 +848,7 @@ namespace Server.Engines.ArenaSystem
                             {
                                 Mobile master = ((BaseCreature)mob).GetMaster();
 
-                                if (master != null)
-                                {
-                                    master.SendLocalizedMessage(1149603); // The rules prohibit the use of summoning spells!
-                                }
+                                master?.SendLocalizedMessage(1149603);
 
                                 mob.Delete();
                             }
@@ -884,10 +881,7 @@ namespace Server.Engines.ArenaSystem
             if (two is BaseCreature)
                 two = ((BaseCreature)two).GetMaster();
 
-            PlayerMobile pm1 = one as PlayerMobile;
-            PlayerMobile pm2 = two as PlayerMobile;
-
-            if (pm1 != null && pm2 != null)
+            if (one is PlayerMobile pm1 && two is PlayerMobile pm2)
             {
                 ArenaTeam team1 = GetTeam(pm1);
                 ArenaTeam team2 = GetTeam(pm2);
@@ -909,10 +903,7 @@ namespace Server.Engines.ArenaSystem
             if (two is BaseCreature)
                 two = ((BaseCreature)two).GetMaster();
 
-            PlayerMobile pm1 = one as PlayerMobile;
-            PlayerMobile pm2 = two as PlayerMobile;
-
-            if (pm1 != null && pm2 != null)
+            if (one is PlayerMobile pm1 && two is PlayerMobile pm2)
             {
                 ArenaTeam team1 = GetTeam(pm1);
                 ArenaTeam team2 = GetTeam(pm2);
diff --git a/Scripts/Services/PVP Arena System/Gumps.cs b/Scripts/Services/PVP Arena System/Gumps.cs
index e6a6e2ec4..44b5e9724 100644
--- a/Scripts/Services/PVP Arena System/Gumps.cs	
+++ b/Scripts/Services/PVP Arena System/Gumps.cs	
@@ -36,7 +36,7 @@ namespace Server.Engines.ArenaSystem
                 ArenaDefinition def = ArenaDefinition.Definitions[i];
                 bool exists = PVPArenaSystem.Arenas != null && PVPArenaSystem.Arenas.Any(arena => arena.Definition == def);
 
-                AddHtml(45, 105 + (i * 25), 200, 20, Color("#FFFFFF", string.Format("{0} [{1}]", def.Name, exists ? "Enabled" : PVPArenaSystem.Instance != null && PVPArenaSystem.Instance.IsBlocked(def) ? "Blocked" : "Disabled")), false, false);
+                AddHtml(45, 105 + (i * 25), 200, 20, Color("#FFFFFF", $"{def.Name} [{(exists ? "Enabled" : PVPArenaSystem.Instance != null && PVPArenaSystem.Instance.IsBlocked(def) ? "Blocked" : "Disabled")}]"), false, false);
                 AddButton(10, 105 + (i * 25), !exists ? 4023 : 4017, !exists ? 4024 : 4018, i + 500, GumpButtonType.Reply, 0);
             }
 
@@ -58,7 +58,7 @@ namespace Server.Engines.ArenaSystem
 
                 SendGump(new GenericConfirmCallbackGump<ArenaDefinition>(
                     User,
-                    string.Format("{0} {1}", exists ? "Disable" : "Enable", def.Name),
+                    $"{(exists ? "Disable" : "Enable")} {def.Name}",
                     exists ? _DisableBody : _EnableBody,
                     def,
                     null,
@@ -188,7 +188,7 @@ namespace Server.Engines.ArenaSystem
 
         protected string GetSlots()
         {
-            return string.Format("{0} slot(s)", Duel.PetSlots);
+            return $"{Duel.PetSlots} slot(s)";
         }
 
         protected string GetPotion()
@@ -915,7 +915,7 @@ namespace Server.Engines.ArenaSystem
                     AddButton(10, y, 4005, 4007, 1 + i, GumpButtonType.Reply, 0);
                 }
 
-                AddLabel(54, y, LabelHue, string.Format("{0}/{1}", duel.ParticipantCount.ToString(), duel.Entries.ToString()));
+                AddLabel(54, y, LabelHue, $"{duel.ParticipantCount.ToString()}/{duel.Entries.ToString()}");
                 AddLabel(103, y, LabelHue, duel.Host.Name);
 
                 if (i != 0 && i % perPage == 0)
@@ -1247,12 +1247,12 @@ namespace Server.Engines.ArenaSystem
             string rewardTitle = "None";
 
             if (title is int)
-                rewardTitle = string.Format("#{0}", (int)title);
+                rewardTitle = $"#{(int)title}";
             else if (title is string)
                 rewardTitle = (string)title;
 
             AddHtmlLocalized(0, 12, 580, 20, CenterLoc, "#1115976", 0xFFFF, false, false); // <CENTER>Arena Menu - Stats</CENTER>
-            AddHtmlLocalized(0, 32, 580, 20, 1149602, string.Format("{0}\t{1}", WhosStats.Name, rewardTitle), 0xFFFF, false, false); // <CENTER>Arena Menu - Stats</CENTER>
+            AddHtmlLocalized(0, 32, 580, 20, 1149602, $"{WhosStats.Name}\t{rewardTitle}", 0xFFFF, false, false); // <CENTER>Arena Menu - Stats</CENTER>
 
             AddHtmlLocalized(8, 66, 222, 20, CenterLoc, "#1115983", 0xFFFF, false, false); // Stats - Survival
             AddHtmlLocalized(15, 100, 100, 20, 1115977, 0xFFFF, false, false); // Wins
@@ -1294,7 +1294,7 @@ namespace Server.Engines.ArenaSystem
 
                 if (i > entry.Record.Count - 6)
                 {
-                    latest += string.Format("{0}-", record.KilledBy ? "L" : "W");
+                    latest += $"{(record.KilledBy ? "L" : "W")}-";
                 }
 
                 AddLabel(237, y, LabelHue, record.DuelDate.ToShortDateString());
diff --git a/Scripts/Services/PVP Arena System/PVPArena.cs b/Scripts/Services/PVP Arena System/PVPArena.cs
index ba53c8094..9dde34e30 100644
--- a/Scripts/Services/PVP Arena System/PVPArena.cs	
+++ b/Scripts/Services/PVP Arena System/PVPArena.cs	
@@ -96,7 +96,7 @@ namespace Server.Engines.ArenaSystem
 
             if (GuardRegion == null)
             {
-                GuardRegion = new GuardedArenaRegion(string.Format("{0}_Guarded", Definition.Name), Definition.Map, Definition.GuardBounds);
+                GuardRegion = new GuardedArenaRegion($"{Definition.Name}_Guarded", Definition.Map, Definition.GuardBounds);
                 GuardRegion.Register();
             }
         }
@@ -115,35 +115,23 @@ namespace Server.Engines.ArenaSystem
                 GuardRegion = null;
             }
 
-            if (Manager != null)
-            {
-                Manager.Delete();
-            }
+            Manager?.Delete();
 
             if (Stone != null && !Stone.Deleted)
             {
                 Stone.Delete();
             }
 
-            if (Banner1 != null)
-            {
-                Banner1.Delete();
-            }
+            Banner1?.Delete();
 
-            if (Banner2 != null)
-            {
-                Banner2.Delete();
-            }
+            Banner2?.Delete();
         }
 
         private readonly List<ArenaDuel> _Remove = new List<ArenaDuel>();
 
         public void OnTick()
         {
-            if (CurrentDuel != null)
-            {
-                CurrentDuel.OnTick();
-            }
+            CurrentDuel?.OnTick();
 
             foreach (KeyValuePair<ArenaDuel, DateTime> kvp in PendingDuels)
             {
@@ -282,9 +270,9 @@ namespace Server.Engines.ArenaSystem
 
                 foreach (Mobile mob in eable)
                 {
-                    if (mob is ArenaManager)
+                    if (mob is ArenaManager arenaManager)
                     {
-                        ((ArenaManager)mob).OfferResurrection(m);
+                        arenaManager.OfferResurrection(m);
                         break;
                     }
                 }
@@ -472,10 +460,7 @@ namespace Server.Engines.ArenaSystem
             {
                 foreach (var blocker in Blockers)
                 {
-                    if (blocker != null)
-                    {
-                        blocker.Delete();
-                    }
+                    blocker?.Delete();
                 }
 
                 ColUtility.Free(Blockers);
diff --git a/Scripts/Services/PVP Arena System/PVPArenaSystem.cs b/Scripts/Services/PVP Arena System/PVPArenaSystem.cs
index 77c11d9a4..c100a3c18 100644
--- a/Scripts/Services/PVP Arena System/PVPArenaSystem.cs	
+++ b/Scripts/Services/PVP Arena System/PVPArenaSystem.cs	
@@ -94,10 +94,7 @@ namespace Server.Engines.ArenaSystem
 
         public void Unregister(PVPArena arena)
         {
-            if (Arenas != null)
-            {
-                Arenas.Remove(arena);
-            }
+            Arenas?.Remove(arena);
 
             arena.Unregister();
         }
@@ -144,10 +141,9 @@ namespace Server.Engines.ArenaSystem
 
         public static bool IsEnemy(Mobile source, Mobile target)
         {
-            ArenaRegion sourceRegion = Region.Find(source.Location, source.Map) as ArenaRegion;
             ArenaRegion targetRegion = Region.Find(target.Location, target.Map) as ArenaRegion;
 
-            if (sourceRegion != null && sourceRegion.Arena.CurrentDuel != null && sourceRegion == targetRegion)
+            if (Region.Find(source.Location, source.Map) is ArenaRegion sourceRegion && sourceRegion.Arena.CurrentDuel != null && sourceRegion == targetRegion)
             {
                 return sourceRegion.Arena.CurrentDuel.IsEnemy(source, target);
             }
@@ -157,10 +153,9 @@ namespace Server.Engines.ArenaSystem
 
         public static bool IsFriendly(Mobile source, Mobile target)
         {
-            ArenaRegion sourceRegion = Region.Find(source.Location, source.Map) as ArenaRegion;
             ArenaRegion targetRegion = Region.Find(target.Location, target.Map) as ArenaRegion;
 
-            if (sourceRegion != null && sourceRegion.Arena.CurrentDuel != null && sourceRegion == targetRegion)
+            if (Region.Find(source.Location, source.Map) is ArenaRegion sourceRegion && sourceRegion.Arena.CurrentDuel != null && sourceRegion == targetRegion)
             {
                 return sourceRegion.Arena.CurrentDuel.IsFriendly(source, target);
             }
@@ -292,7 +287,7 @@ namespace Server.Engines.ArenaSystem
             if (title > 0)
             {
                 pm.AddRewardTitle(title);
-                pm.SendLocalizedMessage(1152067, string.Format("#{0}", title.ToString())); // You have gotten a new subtitle, ~1_VAL~, in reward for your duel!
+                pm.SendLocalizedMessage(1152067, $"#{title.ToString()}"); // You have gotten a new subtitle, ~1_VAL~, in reward for your duel!
             }
         }
 
@@ -377,9 +372,7 @@ namespace Server.Engines.ArenaSystem
         [Description("Gives gump for arena setup.")]
         public static void ArenaSetup(CommandEventArgs e)
         {
-            PlayerMobile pm = e.Mobile as PlayerMobile;
-
-            if (pm != null)
+            if (e.Mobile is PlayerMobile pm)
             {
                 BaseGump.SendGump(new PVPArenaSystemSetupGump(pm));
             }
@@ -402,7 +395,7 @@ namespace Server.Engines.ArenaSystem
                             PVPArena arena = stone.Arena;
 
                             BaseGump.SendGump(new GenericConfirmCallbackGump<PVPArena>((PlayerMobile)m,
-                                string.Format("Reset {0} Statistics?", arena.Definition.Name),
+                                $"Reset {arena.Definition.Name} Statistics?",
                                 "By selecting yes, you will permanently wipe the stats associated to this arena.",
                                 arena,
                                 null,
diff --git a/Scripts/Services/PVP Arena System/Region.cs b/Scripts/Services/PVP Arena System/Region.cs
index d3dcc77d5..2a07a6285 100644
--- a/Scripts/Services/PVP Arena System/Region.cs	
+++ b/Scripts/Services/PVP Arena System/Region.cs	
@@ -16,7 +16,7 @@ namespace Server.Engines.ArenaSystem
         public PVPArena Arena { get; set; }
 
         public ArenaRegion(PVPArena arena)
-            : base(string.Format("Duel Arena {0}", arena.Definition.Name),
+            : base($"Duel Arena {arena.Definition.Name}",
                     arena.Definition.Map,
                     DefaultPriority,
                     arena.Definition.RegionBounds)
@@ -45,9 +45,9 @@ namespace Server.Engines.ArenaSystem
                 return false;
             }
 
-            if (o is BallOfSummoning)
+            if (o is BallOfSummoning ballOfSummoning)
             {
-                MessageHelper.SendLocalizedMessageTo((BallOfSummoning)o, m, 1054125, 0x5); // The Crystal Ball fills with a blue mist. Your pet is not responding to the summons.
+                MessageHelper.SendLocalizedMessageTo(ballOfSummoning, m, 1054125, 0x5); // The Crystal Ball fills with a blue mist. Your pet is not responding to the summons.
                 return false;
             }
 
diff --git a/Scripts/Services/Party/AddPartyTarget.cs b/Scripts/Services/Party/AddPartyTarget.cs
index 97e2af947..cbd62233e 100644
--- a/Scripts/Services/Party/AddPartyTarget.cs
+++ b/Scripts/Services/Party/AddPartyTarget.cs
@@ -12,9 +12,8 @@ namespace Server.Engines.PartySystem
 
         protected override void OnTarget(Mobile from, object o)
         {
-            if (o is Mobile)
+            if (o is Mobile m)
             {
-                Mobile m = (Mobile)o;
                 Party p = Party.Get(from);
                 Party mp = Party.Get(m);
 
diff --git a/Scripts/Services/Party/Party.cs b/Scripts/Services/Party/Party.cs
index c57cb0bd4..2e9a258e2 100644
--- a/Scripts/Services/Party/Party.cs
+++ b/Scripts/Services/Party/Party.cs
@@ -64,9 +64,9 @@ namespace Server.Engines.PartySystem
 
         public static void ListenToParty_OnTarget(Mobile from, object obj)
         {
-            if (obj is Mobile)
+            if (obj is Mobile mobile)
             {
-                Party p = Get((Mobile)obj);
+                Party p = Get(mobile);
 
                 if (p == null)
                 {
@@ -99,7 +99,7 @@ namespace Server.Engines.PartySystem
                 else if (m == null)
                     p.SendPublicMessage(from, "I was killed !!");
                 else
-                    p.SendPublicMessage(from, string.Format("I was killed by {0} !!", m.Name));
+                    p.SendPublicMessage(from, $"I was killed by {m.Name} !!");
             }
         }
 
@@ -259,7 +259,7 @@ namespace Server.Engines.PartySystem
                     }
                     else
                     {
-                        if (mob != null && mob.NetState != null && mob.NetState.IsEnhancedClient)
+                        if (mob?.NetState != null && mob.NetState.IsEnhancedClient)
                         {
                             Waypoints.Remove(mob, m);
                         }
diff --git a/Scripts/Services/Party/RemovePartyTarget.cs b/Scripts/Services/Party/RemovePartyTarget.cs
index 1423c9aa1..76d0dffef 100644
--- a/Scripts/Services/Party/RemovePartyTarget.cs
+++ b/Scripts/Services/Party/RemovePartyTarget.cs
@@ -11,9 +11,8 @@ namespace Server.Engines.PartySystem
 
         protected override void OnTarget(Mobile from, object o)
         {
-            if (o is Mobile)
+            if (o is Mobile m)
             {
-                Mobile m = (Mobile)o;
                 Party p = Party.Get(from);
 
                 if (p == null || p.Leader != from || !p.Contains(m))
diff --git a/Scripts/Services/Pathing/FastMovement.cs b/Scripts/Services/Pathing/FastMovement.cs
index f1d3d2aef..a0691133d 100644
--- a/Scripts/Services/Pathing/FastMovement.cs
+++ b/Scripts/Services/Pathing/FastMovement.cs
@@ -705,10 +705,7 @@ namespace Server.Movement
 
             public static void ClearMoveCache(ref List<Item> cache, bool free)
             {
-                if (cache != null)
-                {
-                    cache.Clear();
-                }
+                cache?.Clear();
 
                 if (!free)
                 {
diff --git a/Scripts/Services/Pathing/PathFollower.cs b/Scripts/Services/Pathing/PathFollower.cs
index 319d47baf..226f0c95a 100644
--- a/Scripts/Services/Pathing/PathFollower.cs
+++ b/Scripts/Services/Pathing/PathFollower.cs
@@ -43,8 +43,8 @@ namespace Server
 
         public Point3D GetGoalLocation()
         {
-            if (m_Goal is Item)
-                return ((Item)m_Goal).GetWorldLocation();
+            if (m_Goal is Item item)
+                return item.GetWorldLocation();
 
             return new Point3D(m_Goal);
         }
diff --git a/Scripts/Services/Peerless/ConfirmGumps.cs b/Scripts/Services/Peerless/ConfirmGumps.cs
index b21674247..ef10571a0 100644
--- a/Scripts/Services/Peerless/ConfirmGumps.cs
+++ b/Scripts/Services/Peerless/ConfirmGumps.cs
@@ -133,8 +133,8 @@ namespace Server.Gumps
             if (_Altar == null)
                 return;
 
-            if (_Altar is PeerlessAltar)
-                ((PeerlessAltar)_Altar).Exit(from);
+            if (_Altar is PeerlessAltar peerlessAltar)
+                peerlessAltar.Exit(from);
         }
     }
 }
diff --git a/Scripts/Services/Peerless/PeerlessAltar.cs b/Scripts/Services/Peerless/PeerlessAltar.cs
index 5d0b57185..5dedc080a 100644
--- a/Scripts/Services/Peerless/PeerlessAltar.cs
+++ b/Scripts/Services/Peerless/PeerlessAltar.cs
@@ -427,9 +427,9 @@ namespace Server.Items
             if (CanEnter(fighter))
             {
                 // teleport party member's pets
-                if (fighter is PlayerMobile)
+                if (fighter is PlayerMobile playerMobile)
                 {
-                    foreach (BaseCreature pet in ((PlayerMobile)fighter).AllFollowers.OfType<BaseCreature>().Where(pet => pet.Alive &&
+                    foreach (BaseCreature pet in playerMobile.AllFollowers.OfType<BaseCreature>().Where(pet => pet.Alive &&
                                                                                                                  pet.InRange(fighter.Location, 5) &&
                                                                                                                  !(pet is BaseMount &&
                                                                                                                  ((BaseMount)pet).Rider != null) &&
@@ -533,17 +533,15 @@ namespace Server.Items
             }
 
             // teleport his pets
-            if (fighter is PlayerMobile)
+            if (fighter is PlayerMobile playerMobile)
             {
-                foreach (BaseCreature pet in ((PlayerMobile)fighter).AllFollowers.OfType<BaseCreature>().Where(pet => pet != null &&
+                foreach (BaseCreature pet in playerMobile.AllFollowers.OfType<BaseCreature>().Where(pet => pet != null &&
                                                                                                              (pet.Alive || pet.IsBonded) &&
                                                                                                              pet.Map != Map.Internal &&
                                                                                                              MobileIsInBossArea(pet)))
                 {
-                    if (pet is BaseMount)
+                    if (pet is BaseMount mount)
                     {
-                        BaseMount mount = (BaseMount)pet;
-
                         if (mount.Rider != null && mount.Rider != fighter)
                         {
                             mount.Rider.FixedParticles(0x376A, 9, 32, 0x13AF, EffectLayer.Waist);
diff --git a/Scripts/Services/Pet Training/AbilityProfile.cs b/Scripts/Services/Pet Training/AbilityProfile.cs
index be5acfb0e..d0139af10 100644
--- a/Scripts/Services/Pet Training/AbilityProfile.cs	
+++ b/Scripts/Services/Pet Training/AbilityProfile.cs	
@@ -239,14 +239,14 @@ namespace Server.Mobiles
                 AddPetAdvancement(newAbility);
             }
 
-            if (newAbility is MagicalAbility)
+            if (newAbility is MagicalAbility magicalAbility)
             {
-                AddMagicalAbility((MagicalAbility)newAbility);
+                AddMagicalAbility(magicalAbility);
             }
 
             TrainingPoint trainPoint = PetTrainingHelper.GetTrainingPoint(newAbility);
 
-            if (trainPoint != null && trainPoint.Requirements != null)
+            if (trainPoint?.Requirements != null)
             {
                 foreach (TrainingPointRequirement req in trainPoint.Requirements.Where(r => r != null))
                 {
@@ -363,7 +363,7 @@ namespace Server.Mobiles
                 (SpecialAbilities == null || SpecialAbilities.Length == 0 || SpecialAbilities.All(a => a.NaturalAbility)))
                 return true;
 
-            return !HasSpecialMagicalAbility() && (SpecialAbilities == null || SpecialAbilities.Where(a => !a.NaturalAbility).Count() == 0) && AbilityCount() < 3;
+            return !HasSpecialMagicalAbility() && (SpecialAbilities == null || !SpecialAbilities.Where(a => !a.NaturalAbility).Any()) && AbilityCount() < 3;
         }
 
         public bool IsRuleBreaker(SpecialAbility ability)
@@ -727,20 +727,20 @@ namespace Server.Mobiles
                         writer.Write(1);
                         writer.Write((int)(MagicalAbility)o);
                     }
-                    else if (o is SpecialAbility)
+                    else if (o is SpecialAbility specialAbility)
                     {
                         writer.Write(2);
-                        writer.Write(Array.IndexOf(SpecialAbility.Abilities, (SpecialAbility)o));
+                        writer.Write(Array.IndexOf(SpecialAbility.Abilities, specialAbility));
                     }
-                    else if (o is AreaEffect)
+                    else if (o is AreaEffect areaEffect)
                     {
                         writer.Write(3);
-                        writer.Write(Array.IndexOf(AreaEffect.Effects, (AreaEffect)o));
+                        writer.Write(Array.IndexOf(AreaEffect.Effects, areaEffect));
                     }
-                    else if (o is WeaponAbility)
+                    else if (o is WeaponAbility weaponAbility)
                     {
                         writer.Write(4);
-                        writer.Write(Array.IndexOf(WeaponAbility.Abilities, (WeaponAbility)o));
+                        writer.Write(Array.IndexOf(WeaponAbility.Abilities, weaponAbility));
                     }
                     else if (o is SkillName)
                     {
diff --git a/Scripts/Services/Pet Training/AreaEffects.cs b/Scripts/Services/Pet Training/AreaEffects.cs
index a2c17639a..a1f201a4a 100644
--- a/Scripts/Services/Pet Training/AreaEffects.cs	
+++ b/Scripts/Services/Pet Training/AreaEffects.cs	
@@ -427,9 +427,9 @@ namespace Server.Mobiles
                 m.RevealingAction();
             }
 
-            if (creature is IAuraCreature)
+            if (creature is IAuraCreature iAuraCreature)
             {
-                ((IAuraCreature)creature).AuraEffect(m);
+                iAuraCreature.AuraEffect(m);
             }
         }
 
diff --git a/Scripts/Services/Pet Training/Gumps.cs b/Scripts/Services/Pet Training/Gumps.cs
index fdc70ffe6..fe9b3dcff 100644
--- a/Scripts/Services/Pet Training/Gumps.cs	
+++ b/Scripts/Services/Pet Training/Gumps.cs	
@@ -410,7 +410,7 @@ namespace Server.Mobiles
 
                                         if (cap > 0)
                                         {
-                                            AddHtml(180, y, 75, 18, string.Format("<div align=right>{0:F1}</div>", cap), false, false);
+                                            AddHtml(180, y, 75, 18, $"<div align=right>{cap:F1}</div>", false, false);
                                         }
                                     }
                                 }
@@ -510,10 +510,7 @@ namespace Server.Mobiles
                         {
                             TrainingProfile trainProfile1 = PetTrainingHelper.GetTrainingProfile(Creature, true);
 
-                            if (trainProfile1 != null)
-                            {
-                                trainProfile1.EndTraining();
-                            }
+                            trainProfile1?.EndTraining();
                         }));
                     break;
                 case 4: // begin training
@@ -557,7 +554,7 @@ namespace Server.Mobiles
             if (c.Skills[name].Base < 10.0)
                 return "<div align=right>---</div>";
 
-            return string.Format("<div align=right>{0:F1}/{1}</div>", c.Skills[name].Value, c.Skills[name].Cap);
+            return $"<div align=right>{c.Skills[name].Value:F1}/{c.Skills[name].Cap}</div>";
         }
 
         private static string FormatAttributes(int cur, int max)
@@ -565,7 +562,7 @@ namespace Server.Mobiles
             if (max == 0)
                 return "<div align=right>---</div>";
 
-            return string.Format("<div align=right>{0}/{1}</div>", cur, max);
+            return $"<div align=right>{cur}/{max}</div>";
         }
 
         private static string FormatStat(int val)
@@ -573,7 +570,7 @@ namespace Server.Mobiles
             if (val == 0)
                 return "<div align=right>---</div>";
 
-            return string.Format("<div align=right>{0}</div>", val);
+            return $"<div align=right>{val}</div>";
         }
 
         public static string FormatDouble(double val)
@@ -581,7 +578,7 @@ namespace Server.Mobiles
             if (val == 0)
                 return "<div align=right>---</div>";
 
-            return string.Format("<div align=right>{0:F1}</div>", val);
+            return $"<div align=right>{val:F1}</div>";
         }
 
         public static string FormatDouble(double val, bool dontshowzero = true, bool percentage = false)
@@ -593,10 +590,10 @@ namespace Server.Mobiles
 
             if (percentage)
             {
-                return string.Format("<div align=right>{0:F1}%</div>", val);
+                return $"<div align=right>{val:F1}%</div>";
             }
 
-            return string.Format("<div align=right>{0:F1}</div>", val);
+            return $"<div align=right>{val:F1}</div>";
         }
 
         public static string FormatElement(int val, string color)
@@ -606,13 +603,13 @@ namespace Server.Mobiles
                 if (val <= 0)
                     return string.Format("<div align=right>---</div>");
 
-                return string.Format("<div align=right>{0}%</div>", val);
+                return $"<div align=right>{val}%</div>";
             }
 
             if (val <= 0)
-                return string.Format("<BASEFONT COLOR={0}><div align=right>---</div>", color);
+                return $"<BASEFONT COLOR={color}><div align=right>---</div>";
 
-            return string.Format("<BASEFONT COLOR={1}><div align=right>{0}%</div>", val, color);
+            return $"<BASEFONT COLOR={val}><div align=right>{color}%</div>";
         }
 
         public static string FormatDamage(int min, int max)
@@ -620,12 +617,12 @@ namespace Server.Mobiles
             if (min <= 0 || max <= 0)
                 return "<div align=right>---</div>";
 
-            return string.Format("<div align=right>{0}-{1}</div>", min, max);
+            return $"<div align=right>{min}-{max}</div>";
         }
 
         public string FormatPetSlots(int min, int max)
         {
-            return string.Format("<BASEFONT COLOR=#57412F>{0} => {1}", min.ToString(), max.ToString());
+            return $"<BASEFONT COLOR=#57412F>{min.ToString()} => {max.ToString()}";
         }
     }
 
@@ -1015,9 +1012,9 @@ namespace Server.Mobiles
                 return false;
             }
 
-            if (o is SpecialAbility[])
+            if (o is SpecialAbility[] SpecialAbilitys)
             {
-                if (!AbilityProfile.CanChooseSpecialAbility((SpecialAbility[])o))
+                if (!AbilityProfile.CanChooseSpecialAbility(SpecialAbilitys))
                 {
                     return false;
                 }
@@ -1367,14 +1364,14 @@ namespace Server.Mobiles
                     case 200: cliloc = 1049642; break;
                 }
 
-                AddHtmlLocalized(45, 225, 225, 60, cliloc, string.Format("#{0}", TrainingPoint.Name.Number), 0, false, false);
+                AddHtmlLocalized(45, 225, 225, 60, cliloc, $"#{TrainingPoint.Name.Number}", 0, false, false);
             }
 
             AddHtmlLocalized(305, 225, 145, 18, 1157490, false, false); // Avail. Training Points:
             AddLabel(455, 225, avail <= 0 ? 0x26 : 0, avail.ToString());
 
             AddHtmlLocalized(305, 245, 145, 18, 1113646, false, false); // Total Property Weight:
-            AddLabel(455, 245, 0, string.Format("{0}/{1}", ((int)(Value * weight)).ToString(), (max * weight).ToString()));
+            AddLabel(455, 245, 0, $"{((int)(Value * weight)).ToString()}/{(max * weight).ToString()}");
 
             if (TrainingPoint.Name.Number > 0)
                 AddHtmlLocalized(305, 265, 145, 18, TrainingPoint.Name.Number, false, false);
@@ -1766,7 +1763,7 @@ namespace Server.Mobiles
                 int value = entry.TrainPoint is SkillName ? entry.Value + 1000 : entry.Value;
 
                 AddLabel(460, y, entry.Value == 0 ? 0x27 : 0, value.ToString());
-                AddLabel(510, y, entry.Cost == 0 ? 0x27 : 0, string.Format("-{0}", entry.Cost));
+                AddLabel(510, y, entry.Cost == 0 ? 0x27 : 0, $"-{entry.Cost}");
 
                 total += entry.Cost;
                 y += 22;
@@ -1803,10 +1800,7 @@ namespace Server.Mobiles
 
                 BaseGump gump = User.FindGump<PetTrainingConfirmationGump>();
 
-                if (gump != null)
-                {
-                    gump.Refresh();
-                }
+                gump?.Refresh();
 
                 Refresh();
             }
diff --git a/Scripts/Services/Pet Training/PetTrainingHelper.cs b/Scripts/Services/Pet Training/PetTrainingHelper.cs
index 6059bbe29..0eda75160 100644
--- a/Scripts/Services/Pet Training/PetTrainingHelper.cs	
+++ b/Scripts/Services/Pet Training/PetTrainingHelper.cs	
@@ -1555,20 +1555,20 @@ namespace Server.Mobiles
                 return new TextDefinition[] { tp.Name, tp.Description };
             }
 
-            if (o is MagicalAbility)
-                return GetLocalization((MagicalAbility)o);
+            if (o is MagicalAbility magicalAbility)
+                return GetLocalization(magicalAbility);
 
-            if (o is SpecialAbility)
-                return GetLocalization((SpecialAbility)o);
+            if (o is SpecialAbility specialAbility)
+                return GetLocalization(specialAbility);
 
-            if (o is AreaEffect)
-                return GetLocalization((AreaEffect)o);
+            if (o is AreaEffect areaEffect)
+                return GetLocalization(areaEffect);
 
-            if (o is WeaponAbility)
-                return GetLocalization((WeaponAbility)o);
+            if (o is WeaponAbility weaponAbility)
+                return GetLocalization(weaponAbility);
 
-            if (o is SkillName)
-                return GetLocalization((SkillName)o);
+            if (o is SkillName skillName)
+                return GetLocalization(skillName);
 
             return new TextDefinition[] { 0, 0 };
         }
@@ -1721,9 +1721,7 @@ namespace Server.Mobiles
 
                     if (t != null && t.IsSubclassOf(typeof(BaseCreature)))
                     {
-                        BaseCreature bc = Activator.CreateInstance(t) as BaseCreature;
-
-                        if (bc != null)
+                        if (Activator.CreateInstance(t) is BaseCreature bc)
                         {
                             if (!bc.Tamable)
                             {
diff --git a/Scripts/Services/Pet Training/PlanningProfile.cs b/Scripts/Services/Pet Training/PlanningProfile.cs
index 562f952ae..0a089e61c 100644
--- a/Scripts/Services/Pet Training/PlanningProfile.cs	
+++ b/Scripts/Services/Pet Training/PlanningProfile.cs	
@@ -108,24 +108,24 @@ namespace Server.Mobiles
                     writer.Write(entry.Value);
                     writer.Write(entry.Cost);
                 }
-                else if (o is SpecialAbility)
+                else if (o is SpecialAbility specialAbility)
                 {
                     writer.Write(2);
-                    writer.Write(Array.IndexOf(SpecialAbility.Abilities, (SpecialAbility)o));
+                    writer.Write(Array.IndexOf(SpecialAbility.Abilities, specialAbility));
                     writer.Write(entry.Value);
                     writer.Write(entry.Cost);
                 }
-                else if (o is AreaEffect)
+                else if (o is AreaEffect areaEffect)
                 {
                     writer.Write(3);
-                    writer.Write(Array.IndexOf(AreaEffect.Effects, (AreaEffect)o));
+                    writer.Write(Array.IndexOf(AreaEffect.Effects, areaEffect));
                     writer.Write(entry.Value);
                     writer.Write(entry.Cost);
                 }
-                else if (o is WeaponAbility)
+                else if (o is WeaponAbility weaponAbility)
                 {
                     writer.Write(4);
-                    writer.Write(Array.IndexOf(WeaponAbility.Abilities, (WeaponAbility)o));
+                    writer.Write(Array.IndexOf(WeaponAbility.Abilities, weaponAbility));
                     writer.Write(entry.Value);
                     writer.Write(entry.Cost);
                 }
diff --git a/Scripts/Services/Pet Training/SpecialAbility.cs b/Scripts/Services/Pet Training/SpecialAbility.cs
index ddccf3be3..df03210fe 100644
--- a/Scripts/Services/Pet Training/SpecialAbility.cs	
+++ b/Scripts/Services/Pet Training/SpecialAbility.cs	
@@ -49,10 +49,7 @@ namespace Server.Mobiles
                         ability = abilties[Utility.Random(abilties.Length)];
                     }
 
-                    if (ability != null)
-                    {
-                        ability.Trigger(bc, defender, ref damage);
-                    }
+                    ability?.Trigger(bc, defender, ref damage);
                 }
             }
 
@@ -74,10 +71,7 @@ namespace Server.Mobiles
                         ability = abilties[Utility.Random(abilties.Length)];
                     }
 
-                    if (ability != null)
-                    {
-                        ability.Trigger(bc, attacker, ref damage);
-                    }
+                    ability?.Trigger(bc, attacker, ref damage);
                 }
             }
         }
@@ -1140,10 +1134,7 @@ namespace Server.Mobiles
             if (_Table.ContainsKey(defender))
                 timer = _Table[defender];
 
-            if (timer != null)
-            {
-                timer.DoExpire();
-            }
+            timer?.DoExpire();
 
             defender.SendLocalizedMessage(1070833); // The creature fans you with fire, reducing your resistance to fire attacks.
 
@@ -1649,7 +1640,7 @@ namespace Server.Mobiles
             timer = new ExpireTimer(defender, mods, TimeSpan.FromSeconds(5.0));
             timer.Start();
 
-            BuffInfo.AddBuff(defender, new BuffInfo(BuffIcon.RuneBeetleCorruption, 1153796, 1153823, TimeSpan.FromSeconds(5.0), defender, string.Format("{0}\t{1}\t{2}\t{3}\t{4}", phy, cold, poison, energy, fire)));
+            BuffInfo.AddBuff(defender, new BuffInfo(BuffIcon.RuneBeetleCorruption, 1153796, 1153823, TimeSpan.FromSeconds(5.0), defender, $"{phy}\t{cold}\t{poison}\t{energy}\t{fire}"));
 
             _Table[defender] = timer;
         }
@@ -1787,7 +1778,7 @@ namespace Server.Mobiles
                 attacker.AddStatMod(new StatMod(StatType.Int, "BloodWorm_Int", -Int, TimeSpan.FromSeconds(60)));
 
                 // -~1_STR~ strength.<br>-~2_INT~ intelligence.<br>-~3_DEX~ dexterity.<br> Drains all stamina.
-                BuffInfo.AddBuff(attacker, new BuffInfo(BuffIcon.BloodwormAnemia, 1153797, 1153824, string.Format("{0}\t{1}\t{2}", str, dex, Int)));
+                BuffInfo.AddBuff(attacker, new BuffInfo(BuffIcon.BloodwormAnemia, 1153797, 1153824, $"{str}\t{dex}\t{Int}"));
 
                 _Table.Add(attacker, timer);
             }
@@ -2154,9 +2145,7 @@ namespace Server.Mobiles
             creature.PlaySound(0xEE);
             defender.LocalOverheadMessage(MessageType.Regular, 0x3B2, 1070696); // You have been stunned by a colossal blow!
 
-            BaseWeapon weapon = creature.Weapon as BaseWeapon;
-
-            if (weapon != null)
+            if (creature.Weapon is BaseWeapon weapon)
                 weapon.OnHit(creature, defender);
 
             if (defender.Alive)
diff --git a/Scripts/Services/Plants/EmptyTheBowlGump.cs b/Scripts/Services/Plants/EmptyTheBowlGump.cs
index 4a582b534..4a2e175a4 100644
--- a/Scripts/Services/Plants/EmptyTheBowlGump.cs
+++ b/Scripts/Services/Plants/EmptyTheBowlGump.cs
@@ -7,7 +7,7 @@ namespace Server.Engines.Plants
     {
         private readonly PlantItem m_Plant;
 
-        public bool IsOtherPlant => m_Plant != null && m_Plant is MaginciaPlantItem || m_Plant is GardenBedPlantItem;
+        public bool IsOtherPlant => m_Plant is MaginciaPlantItem || m_Plant is GardenBedPlantItem;
 
         public EmptyTheBowlGump(PlantItem plant)
             : base(20, 20)
@@ -98,10 +98,7 @@ namespace Server.Engines.Plants
 
                             if (!from.PlaceInBackpack(seed))
                             {
-                                if (bowl != null)
-                                {
-                                    bowl.Delete();
-                                }
+                                bowl?.Delete();
 
                                 seed.Delete();
 
diff --git a/Scripts/Services/Plants/FertileDirtGump.cs b/Scripts/Services/Plants/FertileDirtGump.cs
index 0f4af8c1d..44d268d69 100644
--- a/Scripts/Services/Plants/FertileDirtGump.cs
+++ b/Scripts/Services/Plants/FertileDirtGump.cs
@@ -31,13 +31,13 @@ namespace Server.Engines.Plants
             AddHtmlLocalized(10, 150, 80, 16, 1150361, LabelColor, false, false); // Needed:
             AddHtmlLocalized(10, 180, 80, 16, 1150360, LabelColor, false, false); // You Have:
 
-            AddHtml(80, 150, 60, 16, string.Format("<BASEFONT COLOR=#{0:X6}>20</BASEFONT>", FontColor), false, false);
-            AddHtml(80, 180, 60, 16, string.Format("<BASEFONT COLOR=#{0:X6}>{1}</BASEFONT>", FontColor, amount.ToString()), false, false);
+            AddHtml(80, 150, 60, 16, $"<BASEFONT COLOR=#{FontColor:X6}>20</BASEFONT>", false, false);
+            AddHtml(80, 180, 60, 16, $"<BASEFONT COLOR=#{FontColor:X6}>{amount.ToString()}</BASEFONT>", false, false);
 
             AddButton(165, 150, 4023, 4025, 1, GumpButtonType.Reply, 0);
             AddButton(165, 180, 4017, 4019, 2, GumpButtonType.Reply, 0);
 
-            AddHtml(205, 150, 100, 16, string.Format("<BASEFONT COLOR=#{0:X6}>Use</BASEFONT>", FontColor), false, false);
+            AddHtml(205, 150, 100, 16, $"<BASEFONT COLOR=#{FontColor:X6}>Use</BASEFONT>", false, false);
             AddHtmlLocalized(205, 180, 100, 16, 1150364, LabelColor, false, false); // Not Use
         }
 
@@ -55,10 +55,7 @@ namespace Server.Engines.Plants
                 return;
             }
 
-            GardenAddonComponent comp = m_AttachTo as GardenAddonComponent;
-            LandTarget lt = m_AttachTo as LandTarget;
-
-            if (comp != null && m_Seed != null)
+            if (m_AttachTo is GardenAddonComponent comp && m_Seed != null)
             {
                 GardenBedPlantItem dirt = new GardenBedPlantItem(fertile);
                 dirt.MoveToWorld(new Point3D(comp.X, comp.Y, comp.Z + 5), comp.Map);
@@ -66,7 +63,7 @@ namespace Server.Engines.Plants
                 comp.Plant = dirt;
                 dirt.PlantSeed(from, m_Seed);
             }
-            else if (lt != null)
+            else if (m_AttachTo is LandTarget lt)
             {
                 MaginciaPlantItem dirt = new MaginciaPlantItem(fertile);
                 dirt.MoveToWorld(((LandTarget)m_AttachTo).Location, from.Map);
diff --git a/Scripts/Services/Plants/MainPlantGump.cs b/Scripts/Services/Plants/MainPlantGump.cs
index 3e77644d7..3d50b2cc6 100644
--- a/Scripts/Services/Plants/MainPlantGump.cs
+++ b/Scripts/Services/Plants/MainPlantGump.cs
@@ -89,10 +89,8 @@ namespace Server.Engines.Plants
 
             foreach (Item item in items)
             {
-                if (item is BasePotion)
+                if (item is BasePotion potion)
                 {
-                    BasePotion potion = (BasePotion)item;
-
                     if (Array.IndexOf(effects, potion.PotionEffect) >= 0)
                         return potion;
                 }
diff --git a/Scripts/Services/Plants/PlantBowl.cs b/Scripts/Services/Plants/PlantBowl.cs
index ce1119c1a..0092d97c0 100644
--- a/Scripts/Services/Plants/PlantBowl.cs
+++ b/Scripts/Services/Plants/PlantBowl.cs
@@ -50,12 +50,10 @@ namespace Server.Engines.Plants
                     return;
                 }
 
-                if (targeted is FertileDirt)
+                if (targeted is FertileDirt dirt)
                 {
                     int _dirtNeeded = 20;
 
-                    FertileDirt dirt = (FertileDirt)targeted;
-
                     if (!dirt.IsChildOf(from.Backpack))
                     {
                         from.SendLocalizedMessage(1042664); // You must have the object in your backpack to use it.
@@ -132,10 +130,10 @@ namespace Server.Engines.Plants
 
             if (obj is Static && !((Static)obj).Movable)
                 tileID = (((Static)obj).ItemID & 0x3FFF) | 0x4000;
-            else if (obj is StaticTarget)
-                tileID = (((StaticTarget)obj).ItemID & 0x3FFF) | 0x4000;
-            else if (obj is LandTarget)
-                tileID = ((LandTarget)obj).TileID;
+            else if (obj is StaticTarget staticTarget)
+                tileID = (staticTarget.ItemID & 0x3FFF) | 0x4000;
+            else if (obj is LandTarget landTarget)
+                tileID = landTarget.TileID;
             else
                 return false;
 
diff --git a/Scripts/Services/Plants/PlantItem.cs b/Scripts/Services/Plants/PlantItem.cs
index 430deb49f..9b399dba5 100644
--- a/Scripts/Services/Plants/PlantItem.cs
+++ b/Scripts/Services/Plants/PlantItem.cs
@@ -272,9 +272,9 @@ namespace Server.Engines.Plants
                 string args;
 
                 if (ShowContainerType)
-                    args = string.Format("#{0}\t#{1}", GetLocalizedContainerType(), m_PlantSystem.GetLocalizedDirtStatus());
+                    args = $"#{GetLocalizedContainerType()}\t#{m_PlantSystem.GetLocalizedDirtStatus()}";
                 else
-                    args = string.Format("#{0}", m_PlantSystem.GetLocalizedDirtStatus());
+                    args = $"#{m_PlantSystem.GetLocalizedDirtStatus()}";
 
                 list.Add(1060830, args); // a ~1_val~ of ~2_val~ dirt
             }
@@ -285,24 +285,24 @@ namespace Server.Engines.Plants
 
                 if (m_PlantStatus >= PlantStatus.DecorativePlant)
                 {
-                    list.Add(typeInfo.GetPlantLabelDecorative(hueInfo), string.Format("#{0}\t#{1}", hueInfo.Name, typeInfo.Name));
+                    list.Add(typeInfo.GetPlantLabelDecorative(hueInfo), $"#{hueInfo.Name}\t#{typeInfo.Name}");
                 }
                 else if (m_PlantStatus >= PlantStatus.FullGrownPlant)
                 {
-                    list.Add(typeInfo.GetPlantLabelFullGrown(hueInfo), string.Format("#{0}\t#{1}\t#{2}", m_PlantSystem.GetLocalizedHealth(), hueInfo.Name, typeInfo.Name));
+                    list.Add(typeInfo.GetPlantLabelFullGrown(hueInfo), $"#{m_PlantSystem.GetLocalizedHealth()}\t#{hueInfo.Name}\t#{typeInfo.Name}");
                 }
                 else
                 {
                     string args;
 
                     if (ShowContainerType)
-                        args = string.Format("#{0}\t#{1}\t#{2}", GetLocalizedContainerType(), m_PlantSystem.GetLocalizedDirtStatus(), m_PlantSystem.GetLocalizedHealth());
+                        args = $"#{GetLocalizedContainerType()}\t#{m_PlantSystem.GetLocalizedDirtStatus()}\t#{m_PlantSystem.GetLocalizedHealth()}";
                     else
-                        args = string.Format("#{0}\t#{1}", m_PlantSystem.GetLocalizedDirtStatus(), m_PlantSystem.GetLocalizedHealth());
+                        args = $"#{m_PlantSystem.GetLocalizedDirtStatus()}\t#{m_PlantSystem.GetLocalizedHealth()}";
 
                     if (m_ShowType)
                     {
-                        args += string.Format("\t#{0}\t#{1}\t#{2}", hueInfo.Name, typeInfo.Name, GetLocalizedPlantStatus());
+                        args += $"\t#{hueInfo.Name}\t#{typeInfo.Name}\t#{GetLocalizedPlantStatus()}";
 
                         if (m_PlantStatus == PlantStatus.Plant)
                             list.Add(typeInfo.GetPlantLabelPlant(hueInfo), args);
@@ -311,7 +311,7 @@ namespace Server.Engines.Plants
                     }
                     else
                     {
-                        args += string.Format("\t#{0}\t#{1}", (typeInfo.PlantCategory == PlantCategory.Default) ? hueInfo.Name : (int)typeInfo.PlantCategory, GetLocalizedPlantStatus());
+                        args += $"\t#{((typeInfo.PlantCategory == PlantCategory.Default) ? hueInfo.Name : (int)typeInfo.PlantCategory)}\t#{GetLocalizedPlantStatus()}";
 
                         list.Add(hueInfo.IsBright() ? 1060832 : 1060831, args); // a ~1_val~ of ~2_val~ dirt with a ~3_val~ [bright] ~4_val~ ~5_val~
                     }
@@ -321,8 +321,7 @@ namespace Server.Engines.Plants
 
         public virtual bool IsUsableBy(Mobile from)
         {
-            Item root = RootParent as Item;
-            return IsChildOf(from.Backpack) || IsChildOf(from.FindBankNoCreate()) || IsLockedDown && IsAccessibleTo(from) || root != null && root.IsSecure && root.IsAccessibleTo(from);
+            return IsChildOf(from.Backpack) || IsChildOf(from.FindBankNoCreate()) || IsLockedDown && IsAccessibleTo(from) || RootParent is Item root && root.IsSecure && root.IsAccessibleTo(from);
         }
 
         public override void OnDoubleClick(Mobile from)
@@ -423,10 +422,8 @@ namespace Server.Engines.Plants
                 return;
             }
 
-            if (item is BaseBeverage)
+            if (item is BaseBeverage beverage)
             {
-                BaseBeverage beverage = (BaseBeverage)item;
-
                 if (beverage.IsEmpty || !beverage.Pourable || beverage.Content != BeverageType.Water)
                 {
                     LabelTo(from, 1053069); // You can't use that on a plant!
@@ -444,10 +441,8 @@ namespace Server.Engines.Plants
 
                 m_PlantSystem.NextGrowth = DateTime.UtcNow + PlantSystem.CheckDelay;
             }
-            else if (item is BasePotion)
+            else if (item is BasePotion potion)
             {
-                BasePotion potion = (BasePotion)item;
-
                 int message;
                 if (ApplyPotion(potion.PotionEffect, false, out message))
                 {
@@ -459,10 +454,8 @@ namespace Server.Engines.Plants
                 }
                 LabelTo(from, message);
             }
-            else if (item is PotionKeg)
+            else if (item is PotionKeg keg)
             {
-                PotionKeg keg = (PotionKeg)item;
-
                 if (keg.Held <= 0)
                 {
                     LabelTo(from, 1053069); // You can't use that on a plant!
diff --git a/Scripts/Services/Plants/Raised Garden Beds/RaisedGarden.cs b/Scripts/Services/Plants/Raised Garden Beds/RaisedGarden.cs
index 58bccffc1..37652e89c 100644
--- a/Scripts/Services/Plants/Raised Garden Beds/RaisedGarden.cs	
+++ b/Scripts/Services/Plants/Raised Garden Beds/RaisedGarden.cs	
@@ -228,7 +228,7 @@ namespace Server.Items
 
             m_Plant = reader.ReadItem() as PlantItem;
 
-            if (m_Plant != null && m_Plant is GardenBedPlantItem && ((GardenBedPlantItem)m_Plant).Component == null)
+            if (m_Plant is GardenBedPlantItem && ((GardenBedPlantItem)m_Plant).Component == null)
                 ((GardenBedPlantItem)m_Plant).Component = this;
         }
     }
diff --git a/Scripts/Services/Plants/ReproductionGump.cs b/Scripts/Services/Plants/ReproductionGump.cs
index 721a7a9a5..14523ae7b 100644
--- a/Scripts/Services/Plants/ReproductionGump.cs
+++ b/Scripts/Services/Plants/ReproductionGump.cs
@@ -266,7 +266,7 @@ namespace Server.Engines.Plants
             else
             {
                 AddLabel(x, y, PlantHueInfo.GetInfo(m_Plant.PlantHue).GumpHue,
-                    string.Format("{0}/{1}", system.AvailableResources, totalResources));
+                    $"{system.AvailableResources}/{totalResources}");
             }
         }
 
@@ -282,7 +282,7 @@ namespace Server.Engines.Plants
             else
             {
                 AddLabel(x, y, PlantHueInfo.GetInfo(system.SeedHue).GumpHue,
-                    string.Format("{0}/{1}", system.AvailableSeeds, totalSeeds));
+                    $"{system.AvailableSeeds}/{totalSeeds}");
             }
         }
     }
diff --git a/Scripts/Services/Plants/SetToDecorativeGump.cs b/Scripts/Services/Plants/SetToDecorativeGump.cs
index 123dd0476..b8331d2c1 100644
--- a/Scripts/Services/Plants/SetToDecorativeGump.cs
+++ b/Scripts/Services/Plants/SetToDecorativeGump.cs
@@ -80,8 +80,8 @@ namespace Server.Engines.Plants
                         {
                             m_Plant.Movable = true;
 
-                            if (m_Plant is MaginciaPlantItem)
-                                ((MaginciaPlantItem)m_Plant).SetToDecorative = DateTime.Now;
+                            if (m_Plant is MaginciaPlantItem maginciaPlantItem)
+                                maginciaPlantItem.SetToDecorative = DateTime.Now;
 
                             if (from.Backpack != null)
                                 from.Backpack.TryDropItem(from, m_Plant, false);
diff --git a/Scripts/Services/PointsSystems/CleanUpBritanniaData.cs b/Scripts/Services/PointsSystems/CleanUpBritanniaData.cs
index b51ac6782..c8627527f 100644
--- a/Scripts/Services/PointsSystems/CleanUpBritanniaData.cs
+++ b/Scripts/Services/PointsSystems/CleanUpBritanniaData.cs
@@ -57,10 +57,8 @@ namespace Server.Engines.Points
             }
             else
             {
-                if (item is RunicHammer)
+                if (item is RunicHammer hammer)
                 {
-                    RunicHammer hammer = (RunicHammer)item;
-
                     if (hammer.Resource == CraftResource.DullCopper)
                         points = 5 * hammer.UsesRemaining;
                     else if (hammer.Resource == CraftResource.ShadowIron)
@@ -78,10 +76,8 @@ namespace Server.Engines.Points
                     else if (hammer.Resource == CraftResource.Valorite)
                         points = 8000 * hammer.UsesRemaining;
                 }
-                else if (item is RunicSewingKit)
+                else if (item is RunicSewingKit sewing)
                 {
-                    RunicSewingKit sewing = (RunicSewingKit)item;
-
                     if (sewing.Resource == CraftResource.SpinedLeather)
                         points = 10 * sewing.UsesRemaining;
                     else if (sewing.Resource == CraftResource.HornedLeather)
@@ -89,10 +85,8 @@ namespace Server.Engines.Points
                     else if (sewing.Resource == CraftResource.BarbedLeather)
                         points = 400 * sewing.UsesRemaining;
                 }
-                else if (item is PowerScroll)
+                else if (item is PowerScroll ps)
                 {
-                    PowerScroll ps = (PowerScroll)item;
-
                     if (ps.Value == 105)
                         points = 50;
                     else if (ps.Value == 110)
@@ -108,16 +102,12 @@ namespace Server.Engines.Points
 
                     points = sot.Value / 0.1 * 2;
                 }
-                else if (item is Bait)
+                else if (item is Bait bait)
                 {
-                    Bait bait = (Bait)item;
-
                     points = 10 * bait.UsesRemaining;
                 }
-                else if (item is TreasureMap)
+                else if (item is TreasureMap tmap)
                 {
-                    TreasureMap tmap = (TreasureMap)item;
-
                     switch (tmap.Level)
                     {
                         default:
@@ -128,10 +118,8 @@ namespace Server.Engines.Points
                         case 4: return 1000;
                     }
                 }
-                else if (item is MonsterStatuette)
+                else if (item is MonsterStatuette ms)
                 {
-                    MonsterStatuette ms = (MonsterStatuette)item;
-
                     if (ms.Type == MonsterStatuetteType.Slime)
                         points = 5000;
                 }
@@ -731,7 +719,7 @@ namespace Server.Engines.Points
             {
                 CraftItem crItem = null;
 
-                if (system != null && system.CraftItems != null)
+                if (system?.CraftItems != null)
                 {
                     Type type = item.GetType();
 
@@ -746,7 +734,7 @@ namespace Server.Engines.Points
 
                     crItem = system.CraftItems.SearchFor(type);
 
-                    if (crItem != null && crItem.Resources != null)
+                    if (crItem?.Resources != null)
                     {
                         CraftRes craftRes = crItem.Resources.GetAt(0);
                         double amount = 1;
@@ -758,9 +746,9 @@ namespace Server.Engines.Points
 
                         double award = 1;
 
-                        if (item is IResource)
+                        if (item is IResource iResource)
                         {
-                            switch (((IResource)item).Resource)
+                            switch (iResource.Resource)
                             {
                                 default: award = amount * .1; break;
                                 case CraftResource.DullCopper: award = amount * .47; break;
@@ -867,7 +855,7 @@ namespace Server.Engines.Points
                 PointsExchange[a.Username] = 0;
                 AwardPoints(m, points, false, false);
 
-                m.SendLocalizedMessage(1158453, string.Format("{0}\t{1}", points.ToString("N0"), ((int)GetPoints(m)).ToString("N0"))); // You have withdrawn ~1_VALUE~ Cleanup Britannia Points.  You now have ~2_VALUE~ points.
+                m.SendLocalizedMessage(1158453, $"{points.ToString("N0")}\t{((int)GetPoints(m)).ToString("N0")}"); // You have withdrawn ~1_VALUE~ Cleanup Britannia Points.  You now have ~2_VALUE~ points.
                 return true;
             }
 
@@ -924,10 +912,8 @@ namespace Server.Engines.Points
 
         protected override void OnTarget(Mobile m, object targeted)
         {
-            if (targeted is Item)
+            if (targeted is Item item)
             {
-                Item item = (Item)targeted;
-
                 if (!item.IsChildOf(m_Mobile))
                     return;
 
diff --git a/Scripts/Services/PointsSystems/PlayerMobileProps.cs b/Scripts/Services/PointsSystems/PlayerMobileProps.cs
index d7510dd1f..1b1a335a4 100644
--- a/Scripts/Services/PointsSystems/PlayerMobileProps.cs
+++ b/Scripts/Services/PointsSystems/PlayerMobileProps.cs
@@ -512,7 +512,7 @@ namespace Server.Mobiles
 
             if (sys != null)
             {
-                return string.Format("Citizenship: {0}", sys.City.ToString());
+                return $"Citizenship: {sys.City.ToString()}";
             }
 
             return base.ToString();
diff --git a/Scripts/Services/PointsSystems/PointsSystem.cs b/Scripts/Services/PointsSystems/PointsSystem.cs
index 407f67604..52804c288 100644
--- a/Scripts/Services/PointsSystems/PointsSystem.cs
+++ b/Scripts/Services/PointsSystems/PointsSystem.cs
@@ -140,7 +140,7 @@ namespace Server.Engines.Points
             if (quest)
                 from.SendLocalizedMessage(1113719, ((int)points).ToString(), 0x26); //You have received ~1_val~ loyalty points as a reward for completing the quest. 
             else
-                from.SendLocalizedMessage(1115920, string.Format("{0}\t{1}", Name.ToString(), ((int)points).ToString()));  // Your loyalty to ~1_GROUP~ has increased by ~2_AMOUNT~;Original
+                from.SendLocalizedMessage(1115920, $"{Name.ToString()}\t{((int)points).ToString()}");  // Your loyalty to ~1_GROUP~ has increased by ~2_AMOUNT~;Original
         }
 
         public virtual bool DeductPoints(Mobile from, double points, bool message = false)
@@ -156,7 +156,7 @@ namespace Server.Engines.Points
                 entry.Points -= points;
 
                 if (message)
-                    from.SendLocalizedMessage(1115921, string.Format("{0}\t{1}", Name.ToString(), ((int)points).ToString()));  // Your loyalty to ~1_GROUP~ has decreased by ~2_AMOUNT~;Original
+                    from.SendLocalizedMessage(1115921, $"{Name.ToString()}\t{((int)points).ToString()}");  // Your loyalty to ~1_GROUP~ has decreased by ~2_AMOUNT~;Original
             }
 
             return true;
@@ -335,7 +335,7 @@ namespace Server.Engines.Points
                         }
                         catch
                         {
-                            throw new Exception(string.Format("Points System Failed Load: {0} Last Loaded...", loaded.ToString()));
+                            throw new Exception($"Points System Failed Load: {loaded.ToString()} Last Loaded...");
                         }
                     }
                 });
@@ -433,7 +433,7 @@ namespace Server.Engines.Points
 
         public override bool Equals(object o)
         {
-            if (o == null || !(o is PointsEntry))
+            if (!(o is PointsEntry))
             {
                 return false;
             }
diff --git a/Scripts/Services/PointsSystems/ShameCrystals.cs b/Scripts/Services/PointsSystems/ShameCrystals.cs
index 9a1de9c08..1bf41f56f 100644
--- a/Scripts/Services/PointsSystems/ShameCrystals.cs
+++ b/Scripts/Services/PointsSystems/ShameCrystals.cs
@@ -13,7 +13,7 @@ namespace Server.Engines.Points
 
         public override void SendMessage(PlayerMobile from, double old, double points, bool quest)
         {
-            from.SendLocalizedMessage(1151634, string.Format("{0}\t{1}\t{2}", ((int)points).ToString(), "Shame", ((int)old + points).ToString())); // You gain ~1_AMT~ dungeon points for ~2_NAME~. Your total is now ~3_TOTAL~.
+            from.SendLocalizedMessage(1151634, $"{((int)points).ToString()}\t{"Shame"}\t{((int)old + points).ToString()}"); // You gain ~1_AMT~ dungeon points for ~2_NAME~. Your total is now ~3_TOTAL~.
         }
 
         public override TextDefinition GetTitle(PlayerMobile from)
diff --git a/Scripts/Services/PointsSystems/VoidPool.cs b/Scripts/Services/PointsSystems/VoidPool.cs
index 671726df2..014cbcbb1 100644
--- a/Scripts/Services/PointsSystems/VoidPool.cs
+++ b/Scripts/Services/PointsSystems/VoidPool.cs
@@ -15,7 +15,7 @@ namespace Server.Engines.Points
 
         public override void SendMessage(PlayerMobile from, double old, double points, bool quest)
         {
-            from.SendLocalizedMessage(1152649, string.Format("{0}\t{1}", from.Map.ToString(), points));
+            from.SendLocalizedMessage(1152649, $"{from.Map.ToString()}\t{points}");
             // For your participation in the Battle for the Void Pool on ~1_FACET~, you have received ~2_POINTS~ reward points. Any reward points you have accumulated may be redeemed by visiting Vela in Cove.
         }
 
diff --git a/Scripts/Services/Quests/QuestSystem.cs b/Scripts/Services/Quests/QuestSystem.cs
index b1d922d5e..c185810a3 100644
--- a/Scripts/Services/Quests/QuestSystem.cs
+++ b/Scripts/Services/Quests/QuestSystem.cs
@@ -182,10 +182,7 @@ namespace Server.Engines.Quests
             {
                 QuestSystem qs = pm.Quest;
 
-                if (qs != null)
-                {
-                    qs.OnKill(bc, bc.Corpse);
-                }
+                qs?.OnKill(bc, bc.Corpse);
             }
         }
 
@@ -670,7 +667,7 @@ namespace Server.Engines.Quests
 
         public static string Color(string text, int color)
         {
-            return string.Format("<BASEFONT COLOR=#{0:X6}>{1}</BASEFONT>", color, text);
+            return $"<BASEFONT COLOR=#{color:X6}>{text}</BASEFONT>";
         }
 
         public static ArrayList BuildList(object obj)
diff --git a/Scripts/Services/Quests/Regions/CancelQuestRegion.cs b/Scripts/Services/Quests/Regions/CancelQuestRegion.cs
index 772738232..b3bbfe4c0 100644
--- a/Scripts/Services/Quests/Regions/CancelQuestRegion.cs
+++ b/Scripts/Services/Quests/Regions/CancelQuestRegion.cs
@@ -28,7 +28,7 @@ namespace Server.Engines.Quests
 
             PlayerMobile player = m as PlayerMobile;
 
-            if (player != null && player.Quest != null && player.Quest.GetType() == m_Quest)
+            if (player?.Quest != null && player.Quest.GetType() == m_Quest)
             {
                 if (!player.HasGump(typeof(QuestCancelGump)))
                     player.Quest.BeginCancelQuest();
diff --git a/Scripts/Services/Quests/Regions/QuestCompleteObjectiveRegion.cs b/Scripts/Services/Quests/Regions/QuestCompleteObjectiveRegion.cs
index 188a74dfc..c2afece62 100644
--- a/Scripts/Services/Quests/Regions/QuestCompleteObjectiveRegion.cs
+++ b/Scripts/Services/Quests/Regions/QuestCompleteObjectiveRegion.cs
@@ -28,7 +28,7 @@ namespace Server.Engines.Quests
             {
                 PlayerMobile player = m as PlayerMobile;
 
-                if (player != null && player.Quest != null && player.Quest.GetType() == m_Quest)
+                if (player?.Quest != null && player.Quest.GetType() == m_Quest)
                 {
                     QuestObjective obj = player.Quest.FindObjective(m_Objective);
 
diff --git a/Scripts/Services/Quests/Regions/QuestNoEntryRegion.cs b/Scripts/Services/Quests/Regions/QuestNoEntryRegion.cs
index 1e2842416..6d1ac4aba 100644
--- a/Scripts/Services/Quests/Regions/QuestNoEntryRegion.cs
+++ b/Scripts/Services/Quests/Regions/QuestNoEntryRegion.cs
@@ -47,7 +47,7 @@ namespace Server.Engines.Quests
 
             PlayerMobile player = m as PlayerMobile;
 
-            if (player != null && player.Quest != null && player.Quest.GetType() == m_Quest &&
+            if (player?.Quest != null && player.Quest.GetType() == m_Quest &&
                 (m_MinObjective == null || player.Quest.FindObjective(m_MinObjective) != null) &&
                 (m_MaxObjective == null || player.Quest.FindObjective(m_MaxObjective) == null))
             {
diff --git a/Scripts/Services/Quests/Regions/QuestOfferRegion.cs b/Scripts/Services/Quests/Regions/QuestOfferRegion.cs
index 25ea964b7..e7ef21d4e 100644
--- a/Scripts/Services/Quests/Regions/QuestOfferRegion.cs
+++ b/Scripts/Services/Quests/Regions/QuestOfferRegion.cs
@@ -22,9 +22,7 @@ namespace Server.Engines.Quests
             if (m_Quest == null)
                 return;
 
-            PlayerMobile player = m as PlayerMobile;
-
-            if (player != null && player.Quest == null && QuestSystem.CanOfferQuest(m, m_Quest))
+            if (m is PlayerMobile player && player.Quest == null && QuestSystem.CanOfferQuest(m, m_Quest))
             {
                 try
                 {
diff --git a/Scripts/Services/RemoteAdmin/Network.cs b/Scripts/Services/RemoteAdmin/Network.cs
index 6bee97d86..49fd7c53e 100644
--- a/Scripts/Services/RemoteAdmin/Network.cs
+++ b/Scripts/Services/RemoteAdmin/Network.cs
@@ -29,7 +29,7 @@ namespace Server.RemoteAdmin
             string outStr;
             if (m_NewLine)
             {
-                outStr = string.Format("[{0}]: {1}", DateTime.UtcNow.ToString(DateFormat), str);
+                outStr = $"[{DateTime.UtcNow.ToString(DateFormat)}]: {str}";
                 m_NewLine = false;
             }
             else
@@ -48,7 +48,7 @@ namespace Server.RemoteAdmin
             if (m_NewLine)
             {
                 string outStr;
-                outStr = string.Format("[{0}]: {1}", DateTime.UtcNow.ToString(DateFormat), ch);
+                outStr = $"[{DateTime.UtcNow.ToString(DateFormat)}]: {ch}";
 
                 m_ConsoleData.Append(outStr);
                 SendToAll(outStr);
@@ -68,9 +68,9 @@ namespace Server.RemoteAdmin
         {
             string outStr;
             if (m_NewLine)
-                outStr = string.Format("[{0}]: {1}{2}", DateTime.UtcNow.ToString(DateFormat), line, Console.Out.NewLine);
+                outStr = $"[{DateTime.UtcNow.ToString(DateFormat)}]: {line}{Console.Out.NewLine}";
             else
-                outStr = string.Format("{0}{1}", line, Console.Out.NewLine);
+                outStr = $"{line}{Console.Out.NewLine}";
 
             m_ConsoleData.Append(outStr);
             RoughTrimConsoleData();
@@ -124,7 +124,7 @@ namespace Server.RemoteAdmin
             }
             else if (cmd == 0xFF)
             {
-                string statStr = string.Format(", Name={0}, Age={1}, Clients={2}, Items={3}, Chars={4}, Mem={5}K, Ver={6}", Misc.ServerList.ServerName, (int)(DateTime.UtcNow - Items.Clock.ServerStart).TotalHours, NetState.Instances.Count, World.Items.Count, World.Mobiles.Count, (int)(GC.GetTotalMemory(false) / 1024), ProtocolVersion);
+                string statStr = $", Name={Misc.ServerList.ServerName}, Age={(int)(DateTime.UtcNow - Items.Clock.ServerStart).TotalHours}, Clients={NetState.Instances.Count}, Items={World.Items.Count}, Chars={World.Mobiles.Count}, Mem={(int)(GC.GetTotalMemory(false) / 1024)}K, Ver={ProtocolVersion}";
                 state.Send(new UOGInfo(statStr));
                 state.Dispose();
             }
diff --git a/Scripts/Services/RemoteAdmin/PacketHandlers.cs b/Scripts/Services/RemoteAdmin/PacketHandlers.cs
index 8471ee4bb..1d43546b3 100644
--- a/Scripts/Services/RemoteAdmin/PacketHandlers.cs
+++ b/Scripts/Services/RemoteAdmin/PacketHandlers.cs
@@ -226,7 +226,7 @@ namespace Server.RemoteAdmin
                     if (UpdatedPass)
                         changes += " Password Changed.";
                     if (oldAcessLevel != a.AccessLevel)
-                        changes = string.Format("{0} Access level changed from {1} to {2}.", changes, oldAcessLevel, a.AccessLevel);
+                        changes = $"{changes} Access level changed from {oldAcessLevel} to {a.AccessLevel}.";
                     if (oldbanned != a.Banned)
                         changes += a.Banned ? " Banned." : " Unbanned.";
                     RemoteAdminLogging.WriteLine(state, "Updated account {0}:{1}", a.Username, changes);
diff --git a/Scripts/Services/RemoteAdmin/RemoteAdminLogging.cs b/Scripts/Services/RemoteAdmin/RemoteAdminLogging.cs
index f2430a89e..d05a2d24f 100644
--- a/Scripts/Services/RemoteAdmin/RemoteAdminLogging.cs
+++ b/Scripts/Services/RemoteAdmin/RemoteAdminLogging.cs
@@ -95,7 +95,7 @@ namespace Server.RemoteAdmin
                 Commands.CommandLogging.AppendPath(ref path, LogBaseDirectory);
                 Commands.CommandLogging.AppendPath(ref path, LogSubDirectory);
                 Commands.CommandLogging.AppendPath(ref path, accesslevel);
-                path = Path.Combine(path, string.Format("{0}.log", name));
+                path = Path.Combine(path, $"{name}.log");
 
                 using (StreamWriter sw = new StreamWriter(path, true))
                     sw.WriteLine("{0}: {1}: {2}", DateTime.UtcNow, statestr, text);
diff --git a/Scripts/Services/Seasonal Events/ArtisanFestival/ArtisanFestivalEvent.cs b/Scripts/Services/Seasonal Events/ArtisanFestival/ArtisanFestivalEvent.cs
index 8f096057c..210fcb88f 100644
--- a/Scripts/Services/Seasonal Events/ArtisanFestival/ArtisanFestivalEvent.cs	
+++ b/Scripts/Services/Seasonal Events/ArtisanFestival/ArtisanFestivalEvent.cs	
@@ -134,7 +134,7 @@ namespace Server.Engines.ArtisanFestival
         {
             if (!IsActive() && base.IsActive())
             {
-                Utility.WriteConsoleColor(ConsoleColor.Green, string.Format("Attempting to Enable {0}...", Name));
+                Utility.WriteConsoleColor(ConsoleColor.Green, $"Attempting to Enable {Name}...");
                 Generate();
 
                 if (!IsActive())
@@ -143,7 +143,7 @@ namespace Server.Engines.ArtisanFestival
                 }
                 else
                 {
-                    Utility.WriteConsoleColor(ConsoleColor.Green, string.Format("Success! Artisan Festival Active in {0}.", CurrentCity.ToString()));
+                    Utility.WriteConsoleColor(ConsoleColor.Green, $"Success! Artisan Festival Active in {CurrentCity.ToString()}.");
                 }
             }
         }
@@ -318,15 +318,9 @@ namespace Server.Engines.ArtisanFestival
 
         private void GenerateStageDecoration()
         {
-            if (Winners != null)
-            {
-                Winners.Clear();
-            }
+            Winners?.Clear();
 
-            if (PointTable != null)
-            {
-                PointTable.Clear();
-            }
+            PointTable?.Clear();
 
             if (RewardBag != null)
             {
@@ -345,10 +339,7 @@ namespace Server.Engines.ArtisanFestival
                 case City.Minoc: treeType = 4; break;
             }
 
-            if (TownTree != null)
-            {
-                TownTree.Delete();
-            }
+            TownTree?.Delete();
 
             TownTree = new TownTree(treeType);
             TownTree.MoveToWorld(_CityLocations[Stage], map);
@@ -496,7 +487,7 @@ namespace Server.Engines.ArtisanFestival
 
             if (perc >= 1.0)
             {
-                elf.Say(1157164, string.Format("{0}\t#{1}", pm.Name, CityLoyaltySystem.GetCityLocalization(CurrentCity)), 1150); // ~1_PLAYER~ has advanced the Artisan Festival in the City of ~2_CITY~!
+                elf.Say(1157164, $"{pm.Name}\t#{CityLoyaltySystem.GetCityLocalization(CurrentCity)}", 1150); // ~1_PLAYER~ has advanced the Artisan Festival in the City of ~2_CITY~!
 
                 TownTree.Stage++;
                 FireworkShow(elf);
@@ -591,7 +582,7 @@ namespace Server.Engines.ArtisanFestival
 
         protected override void Remove()
         {
-            Utility.WriteConsoleColor(ConsoleColor.Green, string.Format("{0} Disabled!", Name));
+            Utility.WriteConsoleColor(ConsoleColor.Green, $"{Name} Disabled!");
 
             EndTimer();
             Stage = -1;
diff --git a/Scripts/Services/Seasonal Events/ForsakenFoes/Addon/BlackthornEntry.cs b/Scripts/Services/Seasonal Events/ForsakenFoes/Addon/BlackthornEntry.cs
index e67dbecc4..8f46e3033 100644
--- a/Scripts/Services/Seasonal Events/ForsakenFoes/Addon/BlackthornEntry.cs	
+++ b/Scripts/Services/Seasonal Events/ForsakenFoes/Addon/BlackthornEntry.cs	
@@ -21,7 +21,7 @@ namespace Server.Items
         {
             AddonComponent ac;
             ac = new AddonComponent(item);
-            if (name != null && name.Length > 0)
+            if (!string.IsNullOrEmpty(name))
                 ac.Name = name;
             if (hue != 0)
                 ac.Hue = hue;
diff --git a/Scripts/Services/Seasonal Events/ForsakenFoes/FellowshipData.cs b/Scripts/Services/Seasonal Events/ForsakenFoes/FellowshipData.cs
index d0fb4837d..7668fe6bd 100644
--- a/Scripts/Services/Seasonal Events/ForsakenFoes/FellowshipData.cs	
+++ b/Scripts/Services/Seasonal Events/ForsakenFoes/FellowshipData.cs	
@@ -14,7 +14,7 @@ namespace Server.Engines.Fellowship
 
         public override void SendMessage(PlayerMobile from, double old, double points, bool quest)
         {
-            from.SendLocalizedMessage(1159189, string.Format("{0}", ((int)points).ToString())); // The soul has been cleansed and you have been awarded ~1_SILVER~ Fellowship Silver for your efforts!
+            from.SendLocalizedMessage(1159189, $"{((int)points).ToString()}"); // The soul has been cleansed and you have been awarded ~1_SILVER~ Fellowship Silver for your efforts!
         }
 
         public override void Serialize(GenericWriter writer)
diff --git a/Scripts/Services/Seasonal Events/ForsakenFoes/ForsakenFoesEvent.cs b/Scripts/Services/Seasonal Events/ForsakenFoes/ForsakenFoesEvent.cs
index 55f3332b8..23847fe06 100644
--- a/Scripts/Services/Seasonal Events/ForsakenFoes/ForsakenFoesEvent.cs	
+++ b/Scripts/Services/Seasonal Events/ForsakenFoes/ForsakenFoesEvent.cs	
@@ -410,17 +410,11 @@ namespace Server.Engines.Fellowship
             {
                 Item b = map.FindItem<Blocker>(new Point3D(x));
 
-                if (b != null)
-                {
-                    b.Delete();
-                }
+                b?.Delete();
 
                 Item lb = map.FindItem<LOSBlocker>(new Point3D(x));
 
-                if (lb != null)
-                {
-                    lb.Delete();
-                }
+                lb?.Delete();
             });
 
             for (int i = 0; i < Workers.Length; i++)
@@ -429,10 +423,7 @@ namespace Server.Engines.Fellowship
 
                 Mobile w = map.FindMobile<Worker>(p);
 
-                if (w != null)
-                {
-                    w.Delete();
-                }
+                w?.Delete();
             }
 
             for (int t = 0; t < Teleporters.Length / 2; t++)
@@ -441,10 +432,7 @@ namespace Server.Engines.Fellowship
 
                 Item tele = map.FindItem<BlackthornDungeonTeleporter>(p);
 
-                if (tele != null)
-                {
-                    tele.Delete();
-                }
+                tele?.Delete();
             }
         }
         #endregion
diff --git a/Scripts/Services/Seasonal Events/ForsakenFoes/Items/EtherealSoulbinder.cs b/Scripts/Services/Seasonal Events/ForsakenFoes/Items/EtherealSoulbinder.cs
index 6c11c1761..df50b6ec8 100644
--- a/Scripts/Services/Seasonal Events/ForsakenFoes/Items/EtherealSoulbinder.cs	
+++ b/Scripts/Services/Seasonal Events/ForsakenFoes/Items/EtherealSoulbinder.cs	
@@ -90,7 +90,7 @@ namespace Server.Items
             }
             else
             {
-                list.Add(1159178, string.Format("#{0}", desc)); // Contains a ~1_TYPE~ Soul
+                list.Add(1159178, $"#{desc}"); // Contains a ~1_TYPE~ Soul
             }
         }
 
diff --git a/Scripts/Services/Seasonal Events/ForsakenFoes/Items/FellowshipDonationBox.cs b/Scripts/Services/Seasonal Events/ForsakenFoes/Items/FellowshipDonationBox.cs
index 2a5736701..65d2ab2a6 100644
--- a/Scripts/Services/Seasonal Events/ForsakenFoes/Items/FellowshipDonationBox.cs	
+++ b/Scripts/Services/Seasonal Events/ForsakenFoes/Items/FellowshipDonationBox.cs	
@@ -69,11 +69,11 @@ namespace Server.Items
                 Donations.Add(from, amount);
             }
 
-            from.SendLocalizedMessage(1159032, string.Format("{0}", Donations[from].ToString())); // The Fellowship thanks you for your donation. You have donated ~1_val~ worth of goods!
+            from.SendLocalizedMessage(1159032, $"{Donations[from].ToString()}"); // The Fellowship thanks you for your donation. You have donated ~1_val~ worth of goods!
 
             if (Donations[from] >= 450000000)
             {
-                from.SendLocalizedMessage(1152339, string.Format("{0}", Donations[from].ToString())); // A reward of ~1_ITEM~ has been placed in your backpack.
+                from.SendLocalizedMessage(1152339, $"{Donations[from].ToString()}"); // A reward of ~1_ITEM~ has been placed in your backpack.
                 from.AddToBackpack(new FellowshipCoin());
             }
 
diff --git a/Scripts/Services/Seasonal Events/ForsakenFoes/Items/FellowshipMedallion.cs b/Scripts/Services/Seasonal Events/ForsakenFoes/Items/FellowshipMedallion.cs
index 616ad9527..ab47f479e 100644
--- a/Scripts/Services/Seasonal Events/ForsakenFoes/Items/FellowshipMedallion.cs	
+++ b/Scripts/Services/Seasonal Events/ForsakenFoes/Items/FellowshipMedallion.cs	
@@ -103,16 +103,11 @@ namespace Server.Items
 
         public static void OnLogin(LoginEventArgs e)
         {
-            var pm = e.Mobile as PlayerMobile;
-
-            if (pm != null)
+            if (e.Mobile is PlayerMobile pm)
             {
                 var medallion = CheckMedallion(pm);
 
-                if (medallion != null)
-                {
-                    medallion.Start(pm);
-                }
+                medallion?.Start(pm);
             }
         }
     }
diff --git a/Scripts/Services/Seasonal Events/ForsakenFoes/Mobile/MiningCooperativeMerchant.cs b/Scripts/Services/Seasonal Events/ForsakenFoes/Mobile/MiningCooperativeMerchant.cs
index 8970bba26..323ce8607 100644
--- a/Scripts/Services/Seasonal Events/ForsakenFoes/Mobile/MiningCooperativeMerchant.cs	
+++ b/Scripts/Services/Seasonal Events/ForsakenFoes/Mobile/MiningCooperativeMerchant.cs	
@@ -190,9 +190,9 @@ namespace Server.Engines.Quests
                 AddHtmlLocalized(120, 73, 180, 18, 1159190, 0x43FF, false, false); // Ethereal Sand
                 AddHtmlLocalized(120, 100, 180, 18, 1159191, vendor.Price.ToString(), 0x43FF, false, false); // GP: ~1_VALUE~
                 AddItem(20, 140, 0x14F0);
-                AddHtmlLocalized(120, 143, 180, 18, 1159193, string.Format("{0}@{1}", vendor.Quantity, vendor.Quantity * vendor.Price), 0x5FF0, false, false); // x~1_QUANT~ GP: ~2_COST~
-                AddHtmlLocalized(25, 203, 275, 18, 1159192, string.Format("{0}@{1}", available, vendor.MaxAmount), 0x7FF0, false, false); // Available For Purchase: ~1_PART~ / ~2_WHOLE~
-                AddHtmlLocalized(20, 243, 160, 72, 1159194, string.Format("{0}@#1159190@{1}", vendor.Quantity, vendor.Quantity * vendor.Price), 0x7FFF, false, false); // Purchase a Commodity Deed filled with ~1_QUANT~ ~2_NAME~ for ~3_COST~ GP?
+                AddHtmlLocalized(120, 143, 180, 18, 1159193, $"{vendor.Quantity}@{vendor.Quantity * vendor.Price}", 0x5FF0, false, false); // x~1_QUANT~ GP: ~2_COST~
+                AddHtmlLocalized(25, 203, 275, 18, 1159192, $"{available}@{vendor.MaxAmount}", 0x7FF0, false, false); // Available For Purchase: ~1_PART~ / ~2_WHOLE~
+                AddHtmlLocalized(20, 243, 160, 72, 1159194, $"{vendor.Quantity}@#1159190@{vendor.Quantity * vendor.Price}", 0x7FFF, false, false); // Purchase a Commodity Deed filled with ~1_QUANT~ ~2_NAME~ for ~3_COST~ GP?
                 AddButton(220, 260, 0x81C, 0x81B, 1, GumpButtonType.Reply, 0);
             }
 
diff --git a/Scripts/Services/Seasonal Events/Halloween/PlayerZombies.cs b/Scripts/Services/Seasonal Events/Halloween/PlayerZombies.cs
index d2c9a338d..e1eaea8aa 100644
--- a/Scripts/Services/Seasonal Events/Halloween/PlayerZombies.cs	
+++ b/Scripts/Services/Seasonal Events/Halloween/PlayerZombies.cs	
@@ -154,7 +154,7 @@ namespace Server.Engines.Events
         public PlayerBones(string name)
             : base(Utility.RandomMinMax(0x0ECA, 0x0ED2))
         {
-            Name = string.Format("{0}'s bones", name);
+            Name = $"{name}'s bones";
 
             switch (Utility.Random(10))
             {
@@ -206,7 +206,7 @@ namespace Server.Engines.Events
         {
             m_DeadPlayer = player;
 
-            Name = (player != null) ? string.Format("{0}'s {1}", player.Name, m_Name) : m_Name;
+            Name = (player != null) ? $"{player.Name}'s {m_Name}" : m_Name;
 
             Body = 0x93;
             BaseSoundID = 0x1c3;
diff --git a/Scripts/Services/Seasonal Events/Halloween/PumpkinCarvingKit.cs b/Scripts/Services/Seasonal Events/Halloween/PumpkinCarvingKit.cs
index 27117997e..f501306be 100644
--- a/Scripts/Services/Seasonal Events/Halloween/PumpkinCarvingKit.cs	
+++ b/Scripts/Services/Seasonal Events/Halloween/PumpkinCarvingKit.cs	
@@ -59,10 +59,8 @@ namespace Server.Items
 
             protected override void OnTarget(Mobile from, object targeted)
             {
-                if (targeted is BaseCarvablePumpkin)
+                if (targeted is BaseCarvablePumpkin pumpkin)
                 {
-                    BaseCarvablePumpkin pumpkin = (BaseCarvablePumpkin)targeted;
-
                     if (!pumpkin.IsChildOf(from.Backpack))
                     {
                         from.SendLocalizedMessage(1045158); // You must have the item in your backpack to target it.
diff --git a/Scripts/Services/Seasonal Events/Halloween/TrickOrTreat.cs b/Scripts/Services/Seasonal Events/Halloween/TrickOrTreat.cs
index 33ce571f9..7a4b7949d 100644
--- a/Scripts/Services/Seasonal Events/Halloween/TrickOrTreat.cs	
+++ b/Scripts/Services/Seasonal Events/Halloween/TrickOrTreat.cs	
@@ -132,7 +132,7 @@ namespace Server.Engines.Events
 
         public static bool CheckMobile(Mobile mobile)
         {
-            return (mobile != null && mobile.Map != null && !mobile.Deleted && mobile.Alive && mobile.Map != Map.Internal);
+            return (mobile?.Map != null && !mobile.Deleted && mobile.Alive && mobile.Map != Map.Internal);
         }
 
         private static void EventSink_Speech(SpeechEventArgs e)
@@ -288,7 +288,7 @@ namespace Server.Engines.Events
                 Body = from.Body;
 
                 m_From = from;
-                Name = string.Format("{0}\'s Naughty Twin", from.Name);
+                Name = $"{from.Name}\'s Naughty Twin";
 
                 Timer.DelayCall(TrickOrTreat.OneSecond, Utility.RandomBool() ? StealCandy : new TimerStateCallback<Mobile>(ToGate), m_From);
             }
diff --git a/Scripts/Services/Seasonal Events/JollyRoger/Addons/AdmiralJacksShipwreckAddon.cs b/Scripts/Services/Seasonal Events/JollyRoger/Addons/AdmiralJacksShipwreckAddon.cs
index 82096089c..d8103c47e 100644
--- a/Scripts/Services/Seasonal Events/JollyRoger/Addons/AdmiralJacksShipwreckAddon.cs	
+++ b/Scripts/Services/Seasonal Events/JollyRoger/Addons/AdmiralJacksShipwreckAddon.cs	
@@ -658,7 +658,7 @@ namespace Server.Items
         {
             AddonComponent ac;
             ac = new AddonComponent(item);
-            if (name != null && name.Length > 0)
+            if (!string.IsNullOrEmpty(name))
                 ac.Name = name;
             if (hue != 0)
                 ac.Hue = hue;
diff --git a/Scripts/Services/Seasonal Events/JollyRoger/Addons/CastleAddon.cs b/Scripts/Services/Seasonal Events/JollyRoger/Addons/CastleAddon.cs
index 2727a08c4..aa1737111 100644
--- a/Scripts/Services/Seasonal Events/JollyRoger/Addons/CastleAddon.cs	
+++ b/Scripts/Services/Seasonal Events/JollyRoger/Addons/CastleAddon.cs	
@@ -758,20 +758,11 @@ namespace Server.Items
                 _Timer = null;
             }
 
-            if (CastleCarpet != null)
-            {
-                CastleCarpet.Delete();
-            }
+            CastleCarpet?.Delete();
 
-            if (NightDecoration != null)
-            {
-                NightDecoration.Delete();
-            }
+            NightDecoration?.Delete();
 
-            if (DayDecoration != null)
-            {
-                DayDecoration.Delete();
-            }
+            DayDecoration?.Delete();
 
             base.OnDelete();
         }
@@ -852,7 +843,7 @@ namespace Server.Items
         {
             AddonComponent ac;
             ac = new AddonComponent(item);
-            if (name != null && name.Length > 0)
+            if (!string.IsNullOrEmpty(name))
                 ac.Name = name;
             if (hue != 0)
                 ac.Hue = hue;
@@ -1852,7 +1843,7 @@ namespace Server.Items
         {
             AddonComponent ac;
             ac = new AddonComponent(item);
-            if (name != null && name.Length > 0)
+            if (!string.IsNullOrEmpty(name))
                 ac.Name = name;
             if (hue != 0)
                 ac.Hue = hue;
@@ -1981,7 +1972,7 @@ namespace Server.Items
         {
             AddonComponent ac;
             ac = new AddonComponent(item);
-            if (name != null && name.Length > 0)
+            if (!string.IsNullOrEmpty(name))
                 ac.Name = name;
             if (hue != 0)
                 ac.Hue = hue;
@@ -2189,7 +2180,7 @@ namespace Server.Items
         {
             AddonComponent ac;
             ac = new AddonComponent(item);
-            if (name != null && name.Length > 0)
+            if (!string.IsNullOrEmpty(name))
                 ac.Name = name;
             if (hue != 0)
                 ac.Hue = hue;
diff --git a/Scripts/Services/Seasonal Events/JollyRoger/Addons/IversRoundingAddon.cs b/Scripts/Services/Seasonal Events/JollyRoger/Addons/IversRoundingAddon.cs
index e5ceb1bbd..a2aad5cf0 100644
--- a/Scripts/Services/Seasonal Events/JollyRoger/Addons/IversRoundingAddon.cs	
+++ b/Scripts/Services/Seasonal Events/JollyRoger/Addons/IversRoundingAddon.cs	
@@ -431,7 +431,7 @@ namespace Server.Items
         {
             AddonComponent ac;
             ac = new AddonComponent(item);
-            if (name != null && name.Length > 0)
+            if (!string.IsNullOrEmpty(name))
                 ac.Name = name;
             if (hue != 0)
                 ac.Hue = hue;
diff --git a/Scripts/Services/Seasonal Events/JollyRoger/Addons/WellofSoulsAnkhOfSacrifice.cs b/Scripts/Services/Seasonal Events/JollyRoger/Addons/WellofSoulsAnkhOfSacrifice.cs
index dbdcd7503..bbec046b6 100644
--- a/Scripts/Services/Seasonal Events/JollyRoger/Addons/WellofSoulsAnkhOfSacrifice.cs	
+++ b/Scripts/Services/Seasonal Events/JollyRoger/Addons/WellofSoulsAnkhOfSacrifice.cs	
@@ -24,9 +24,8 @@ namespace Server.Items
         public override void OnComponentUsed(AddonComponent c, Mobile from)
         {
             var l = JollyRogerData.GetList(from);
-            var pm = from as PlayerMobile;
 
-            if (pm != null && l != null && l.Shrine != null)
+            if (from is PlayerMobile pm && l != null && l.Shrine != null)
             {
                 var title = JollyRogerData.GetShrineTitle(pm);
 
diff --git a/Scripts/Services/Seasonal Events/JollyRoger/Items/MysteriousFragment.cs b/Scripts/Services/Seasonal Events/JollyRoger/Items/MysteriousFragment.cs
index d418fd7e0..fa1b1153a 100644
--- a/Scripts/Services/Seasonal Events/JollyRoger/Items/MysteriousFragment.cs	
+++ b/Scripts/Services/Seasonal Events/JollyRoger/Items/MysteriousFragment.cs	
@@ -42,17 +42,14 @@ namespace Server.Items
 
             var region = (ShrineBattleRegion)Region.Find(new Point3D(p.X, p.Y, p.Z), from.Map).GetRegion(typeof(ShrineBattleRegion));
 
-            if (region != null && region._Controller != null)
+            if (region?._Controller != null)
             {
                 _Controller = region._Controller;
 
                 if (!_Controller.Active && _Controller.FragmentCount < 8 &&
                     JollyRogerData.GetShrine(this) == _Controller.Shrine)
                 {
-                    if (_Timer != null)
-                    {
-                        _Timer.Stop();
-                    }
+                    _Timer?.Stop();
 
                     _Controller.FragmentCount++;
 
@@ -75,10 +72,7 @@ namespace Server.Items
                 _Controller = null;
             }
 
-            if (_Timer != null)
-            {
-                _Timer.Stop();
-            }
+            _Timer?.Stop();
 
             return true;
         }
diff --git a/Scripts/Services/Seasonal Events/JollyRoger/Items/Tabard.cs b/Scripts/Services/Seasonal Events/JollyRoger/Items/Tabard.cs
index 7a63b642d..664404159 100644
--- a/Scripts/Services/Seasonal Events/JollyRoger/Items/Tabard.cs	
+++ b/Scripts/Services/Seasonal Events/JollyRoger/Items/Tabard.cs	
@@ -47,7 +47,7 @@ namespace Server.Items
 
         public override void AddNameProperty(ObjectPropertyList list)
         {
-            list.Add(1159369, string.Format("{0}", _Shrine.ToString())); // Tabard of ~1_VIRTUE~
+            list.Add(1159369, $"{_Shrine.ToString()}"); // Tabard of ~1_VIRTUE~
         }
 
         public override void Serialize(GenericWriter writer)
diff --git a/Scripts/Services/Seasonal Events/JollyRoger/JollyRogerData.cs b/Scripts/Services/Seasonal Events/JollyRoger/JollyRogerData.cs
index b597f3d2c..8eda9107b 100644
--- a/Scripts/Services/Seasonal Events/JollyRoger/JollyRogerData.cs	
+++ b/Scripts/Services/Seasonal Events/JollyRoger/JollyRogerData.cs	
@@ -119,7 +119,7 @@ namespace Server.Engines.JollyRoger
         {
             var list = _List.FirstOrDefault(x => x.Mobile == m);
 
-            if (list != null && list.Shrine != null)
+            if (list?.Shrine != null)
             {
                 if (list.Shrine.Any(y => y.Shrine == shrine))
                 {
@@ -152,7 +152,7 @@ namespace Server.Engines.JollyRoger
 
             var list = _List.FirstOrDefault(x => x.Mobile == m);
 
-            if (list != null && list.Shrine != null)
+            if (list?.Shrine != null)
             {
                 if (list.Shrine.Any(y => y.Shrine == shrine))
                 {
@@ -181,9 +181,8 @@ namespace Server.Engines.JollyRoger
         public static void TitleCheck(Mobile m, Shrine shrine)
         {
             var list = _List.FirstOrDefault(x => x.Mobile == m);
-            var pm = m as PlayerMobile;
 
-            if (pm != null && list != null && list.Shrine != null)
+            if (m is PlayerMobile pm && list != null && list.Shrine != null)
             {
                 var count = list.Shrine.FirstOrDefault(x => x.Shrine == shrine).FragmentCount;
                 var playerTitle = GetShrineTitle(pm);
diff --git a/Scripts/Services/Seasonal Events/JollyRoger/Mobile/SherryTheMouse.cs b/Scripts/Services/Seasonal Events/JollyRoger/Mobile/SherryTheMouse.cs
index 7de908ba5..1972e1eb1 100644
--- a/Scripts/Services/Seasonal Events/JollyRoger/Mobile/SherryTheMouse.cs	
+++ b/Scripts/Services/Seasonal Events/JollyRoger/Mobile/SherryTheMouse.cs	
@@ -321,10 +321,7 @@ namespace Server.Engines.JollyRoger
 
         public override void OnDelete()
         {
-            if (Box != null)
-            {
-                Box.Delete();
-            }
+            Box?.Delete();
 
             if (LuteList != null)
             {
diff --git a/Scripts/Services/Seasonal Events/JollyRoger/Region.cs b/Scripts/Services/Seasonal Events/JollyRoger/Region.cs
index 3d3e3fdd9..a5106d741 100644
--- a/Scripts/Services/Seasonal Events/JollyRoger/Region.cs	
+++ b/Scripts/Services/Seasonal Events/JollyRoger/Region.cs	
@@ -84,7 +84,7 @@ namespace Server.Regions
 
             var list = JollyRogerData.GetList(m);
 
-            if (list != null && list.Shrine != null)
+            if (list?.Shrine != null)
             {
                 var s = list.Shrine.FirstOrDefault(x => x.Shrine == virtue.Shrine);
 
@@ -113,7 +113,7 @@ namespace Server.Regions
                     else
                     {
                         m.PrivateOverheadMessage(MessageType.Regular, 0x47E, false,
-                            string.Format("*Thou are truly {0}...*", virtue.Title), m.NetState);
+                            $"*Thou are truly {virtue.Title}...*", m.NetState);
 
                         m.FixedParticles(0x376A, 1, 72, 0x13B5, EffectLayer.Waist);
                         m.PlaySound(0x1F2);
@@ -121,12 +121,12 @@ namespace Server.Regions
                 }
                 else
                 {
-                    m.PrivateOverheadMessage(MessageType.Regular, 0x47E, false, string.Format("*Thou are not truly {0}...*", virtue.Title), m.NetState);
+                    m.PrivateOverheadMessage(MessageType.Regular, 0x47E, false, $"*Thou are not truly {virtue.Title}...*", m.NetState);
                 }
             }
             else
             {
-                m.PrivateOverheadMessage(MessageType.Regular, 0x47E, false, string.Format("*Thou are not truly {0}...*", virtue.Title), m.NetState);
+                m.PrivateOverheadMessage(MessageType.Regular, 0x47E, false, $"*Thou are not truly {virtue.Title}...*", m.NetState);
             }
         }
     }
diff --git a/Scripts/Services/Seasonal Events/JollyRoger/ShrineBattleSpawner/ShrineBattleController.cs b/Scripts/Services/Seasonal Events/JollyRoger/ShrineBattleSpawner/ShrineBattleController.cs
index cab6e2520..0ad67ed3f 100644
--- a/Scripts/Services/Seasonal Events/JollyRoger/ShrineBattleSpawner/ShrineBattleController.cs	
+++ b/Scripts/Services/Seasonal Events/JollyRoger/ShrineBattleSpawner/ShrineBattleController.cs	
@@ -39,7 +39,7 @@ namespace Server.Engines.JollyRoger
         public ShrineBattleController _Controller { get; set; }
 
         public ShrineBattleRegion(ShrineBattleController controller)
-            : base(string.Format("{0} Fragment Region", controller.Shrine.ToString()), controller.Map, DefaultPriority, ShrineBattleController._FragmentRegionTable[(int)controller.Shrine])
+            : base($"{controller.Shrine.ToString()} Fragment Region", controller.Map, DefaultPriority, ShrineBattleController._FragmentRegionTable[(int)controller.Shrine])
         {
             _Controller = controller;
         }
@@ -377,22 +377,19 @@ namespace Server.Engines.JollyRoger
             int count = reader.ReadInt();
             for (int i = 0; i < count; i++)
             {
-                BaseCreature captain = reader.ReadMobile() as BaseCreature;
                 int c = reader.ReadInt();
 
                 List<BaseCreature> list = new List<BaseCreature>();
 
                 for (int j = 0; j < c; j++)
                 {
-                    BaseCreature spawn = reader.ReadMobile() as BaseCreature;
-
-                    if (spawn != null)
+                    if (reader.ReadMobile() is BaseCreature spawn)
                     {
                         list.Add(spawn);
                     }
                 }
 
-                if (captain != null)
+                if (reader.ReadMobile() is BaseCreature captain)
                     Spawn[captain] = list;
                 else
                 {
diff --git a/Scripts/Services/Seasonal Events/JollyRoger/ShrineBattleSpawner/ShrineMaster.cs b/Scripts/Services/Seasonal Events/JollyRoger/ShrineBattleSpawner/ShrineMaster.cs
index 20cd2d38e..9480a1eff 100644
--- a/Scripts/Services/Seasonal Events/JollyRoger/ShrineBattleSpawner/ShrineMaster.cs	
+++ b/Scripts/Services/Seasonal Events/JollyRoger/ShrineBattleSpawner/ShrineMaster.cs	
@@ -50,9 +50,7 @@ namespace Server.Engines.JollyRoger
 
         public override WeaponAbility GetWeaponAbility()
         {
-            BaseWeapon wep = Weapon as BaseWeapon;
-
-            if (wep != null)
+            if (Weapon is BaseWeapon wep)
             {
                 return 0.6 > Utility.RandomDouble() ? wep.PrimaryAbility : wep.SecondaryAbility;
             }
@@ -649,10 +647,9 @@ namespace Server.Engines.JollyRoger
 
         private void DoDamage_Callback(object o)
         {
-            var m = o as Mobile;
             var map = Map;
 
-            if (m != null && map != null)
+            if (o is Mobile m && map != null)
             {
                 DoHarmful(m);
                 AOS.Damage(m, this, Utility.RandomMinMax(100, 150), 50, 50, 0, 0, 0);
diff --git a/Scripts/Services/Seasonal Events/KrampusEncounter/KrampusEvent.cs b/Scripts/Services/Seasonal Events/KrampusEncounter/KrampusEvent.cs
index 96f9ddcef..63608b2ae 100644
--- a/Scripts/Services/Seasonal Events/KrampusEncounter/KrampusEvent.cs	
+++ b/Scripts/Services/Seasonal Events/KrampusEncounter/KrampusEvent.cs	
@@ -133,7 +133,7 @@ namespace Server.Engines.SeasonalEvents
 
                 if (mob != null && CityTradeSystem.HasTrade(mob))
                 {
-                    mob.LocalOverheadMessage(MessageType.Regular, 1150, 1158832, string.Format("{0}\t{1}", WorldLocationInfo.GetLocationString(SpawnLocation, SpawnMap), Sextant.GetCoords(SpawnLocation, SpawnMap))); // *You sense Krampus has been spotted near ~2_where~ at ~1_coords~!*
+                    mob.LocalOverheadMessage(MessageType.Regular, 1150, 1158832, $"{WorldLocationInfo.GetLocationString(SpawnLocation, SpawnMap)}\t{Sextant.GetCoords(SpawnLocation, SpawnMap)}"); // *You sense Krampus has been spotted near ~2_where~ at ~1_coords~!*
                 }
             }
 
@@ -248,10 +248,9 @@ namespace Server.Engines.SeasonalEvents
 
                     for (int i = 0; i < count; i++)
                     {
-                        PlayerMobile m = reader.ReadMobile() as PlayerMobile;
                         int c = reader.ReadInt();
 
-                        if (m != null)
+                        if (reader.ReadMobile() is PlayerMobile m)
                         {
                             CompleteTable[m] = c;
                         }
diff --git a/Scripts/Services/Seasonal Events/KrampusEncounter/Mobiles/Krampus.cs b/Scripts/Services/Seasonal Events/KrampusEncounter/Mobiles/Krampus.cs
index 03845e80b..e6948c255 100644
--- a/Scripts/Services/Seasonal Events/KrampusEncounter/Mobiles/Krampus.cs	
+++ b/Scripts/Services/Seasonal Events/KrampusEncounter/Mobiles/Krampus.cs	
@@ -78,7 +78,7 @@ namespace Server.Mobiles
                 return 0;
             }
 
-            return SummonedHelpers.Where(bc => bc != null && bc.Alive).Count();
+            return SummonedHelpers.Count(bc => bc != null && bc.Alive);
         }
 
         public void Summon(Mobile target, bool initial = false)
@@ -412,9 +412,7 @@ namespace Server.Mobiles
             {
                 for (int i = 0; i < count; i++)
                 {
-                    BaseCreature summon = reader.ReadMobile() as BaseCreature;
-
-                    if (summon != null)
+                    if (reader.ReadMobile() is BaseCreature summon)
                     {
                         if (SummonedHelpers == null)
                             SummonedHelpers = new List<BaseCreature>();
@@ -430,9 +428,7 @@ namespace Server.Mobiles
             {
                 for (int i = 0; i < count; i++)
                 {
-                    BaseCreature summon = reader.ReadMobile() as BaseCreature;
-
-                    if (summon != null)
+                    if (reader.ReadMobile() is BaseCreature summon)
                     {
                         if (InitialSpawn == null)
                             InitialSpawn = new List<BaseCreature>();
diff --git a/Scripts/Services/Seasonal Events/RisingTide/BlackMarketMerchant.cs b/Scripts/Services/Seasonal Events/RisingTide/BlackMarketMerchant.cs
index b9ae6f186..1b1d0ea34 100644
--- a/Scripts/Services/Seasonal Events/RisingTide/BlackMarketMerchant.cs	
+++ b/Scripts/Services/Seasonal Events/RisingTide/BlackMarketMerchant.cs	
@@ -61,9 +61,9 @@ namespace Server.Engines.RisingTide
 
         public override void AwardPoints(PlayerMobile pm, Item item, int amount)
         {
-            if (item is MaritimeCargo)
+            if (item is MaritimeCargo maritimeCargo)
             {
-                PointsSystem.RisingTide.AwardPoints(pm, ((MaritimeCargo)item).GetAwardAmount());
+                PointsSystem.RisingTide.AwardPoints(pm, maritimeCargo.GetAwardAmount());
             }
         }
 
diff --git a/Scripts/Services/Seasonal Events/RisingTide/MannedCannon.cs b/Scripts/Services/Seasonal Events/RisingTide/MannedCannon.cs
index 4ea5da0cb..bc3300506 100644
--- a/Scripts/Services/Seasonal Events/RisingTide/MannedCannon.cs	
+++ b/Scripts/Services/Seasonal Events/RisingTide/MannedCannon.cs	
@@ -295,12 +295,11 @@ namespace Server.Items
         public virtual void OnShipHit(object obj)
         {
             object[] list = (object[])obj;
-            BaseBoat target = list[0] as BaseBoat;
             Point3D pnt = (Point3D)list[1];
 
             AmmoInfo ammoInfo = AmmoInfo.GetAmmoInfo((AmmunitionType)list[2]);
 
-            if (ammoInfo != null && target != null)
+            if (ammoInfo != null && list[0] is BaseBoat target)
             {
                 int damage = (Utility.RandomMinMax(ammoInfo.MinDamage, ammoInfo.MaxDamage));
                 damage /= 7;
@@ -401,10 +400,7 @@ namespace Server.Items
             {
                 int damage = Utility.RandomMinMax(ammoInfo.MinDamage, ammoInfo.MaxDamage);
 
-                if (Operator != null)
-                {
-                    Operator.DoHarmful(toHit);
-                }
+                Operator?.DoHarmful(toHit);
 
                 AOS.Damage(toHit, Operator, damage, ammoInfo.PhysicalDamage, ammoInfo.FireDamage, ammoInfo.ColdDamage, ammoInfo.PoisonDamage, ammoInfo.EnergyDamage);
                 Effects.SendLocationEffect(toHit.Location, toHit.Map, Utility.RandomBool() ? 14000 : 14013, 15, 10);
diff --git a/Scripts/Services/Seasonal Events/RisingTide/MaritimeCargo.cs b/Scripts/Services/Seasonal Events/RisingTide/MaritimeCargo.cs
index 7033b83d3..3f168faab 100644
--- a/Scripts/Services/Seasonal Events/RisingTide/MaritimeCargo.cs	
+++ b/Scripts/Services/Seasonal Events/RisingTide/MaritimeCargo.cs	
@@ -143,14 +143,14 @@ namespace Server.Items
 
         public override void AddNameProperty(ObjectPropertyList list)
         {
-            list.Add(1158906, string.Format("#{0}", CityLoyaltySystem.GetCityLocalization(_City).ToString())); // Maritime Trade Cargo Destined for ~1_CITY~
+            list.Add(1158906, $"#{CityLoyaltySystem.GetCityLocalization(_City).ToString()}"); // Maritime Trade Cargo Destined for ~1_CITY~
         }
 
         public override void AddWeightProperty(ObjectPropertyList list)
         {
             base.AddWeightProperty(list);
 
-            list.Add(_CargoQuality < CargoQuality.Mythical ? 1158903 + (int)_CargoQuality : 1158969, string.Format("#{0}", TypeLabel(_CargoType)));
+            list.Add(_CargoQuality < CargoQuality.Mythical ? 1158903 + (int)_CargoQuality : 1158969, $"#{TypeLabel(_CargoType)}");
         }
 
         public static int TypeLabel(CargoType type)
diff --git a/Scripts/Services/Seasonal Events/RisingTide/PlunderBeaconAddon.cs b/Scripts/Services/Seasonal Events/RisingTide/PlunderBeaconAddon.cs
index dd955f81d..f9566c6d7 100644
--- a/Scripts/Services/Seasonal Events/RisingTide/PlunderBeaconAddon.cs	
+++ b/Scripts/Services/Seasonal Events/RisingTide/PlunderBeaconAddon.cs	
@@ -299,7 +299,7 @@ namespace Server.Items
 
         private int SpawnCount()
         {
-            return Spawn.Keys.Where(s => s != null && !s.Deleted).Count();
+            return Spawn.Keys.Count(s => s != null && !s.Deleted);
         }
 
         private readonly Type[] _SpawnTypes =
@@ -429,7 +429,7 @@ namespace Server.Items
         {
             AddonComponent ac;
             ac = new AddonComponent(item);
-            if (name != null && name.Length > 0)
+            if (!string.IsNullOrEmpty(name))
                 ac.Name = name;
             if (hue != 0)
                 ac.Hue = hue;
diff --git a/Scripts/Services/Seasonal Events/RisingTide/Rewards.cs b/Scripts/Services/Seasonal Events/RisingTide/Rewards.cs
index a3175d69b..4407cd6fe 100644
--- a/Scripts/Services/Seasonal Events/RisingTide/Rewards.cs	
+++ b/Scripts/Services/Seasonal Events/RisingTide/Rewards.cs	
@@ -145,7 +145,7 @@ namespace Server.Items
         {
             if (_MasterName != null)
             {
-                list.Add(1158958, string.Format("{0}{1}", _MasterName, _MasterName.ToLower().EndsWith("s") || _MasterName.ToLower().EndsWith("z") ? "'" : "'s"));
+                list.Add(1158958, $"{_MasterName}{(_MasterName.ToLower().EndsWith("s") || _MasterName.ToLower().EndsWith("z") ? "'" : "'s")}");
             }
             else
             {
diff --git a/Scripts/Services/Seasonal Events/RisingTide/RewardsGump.cs b/Scripts/Services/Seasonal Events/RisingTide/RewardsGump.cs
index 7d37585cc..102bc960b 100644
--- a/Scripts/Services/Seasonal Events/RisingTide/RewardsGump.cs	
+++ b/Scripts/Services/Seasonal Events/RisingTide/RewardsGump.cs	
@@ -48,13 +48,13 @@ namespace Server.Engines.RisingTide
 
         public override void OnItemCreated(Item item)
         {
-            if (item is DecorativeWoodCarving)
+            if (item is DecorativeWoodCarving decorativeWoodCarving)
             {
-                ((DecorativeWoodCarving)item).AssignRandomName();
+                decorativeWoodCarving.AssignRandomName();
             }
-            else if (item is ShoulderParrot)
+            else if (item is ShoulderParrot shoulderParrot)
             {
-                ((ShoulderParrot)item).MasterName = User.Name;
+                shoulderParrot.MasterName = User.Name;
             }
         }
 
diff --git a/Scripts/Services/Seasonal Events/RisingTide/RisingTideData.cs b/Scripts/Services/Seasonal Events/RisingTide/RisingTideData.cs
index 88a98c816..2b321ce2f 100644
--- a/Scripts/Services/Seasonal Events/RisingTide/RisingTideData.cs	
+++ b/Scripts/Services/Seasonal Events/RisingTide/RisingTideData.cs	
@@ -52,10 +52,7 @@ namespace Server.Engines.Points
                     {
                         Container corpse = victim.Corpse;
 
-                        if (corpse != null)
-                        {
-                            corpse.DropItem(new MaritimeCargo());
-                        }
+                        corpse?.DropItem(new MaritimeCargo());
                     }
                 }
             }
diff --git a/Scripts/Services/Seasonal Events/SeasonalEventGump.cs b/Scripts/Services/Seasonal Events/SeasonalEventGump.cs
index d9548643d..4e36ac94a 100644
--- a/Scripts/Services/Seasonal Events/SeasonalEventGump.cs	
+++ b/Scripts/Services/Seasonal Events/SeasonalEventGump.cs	
@@ -45,11 +45,11 @@ namespace Server.Engines.SeasonalEvents
 
                     if (entry.Duration > -1)
                     {
-                        AddLabel(275, y, hue, string.Format("{0}/{1} - {2}/{3}", entry.MonthStart.ToString(), entry.DayStart.ToString(), end.Month.ToString(), end.Day.ToString()));
+                        AddLabel(275, y, hue, $"{entry.MonthStart.ToString()}/{entry.DayStart.ToString()} - {end.Month.ToString()}/{end.Day.ToString()}");
                     }
                     else
                     {
-                        AddLabel(275, y, hue, string.Format("{0}/{1} - Completion", entry.MonthStart.ToString(), entry.DayStart.ToString()));
+                        AddLabel(275, y, hue, $"{entry.MonthStart.ToString()}/{entry.DayStart.ToString()} - Completion");
                     }
                 }
 
diff --git a/Scripts/Services/Seasonal Events/SeasonalEventSystem.cs b/Scripts/Services/Seasonal Events/SeasonalEventSystem.cs
index e2f0a0c7c..e77c0f54a 100644
--- a/Scripts/Services/Seasonal Events/SeasonalEventSystem.cs	
+++ b/Scripts/Services/Seasonal Events/SeasonalEventSystem.cs	
@@ -136,9 +136,9 @@ namespace Server.Engines.SeasonalEvents
             {
                 entry.Status = EventStatus.Inactive;
 
-                if (from is PlayerMobile)
+                if (from is PlayerMobile playerMobile)
                 {
-                    BaseGump.SendGump(new SeasonalEventGump((PlayerMobile)from));
+                    BaseGump.SendGump(new SeasonalEventGump(playerMobile));
                 }
             }
         }
@@ -317,13 +317,13 @@ namespace Server.Engines.SeasonalEvents
         {
             if (Running && !IsActive())
             {
-                Utility.WriteConsoleColor(ConsoleColor.Green, string.Format("Disabling {0}", Name));
+                Utility.WriteConsoleColor(ConsoleColor.Green, $"Disabling {Name}");
 
                 Remove();
             }
             else if (!Running && IsActive())
             {
-                Utility.WriteConsoleColor(ConsoleColor.Green, string.Format("Enabling {0}", Name));
+                Utility.WriteConsoleColor(ConsoleColor.Green, $"Enabling {Name}");
 
                 Generate();
             }
diff --git a/Scripts/Services/Seasonal Events/TreasuresOfDoom/RewardGump.cs b/Scripts/Services/Seasonal Events/TreasuresOfDoom/RewardGump.cs
index df02efe4d..06716b2c7 100644
--- a/Scripts/Services/Seasonal Events/TreasuresOfDoom/RewardGump.cs	
+++ b/Scripts/Services/Seasonal Events/TreasuresOfDoom/RewardGump.cs	
@@ -37,9 +37,9 @@ namespace Server.Engines.TreasuresOfDoom
 
             if (item != null)
             {
-                if (item is LanternOfLight)
+                if (item is LanternOfLight lanternOfLight)
                 {
-                    ((LanternOfLight)item).OwnerName = User.Name;
+                    lanternOfLight.OwnerName = User.Name;
                 }
 
                 if (User.Backpack == null || !User.Backpack.TryDropItem(User, item, false))
diff --git a/Scripts/Services/Seasonal Events/TreasuresOfDoom/VaseSpawner.cs b/Scripts/Services/Seasonal Events/TreasuresOfDoom/VaseSpawner.cs
index e2cda736f..86c359c22 100644
--- a/Scripts/Services/Seasonal Events/TreasuresOfDoom/VaseSpawner.cs	
+++ b/Scripts/Services/Seasonal Events/TreasuresOfDoom/VaseSpawner.cs	
@@ -22,9 +22,9 @@ namespace Server.Engines.TreasuresOfDoom
 
         public void Remove(ISpawnable spawn)
         {
-            if (spawn is AncientClayVase)
+            if (spawn is AncientClayVase ancientClayVase)
             {
-                RemoveVase((AncientClayVase)spawn);
+                RemoveVase(ancientClayVase);
             }
         }
 
diff --git a/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/ChestSpawner.cs b/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/ChestSpawner.cs
index 60617957f..435e9f3dc 100644
--- a/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/ChestSpawner.cs	
+++ b/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/ChestSpawner.cs	
@@ -21,9 +21,7 @@ namespace Server.Engines.Khaldun
 
         public void Remove(ISpawnable spawn)
         {
-            var chest = spawn as KhaldunChest;
-
-            if (chest != null)
+            if (spawn is KhaldunChest chest)
             {
                 RemoveChest(chest);
             }
diff --git a/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Creatures/CultistAmbusher.cs b/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Creatures/CultistAmbusher.cs
index 212dd36ca..c855228f6 100644
--- a/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Creatures/CultistAmbusher.cs	
+++ b/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Creatures/CultistAmbusher.cs	
@@ -172,9 +172,7 @@ namespace Server.Mobiles
 
         public override WeaponAbility GetWeaponAbility()
         {
-            BaseWeapon wep = Weapon as BaseWeapon;
-
-            if (wep != null && !(wep is Fists))
+            if (Weapon is BaseWeapon wep && !(wep is Fists))
             {
                 if (Utility.RandomDouble() > 0.5)
                     return wep.PrimaryAbility;
diff --git a/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Creatures/KhalAnkur.cs b/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Creatures/KhalAnkur.cs
index 7a05f310e..7dcc29d11 100644
--- a/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Creatures/KhalAnkur.cs	
+++ b/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Creatures/KhalAnkur.cs	
@@ -173,7 +173,7 @@ namespace Server.Mobiles
 
                     m_NextSpawn = DateTime.UtcNow + TimeSpan.FromSeconds(Utility.RandomMinMax(120, 180));
                 }
-                else if (Spawn.Creatures.OfType<KhalAnkurWarriors>().Where(x => x._Type == KhalAnkurWarriors.WarriorType.General && !x.Deleted).Count() <= 0)
+                else if (!Spawn.Creatures.OfType<KhalAnkurWarriors>().Any(x => x._Type == KhalAnkurWarriors.WarriorType.General && !x.Deleted))
                 {
                     Blessed = false;
                     return;
diff --git a/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Creatures/KhalAnkurWarriors.cs b/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Creatures/KhalAnkurWarriors.cs
index ccb449185..b1dcfcaac 100644
--- a/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Creatures/KhalAnkurWarriors.cs	
+++ b/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Creatures/KhalAnkurWarriors.cs	
@@ -180,9 +180,7 @@ namespace Server.Mobiles
 
         public override WeaponAbility GetWeaponAbility()
         {
-            BaseWeapon wep = Weapon as BaseWeapon;
-
-            if (wep != null && !(wep is Fists))
+            if (Weapon is BaseWeapon wep && !(wep is Fists))
             {
                 if (Utility.RandomDouble() > 0.5)
                     return wep.PrimaryAbility;
diff --git a/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Gumps.cs b/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Gumps.cs
index eb2479b0b..c149d1d89 100644
--- a/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Gumps.cs	
+++ b/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Gumps.cs	
@@ -29,11 +29,11 @@ namespace Server.Engines.Khaldun
         {
             AddBackground(0, 0, 454, 400, 9380);
             AddItem(75, 120, itemID, itemHue);
-            AddHtml(177, 50, 250, 20, string.Format("<center><basefont color=#6B1010>{0}</center>", itemName), false, false);
+            AddHtml(177, 50, 250, 20, $"<center><basefont color=#6B1010>{itemName}</center>", false, false);
 
             if (!string.IsNullOrEmpty(secondLineText))
             {
-                AddHtml(177, 77, 250, 40, string.Format("<center><basefont color=#6B1010>{0}</center>", secondLineText), false, false);
+                AddHtml(177, 77, 250, 40, $"<center><basefont color=#6B1010>{secondLineText}</center>", false, false);
                 AddHtmlLocalized(177, 122, 250, 228, cliloc, true, true);
             }
             else
diff --git a/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Items/KhaldunCampAddon.cs b/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Items/KhaldunCampAddon.cs
index 3608290d3..ca346deb8 100644
--- a/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Items/KhaldunCampAddon.cs	
+++ b/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Items/KhaldunCampAddon.cs	
@@ -94,7 +94,7 @@ namespace Server.Items
         {
             AddonComponent ac;
             ac = new AddonComponent(item);
-            if (name != null && name.Length > 0)
+            if (!string.IsNullOrEmpty(name))
                 ac.Name = name;
             if (hue != 0)
                 ac.Hue = hue;
diff --git a/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Items/KhaldunChest.cs b/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Items/KhaldunChest.cs
index 90b211ef8..3aa3716f1 100644
--- a/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Items/KhaldunChest.cs	
+++ b/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Items/KhaldunChest.cs	
@@ -186,10 +186,7 @@ namespace Server.Items
 
         public override void Delete()
         {
-            if (Spawner != null)
-            {
-                Spawner.Remove(this);
-            }
+            Spawner?.Remove(this);
 
             base.Delete();
         }
diff --git a/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Items/KhaldunEntranceAddon.cs b/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Items/KhaldunEntranceAddon.cs
index c992cba3f..4c99712cc 100644
--- a/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Items/KhaldunEntranceAddon.cs	
+++ b/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Items/KhaldunEntranceAddon.cs	
@@ -65,7 +65,7 @@ namespace Server.Items
         {
             AddonComponent ac;
             ac = new AddonComponent(item);
-            if (name != null && name.Length > 0)
+            if (!string.IsNullOrEmpty(name))
                 ac.Name = name;
             if (hue != 0)
                 ac.Hue = hue;
diff --git a/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Items/KhaldunTastyTreat.cs b/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Items/KhaldunTastyTreat.cs
index d1b052bc6..d09301912 100644
--- a/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Items/KhaldunTastyTreat.cs	
+++ b/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Items/KhaldunTastyTreat.cs	
@@ -38,9 +38,9 @@ namespace Server.Items
             {
                 m.BeginTarget(2, false, TargetFlags.Beneficial, (from, targeted) =>
                 {
-                    if (targeted is Mobile)
+                    if (targeted is Mobile mobile)
                     {
-                        TryFeed(from, (Mobile)targeted);
+                        TryFeed(from, mobile);
                     }
                 });
             }
@@ -160,10 +160,9 @@ namespace Server.Items
 
             for (int i = 0; i < count; i++)
             {
-                BaseCreature bc = reader.ReadMobile() as BaseCreature;
                 DateTime dt = reader.ReadDateTime();
 
-                if (bc != null && dt > DateTime.UtcNow)
+                if (reader.ReadMobile() is BaseCreature bc && dt > DateTime.UtcNow)
                 {
                     if (Table == null)
                         Table = new Dictionary<BaseCreature, DateTime>();
@@ -177,9 +176,7 @@ namespace Server.Items
 
         public static void OnLogin(LoginEventArgs e)
         {
-            PlayerMobile pm = e.Mobile as PlayerMobile;
-
-            if (pm != null)
+            if (e.Mobile is PlayerMobile pm)
             {
                 Timer.DelayCall(() => Caddellite.UpdateBuff(pm));
             }
diff --git a/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Items/MaskOfKhalAnkur.cs b/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Items/MaskOfKhalAnkur.cs
index 6b0d19e55..227809cbe 100644
--- a/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Items/MaskOfKhalAnkur.cs	
+++ b/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Items/MaskOfKhalAnkur.cs	
@@ -154,7 +154,7 @@ namespace Server.Items
             m_Charges = reader.ReadInt();
             ChargeTime = reader.ReadInt();
 
-            if (Parent != null && Parent is Mobile && ChargeTime > 0)
+            if (Parent is Mobile && ChargeTime > 0)
                 m_Timer = Timer.DelayCall(TimeSpan.FromSeconds(1), TimeSpan.FromSeconds(1), Slice);
 
             if (version == 0)
diff --git a/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Items/PendantOfKhalAnkur.cs b/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Items/PendantOfKhalAnkur.cs
index 56068c7cc..44f0bff67 100644
--- a/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Items/PendantOfKhalAnkur.cs	
+++ b/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Items/PendantOfKhalAnkur.cs	
@@ -148,7 +148,7 @@ namespace Server.Items
             m_Charges = reader.ReadInt();
             ChargeTime = reader.ReadInt();
 
-            if (Parent != null && Parent is Mobile && ChargeTime > 0)
+            if (Parent is Mobile && ChargeTime > 0)
                 m_Timer = Timer.DelayCall(TimeSpan.FromSeconds(1), TimeSpan.FromSeconds(1), Slice);
 
             if (version == 0)
diff --git a/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Quest/GoingGumshoeQuest.cs b/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Quest/GoingGumshoeQuest.cs
index 0ca18b5fb..721fb1737 100644
--- a/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Quest/GoingGumshoeQuest.cs	
+++ b/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Quest/GoingGumshoeQuest.cs	
@@ -304,9 +304,9 @@ namespace Server.Engines.Khaldun
 
         public static bool CheckBookcase(Mobile from, Item item)
         {
-            if (from is PlayerMobile)
+            if (from is PlayerMobile playerMobile)
             {
-                GoingGumshoeQuest3 quest = QuestHelper.GetQuest<GoingGumshoeQuest3>((PlayerMobile)from);
+                GoingGumshoeQuest3 quest = QuestHelper.GetQuest<GoingGumshoeQuest3>(playerMobile);
 
                 if (quest != null && !quest.FoundCipherBook)
                 {
@@ -324,9 +324,9 @@ namespace Server.Engines.Khaldun
 
                         Region region = Region.Find(from.Location, from.Map);
 
-                        if (region is QuestRegion)
+                        if (region is QuestRegion questRegion)
                         {
-                            ((QuestRegion)region).ClearFromMessageTable(from);
+                            questRegion.ClearFromMessageTable(from);
                         }
 
                         return true;
@@ -420,9 +420,9 @@ namespace Server.Engines.Khaldun
             {
                 base.OnLocationChanged(m, oldLocation);
 
-                if (m is PlayerMobile)
+                if (m is PlayerMobile playerMobile)
                 {
-                    GoingGumshoeQuest3 quest = QuestHelper.GetQuest<GoingGumshoeQuest3>((PlayerMobile)m);
+                    GoingGumshoeQuest3 quest = QuestHelper.GetQuest<GoingGumshoeQuest3>(playerMobile);
 
                     if (quest != null && !quest.FoundCipherBook && 0.2 > Utility.RandomDouble())
                     {
diff --git a/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Quest/Items/DecorationAddon.cs b/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Quest/Items/DecorationAddon.cs
index bf82e5a64..e09a0a82e 100644
--- a/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Quest/Items/DecorationAddon.cs	
+++ b/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Quest/Items/DecorationAddon.cs	
@@ -276,7 +276,7 @@ namespace Server.Items
         {
             AddonComponent ac;
             ac = new AddonComponent(item);
-            if (name != null && name.Length > 0)
+            if (!string.IsNullOrEmpty(name))
                 ac.Name = name;
             if (hue != 0)
                 ac.Hue = hue;
diff --git a/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Quest/Mobiles/SageHumbolt.cs b/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Quest/Mobiles/SageHumbolt.cs
index 046abbd47..379b38994 100644
--- a/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Quest/Mobiles/SageHumbolt.cs	
+++ b/Scripts/Services/Seasonal Events/TreasuresOfKhaldun/Quest/Mobiles/SageHumbolt.cs	
@@ -59,9 +59,7 @@ namespace Server.Engines.Khaldun
 
         public bool OnSpiritSpeak(Mobile m)
         {
-            PlayerMobile pm = m as PlayerMobile;
-
-            if (pm != null)
+            if (m is PlayerMobile pm)
             {
                 GoingGumshoeQuest4 quest = QuestHelper.GetQuest<GoingGumshoeQuest4>(pm);
 
diff --git a/Scripts/Services/Seasonal Events/TreasuresOfKotlCity/Items/KotlBattleSimulator.cs b/Scripts/Services/Seasonal Events/TreasuresOfKotlCity/Items/KotlBattleSimulator.cs
index 23c2de18b..184e5405d 100644
--- a/Scripts/Services/Seasonal Events/TreasuresOfKotlCity/Items/KotlBattleSimulator.cs	
+++ b/Scripts/Services/Seasonal Events/TreasuresOfKotlCity/Items/KotlBattleSimulator.cs	
@@ -251,9 +251,7 @@ namespace Server.Engines.TreasuresOfKotlCity
             int count = reader.ReadInt();
             for (int i = 0; i < count; i++)
             {
-                BaseCreature bc = reader.ReadMobile() as BaseCreature;
-
-                if (bc != null)
+                if (reader.ReadMobile() is BaseCreature bc)
                 {
                     bc.Spawner = this;
                     bc.Home = HomeLocation;
@@ -310,9 +308,9 @@ namespace Server.Engines.TreasuresOfKotlCity
 
                             foreach (Item i in eable)
                             {
-                                if (i is Teleporter)
+                                if (i is Teleporter teleporter)
                                 {
-                                    ((Teleporter)i).PointDest = new Point3D(543, 2479, 2);
+                                    teleporter.PointDest = new Point3D(543, 2479, 2);
                                 }
                             }
                         }
diff --git a/Scripts/Services/Seasonal Events/TreasuresOfKotlCity/Items/KotlCityPuzzle.cs b/Scripts/Services/Seasonal Events/TreasuresOfKotlCity/Items/KotlCityPuzzle.cs
index 1ef8bdf1d..33eaff2ce 100644
--- a/Scripts/Services/Seasonal Events/TreasuresOfKotlCity/Items/KotlCityPuzzle.cs	
+++ b/Scripts/Services/Seasonal Events/TreasuresOfKotlCity/Items/KotlCityPuzzle.cs	
@@ -92,9 +92,7 @@ namespace Server.Engines.TreasuresOfKotlCity
                 RandomizeOrder();
             }
 
-            KotlCityPuzzleComponent comp = component as KotlCityPuzzleComponent;
-
-            if (comp != null && comp.Active)
+            if (component is KotlCityPuzzleComponent comp && comp.Active)
             {
                 if (comp.Offset.X == _Order[_Index])
                 {
diff --git a/Scripts/Services/Seasonal Events/TreasuresOfKotlCity/Items/KotlWallAddon.cs b/Scripts/Services/Seasonal Events/TreasuresOfKotlCity/Items/KotlWallAddon.cs
index 3f1d4a7f1..b4ed260c2 100644
--- a/Scripts/Services/Seasonal Events/TreasuresOfKotlCity/Items/KotlWallAddon.cs	
+++ b/Scripts/Services/Seasonal Events/TreasuresOfKotlCity/Items/KotlWallAddon.cs	
@@ -65,7 +65,7 @@ namespace Server.Engines.TreasuresOfKotlCity
         {
             AddonComponent ac;
             ac = new AddonComponent(item);
-            if (name != null && name.Length > 0)
+            if (!string.IsNullOrEmpty(name))
                 ac.Name = name;
             if (hue != 0)
                 ac.Hue = hue;
diff --git a/Scripts/Services/Seasonal Events/TreasuresOfKotlCity/Items/PowerCoreDockingStations.cs b/Scripts/Services/Seasonal Events/TreasuresOfKotlCity/Items/PowerCoreDockingStations.cs
index 50257194c..4e210af31 100644
--- a/Scripts/Services/Seasonal Events/TreasuresOfKotlCity/Items/PowerCoreDockingStations.cs	
+++ b/Scripts/Services/Seasonal Events/TreasuresOfKotlCity/Items/PowerCoreDockingStations.cs	
@@ -123,7 +123,7 @@ namespace Server.Engines.TreasuresOfKotlCity
 
         public void Activate()
         {
-            if (Link && Stations != null && Stations.Where(s => s.Active).Count() == Stations.Count)
+            if (Link && Stations != null && Stations.Count(s => s.Active)== Stations.Count)
             {
                 if (!KotlBattleSimulator.Instance.Active)
                 {
diff --git a/Scripts/Services/Seasonal Events/TreasuresOfKotlCity/Items/WheelsOfTime.cs b/Scripts/Services/Seasonal Events/TreasuresOfKotlCity/Items/WheelsOfTime.cs
index ddf5e7f30..490372ed0 100644
--- a/Scripts/Services/Seasonal Events/TreasuresOfKotlCity/Items/WheelsOfTime.cs	
+++ b/Scripts/Services/Seasonal Events/TreasuresOfKotlCity/Items/WheelsOfTime.cs	
@@ -55,10 +55,7 @@ namespace Server.Engines.TreasuresOfKotlCity
 
         public void ActivateTimeWarp()
         {
-            if (RockBarrier != null)
-            {
-                RockBarrier.MoveToWorld(new Point3D(RockBarrier.X, RockBarrier.Y, RockBarrier.Z - 50), Map.TerMur);
-            }
+            RockBarrier?.MoveToWorld(new Point3D(RockBarrier.X, RockBarrier.Y, RockBarrier.Z - 50), Map.TerMur);
 
             TimeWarpEnds = DateTime.UtcNow + TimeWarpDuration;
             Timer = Timer.DelayCall(TimeSpan.FromMinutes(1), TimeSpan.FromMinutes(1), OnTick);
diff --git a/Scripts/Services/Seasonal Events/TreasuresOfSorceresDungeon/Spawner.cs b/Scripts/Services/Seasonal Events/TreasuresOfSorceresDungeon/Spawner.cs
index eee929002..16fed0ebe 100644
--- a/Scripts/Services/Seasonal Events/TreasuresOfSorceresDungeon/Spawner.cs	
+++ b/Scripts/Services/Seasonal Events/TreasuresOfSorceresDungeon/Spawner.cs	
@@ -26,10 +26,7 @@ namespace Server.Engines.SorcerersDungeon
                     }
                 });
 
-            if (Instance != null)
-            {
-                Instance.BeginTimer();
-            }
+            Instance?.BeginTimer();
         }
 
         public static TOSDSpawner Instance { get; set; }
@@ -62,9 +59,9 @@ namespace Server.Engines.SorcerersDungeon
 
                 foreach (Item item in eable)
                 {
-                    if (item is XmlSpawner)
+                    if (item is XmlSpawner xmlSpawner)
                     {
-                        ((XmlSpawner)item).DoReset = true;
+                        xmlSpawner.DoReset = true;
                     }
                 }
             }
@@ -78,9 +75,9 @@ namespace Server.Engines.SorcerersDungeon
 
                 foreach (Item item in eable)
                 {
-                    if (item is XmlSpawner)
+                    if (item is XmlSpawner xmlSpawner)
                     {
-                        ((XmlSpawner)item).DoRespawn = true;
+                        xmlSpawner.DoRespawn = true;
                     }
                 }
             }
@@ -236,9 +233,7 @@ namespace Server.Engines.SorcerersDungeon
 
             for (int i = 0; i < count; i++)
             {
-                BaseCreature bc = reader.ReadMobile() as BaseCreature;
-
-                if (bc != null)
+                if (reader.ReadMobile() is BaseCreature bc)
                 {
                     AddSpawn(bc);
                 }
diff --git a/Scripts/Services/Seasonal Events/TreasuresOfTokuno/TreasuresOfTokuno.cs b/Scripts/Services/Seasonal Events/TreasuresOfTokuno/TreasuresOfTokuno.cs
index 045490e63..16323f3c7 100644
--- a/Scripts/Services/Seasonal Events/TreasuresOfTokuno/TreasuresOfTokuno.cs	
+++ b/Scripts/Services/Seasonal Events/TreasuresOfTokuno/TreasuresOfTokuno.cs	
@@ -395,7 +395,7 @@ namespace Server.Mobiles
                         if (turnIns == 0)
                             SayTo(pm, 1071013); // Bring me 10 of the lost treasures of Tokuno and I will reward you with a valuable item.
                         else
-                            SayTo(pm, 1070981, string.Format("{0}\t{1}", turnIns, TreasuresOfTokuno.ItemsPerReward)); // You have turned in ~1_COUNT~ minor artifacts. Turn in ~2_NUM~ to receive a reward.
+                            SayTo(pm, 1070981, $"{turnIns}\t{TreasuresOfTokuno.ItemsPerReward}"); // You have turned in ~1_COUNT~ minor artifacts. Turn in ~2_NUM~ to receive a reward.
 
                         ArrayList buttons = ToTTurnInGump.FindRedeemableItems(pm);
 
@@ -490,11 +490,10 @@ namespace Server.Gumps
 
         public override void HandleButtonResponse(NetState sender, int adjustedButton, ImageTileButtonInfo buttonInfo)
         {
-            PlayerMobile pm = sender.Mobile as PlayerMobile;
 
             Item item = ((ItemTileButtonInfo)buttonInfo).Item;
 
-            if (!(pm != null && item.IsChildOf(pm.Backpack) && pm.InRange(m_Collector.Location, 7)))
+            if (!(sender.Mobile is PlayerMobile pm && item.IsChildOf(pm.Backpack) && pm.InRange(m_Collector.Location, 7)))
                 return;
 
             item.Delete();
@@ -513,7 +512,7 @@ namespace Server.Gumps
             }
             else
             {
-                m_Collector.SayTo(pm, 1070981, string.Format("{0}\t{1}", turnIns, TreasuresOfTokuno.ItemsPerReward)); // You have turned in ~1_COUNT~ minor artifacts. Turn in ~2_NUM~ to receive a reward.
+                m_Collector.SayTo(pm, 1070981, $"{turnIns}\t{TreasuresOfTokuno.ItemsPerReward}"); // You have turned in ~1_COUNT~ minor artifacts. Turn in ~2_NUM~ to receive a reward.
 
                 ArrayList buttons = FindRedeemableItems(pm);
 
@@ -536,7 +535,7 @@ namespace Server.Gumps
             if (turnIns == 0)
                 m_Collector.SayTo(pm, 1071013); // Bring me 10 of the lost treasures of Tokuno and I will reward you with a valuable item.
             else if (turnIns < TreasuresOfTokuno.ItemsPerReward)	//This case should ALWAYS be true with this gump, jsut a sanity check
-                m_Collector.SayTo(pm, 1070981, string.Format("{0}\t{1}", turnIns, TreasuresOfTokuno.ItemsPerReward)); // You have turned in ~1_COUNT~ minor artifacts. Turn in ~2_NUM~ to receive a reward.
+                m_Collector.SayTo(pm, 1070981, $"{turnIns}\t{TreasuresOfTokuno.ItemsPerReward}"); // You have turned in ~1_COUNT~ minor artifacts. Turn in ~2_NUM~ to receive a reward.
             else
                 m_Collector.SayTo(pm, 1070982); // When you wish to choose your reward, you have but to approach me again.
         }
@@ -747,7 +746,7 @@ namespace Server.Gumps
             if (pm.AddToBackpack(item))
             {
                 PointsSystem.TreasuresOfTokuno.RemoveTurnIns(pm, TreasuresOfTokuno.ItemsPerReward);
-                m_Collector.SayTo(pm, 1070984, (item.Name == null || item.Name.Length <= 0) ? string.Format("#{0}", item.LabelNumber) : item.Name); // You have earned the gratitude of the Empire. I have placed the ~1_OBJTYPE~ in your backpack.
+                m_Collector.SayTo(pm, 1070984, (item.Name == null || item.Name.Length <= 0) ? $"#{item.LabelNumber}" : item.Name); // You have earned the gratitude of the Empire. I have placed the ~1_OBJTYPE~ in your backpack.
             }
             else
             {
@@ -769,7 +768,7 @@ namespace Server.Gumps
             if (turnIns == 0)
                 m_Collector.SayTo(pm, 1071013); // Bring me 10 of the lost treasures of Tokuno and I will reward you with a valuable item.
             else if (turnIns < TreasuresOfTokuno.ItemsPerReward)	//This and above case should ALWAYS be FALSE with this gump, jsut a sanity check
-                m_Collector.SayTo(pm, 1070981, string.Format("{0}\t{1}", turnIns, TreasuresOfTokuno.ItemsPerReward)); // You have turned in ~1_COUNT~ minor artifacts. Turn in ~2_NUM~ to receive a reward.
+                m_Collector.SayTo(pm, 1070981, $"{turnIns}\t{TreasuresOfTokuno.ItemsPerReward}"); // You have turned in ~1_COUNT~ minor artifacts. Turn in ~2_NUM~ to receive a reward.
             else
                 m_Collector.SayTo(pm, 1070982); // When you wish to choose your reward, you have but to approach me again.
         }
diff --git a/Scripts/Services/Spawner/Spawner.cs b/Scripts/Services/Spawner/Spawner.cs
index 6a2dca725..ea3e3ad9d 100644
--- a/Scripts/Services/Spawner/Spawner.cs
+++ b/Scripts/Services/Spawner/Spawner.cs
@@ -899,10 +899,7 @@ namespace Server.Mobiles
                         {
                             ISpawnable e = World.FindEntity(reader.ReadInt()) as ISpawnable;
 
-                            if (e != null)
-                            {
-                                e.Delete(); // lets make this easy
-                            }
+                            e?.Delete();
                         }
                     }
 
diff --git a/Scripts/Services/Spawner/SpawnerGump.cs b/Scripts/Services/Spawner/SpawnerGump.cs
index cc79cc643..c632f7c98 100644
--- a/Scripts/Services/Spawner/SpawnerGump.cs
+++ b/Scripts/Services/Spawner/SpawnerGump.cs
@@ -36,10 +36,10 @@ namespace Server.Mobiles
             AddLabel(38, 356, LabelHue, "Cancel");
 
             AddButton(110, 310, 0xFA5, 0xFA7, 1500, GumpButtonType.Reply, 0);
-            AddLabel(143, 310, LabelHue, string.Format("Running: {0}", Spawner.Running ? "Yes" : "No"));
+            AddLabel(143, 310, LabelHue, $"Running: {(Spawner.Running ? "Yes" : "No")}");
 
             AddButton(110, 333, 0xFA5, 0xFA7, 1000, GumpButtonType.Reply, 0);
-            AddLabel(143, 333, LabelHue, string.Format("Group: {0}", Spawner.Group ? "Yes" : "No"));
+            AddLabel(143, 333, LabelHue, $"Group: {(Spawner.Group ? "Yes" : "No")}");
 
             AddButton(110, 356, 0xFB4, 0xFB6, 2, GumpButtonType.Reply, 0);
             AddLabel(143, 356, LabelHue, "Bring to Home");
diff --git a/Scripts/Services/TestCenter.cs b/Scripts/Services/TestCenter.cs
index 0a7250d36..2ebcd415a 100644
--- a/Scripts/Services/TestCenter.cs
+++ b/Scripts/Services/TestCenter.cs
@@ -131,9 +131,7 @@ namespace Server.Misc
 
         private static bool CanGive(Mobile m, string tagName)
         {
-            Account a = m.Account as Account;
-
-            if (a != null)
+            if (m.Account is Account a)
             {
                 var tag = a.GetTag(m.Serial.ToString() + ' ' + tagName);
 
@@ -726,7 +724,7 @@ namespace Server.Misc
 
                 bag = new Bag
                 {
-                    Name = string.Format("{0} Mastery", SkillInfo.Table[(int)skill].Name)
+                    Name = $"{SkillInfo.Table[(int)skill].Name} Mastery"
                 };
 
                 for (int j = 1; j <= 3; j++)
@@ -780,10 +778,7 @@ namespace Server.Misc
 
             m.AddToBackpack(book);
 
-            #region Gold
-            var account = m.Account as Account;
-
-            if (account != null && account.GetTag("TCGold") == null)
+            if (m.Account is Account account && account.GetTag("TCGold") == null)
             {
                 account.AddTag("TCGold", "Gold Given");
 
diff --git a/Scripts/Services/Town Cryer/Gumps/CreateEMEntryGump.cs b/Scripts/Services/Town Cryer/Gumps/CreateEMEntryGump.cs
index 1bbccc2a6..5d8a81316 100644
--- a/Scripts/Services/Town Cryer/Gumps/CreateEMEntryGump.cs	
+++ b/Scripts/Services/Town Cryer/Gumps/CreateEMEntryGump.cs	
@@ -25,7 +25,7 @@ namespace Server.Services.TownCryer
             base.AddGumpLayout();
 
             AddHtmlLocalized(58, 150, 100, 20, 1158027, false, false); // Author:
-            AddLabel(105, 150, 0, string.Format("EM {0}", User.Name));
+            AddLabel(105, 150, 0, $"EM {User.Name}");
 
             AddHtmlLocalized(58, 180, 100, 20, 1158026, false, false); // Headline:
             AddBackground(58, 200, 740, 20, 0x2486);
diff --git a/Scripts/Services/Town Cryer/Gumps/CreateGreetingEntryGump.cs b/Scripts/Services/Town Cryer/Gumps/CreateGreetingEntryGump.cs
index 440484164..f93a83990 100644
--- a/Scripts/Services/Town Cryer/Gumps/CreateGreetingEntryGump.cs	
+++ b/Scripts/Services/Town Cryer/Gumps/CreateGreetingEntryGump.cs	
@@ -33,7 +33,7 @@ namespace Server.Services.TownCryer
             base.AddGumpLayout();
 
             AddHtmlLocalized(58, 140, 100, 20, 1158027, false, false); // Author:
-            AddLabel(105, 140, 0, string.Format("{1} {0}", User.Name, User.AccessLevel.ToString()));
+            AddLabel(105, 140, 0, $"{User.Name} {User.AccessLevel.ToString()}");
 
             AddHtmlLocalized(58, 160, 100, 20, 1158026, false, false); // Headline:
             AddBackground(58, 180, 740, 20, 0x2486);
diff --git a/Scripts/Services/Town Cryer/Gumps/CreateGuildEntryGump.cs b/Scripts/Services/Town Cryer/Gumps/CreateGuildEntryGump.cs
index 063fa3758..d06c3d8fc 100644
--- a/Scripts/Services/Town Cryer/Gumps/CreateGuildEntryGump.cs	
+++ b/Scripts/Services/Town Cryer/Gumps/CreateGuildEntryGump.cs	
@@ -25,7 +25,7 @@ namespace Server.Services.TownCryer
             base.AddGumpLayout();
 
             AddHtmlLocalized(58, 150, 100, 20, 1158027, false, false); // Author:
-            AddLabel(105, 150, 0, string.Format("{0}", Entry != null ? Entry.Author : User.Name));
+            AddLabel(105, 150, 0, $"{(Entry != null ? Entry.Author : User.Name)}");
 
             AddHtmlLocalized(58, 170, 100, 20, 1158055, false, false); // Guild:
             AddLabel(105, 170, 0, Entry != null && Entry.Guild != null ? Entry.Guild.Name : "Unknown");
@@ -86,7 +86,7 @@ namespace Server.Services.TownCryer
 
                 if (Entry == null)
                 {
-                    if (!DateTime.TryParse(string.Format("{0}/{1}/{2} {3}:00:00", m, d, year.ToString(), t), out dt)) // bad format
+                    if (!DateTime.TryParse($"{m}/{d}/{year.ToString()} {t}:00:00", out dt)) // bad format
                     {
                         illegalDate = true;
                         dt = DateTime.MinValue;
@@ -100,7 +100,7 @@ namespace Server.Services.TownCryer
                     Entry.Body = desc;
                     Entry.EventLocation = meet;
 
-                    if (DateTime.TryParse(string.Format("{0}/{1}/{2} {3}:00:00", m, d, year.ToString(), t), out dt))
+                    if (DateTime.TryParse($"{m}/{d}/{year.ToString()} {t}:00:00", out dt))
                     {
                         Entry.EventTime = dt;
                     }
diff --git a/Scripts/Services/Town Cryer/Gumps/TownCryerCompleteQuestGump.cs b/Scripts/Services/Town Cryer/Gumps/TownCryerCompleteQuestGump.cs
index 60836b15e..b07b30d16 100644
--- a/Scripts/Services/Town Cryer/Gumps/TownCryerCompleteQuestGump.cs	
+++ b/Scripts/Services/Town Cryer/Gumps/TownCryerCompleteQuestGump.cs	
@@ -41,7 +41,7 @@ namespace Server.Services.TownCryer
 
             if (Title is int)
             {
-                AddHtmlLocalized(0, 392, 454, 20, CenterLoc, string.Format("#{0}", (int)Title), 0, false, false);
+                AddHtmlLocalized(0, 392, 454, 20, CenterLoc, $"#{(int)Title}", 0, false, false);
             }
             else if (Title is string)
             {
diff --git a/Scripts/Services/Town Cryer/Gumps/TownCryerGreetingsGump.cs b/Scripts/Services/Town Cryer/Gumps/TownCryerGreetingsGump.cs
index d8a57f930..293d965f2 100644
--- a/Scripts/Services/Town Cryer/Gumps/TownCryerGreetingsGump.cs	
+++ b/Scripts/Services/Town Cryer/Gumps/TownCryerGreetingsGump.cs	
@@ -38,7 +38,7 @@ namespace Server.Services.TownCryer
             {
                 if (Entry.Title.Number > 0)
                 {
-                    AddHtmlLocalized(78, y, 700, 400, CenterLoc, string.Format("#{0}", Entry.Title.Number), C32216(0x080808), false, false);
+                    AddHtmlLocalized(78, y, 700, 400, CenterLoc, $"#{Entry.Title.Number}", C32216(0x080808), false, false);
                 }
                 else
                 {
@@ -83,8 +83,8 @@ namespace Server.Services.TownCryer
 
             if (Entry.Expires != DateTime.MinValue)
             {
-                AddHtmlLocalized(50, 550, 200, 20, 1060658, string.Format("{0}\t{1}", "Created", Entry.Created.ToShortDateString()), 0, false, false);
-                AddHtmlLocalized(50, 570, 200, 20, 1060659, string.Format("{0}\t{1}", "Expires", Entry.Expires.ToShortDateString()), 0, false, false);
+                AddHtmlLocalized(50, 550, 200, 20, 1060658, $"{"Created"}\t{Entry.Created.ToShortDateString()}", 0, false, false);
+                AddHtmlLocalized(50, 570, 200, 20, 1060659, $"{"Expires"}\t{Entry.Expires.ToShortDateString()}", 0, false, false);
             }
 
             AddButton(350, 570, 0x605, 0x606, 1, GumpButtonType.Reply, 0);
@@ -92,7 +92,7 @@ namespace Server.Services.TownCryer
             AddButton(430, 570, 0x607, 0x608, 3, GumpButtonType.Reply, 0);
             AddButton(455, 570, 0x603, 0x604, 4, GumpButtonType.Reply, 0);
 
-            AddHtml(395, 570, 35, 20, Center(string.Format("{0}/{1}", (Page + 1).ToString(), Pages.ToString())), false, false);
+            AddHtml(395, 570, 35, 20, Center($"{(Page + 1).ToString()}/{Pages.ToString()}"), false, false);
 
             AddButton(525, 625, 0x5FF, 0x600, 5, GumpButtonType.Reply, 0);
             AddHtmlLocalized(550, 625, 300, 20, 1158386, false, false); // Close and do not show this version again
@@ -101,11 +101,11 @@ namespace Server.Services.TownCryer
             {
                 if (!string.IsNullOrEmpty(Entry.LinkText))
                 {
-                    AddHtml(50, 490, 745, 40, string.Format("<a href=\"{0}\">{1}</a>", Entry.Link, Entry.LinkText), false, false);
+                    AddHtml(50, 490, 745, 40, $"<a href=\"{Entry.Link}\">{Entry.LinkText}</a>", false, false);
                 }
                 else
                 {
-                    AddHtml(50, 490, 745, 40, string.Format("<a href=\"{0}\">{1}</a>", Entry.Link, Entry.Link), false, false);
+                    AddHtml(50, 490, 745, 40, $"<a href=\"{Entry.Link}\">{Entry.Link}</a>", false, false);
                 }
             }
 
diff --git a/Scripts/Services/Town Cryer/Gumps/TownCryerGuildGump.cs b/Scripts/Services/Town Cryer/Gumps/TownCryerGuildGump.cs
index 0fa84f242..568f6690d 100644
--- a/Scripts/Services/Town Cryer/Gumps/TownCryerGuildGump.cs	
+++ b/Scripts/Services/Town Cryer/Gumps/TownCryerGuildGump.cs	
@@ -19,20 +19,14 @@ namespace Server.Services.TownCryer
             base.AddGumpLayout();
 
             AddHtml(57, 155, 724, 20, Entry.Title, false, false);
-            AddHtmlLocalized(57, 180, 724, 20, 1158066, string.Format("{0}, {1}", Entry.Author, Entry.Guild.Name), 0, false, false); // Posted By: ~1_NAME~
+            AddHtmlLocalized(57, 180, 724, 20, 1158066, $"{Entry.Author}, {Entry.Guild.Name}", 0, false, false); // Posted By: ~1_NAME~
 
             AddHtmlLocalized(57, 215, 50, 20, 1158067, false, false); // When:
             AddHtmlLocalized(57, 235, 50, 20, 1158068, false, false); // Where:
 
             int time = Entry.EventTime.Hour;
 
-            AddLabel(102, 215, 0, string.Format("{0}-{1}-{2} {3}{4} {5}",
-                Entry.EventTime.Month,
-                Entry.EventTime.Day,
-                Entry.EventTime.Year,
-                time == 0 ? 12 : time > 12 ? time - 12 : time,
-                Entry.EventTime.Hour >= 12 ? "pm" : "am",
-                TimeZone.CurrentTimeZone.StandardName));
+            AddLabel(102, 215, 0, $"{Entry.EventTime.Month}-{Entry.EventTime.Day}-{Entry.EventTime.Year} {(time == 0 ? 12 : time > 12 ? time - 12 : time)}{(Entry.EventTime.Hour >= 12 ? "pm" : "am")} {TimeZone.CurrentTimeZone.StandardName}");
 
             AddLabel(102, 235, 0, Entry.EventLocation);
 
diff --git a/Scripts/Services/Town Cryer/Gumps/TownCryerGump.cs b/Scripts/Services/Town Cryer/Gumps/TownCryerGump.cs
index f4b5dad3b..f435cb601 100644
--- a/Scripts/Services/Town Cryer/Gumps/TownCryerGump.cs	
+++ b/Scripts/Services/Town Cryer/Gumps/TownCryerGump.cs	
@@ -112,7 +112,7 @@ namespace Server.Services.TownCryer
                 AddButton(430, 570, 0x607, 0x608, 7, GumpButtonType.Reply, 0);
                 AddButton(455, 570, 0x603, 0x604, 8, GumpButtonType.Reply, 0);
 
-                AddHtml(395, 570, 35, 20, Center(string.Format("{0}/{1}", (Page + 1).ToString(), (Pages + 1).ToString())), false, false);
+                AddHtml(395, 570, 35, 20, Center($"{(Page + 1).ToString()}/{(Pages + 1).ToString()}"), false, false);
             }
         }
 
@@ -170,7 +170,7 @@ namespace Server.Services.TownCryer
             AddButton(601, 150, City == City.Yew ? 0x5E9 : 0x5E8, City == City.Yew ? 0x5E9 : 0x5E8, 18, GumpButtonType.Reply, 0);
             AddTooltip(CityLoyaltySystem.GetCityLocalization(City.Yew));
 
-            AddHtmlLocalized(0, 260, 854, 20, CenterLoc, string.Format("#{0}", TownCryerSystem.GetCityLoc(City)), 0, false, false); // The Latest News from the City of ~1_CITY~
+            AddHtmlLocalized(0, 260, 854, 20, CenterLoc, $"#{TownCryerSystem.GetCityLoc(City)}", 0, false, false); // The Latest News from the City of ~1_CITY~
 
             int y = 300;
 
@@ -233,7 +233,7 @@ namespace Server.Services.TownCryer
             AddButton(430, 570, 0x607, 0x608, 7, GumpButtonType.Reply, 0);
             AddButton(455, 570, 0x603, 0x604, 8, GumpButtonType.Reply, 0);
 
-            AddHtml(395, 570, 35, 20, Center(string.Format("{0}/{1}", (Page + 1).ToString(), (Pages + 1).ToString())), false, false);
+            AddHtml(395, 570, 35, 20, Center($"{(Page + 1).ToString()}/{(Pages + 1).ToString()}"), false, false);
         }
 
         private void SetDefaultCity()
diff --git a/Scripts/Services/Town Cryer/Quests/APleaFromMinocQuest.cs b/Scripts/Services/Town Cryer/Quests/APleaFromMinocQuest.cs
index 447a8c11f..6fac0941e 100644
--- a/Scripts/Services/Town Cryer/Quests/APleaFromMinocQuest.cs	
+++ b/Scripts/Services/Town Cryer/Quests/APleaFromMinocQuest.cs	
@@ -371,10 +371,7 @@ namespace Server.Engines.Quests
             {
                 APleaFromMinocQuest quest = QuestHelper.GetQuest<APleaFromMinocQuest>((PlayerMobile)m);
 
-                if (quest != null)
-                {
-                    quest.CompleteQuest();
-                }
+                quest?.CompleteQuest();
             }
         }
 
diff --git a/Scripts/Services/Town Cryer/Quests/BuriedRichesQuest.cs b/Scripts/Services/Town Cryer/Quests/BuriedRichesQuest.cs
index 85fdcc1a9..724f3fe04 100644
--- a/Scripts/Services/Town Cryer/Quests/BuriedRichesQuest.cs	
+++ b/Scripts/Services/Town Cryer/Quests/BuriedRichesQuest.cs	
@@ -366,10 +366,7 @@ namespace Server.Engines.Quests
             {
                 BuriedRichesQuest quest = QuestHelper.GetQuest<BuriedRichesQuest>((PlayerMobile)m);
 
-                if (quest != null)
-                {
-                    quest.CompleteQuest();
-                }
+                quest?.CompleteQuest();
             }
         }
 
@@ -472,10 +469,7 @@ namespace Server.Engines.Quests
             {
                 ToolsOfTheTradeQuest quest = QuestHelper.GetQuest<ToolsOfTheTradeQuest>((PlayerMobile)m);
 
-                if (quest != null)
-                {
-                    quest.CompleteQuest();
-                }
+                quest?.CompleteQuest();
             }
         }
 
diff --git a/Scripts/Services/Town Cryer/Quests/PaladinsOfTrinsic.cs b/Scripts/Services/Town Cryer/Quests/PaladinsOfTrinsic.cs
index 746f4a219..e7374f5cf 100644
--- a/Scripts/Services/Town Cryer/Quests/PaladinsOfTrinsic.cs	
+++ b/Scripts/Services/Town Cryer/Quests/PaladinsOfTrinsic.cs	
@@ -174,17 +174,14 @@ namespace Server.Engines.Quests
         {
             if (m is PlayerMobile && m.InRange(Location, 5))
             {
-                PaladinsOfTrinsic quest = QuestHelper.GetQuest((PlayerMobile)m, typeof(PaladinsOfTrinsic)) as PaladinsOfTrinsic;
-
-                if (quest != null)
+                if (QuestHelper.GetQuest((PlayerMobile)m, typeof(PaladinsOfTrinsic)) is PaladinsOfTrinsic quest)
                 {
                     quest.GiveRewards();
                 }
                 else
                 {
-                    PaladinsOfTrinsic2 quest2 = QuestHelper.GetQuest((PlayerMobile)m, typeof(PaladinsOfTrinsic2)) as PaladinsOfTrinsic2;
 
-                    if (quest2 != null)
+                    if (QuestHelper.GetQuest((PlayerMobile)m, typeof(PaladinsOfTrinsic2)) is PaladinsOfTrinsic2 quest2)
                     {
                         if (quest2.Completed)
                         {
diff --git a/Scripts/Services/Town Cryer/Quests/QuestItems.cs b/Scripts/Services/Town Cryer/Quests/QuestItems.cs
index 64c6a5b18..857d1bd6e 100644
--- a/Scripts/Services/Town Cryer/Quests/QuestItems.cs	
+++ b/Scripts/Services/Town Cryer/Quests/QuestItems.cs	
@@ -232,9 +232,9 @@ namespace Server.Engines.Quests
 
         public override void OnChestOpened(Mobile from, TreasureMapChest chest)
         {
-            if (from is PlayerMobile)
+            if (from is PlayerMobile playerMobile)
             {
-                TheTreasureChaseQuest quest = QuestHelper.GetQuest<TheTreasureChaseQuest>((PlayerMobile)from);
+                TheTreasureChaseQuest quest = QuestHelper.GetQuest<TheTreasureChaseQuest>(playerMobile);
 
                 if (quest != null)
                 {
diff --git a/Scripts/Services/Town Cryer/TownCryerGuildEntry.cs b/Scripts/Services/Town Cryer/TownCryerGuildEntry.cs
index 21d81aa94..9b514573f 100644
--- a/Scripts/Services/Town Cryer/TownCryerGuildEntry.cs	
+++ b/Scripts/Services/Town Cryer/TownCryerGuildEntry.cs	
@@ -20,7 +20,7 @@ namespace Server.Services.TownCryer
         {
             Guild = m.Guild as Guild;
             Title = title;
-            FullTitle = string.Format("{0}-{1} [{2}] {3}", eventTime.Month, eventTime.Day, Guild.Abbreviation, title);
+            FullTitle = $"{eventTime.Month}-{eventTime.Day} [{Guild.Abbreviation}] {title}";
             Body = body;
             Author = m.Name;
             EventTime = eventTime;
diff --git a/Scripts/Services/Town Cryer/TownCryerSystem.cs b/Scripts/Services/Town Cryer/TownCryerSystem.cs
index 374e4ea37..1751a0f03 100644
--- a/Scripts/Services/Town Cryer/TownCryerSystem.cs	
+++ b/Scripts/Services/Town Cryer/TownCryerSystem.cs	
@@ -195,9 +195,9 @@ namespace Server.Services.TownCryer
 
                         foreach (Mobile m in eable)
                         {
-                            if (m is TownCrier)
+                            if (m is TownCrier townCrier)
                             {
-                                BaseGump.SendGump(new TownCryerGreetingsGump(player, (TownCrier)m));
+                                BaseGump.SendGump(new TownCryerGreetingsGump(player, townCrier));
                                 break;
                             }
                         }
@@ -321,9 +321,7 @@ namespace Server.Services.TownCryer
                     list.Add(new UpdateCityEntry(tc));
                 }
 
-                Guild g = pm.Guild as Guild;
-
-                if (g != null && pm.GuildRank != null && pm.GuildRank.Rank >= 3 && g.Leader == pm && (pm.AccessLevel > AccessLevel.Player || g.Members.Count >= MinGuildMemberCount))
+                if (pm.Guild is Guild g && pm.GuildRank != null && pm.GuildRank.Rank >= 3 && g.Leader == pm && (pm.AccessLevel > AccessLevel.Player || g.Members.Count >= MinGuildMemberCount))
                 {
                     list.Add(new UpdateGuildEntry(from, tc));
                 }
@@ -560,9 +558,7 @@ namespace Server.Services.TownCryer
 
                     for (int i = 0; i < count; i++)
                     {
-                        PlayerMobile pm = reader.ReadMobile() as PlayerMobile;
-
-                        if (pm != null)
+                        if (reader.ReadMobile() is PlayerMobile pm)
                         {
                             AddExempt(pm);
                         }
@@ -731,13 +727,10 @@ namespace Server.Services.TownCryer
 
         public override void OnClick()
         {
-            PlayerMobile pm = Owner.From as PlayerMobile;
-
-            if (pm != null)
+            if (Owner.From is PlayerMobile pm)
             {
-                Guild g = pm.Guild as Guild;
 
-                if (g != null && pm.GuildRank != null && pm.GuildRank.Rank >= 3 && (pm.AccessLevel > AccessLevel.Player || g.Members.Count >= TownCryerSystem.MinGuildMemberCount))
+                if (pm.Guild is Guild g && pm.GuildRank != null && pm.GuildRank.Rank >= 3 && (pm.AccessLevel > AccessLevel.Player || g.Members.Count >= TownCryerSystem.MinGuildMemberCount))
                 {
                     if (TownCryerSystem.HasGuildEntry(g))
                     {
diff --git a/Scripts/Services/TreasureMaps/TreasureMap.cs b/Scripts/Services/TreasureMaps/TreasureMap.cs
index 421f93cd9..54931af58 100644
--- a/Scripts/Services/TreasureMaps/TreasureMap.cs
+++ b/Scripts/Services/TreasureMaps/TreasureMap.cs
@@ -1195,9 +1195,9 @@ namespace Server.Items
                     IPoint3D p = targeted as IPoint3D;
 
                     Point3D targ3D;
-                    if (p is Item)
+                    if (p is Item item)
                     {
-                        targ3D = ((Item)p).GetWorldLocation();
+                        targ3D = item.GetWorldLocation();
                     }
                     else
                     {
@@ -1490,10 +1490,7 @@ namespace Server.Items
                 Stop();
                 m_From.EndAction(typeof(TreasureMap));
 
-                if (m_Chest != null)
-                {
-                    m_Chest.Delete();
-                }
+                m_Chest?.Delete();
 
                 if (m_Dirt1 != null)
                 {
diff --git a/Scripts/Services/TreasureMaps/TreasureMapChest.cs b/Scripts/Services/TreasureMaps/TreasureMapChest.cs
index b42d74d9b..3a5729570 100644
--- a/Scripts/Services/TreasureMaps/TreasureMapChest.cs
+++ b/Scripts/Services/TreasureMaps/TreasureMapChest.cs
@@ -268,10 +268,8 @@ namespace Server.Items
 
                         cont.DropItem(item);
                     }
-                    else if (item is BaseWeapon)
+                    else if (item is BaseWeapon weapon)
                     {
-                        BaseWeapon weapon = (BaseWeapon)item;
-
                         int attributeCount;
                         int min, max;
 
@@ -281,10 +279,8 @@ namespace Server.Items
 
                         cont.DropItem(item);
                     }
-                    else if (item is BaseArmor)
+                    else if (item is BaseArmor armor)
                     {
-                        BaseArmor armor = (BaseArmor)item;
-
                         int attributeCount;
                         int min, max;
 
@@ -294,10 +290,8 @@ namespace Server.Items
 
                         cont.DropItem(item);
                     }
-                    else if (item is BaseHat)
+                    else if (item is BaseHat hat)
                     {
-                        BaseHat hat = (BaseHat)item;
-
                         int attributeCount;
                         int min, max;
 
@@ -307,14 +301,14 @@ namespace Server.Items
 
                         cont.DropItem(item);
                     }
-                    else if (item is BaseJewel)
+                    else if (item is BaseJewel baseJewel)
                     {
                         int attributeCount;
                         int min, max;
 
                         GetRandomAOSStats(out attributeCount, out min, out max);
 
-                        BaseRunicTool.ApplyAttributesTo((BaseJewel)item, attributeCount, min, max);
+                        BaseRunicTool.ApplyAttributesTo(baseJewel, attributeCount, min, max);
 
                         cont.DropItem(item);
                     }
@@ -769,10 +763,7 @@ namespace Server.Items
 
             if (!FirstOpenedByOwner && to == Owner)
             {
-                if (TreasureMap != null)
-                {
-                    TreasureMap.OnChestOpened((PlayerMobile)to, this);
-                }
+                TreasureMap?.OnChestOpened((PlayerMobile)to, this);
 
                 FirstOpenedByOwner = true;
             }
diff --git a/Scripts/Services/UltimaStore/StoreEntry.cs b/Scripts/Services/UltimaStore/StoreEntry.cs
index c3b8de1a6..93d1af9d8 100644
--- a/Scripts/Services/UltimaStore/StoreEntry.cs
+++ b/Scripts/Services/UltimaStore/StoreEntry.cs
@@ -49,9 +49,9 @@ namespace Server.Engines.UOStore
 
             if (item != null)
             {
-                if (item is IAccountRestricted)
+                if (item is IAccountRestricted iAccountRestricted)
                 {
-                    ((IAccountRestricted)item).Account = m.Account.Username;
+                    iAccountRestricted.Account = m.Account.Username;
                 }
 
                 if (m.Backpack == null || !m.Alive || !m.Backpack.TryDropItem(m, item, false))
@@ -88,7 +88,7 @@ namespace Server.Engines.UOStore
                 return true;
             }
 
-            Utility.WriteConsoleColor(ConsoleColor.Red, string.Format("[Ultima Store Warning]: {0} failed to construct.", ItemType.Name));
+            Utility.WriteConsoleColor(ConsoleColor.Red, $"[Ultima Store Warning]: {ItemType.Name} failed to construct.");
 
             return false;
         }
diff --git a/Scripts/Services/UltimaStore/UltimaStore.cs b/Scripts/Services/UltimaStore/UltimaStore.cs
index bc60ca9da..c77d0cb57 100644
--- a/Scripts/Services/UltimaStore/UltimaStore.cs
+++ b/Scripts/Services/UltimaStore/UltimaStore.cs
@@ -689,11 +689,11 @@ namespace Server.Engines.UOStore
             {
                 if (td.Number > 0 && VendorSearch.StringList != null)
                 {
-                    str += string.Format("{0} ", VendorSearch.StringList.GetString(td.Number));
+                    str += $"{VendorSearch.StringList.GetString(td.Number)} ";
                 }
                 else if (!string.IsNullOrWhiteSpace(td.String))
                 {
-                    str += string.Format("{0} ", td.String);
+                    str += $"{td.String} ";
                 }
             }
 
@@ -778,9 +778,9 @@ namespace Server.Engines.UOStore
             {
                 case CurrencyType.Sovereigns:
                     {
-                        if (m is PlayerMobile)
+                        if (m is PlayerMobile playerMobile)
                         {
-                            return ((PlayerMobile)m).AccountSovereigns;
+                            return playerMobile.AccountSovereigns;
                         }
                     }
                     break;
@@ -815,9 +815,9 @@ namespace Server.Engines.UOStore
             }
             else if (total > GetCurrency(m, true))
             {
-                if (m is PlayerMobile)
+                if (m is PlayerMobile playerMobile)
                 {
-                    BaseGump.SendGump(new NoFundsGump((PlayerMobile)m));
+                    BaseGump.SendGump(new NoFundsGump(playerMobile));
                 }
             }
             else
diff --git a/Scripts/Services/UltimaStore/UltimaStoreGump.cs b/Scripts/Services/UltimaStore/UltimaStoreGump.cs
index 51f0dfb9f..32815a503 100644
--- a/Scripts/Services/UltimaStore/UltimaStoreGump.cs
+++ b/Scripts/Services/UltimaStore/UltimaStoreGump.cs
@@ -170,7 +170,7 @@ namespace Server.Engines.UOStore
             AddECHandleInput();
 
             AddButton(598, 36, Category == StoreCategory.Cart ? 0x9C5E : 0x9C54, 0x9C5E, 113, GumpButtonType.Reply, 0);
-            AddHtmlLocalized(628, 39, 123, 25, 1156593, string.Format("@{0}@{1}", UltimaStore.CartCount(User), Configuration.CartCapacity), 0x7FFF, false, false);
+            AddHtmlLocalized(628, 39, 123, 25, 1156593, $"@{UltimaStore.CartCount(User)}@{Configuration.CartCapacity}", 0x7FFF, false, false);
 
             AddECHandleInput();
 
@@ -195,7 +195,7 @@ namespace Server.Engines.UOStore
 
                 AddImage(167, 74, 0x9C4C);
 
-                if (profile != null && profile.Cart != null && profile.Cart.Count > 0)
+                if (profile?.Cart != null && profile.Cart.Count > 0)
                 {
                     int i = 0;
 
@@ -284,7 +284,7 @@ namespace Server.Engines.UOStore
                     for (int j = 0; j < entry.Name.Length; j++)
                     {
                         if (entry.Name[j].Number > 0)
-                            AddHtmlLocalized(x, y + (j * 14) + 4, 183, 25, 1114513, string.Format("#{0}", entry.Name[j].Number.ToString()), 0x7FFF, false, false);
+                            AddHtmlLocalized(x, y + (j * 14) + 4, 183, 25, 1114513, $"#{entry.Name[j].Number.ToString()}", 0x7FFF, false, false);
                         else
                             AddHtml(x, y + (j * 14) + 4, 183, 25, ColorAndCenter("#FFFFFF", entry.Name[j].String), false, false);
                     }
@@ -557,10 +557,7 @@ namespace Server.Engines.UOStore
             {
                 StoreEntry entry = UltimaStore.Entries[id - 3000];
 
-                if (profile != null)
-                {
-                    profile.RemoveFromCart(entry);
-                }
+                profile?.RemoveFromCart(entry);
 
                 Refresh();
                 return;
@@ -595,7 +592,7 @@ namespace Server.Engines.UOStore
             {
                 if (Entry.Name[i].Number > 0)
                 {
-                    AddHtmlLocalized(10, 60 + (i * 14), 400, 20, 1114513, string.Format("#{0}", Entry.Name[i].Number), 0x6B45, false, false);
+                    AddHtmlLocalized(10, 60 + (i * 14), 400, 20, 1114513, $"#{Entry.Name[i].Number}", 0x6B45, false, false);
                 }
                 else
                 {
@@ -730,7 +727,7 @@ namespace Server.Engines.UOStore
             AddBackground(0, 0, 410, 200, 0x9C40);
             AddHtmlLocalized(10, 10, 400, 20, 1114513, "#1156747", 0x7FFF, false, false); // Insufficient Funds
 
-            AddHtml(30, 60, 350, 60, Color("#da0000", string.Format("This transaction cannot be completed due to insufficient funds available. Visit your shards website for more information on how to obtain {0}.", Configuration.CurrencyName)), false, false);
+            AddHtml(30, 60, 350, 60, Color("#da0000", $"This transaction cannot be completed due to insufficient funds available. Visit your shards website for more information on how to obtain {Configuration.CurrencyName}."), false, false);
 
             AddECHandleInput();
 
@@ -870,7 +867,7 @@ namespace Server.Engines.UOStore
             {
                 if (Entry.Name[j].Number > 0)
                 {
-                    AddHtmlLocalized(76, 92 + (j * 14) + 4, 183, 25, 1114513, string.Format("#{0}", Entry.Name[j].Number.ToString()), 0x7FFF, false, false);
+                    AddHtmlLocalized(76, 92 + (j * 14) + 4, 183, 25, 1114513, $"#{Entry.Name[j].Number.ToString()}", 0x7FFF, false, false);
                 }
                 else
                 {
diff --git a/Scripts/Services/Vendor Searching/VendorSearch.cs b/Scripts/Services/Vendor Searching/VendorSearch.cs
index f7648dc11..222412fb8 100644
--- a/Scripts/Services/Vendor Searching/VendorSearch.cs	
+++ b/Scripts/Services/Vendor Searching/VendorSearch.cs	
@@ -465,9 +465,9 @@ namespace Server.Engines.VendorSearching
                 item = ((CommodityDeed)item).Commodity;
             }
 
-            if (item is IResource)
+            if (item is IResource iResource)
             {
-                string resName = CraftResources.GetName(((IResource)item).Resource);
+                string resName = CraftResources.GetName(iResource.Resource);
 
                 if (resName.ToLower().IndexOf(searchstring.ToLower()) >= 0)
                 {
@@ -475,10 +475,8 @@ namespace Server.Engines.VendorSearching
                 }
             }
 
-            if (item is ICommodity)
+            if (item is ICommodity commodity)
             {
-                ICommodity commodity = (ICommodity)item;
-
                 string name = commodity.Description.String;
 
                 if (string.IsNullOrEmpty(name) && commodity.Description.Number > 0)
@@ -565,10 +563,9 @@ namespace Server.Engines.VendorSearching
 
                     for (int i = 0; i < count; i++)
                     {
-                        PlayerMobile pm = reader.ReadMobile() as PlayerMobile;
                         SearchCriteria criteria = new SearchCriteria(reader);
 
-                        if (pm != null)
+                        if (reader.ReadMobile() is PlayerMobile pm)
                         {
                             if (Contexts == null)
                                 Contexts = new Dictionary<PlayerMobile, SearchCriteria>();
@@ -585,9 +582,9 @@ namespace Server.Engines.VendorSearching
                 {
                     e.Mobile.BeginTarget(-1, false, TargetFlags.None, (m, targeted) =>
                         {
-                            if (targeted is Item)
+                            if (targeted is Item item)
                             {
-                                Console.WriteLine(GetItemName((Item)targeted));
+                                Console.WriteLine(GetItemName(item));
                                 e.Mobile.SendMessage(GetItemName((Item)targeted));
                             }
                         });
diff --git a/Scripts/Services/Vendor Searching/VendorSearchGump.cs b/Scripts/Services/Vendor Searching/VendorSearchGump.cs
index d5c7dd6eb..2b162781b 100644
--- a/Scripts/Services/Vendor Searching/VendorSearchGump.cs	
+++ b/Scripts/Services/Vendor Searching/VendorSearchGump.cs	
@@ -55,7 +55,7 @@ namespace Server.Engines.VendorSearching
             {
                 AddButton(522, 50 + (yOffset * 22), 4017, 4019, 8, GumpButtonType.Reply, 0);
                 AddTooltip(1154694); // Remove Selected Search Criteria
-                AddHtmlLocalized(562, 50 + (yOffset * 22), 206, 20, 1154512, string.Format("@{0}@{1}", Criteria.MinPrice.ToString("N0", CultureInfo.GetCultureInfo("en-US")), Criteria.MaxPrice.ToString("N0", CultureInfo.GetCultureInfo("en-US"))), CriteriaColor, false, false);
+                AddHtmlLocalized(562, 50 + (yOffset * 22), 206, 20, 1154512, $"@{Criteria.MinPrice.ToString("N0", CultureInfo.GetCultureInfo("en-US"))}@{Criteria.MaxPrice.ToString("N0", CultureInfo.GetCultureInfo("en-US"))}", CriteriaColor, false, false);
                 yOffset++;
             }
 
@@ -67,11 +67,11 @@ namespace Server.Engines.VendorSearching
                 {
                     if (Criteria.Details[i].Attribute is SkillName)
                     {
-                        AddHtmlLocalized(562, 50 + (yOffset * 22), 206, 20, 1060451, string.Format("#{0}@{1}", cliloc, Criteria.Details[i].Value), CriteriaColor, false, false);
+                        AddHtmlLocalized(562, 50 + (yOffset * 22), 206, 20, 1060451, $"#{cliloc}@{Criteria.Details[i].Value}", CriteriaColor, false, false);
                     }
                     else
                     {
-                        AddHtmlLocalized(562, 50 + (yOffset * 22), 206, 20, cliloc, string.Format("{0}", Criteria.Details[i].Value), CriteriaColor, false, false);
+                        AddHtmlLocalized(562, 50 + (yOffset * 22), 206, 20, cliloc, $"{Criteria.Details[i].Value}", CriteriaColor, false, false);
                     }
                 }
                 else
@@ -105,7 +105,7 @@ namespace Server.Engines.VendorSearching
                 AddButton(10, 74 + (yOffset * 22), 30533, 30533, 0, GumpButtonType.Page, x.PageID);
 
                 if (x.Category == Category.PriceRange)
-                    AddHtmlLocalized(50, 75 + (yOffset * 22), 215, 20, x.Cliloc, string.Format("@{0}@{1}", Criteria.MinPrice.ToString("N0", CultureInfo.GetCultureInfo("en-US")), Criteria.MaxPrice.ToString("N0", CultureInfo.GetCultureInfo("en-US"))), LabelColor, false, false);
+                    AddHtmlLocalized(50, 75 + (yOffset * 22), 215, 20, x.Cliloc, $"@{Criteria.MinPrice.ToString("N0", CultureInfo.GetCultureInfo("en-US"))}@{Criteria.MaxPrice.ToString("N0", CultureInfo.GetCultureInfo("en-US"))}", LabelColor, false, false);
                 else
                     AddHtmlLocalized(50, 75 + (yOffset * 22), 215, 20, x.Cliloc, LabelColor, false, false);
 
@@ -289,7 +289,7 @@ namespace Server.Engines.VendorSearching
                     TextRelay tr1 = info.GetTextEntry(7);
                     TextRelay tr2 = info.GetTextEntry(8);
 
-                    if (tr1 != null && tr1.Text != null)
+                    if (tr1?.Text != null)
                     {
                         string text = tr1.Text.Trim();
 
@@ -299,7 +299,7 @@ namespace Server.Engines.VendorSearching
                         }
                     }
 
-                    if (tr2 != null && tr2.Text != null)
+                    if (tr2?.Text != null)
                     {
                         string text = tr2.Text.Trim();
 
@@ -430,10 +430,10 @@ namespace Server.Engines.VendorSearching
                 if (Items[i].IsAuction)
                     AddHtmlLocalized(162, y, 102, 72, 1159353, 0x6B55, false, false); // Auction Item
                 else
-                    AddHtmlLocalized(162, y, 102, 72, Items[i].IsChild ? 1154598 : 1154645, string.Format("{0}", price <= 0 ? "0" : FormatPrice(price)), TextColor, false, false); // <center>~1_val~</center>
+                    AddHtmlLocalized(162, y, 102, 72, Items[i].IsChild ? 1154598 : 1154645, $"{(price <= 0 ? "0" : FormatPrice(price))}", TextColor, false, false); // <center>~1_val~</center>
 
                 if (map != null)
-                    AddHtmlLocalized(274, y, 102, 72, 1114513, string.Format("{0}", map), TextColor, false, false);
+                    AddHtmlLocalized(274, y, 102, 72, 1114513, $"{map}", TextColor, false, false);
 
                 AddButton(386, y, 30533, 30533, 100 + i, GumpButtonType.Reply, 0);
 
@@ -539,10 +539,10 @@ namespace Server.Engines.VendorSearching
             if (VendorMap.SetLocation != Point3D.Zero && (VendorMap.Vendor != null || VendorMap.AuctionSafe != null))
             {
                 string[] coord = VendorMap.GetCoords();
-                AddHtmlLocalized(27, 47, 380, 80, 1154637, string.Format("@{0}@{1}", coord[0], coord[1]), 0x4E73, false, false); // Please select 'Accept' if you would like to return to ~1_loc~ (~2_facet~).  This map will be deleted after use.
+                AddHtmlLocalized(27, 47, 380, 80, 1154637, $"@{coord[0]}@{coord[1]}", 0x4E73, false, false); // Please select 'Accept' if you would like to return to ~1_loc~ (~2_facet~).  This map will be deleted after use.
             }
             else
-                AddHtmlLocalized(27, 47, 380, 80, 1154635, string.Format("@{0}@{1}@{2}", VendorMap.TeleportCost.ToString(), VendorMap.Name()[0], VendorMap.DeleteDelayMinutes.ToString()), 0x4E73, false, false); // Please select 'Accept' if you would like to pay ~1_cost~ gold to teleport to vendor ~2_name~.  For this price you will also be able to teleport back to this location within the next ~3_minutes~ minutes.
+                AddHtmlLocalized(27, 47, 380, 80, 1154635, $"@{VendorMap.TeleportCost.ToString()}@{VendorMap.Name()[0]}@{VendorMap.DeleteDelayMinutes.ToString()}", 0x4E73, false, false); // Please select 'Accept' if you would like to pay ~1_cost~ gold to teleport to vendor ~2_name~.  For this price you will also be able to teleport back to this location within the next ~3_minutes~ minutes.
 
             AddButton(7, 167, 0x7747, 0x7747, 0, GumpButtonType.Reply, 0);
             AddHtmlLocalized(47, 167, 100, 40, 1150300, 0x4E73, false, false); // CANCEL
diff --git a/Scripts/Services/Vendor Searching/VendorSearchMap.cs b/Scripts/Services/Vendor Searching/VendorSearchMap.cs
index 05abad781..683dfa6c7 100644
--- a/Scripts/Services/Vendor Searching/VendorSearchMap.cs	
+++ b/Scripts/Services/Vendor Searching/VendorSearchMap.cs	
@@ -87,7 +87,7 @@ namespace Server.Items
         {
             string[] name = Name();
 
-            list.Add(1154559, string.Format("{0}\t{1}", name[0], name[1])); // Map to Vendor ~1_Name~: ~2_Shop~
+            list.Add(1154559, $"{name[0]}\t{name[1]}"); // Map to Vendor ~1_Name~: ~2_Shop~
         }
 
         public new string[] Name()
@@ -109,7 +109,7 @@ namespace Server.Items
                             Name = house.Sign.GetName();
                     }
 
-                    Shop = (SearchItem.LabelNumber != 0) ? string.Format("#{0}", SearchItem.LabelNumber) : SearchItem.Name;
+                    Shop = (SearchItem.LabelNumber != 0) ? $"#{SearchItem.LabelNumber}" : SearchItem.Name;
                 }
             }
             else
@@ -131,9 +131,9 @@ namespace Server.Items
             string[] coord = GetCoords();
 
             if (SetLocation == Point3D.Zero)
-                list.Add(1154639, string.Format("{0}\t{1}", coord[0], coord[1])); //  Vendor Located at ~1_loc~ (~2_facet~)
+                list.Add(1154639, $"{coord[0]}\t{coord[1]}"); //  Vendor Located at ~1_loc~ (~2_facet~)
             else
-                list.Add(1154638, string.Format("{0}\t{1}", coord[0], coord[1])); //  Return to ~1_loc~ (~2_facet~)                
+                list.Add(1154638, $"{coord[0]}\t{coord[1]}"); //  Return to ~1_loc~ (~2_facet~)                
 
             if (!IsSale())
             {
@@ -184,7 +184,7 @@ namespace Server.Items
 
                 if (Sextant.Format(new Point3D(x, y, z), map, ref xLong, ref yLat, ref xMins, ref yMins, ref xEast, ref ySouth))
                 {
-                    return new[] { string.Format("{0}o {1}'{2}, {3}o {4}'{5}", yLat, yMins, ySouth ? "S" : "N", xLong, xMins, xEast ? "E" : "W"), map.ToString() };
+                    return new[] { $"{yLat}o {yMins}'{(ySouth ? "S" : "N")}, {xLong}o {xMins}'{(xEast ? "E" : "W")}", map.ToString() };
                 }
             }
 
@@ -336,9 +336,9 @@ namespace Server.Items
 
             public override void OnClick()
             {
-                if (Clicker is PlayerMobile)
+                if (Clicker is PlayerMobile playerMobile)
                 {
-                    BaseGump.SendGump(new ConfirmTeleportGump(VendorMap, (PlayerMobile)Clicker));
+                    BaseGump.SendGump(new ConfirmTeleportGump(VendorMap, playerMobile));
                 }
             }
         }
diff --git a/Scripts/Services/VeteranRewards/Character Statue Maker/CharacterStatue.cs b/Scripts/Services/VeteranRewards/Character Statue Maker/CharacterStatue.cs
index 835875318..9f5129fb1 100644
--- a/Scripts/Services/VeteranRewards/Character Statue Maker/CharacterStatue.cs	
+++ b/Scripts/Services/VeteranRewards/Character Statue Maker/CharacterStatue.cs	
@@ -172,7 +172,7 @@ namespace Server.Mobiles
             if (m_SculptedBy != null)
             {
                 if (m_SculptedBy.ShowFameTitle && (m_SculptedBy.Player || m_SculptedBy.Body.IsHuman) && m_SculptedBy.Fame >= 10000)
-                    list.Add(1076202, string.Format("{0} {1}", m_SculptedBy.Female ? "Lady" : "Lord", m_SculptedBy.Name)); // Sculpted by ~1_Name~
+                    list.Add(1076202, $"{(m_SculptedBy.Female ? "Lady" : "Lord")} {m_SculptedBy.Name}"); // Sculpted by ~1_Name~
                 else
                     list.Add(1076202, m_SculptedBy.Name); // Sculpted by ~1_Name~
             }
@@ -549,9 +549,7 @@ namespace Server.Mobiles
 
         public override void OnDoubleClick(Mobile from)
         {
-            Account acct = from.Account as Account;
-
-            if (acct != null && from.IsPlayer())
+            if (from.Account is Account acct && from.IsPlayer())
             {
                 TimeSpan time = TimeSpan.FromDays(RewardSystem.RewardInterval.TotalDays * 6) - (DateTime.UtcNow - acct.Created);
 
@@ -685,8 +683,8 @@ namespace Server.Mobiles
 
                     house.Addons[plinth] = from;
 
-                    if (m_Maker is IRewardItem)
-                        statue.IsRewardItem = ((IRewardItem)m_Maker).IsRewardItem;
+                    if (m_Maker is IRewardItem iRewardItem)
+                        statue.IsRewardItem = iRewardItem.IsRewardItem;
 
                     statue.Plinth = plinth;
                     plinth.MoveToWorld(loc, map);
diff --git a/Scripts/Services/VeteranRewards/Character Statue Maker/Gumps/CharacterStatueGump.cs b/Scripts/Services/VeteranRewards/Character Statue Maker/Gumps/CharacterStatueGump.cs
index c9c294c08..40097827b 100644
--- a/Scripts/Services/VeteranRewards/Character Statue Maker/Gumps/CharacterStatueGump.cs	
+++ b/Scripts/Services/VeteranRewards/Character Statue Maker/Gumps/CharacterStatueGump.cs	
@@ -87,9 +87,9 @@ namespace Server.Gumps
 
             if (info.ButtonID == (int)Buttons.Sculpt)
             {
-                if (m_Maker is CharacterStatueDeed)
+                if (m_Maker is CharacterStatueDeed characterStatueDeed)
                 {
-                    CharacterStatue backup = ((CharacterStatueDeed)m_Maker).Statue;
+                    CharacterStatue backup = characterStatueDeed.Statue;
 
                     if (backup != null)
                         backup.Delete();
@@ -134,9 +134,9 @@ namespace Server.Gumps
             }
             else if (info.ButtonID == (int)Buttons.Restore)
             {
-                if (m_Maker is CharacterStatueDeed)
+                if (m_Maker is CharacterStatueDeed characterStatueDeed)
                 {
-                    CharacterStatue backup = ((CharacterStatueDeed)m_Maker).Statue;
+                    CharacterStatue backup = characterStatueDeed.Statue;
 
                     if (backup != null)
                         m_Statue.Restore(backup);
diff --git a/Scripts/Services/VeteranRewards/DaviesLocker.cs b/Scripts/Services/VeteranRewards/DaviesLocker.cs
index 6e8d400eb..d2dd267dd 100644
--- a/Scripts/Services/VeteranRewards/DaviesLocker.cs
+++ b/Scripts/Services/VeteranRewards/DaviesLocker.cs
@@ -88,12 +88,12 @@ namespace Server.Engines.VeteranRewards
             {
                 DaviesLockerEntry entry = null;
 
-                if (item is TreasureMap)
-                    entry = new TreasureMapEntry((TreasureMap)item);
-                else if (item is SOS)
-                    entry = new SOSEntry((SOS)item);
-                else if (item is MessageInABottle)
-                    entry = new SOSEntry((MessageInABottle)item);
+                if (item is TreasureMap treasureMap)
+                    entry = new TreasureMapEntry(treasureMap);
+                else if (item is SOS sOS)
+                    entry = new SOSEntry(sOS);
+                else if (item is MessageInABottle messageInABottle)
+                    entry = new SOSEntry(messageInABottle);
 
                 if (entry != null)
                 {
@@ -199,17 +199,17 @@ namespace Server.Engines.VeteranRewards
             {
                 base.GetContextMenuEntries(from, list);
 
-                if (Addon is DaviesLockerAddon)
-                    SetSecureLevelEntry.AddTo(from, (DaviesLockerAddon)Addon, list);
+                if (Addon is DaviesLockerAddon daviesLockerAddon)
+                    SetSecureLevelEntry.AddTo(from, daviesLockerAddon, list);
             }
 
             public override void GetProperties(ObjectPropertyList list)
             {
                 base.GetProperties(list);
 
-                if (Addon is DaviesLockerAddon)
+                if (Addon is DaviesLockerAddon daviesLockerAddon)
                 {
-                    list.Add(1153648, ((DaviesLockerAddon)Addon).Entries.Count.ToString());
+                    list.Add(1153648, daviesLockerAddon.Entries.Count.ToString());
                 }
             }
 
@@ -545,8 +545,8 @@ namespace Server.Engines.VeteranRewards
 
             int start = page * perPage;
 
-            AddHtmlLocalized(35, 430, 280, 20, 1153560, string.Format("{0}@{1}", m_List.Count, "500"), Blue, false, false); // Maps: ~1_NUM~ of ~2_MAX~
-            AddHtmlLocalized(35, 450, 280, 20, 1153561, string.Format("{0}@{1}", (page + 1).ToString(), (totalPages).ToString()), Blue, false, false); // Page ~1_CUR~ of ~2_MAX~
+            AddHtmlLocalized(35, 430, 280, 20, 1153560, $"{m_List.Count}@{"500"}", Blue, false, false); // Maps: ~1_NUM~ of ~2_MAX~
+            AddHtmlLocalized(35, 450, 280, 20, 1153561, $"{(page + 1).ToString()}@{(totalPages).ToString()}", Blue, false, false); // Page ~1_CUR~ of ~2_MAX~
 
             AddHtmlLocalized(390, 430, 100, 20, 1153553, Yellow, false, false); // <DIV ALIGN="CENTER">ADD MAPS</DIV>
             AddButton(350, 430, 4011, 4013, 3, GumpButtonType.Reply, 0);
@@ -652,11 +652,11 @@ namespace Server.Engines.VeteranRewards
 
             if (Sextant.Format(e.Location, e.Map, ref xLong, ref yLat, ref xMins, ref yMins, ref xEast, ref ySouth))
             {
-                loc = string.Format("{0}@{1}", yLat + (ySouth ? "S" : "N"), xLong + (xEast ? "E" : "W"));
+                loc = $"{yLat + (ySouth ? "S" : "N")}@{xLong + (xEast ? "E" : "W")}";
             }
             else
             {
-                loc = string.Format("{0}@{1}", e.Location.X.ToString(), e.Location.Y.ToString());
+                loc = $"{e.Location.X.ToString()}@{e.Location.Y.ToString()}";
             }
 
             return loc;
@@ -704,10 +704,10 @@ namespace Server.Engines.VeteranRewards
         {
             Item item = null;
 
-            if (entry is SOSEntry)
-                item = Construct((SOSEntry)entry);
-            else if (entry is TreasureMapEntry)
-                item = Construct((TreasureMapEntry)entry);
+            if (entry is SOSEntry sOSEntry)
+                item = Construct(sOSEntry);
+            else if (entry is TreasureMapEntry treasureMapEntry)
+                item = Construct(treasureMapEntry);
 
             if (item != null)
             {
diff --git a/Scripts/Services/VeteranRewards/RewardChoiceGump.cs b/Scripts/Services/VeteranRewards/RewardChoiceGump.cs
index cd34ee226..0565712f3 100644
--- a/Scripts/Services/VeteranRewards/RewardChoiceGump.cs
+++ b/Scripts/Services/VeteranRewards/RewardChoiceGump.cs
@@ -85,7 +85,7 @@ namespace Server.Engines.VeteranRewards
             else if (rewardInterval == TimeSpan.FromDays(365.0))
                 intervalAsString = "year";
             else
-                intervalAsString = string.Format("{0} day{1}", rewardInterval.TotalDays, rewardInterval.TotalDays == 1 ? "" : "s");
+                intervalAsString = $"{rewardInterval.TotalDays} day{(rewardInterval.TotalDays == 1 ? "" : "s")}";
 
             AddPage(1);
 
diff --git a/Scripts/Services/VeteranRewards/RewardConfirmGump.cs b/Scripts/Services/VeteranRewards/RewardConfirmGump.cs
index f4f0460a9..560a6098f 100644
--- a/Scripts/Services/VeteranRewards/RewardConfirmGump.cs
+++ b/Scripts/Services/VeteranRewards/RewardConfirmGump.cs
@@ -49,11 +49,11 @@ namespace Server.Engines.VeteranRewards
 
                 if (item != null)
                 {
-                    if (item is Items.RedSoulstone)
-                        ((Items.RedSoulstone)item).Account = m_From.Account.Username;
+                    if (item is Items.RedSoulstone redSoulstone)
+                        redSoulstone.Account = m_From.Account.Username;
 
-                    if (item is Items.LighthouseAddonDeed)
-                        ((Items.LighthouseAddonDeed)item).Account = m_From.Account.Username;
+                    if (item is Items.LighthouseAddonDeed lighthouseAddonDeed)
+                        lighthouseAddonDeed.Account = m_From.Account.Username;
 
                     if (RewardSystem.ConsumeRewardPoint(m_From))
                     {
diff --git a/Scripts/Services/VeteranRewards/RewardEntry.cs b/Scripts/Services/VeteranRewards/RewardEntry.cs
index d92bcbc79..f70ddf311 100644
--- a/Scripts/Services/VeteranRewards/RewardEntry.cs
+++ b/Scripts/Services/VeteranRewards/RewardEntry.cs
@@ -51,8 +51,8 @@ namespace Server.Engines.VeteranRewards
             {
                 Item item = Activator.CreateInstance(m_ItemType, m_Args) as Item;
 
-                if (item is IRewardItem)
-                    ((IRewardItem)item).IsRewardItem = true;
+                if (item is IRewardItem iRewardItem)
+                    iRewardItem.IsRewardItem = true;
 
                 return item;
             }
diff --git a/Scripts/Services/VeteranRewards/RewardOptionGump.cs b/Scripts/Services/VeteranRewards/RewardOptionGump.cs
index de353ff9c..045454db6 100644
--- a/Scripts/Services/VeteranRewards/RewardOptionGump.cs
+++ b/Scripts/Services/VeteranRewards/RewardOptionGump.cs
@@ -52,7 +52,7 @@ namespace Server.Gumps
                 if (m_Options[i].Cliloc.Number > 0)
                     AddHtmlLocalized(44, 47 + i * 24, 213, 20, m_Options[i].Cliloc.Number, 0x7FFF, false, false);
                 else
-                    AddHtml(44, 47 + i * 24, 213, 20, string.Format("<basefont color=#FFFFFF>{0}", m_Options[i].Text), false, false);
+                    AddHtml(44, 47 + i * 24, 213, 20, $"<basefont color=#FFFFFF>{m_Options[i].Text}", false, false);
             }
         }
 
@@ -105,7 +105,7 @@ namespace Server.Gumps
             AddBackground(0, 0, bgw, bgh, 0xA28);
 
             if (title > 0)
-                AddHtmlLocalized(30, 30, 240, 20, 1113302, string.Format("#{0}", title), 0x0, false, false); // <CENTER>~1_VAL~</CENTER>
+                AddHtmlLocalized(30, 30, 240, 20, 1113302, $"#{title}", 0x0, false, false); // <CENTER>~1_VAL~</CENTER>
             else
                 AddHtmlLocalized(30, 30, 240, 20, 1113302, "#1080392", 0x0, false, false); // Select your choice from the menu below.
 
@@ -116,7 +116,7 @@ namespace Server.Gumps
                 if (m_Options[i].Cliloc.Number > 0)
                     AddHtmlLocalized(70, 70 + i * 20, 150, 20, m_Options[i].Cliloc.Number, 0x0, false, false);
                 else
-                    AddHtml(70, 70 + i * 20, 150, 20, string.Format("<basefont color=#000000>{0}", m_Options[i].Text), false, false);
+                    AddHtml(70, 70 + i * 20, 150, 20, $"<basefont color=#000000>{m_Options[i].Text}", false, false);
             }
         }
 
diff --git a/Scripts/Services/ViceVsVirtue/Gumps/BattleStatsGump.cs b/Scripts/Services/ViceVsVirtue/Gumps/BattleStatsGump.cs
index 73e323f8b..719ad7a21 100644
--- a/Scripts/Services/ViceVsVirtue/Gumps/BattleStatsGump.cs
+++ b/Scripts/Services/ViceVsVirtue/Gumps/BattleStatsGump.cs
@@ -24,13 +24,13 @@ namespace Server.Engines.VvV
             AddBackground(0, 0, 500, 500, 9380);
 
             AddHtmlLocalized(0, 40, 500, 20, 1154645, "#1154945", Color16, false, false); // The Battle between Vice and Virtue has ended!
-            AddHtml(40, 65, 420, 20, string.Format("<basefont color=#B22222>{0} [{1}] has won the battle!", leader.Guild.Name, leader.Guild.Abbreviation), false, false);
+            AddHtml(40, 65, 420, 20, $"<basefont color=#B22222>{leader.Guild.Name} [{leader.Guild.Abbreviation}] has won the battle!", false, false);
 
             int y = 90;
 
             if (leader.Guild.Alliance != null)
             {
-                AddHtml(40, y, 420, 20, string.Format("<basefont color=#B22222>The {0} Alliance has won the battle!", leader.Guild.Alliance.Name), false, false);
+                AddHtml(40, y, 420, 20, $"<basefont color=#B22222>The {leader.Guild.Alliance.Name} Alliance has won the battle!", false, false);
                 y += 25;
             }
 
diff --git a/Scripts/Services/ViceVsVirtue/Gumps/ConfirmSignupGump.cs b/Scripts/Services/ViceVsVirtue/Gumps/ConfirmSignupGump.cs
index e85b82399..75482b349 100644
--- a/Scripts/Services/ViceVsVirtue/Gumps/ConfirmSignupGump.cs
+++ b/Scripts/Services/ViceVsVirtue/Gumps/ConfirmSignupGump.cs
@@ -60,9 +60,8 @@ namespace Server.Engines.VvV
                     User.SendGump(new ConfirmSignupGump(User));
                     break;
                 case 2:
-                    Guild g = User.Guild as Guild;
 
-                    if (g != null)
+                    if (User.Guild is Guild g)
                     {
                         ViceVsVirtueSystem.Instance.AddPlayer(User);
                     }
diff --git a/Scripts/Services/ViceVsVirtue/Gumps/GuildLeaderboardGump.cs b/Scripts/Services/ViceVsVirtue/Gumps/GuildLeaderboardGump.cs
index 81a8986f3..a7d90ed61 100644
--- a/Scripts/Services/ViceVsVirtue/Gumps/GuildLeaderboardGump.cs
+++ b/Scripts/Services/ViceVsVirtue/Gumps/GuildLeaderboardGump.cs
@@ -68,7 +68,7 @@ namespace Server.Engines.VvV
                 pages = 1;
 
             AddPage(page);
-            AddHtmlLocalized(60, 290, 150, 20, 1153561, string.Format("{0}\t{1}", page.ToString(), pages.ToString()), 0xFFFF, false, false); // Page ~1_CUR~ of ~2_MAX~
+            AddHtmlLocalized(60, 290, 150, 20, 1153561, $"{page.ToString()}\t{pages.ToString()}", 0xFFFF, false, false); // Page ~1_CUR~ of ~2_MAX~
 
             for (int i = 0; i < list.Count; i++)
             {
@@ -85,7 +85,7 @@ namespace Server.Engines.VvV
 
                 if (pageindex == PerPage)
                 {
-                    AddHtmlLocalized(60, 290, 150, 20, 1153561, string.Format("{0}\t{1}", page.ToString(), pages.ToString()), 0xFFFF, false, false); // Page ~1_CUR~ of ~2_MAX~
+                    AddHtmlLocalized(60, 290, 150, 20, 1153561, $"{page.ToString()}\t{pages.ToString()}", 0xFFFF, false, false); // Page ~1_CUR~ of ~2_MAX~
 
                     if (i > 0 && i < list.Count - 1)
                     {
@@ -124,22 +124,22 @@ namespace Server.Engines.VvV
 
         private string CenterGray(string format)
         {
-            return string.Format("<basefont color=#A9A9A9><DIV ALIGN=CENTER>{0}</DIV>", format);
+            return $"<basefont color=#A9A9A9><DIV ALIGN=CENTER>{format}</DIV>";
         }
 
         private string RightGray(string format)
         {
-            return string.Format("<basefont color=#A9A9A9><DIV ALIGN=RIGHT>{0}</DIV>", format);
+            return $"<basefont color=#A9A9A9><DIV ALIGN=RIGHT>{format}</DIV>";
         }
 
         private string LeftGray(string format)
         {
-            return string.Format("<basefont color=#A9A9A9><DIV ALIGN=LEFT>{0}</DIV>", format);
+            return $"<basefont color=#A9A9A9><DIV ALIGN=LEFT>{format}</DIV>";
         }
 
         private string RightGreen(string format)
         {
-            return string.Format("<basefont color=#00FA9A><DIV ALIGN=RIGHT>{0}</DIV>", format);
+            return $"<basefont color=#00FA9A><DIV ALIGN=RIGHT>{format}</DIV>";
         }
     }
 }
\ No newline at end of file
diff --git a/Scripts/Services/ViceVsVirtue/Gumps/LeaderboardGump.cs b/Scripts/Services/ViceVsVirtue/Gumps/LeaderboardGump.cs
index bd97927f4..72fa1e0ff 100644
--- a/Scripts/Services/ViceVsVirtue/Gumps/LeaderboardGump.cs
+++ b/Scripts/Services/ViceVsVirtue/Gumps/LeaderboardGump.cs
@@ -81,7 +81,7 @@ namespace Server.Engines.VvV
                 pages = 1;
 
             AddPage(page);
-            AddHtmlLocalized(60, 290, 150, 20, 1153561, string.Format("{0}\t{1}", page.ToString(), pages.ToString()), 0xFFFF, false, false); // Page ~1_CUR~ of ~2_MAX~
+            AddHtmlLocalized(60, 290, 150, 20, 1153561, $"{page.ToString()}\t{pages.ToString()}", 0xFFFF, false, false); // Page ~1_CUR~ of ~2_MAX~
 
             for (int i = 0; i < list.Count; i++)
             {
@@ -108,7 +108,7 @@ namespace Server.Engines.VvV
 
                 if (pageindex == PerPage)
                 {
-                    AddHtmlLocalized(60, 290, 150, 20, 1153561, string.Format("{0}\t{1}", page.ToString(), pages.ToString()), 0xFFFF, false, false); // Page ~1_CUR~ of ~2_MAX~
+                    AddHtmlLocalized(60, 290, 150, 20, 1153561, $"{page.ToString()}\t{pages.ToString()}", 0xFFFF, false, false); // Page ~1_CUR~ of ~2_MAX~
 
                     if (i > 0 && i < list.Count - 1)
                     {
@@ -147,22 +147,22 @@ namespace Server.Engines.VvV
 
         private string CenterGray(string format)
         {
-            return string.Format("<basefont color=#A9A9A9><DIV ALIGN=CENTER>{0}</DIV>", format);
+            return $"<basefont color=#A9A9A9><DIV ALIGN=CENTER>{format}</DIV>";
         }
 
         private string RightGray(string format)
         {
-            return string.Format("<basefont color=#A9A9A9><DIV ALIGN=RIGHT>{0}</DIV>", format);
+            return $"<basefont color=#A9A9A9><DIV ALIGN=RIGHT>{format}</DIV>";
         }
 
         private string LeftGray(string format)
         {
-            return string.Format("<basefont color=#A9A9A9><DIV ALIGN=LEFT>{0}</DIV>", format);
+            return $"<basefont color=#A9A9A9><DIV ALIGN=LEFT>{format}</DIV>";
         }
 
         private string RightGreen(string format)
         {
-            return string.Format("<basefont color=#00FA9A><DIV ALIGN=RIGHT>{0}</DIV>", format);
+            return $"<basefont color=#00FA9A><DIV ALIGN=RIGHT>{format}</DIV>";
         }
     }
 }
\ No newline at end of file
diff --git a/Scripts/Services/ViceVsVirtue/Gumps/VvVBattleStatusGump.cs b/Scripts/Services/ViceVsVirtue/Gumps/VvVBattleStatusGump.cs
index a894254ce..8a2fcfe2e 100644
--- a/Scripts/Services/ViceVsVirtue/Gumps/VvVBattleStatusGump.cs
+++ b/Scripts/Services/ViceVsVirtue/Gumps/VvVBattleStatusGump.cs
@@ -38,7 +38,7 @@ namespace Server.Engines.VvV
                 BattleTeam team = teams[i];
 
                 if (team.Guild != null)
-                    AddHtml(87, 115 + (31 * i), 50, 20, string.Format("<basefont color=#FFFFFF>{0}", team.Guild.Abbreviation), false, false);
+                    AddHtml(87, 115 + (31 * i), 50, 20, $"<basefont color=#FFFFFF>{team.Guild.Abbreviation}", false, false);
 
                 AddBackground(145, 120 + (31 * i), (int)Math.Min(216, (team.Score * offset)), 12, 30584);
 
@@ -54,18 +54,16 @@ namespace Server.Engines.VvV
                 if (i <= count - 3)
                     break;
 
-                AddHtml(98, y, 250, 16, string.Format("<basefont color=#80BFFF>{0}", Battle.Messages[i]), false, false);
+                AddHtml(98, y, 250, 16, $"<basefont color=#80BFFF>{Battle.Messages[i]}", false, false);
 
                 y += 16;
             }
 
-            Guild gu = User.Guild as Guild;
-
-            if (gu != null)
+            if (User.Guild is Guild gu)
             {
                 BattleTeam t = Battle.GetTeam(gu);
 
-                AddHtml(87, 268, 50, 20, string.Format("<basefont color=#FFFFFF>{0}", gu.Abbreviation), false, false);
+                AddHtml(87, 268, 50, 20, $"<basefont color=#FFFFFF>{gu.Abbreviation}", false, false);
                 AddBackground(145, 271, (int)Math.Min(216, (t.Score * offset)), 12, 30584);
             }
 
diff --git a/Scripts/Services/ViceVsVirtue/Items/Rewards/MorphEarrings.cs b/Scripts/Services/ViceVsVirtue/Items/Rewards/MorphEarrings.cs
index c1c1e2f8a..dad3b6946 100644
--- a/Scripts/Services/ViceVsVirtue/Items/Rewards/MorphEarrings.cs
+++ b/Scripts/Services/ViceVsVirtue/Items/Rewards/MorphEarrings.cs
@@ -17,9 +17,9 @@ namespace Server.Items
         {
             base.OnRemoved(parent);
 
-            if (parent is Mobile)
+            if (parent is Mobile mobile)
             {
-                ValidateEquipment((Mobile)parent);
+                ValidateEquipment(mobile);
             }
         }
 
diff --git a/Scripts/Services/ViceVsVirtue/Items/Rewards/VvVTrapKit.cs b/Scripts/Services/ViceVsVirtue/Items/Rewards/VvVTrapKit.cs
index 0c197cb44..cf0dc3467 100644
--- a/Scripts/Services/ViceVsVirtue/Items/Rewards/VvVTrapKit.cs
+++ b/Scripts/Services/ViceVsVirtue/Items/Rewards/VvVTrapKit.cs
@@ -56,9 +56,7 @@ namespace Server.Engines.VvV
                         from.SendLocalizedMessage(1155409); // Where do you want to place the trap?
                         from.BeginTarget(2, true, TargetFlags.None, (m, targeted) =>
                         {
-                            IPoint3D p = targeted as IPoint3D;
-
-                            if (p != null)
+                            if (targeted is IPoint3D p)
                             {
                                 if (!sys.Battle.OnGoing || !m.Region.IsPartOf(sys.Battle.Region))
                                 {
@@ -98,9 +96,7 @@ namespace Server.Engines.VvV
                 m.SendLocalizedMessage(1155410); // Target the location to run the tripwire...
                 m.BeginTarget(5, true, TargetFlags.None, (from, targeted) =>
                 {
-                    IPoint3D p = targeted as IPoint3D;
-
-                    if (p != null)
+                    if (targeted is IPoint3D p)
                     {
                         Point3D point = new Point3D(p);
 
@@ -192,8 +188,8 @@ namespace Server.Engines.VvV
         {
             base.GetProperties(list);
 
-            list.Add(1154938, string.Format("#{0}", ((int)DeploymentType).ToString())); // Deployment Type: ~1_DEPLOYTYPE~
-            list.Add(1154941, string.Format("#{0}", ((int)TrapType).ToString())); // Damage Type: ~1_DMGTYPE~
+            list.Add(1154938, $"#{((int)DeploymentType).ToString()}"); // Deployment Type: ~1_DEPLOYTYPE~
+            list.Add(1154941, $"#{((int)TrapType).ToString()}"); // Damage Type: ~1_DMGTYPE~
             list.Add(1154937); // VvV Item
         }
 
diff --git a/Scripts/Services/ViceVsVirtue/Items/Rewards/VvVTraps.cs b/Scripts/Services/ViceVsVirtue/Items/Rewards/VvVTraps.cs
index e7dc073ff..743384d62 100644
--- a/Scripts/Services/ViceVsVirtue/Items/Rewards/VvVTraps.cs
+++ b/Scripts/Services/ViceVsVirtue/Items/Rewards/VvVTraps.cs
@@ -106,14 +106,11 @@ namespace Server.Engines.VvV
         {
             ItemID = VisibleID;
 
-            if (Links != null)
-            {
-                Links.ForEach(l =>
-                    {
-                        if (!l.Deleted && l.ItemID == HiddenID)
-                            l.ItemID = VisibleID;
-                    });
-            }
+            Links?.ForEach(l =>
+{
+    if (!l.Deleted && l.ItemID == HiddenID)
+        l.ItemID = VisibleID;
+});
 
             if (ParentTrap != null)
             {
@@ -167,14 +164,11 @@ namespace Server.Engines.VvV
         {
             base.Delete();
 
-            if (Links != null)
-            {
-                Links.ForEach(l =>
-                    {
-                        if (!l.Deleted)
-                            l.Delete();
-                    });
-            }
+            Links?.ForEach(l =>
+{
+    if (!l.Deleted)
+        l.Delete();
+});
 
             if (ParentTrap != null && !ParentTrap.Deleted)
                 ParentTrap.Delete();
@@ -194,10 +188,7 @@ namespace Server.Engines.VvV
 
             writer.Write(Links != null ? Links.Count : 0);
 
-            if (Links != null)
-            {
-                Links.ForEach(l => writer.Write(l));
-            }
+            Links?.ForEach(l => writer.Write(l));
 
             writer.Write(ParentTrap);
         }
@@ -217,9 +208,7 @@ namespace Server.Engines.VvV
                 if (Links == null)
                     Links = new List<VvVTrap>();
 
-                VvVTrap link = reader.ReadItem() as VvVTrap;
-
-                if (link != null)
+                if (reader.ReadItem() is VvVTrap link)
                     Links.Add(link);
             }
 
diff --git a/Scripts/Services/ViceVsVirtue/Items/VvVAltar.cs b/Scripts/Services/ViceVsVirtue/Items/VvVAltar.cs
index fb354b9ef..8a99568a1 100644
--- a/Scripts/Services/ViceVsVirtue/Items/VvVAltar.cs
+++ b/Scripts/Services/ViceVsVirtue/Items/VvVAltar.cs
@@ -160,10 +160,8 @@ namespace Server.Engines.VvV
         public static void DoOccupy(object obj)
         {
             object[] objs = obj as object[];
-            VvVBattle battle = objs[0] as VvVBattle;
-            Guild g = objs[1] as Guild;
 
-            if (battle != null && g != null)
+            if (objs[0] is VvVBattle battle && objs[1] is Guild g)
                 battle.OccupyAltar(g);
         }
 
diff --git a/Scripts/Services/ViceVsVirtue/Items/VvVItem.cs b/Scripts/Services/ViceVsVirtue/Items/VvVItem.cs
index a63b0cc21..d25f87364 100644
--- a/Scripts/Services/ViceVsVirtue/Items/VvVItem.cs
+++ b/Scripts/Services/ViceVsVirtue/Items/VvVItem.cs
@@ -29,10 +29,8 @@ namespace Server.Items
                 ((CrystallineRing)item).Attributes.CastRecovery = 3;
             }
 
-            if (item is HumanFeyLeggings)
+            if (item is HumanFeyLeggings fey)
             {
-                HumanFeyLeggings fey = (HumanFeyLeggings)item;
-
                 if (fey.PhysicalBonus != 3)
                     fey.PhysicalBonus = 3;
 
@@ -51,10 +49,8 @@ namespace Server.Items
                 ((FoldedSteelGlasses)item).Attributes.DefendChance = 25;
             }
 
-            if (item is HeartOfTheLion)
+            if (item is HeartOfTheLion lion)
             {
-                HeartOfTheLion lion = (HeartOfTheLion)item;
-
                 if (lion.PhysicalBonus != 5)
                     lion.PhysicalBonus = 5;
 
@@ -71,10 +67,8 @@ namespace Server.Items
                     lion.EnergyBonus = 5;
             }
 
-            if (item is HuntersHeaddress)
+            if (item is HuntersHeaddress hunters)
             {
-                HuntersHeaddress hunters = (HuntersHeaddress)item;
-
                 if (hunters.Resistances.Physical != 8)
                     hunters.Resistances.Physical = 8;
 
@@ -119,10 +113,8 @@ namespace Server.Items
                 ((RingOfTheVile)item).Attributes.AttackChance = 25;
             }
 
-            if (item is RuneBeetleCarapace)
+            if (item is RuneBeetleCarapace carapace)
             {
-                RuneBeetleCarapace carapace = (RuneBeetleCarapace)item;
-
                 if (carapace.PhysicalBonus != 3)
                     carapace.PhysicalBonus = 3;
 
@@ -139,10 +131,8 @@ namespace Server.Items
                     carapace.EnergyBonus = 3;
             }
 
-            if (item is SpiritOfTheTotem)
+            if (item is SpiritOfTheTotem totem)
             {
-                SpiritOfTheTotem totem = (SpiritOfTheTotem)item;
-
                 if (totem.Resistances.Fire != 7)
                     totem.Resistances.Fire = 7;
 
@@ -161,10 +151,8 @@ namespace Server.Items
                 ((Stormgrip)item).Attributes.AttackChance = 10;
             }
 
-            if (item is InquisitorsResolution)
+            if (item is InquisitorsResolution inquis)
             {
-                InquisitorsResolution inquis = (InquisitorsResolution)item;
-
                 if (inquis.PhysicalBonus != 5)
                     inquis.PhysicalBonus = 5;
 
@@ -186,10 +174,8 @@ namespace Server.Items
                 ((TomeOfLostKnowledge)item).Attributes.RegenMana = 3;
             }
 
-            if (item is WizardsCrystalGlasses)
+            if (item is WizardsCrystalGlasses glasses)
             {
-                WizardsCrystalGlasses glasses = (WizardsCrystalGlasses)item;
-
                 if (glasses.PhysicalBonus != 5)
                     glasses.PhysicalBonus = 5;
 
diff --git a/Scripts/Services/ViceVsVirtue/Items/VvVSigil.cs b/Scripts/Services/ViceVsVirtue/Items/VvVSigil.cs
index d47af52d4..20d01afac 100644
--- a/Scripts/Services/ViceVsVirtue/Items/VvVSigil.cs
+++ b/Scripts/Services/ViceVsVirtue/Items/VvVSigil.cs
@@ -70,8 +70,8 @@ namespace Server.Engines.VvV
 
         private Mobile FindOwner(object parent)
         {
-            if (parent is Item)
-                return ((Item)parent).RootParent as Mobile;
+            if (parent is Item item)
+                return item.RootParent as Mobile;
 
             if (parent is Mobile)
                 return (Mobile)parent;
diff --git a/Scripts/Services/ViceVsVirtue/Mobiles/SilverTrader.cs b/Scripts/Services/ViceVsVirtue/Mobiles/SilverTrader.cs
index 034b71385..fb82b9737 100644
--- a/Scripts/Services/ViceVsVirtue/Mobiles/SilverTrader.cs
+++ b/Scripts/Services/ViceVsVirtue/Mobiles/SilverTrader.cs
@@ -92,21 +92,19 @@ namespace Server.Engines.VvV
                     {
                         Item itm = Backpack.FindItemByType(item.Type);
 
-                        if (itm is IVvVItem)
-                            ((IVvVItem)itm).IsVvVItem = true;
+                        if (itm is IVvVItem iVvVItem)
+                            iVvVItem.IsVvVItem = true;
 
                         continue;
                     }
 
-                    Item i = Activator.CreateInstance(item.Type) as Item;
-
-                    if (i != null)
+                    if (Activator.CreateInstance(item.Type) is Item i)
                     {
-                        if (i is IOwnerRestricted)
-                            ((IOwnerRestricted)i).OwnerName = "Your Player Name";
+                        if (i is IOwnerRestricted iOwnerRestricted)
+                            iOwnerRestricted.OwnerName = "Your Player Name";
 
-                        if (i is IVvVItem)
-                            ((IVvVItem)i).IsVvVItem = true;
+                        if (i is IVvVItem iVvVItem)
+                            iVvVItem.IsVvVItem = true;
 
                         NegativeAttributes neg = RunicReforging.GetNegativeAttributes(i);
 
@@ -154,9 +152,8 @@ namespace Server.Engines.VvV
                         {
                             if (dropped.GetType() == t[0])
                             {
-                                IDurability dur = dropped as IDurability;
 
-                                if (dur != null && dur.MaxHitPoints == 255 && dur.HitPoints == 255)
+                                if (dropped is IDurability dur && dur.MaxHitPoints == 255 && dur.HitPoints == 255)
                                 {
                                     Item item = Loot.Construct(t[1]);
 
@@ -164,24 +161,24 @@ namespace Server.Engines.VvV
                                     {
                                         VvVRewards.OnRewardItemCreated(from, item);
 
-                                        if (item is GargishCrimsonCincture)
+                                        if (item is GargishCrimsonCincture gargishCrimsonCincture)
                                         {
-                                            ((GargishCrimsonCincture)item).Attributes.BonusDex = 10;
+                                            gargishCrimsonCincture.Attributes.BonusDex = 10;
                                         }
 
-                                        if (item is GargishMaceAndShieldGlasses)
+                                        if (item is GargishMaceAndShieldGlasses gargishMaceAndShieldGlasses)
                                         {
-                                            ((GargishMaceAndShieldGlasses)item).Attributes.WeaponDamage = 10;
+                                            gargishMaceAndShieldGlasses.Attributes.WeaponDamage = 10;
                                         }
 
-                                        if (item is GargishFoldedSteelGlasses)
+                                        if (item is GargishFoldedSteelGlasses gargishFoldedSteelGlasses)
                                         {
-                                            ((GargishFoldedSteelGlasses)item).Attributes.DefendChance = 25;
+                                            gargishFoldedSteelGlasses.Attributes.DefendChance = 25;
                                         }
 
-                                        if (item is GargishWizardsCrystalGlasses)
+                                        if (item is GargishWizardsCrystalGlasses gargishWizardsCrystalGlasses)
                                         {
-                                            ((GargishWizardsCrystalGlasses)item).PhysicalBonus = 5;
+                                            gargishWizardsCrystalGlasses.PhysicalBonus = 5;
                                             ((GargishWizardsCrystalGlasses)item).FireBonus = 5;
                                             ((GargishWizardsCrystalGlasses)item).ColdBonus = 5;
                                             ((GargishWizardsCrystalGlasses)item).PoisonBonus = 5;
diff --git a/Scripts/Services/ViceVsVirtue/ViceVsVirtueSystem.cs b/Scripts/Services/ViceVsVirtue/ViceVsVirtueSystem.cs
index cb361a2e8..6a7e44f0b 100644
--- a/Scripts/Services/ViceVsVirtue/ViceVsVirtueSystem.cs
+++ b/Scripts/Services/ViceVsVirtue/ViceVsVirtueSystem.cs
@@ -222,7 +222,7 @@ namespace Server.Engines.VvV
 
             if (Battle.OnGoing)
             {
-                SendVvVMessageTo(pm, 1154721, string.Format("#{0}", GetCityLocalization(Battle.City).ToString()));
+                SendVvVMessageTo(pm, 1154721, $"#{GetCityLocalization(Battle.City).ToString()}");
                 // A Battle between Vice and Virtue is active! To Arms! The City of ~1_CITY~ is besieged!
 
                 if (Battle != null && Battle.IsInActiveBattle(pm))
@@ -364,10 +364,7 @@ namespace Server.Engines.VvV
             {
                 Mobile m = state.Mobile;
 
-                if (m != null)
-                {
-                    m.SendMessage("[Guild][VvV] {0}", message);
-                }
+                m?.SendMessage("[Guild][VvV] {0}", message);
             }
         }
 
@@ -1102,7 +1099,7 @@ namespace Server.Engines.VvV
 
             if (silver > 0)
             {
-                Player.SendLocalizedMessage(1042736, string.Format("{0:N0} silver\t{1}", silver, victim.Name));
+                Player.SendLocalizedMessage(1042736, $"{silver:N0} silver\t{victim.Name}");
                 // You have earned ~1_SILVER_AMOUNT~ pieces for vanquishing ~2_PLAYER_NAME~!
 
                 Points += silver;
diff --git a/Scripts/Services/ViceVsVirtue/VvVBattle.cs b/Scripts/Services/ViceVsVirtue/VvVBattle.cs
index 276032d0c..a7b9267f3 100644
--- a/Scripts/Services/ViceVsVirtue/VvVBattle.cs
+++ b/Scripts/Services/ViceVsVirtue/VvVBattle.cs
@@ -154,8 +154,8 @@ namespace Server.Engines.VvV
 
         public Timer Timer { get; private set; }
 
-        public int TrapCount => Traps.Where(t => !t.Deleted).Count();
-        public int TurretCount => Turrets.Where(t => !t.Deleted).Count();
+        public int TrapCount => Traps.Count(t => !t.Deleted);
+        public int TurretCount => Turrets.Count(t => !t.Deleted);
 
         [CommandProperty(AccessLevel.GameMaster)]
         public bool InCooldown => CooldownEnds > DateTime.UtcNow;
@@ -216,7 +216,7 @@ namespace Server.Engines.VvV
 
             NextAltarActivate = DateTime.UtcNow + TimeSpan.FromMinutes(1);
 
-            System.SendVvVMessage(1154721, string.Format("#{0}", ViceVsVirtueSystem.GetCityLocalization(City).ToString()));
+            System.SendVvVMessage(1154721, $"#{ViceVsVirtueSystem.GetCityLocalization(City).ToString()}");
             // A Battle between Vice and Virtue is active! To Arms! The City of ~1_CITY~ is besieged!
         }
 
@@ -327,10 +327,10 @@ namespace Server.Engines.VvV
                 ColUtility.Free(list);
             }
 
-            if (Turrets != null)
-            {
-                Turrets.ForEach(t => { t.Scan(); });
-            }
+            Turrets?.ForEach(t =>
+{
+    t.Scan();
+});
         }
 
         public void CheckParticipation()
@@ -353,9 +353,7 @@ namespace Server.Engines.VvV
                 }
                 else if (vvv && pm.Alive && !pm.Hidden && BaseBoat.FindBoatAt(pm.Location, pm.Map) == null && BaseHouse.FindHouseAt(pm) == null)
                 {
-                    Guild g = pm.Guild as Guild;
-
-                    if (g != null)
+                    if (pm.Guild is Guild g)
                     {
                         BattleTeam t = GetTeam(g);
 
@@ -488,10 +486,7 @@ namespace Server.Engines.VvV
 
             System.SendVvVMessage(1154722); // A VvV battle has just concluded. The next battle will begin in less than five minutes!
 
-            if (BattleAggression != null)
-            {
-                BattleAggression.Clear();
-            }
+            BattleAggression?.Clear();
 
             ColUtility.Free(Altars);
             ColUtility.Free(Teams);
@@ -539,9 +534,7 @@ namespace Server.Engines.VvV
                 if (g == null)
                     continue;
 
-                PlayerMobile pm = m as PlayerMobile;
-
-                if (pm != null)
+                if (m is PlayerMobile pm)
                 {
                     BattleTeam team = GetTeam(g);
                     VvVPlayerBattleStats stats = GetPlayerStats(pm);
@@ -705,7 +698,7 @@ namespace Server.Engines.VvV
                     if (victimTeam != null)
                         victimTeam.Deaths++;
 
-                    if (victim != null && victim.Player != null)
+                    if (victim?.Player != null)
                     {
                         if (!KillCooldown.ContainsKey(victim.Player) || KillCooldown[victim.Player] < DateTime.UtcNow)
                         {
@@ -715,7 +708,7 @@ namespace Server.Engines.VvV
                                 killerTeam.Silver += AwardSilver(KillSilver + (OppositionCount(killer.Guild) * 50));
                             }
 
-                            SendStatusMessage(string.Format("{0} has killed {1}!", killer.Player.Name, victim.Player.Name));
+                            SendStatusMessage($"{killer.Player.Name} has killed {victim.Player.Name}!");
                             KillCooldown[victim.Player] = DateTime.UtcNow + TimeSpan.FromMinutes(KillCooldownDuration);
                         }
                     }
@@ -733,7 +726,7 @@ namespace Server.Engines.VvV
                     if (killerStats != null)
                     {
                         killerStats.Stolen++;
-                        SendStatusMessage(string.Format("{0} has stolen the sigil!", killer.Player.Name));
+                        SendStatusMessage($"{killer.Player.Name} has stolen the sigil!");
                     }
 
                     if (killerTeam != null)
@@ -762,14 +755,14 @@ namespace Server.Engines.VvV
                         }
                     }
 
-                    SendStatusMessage(string.Format("{0} has returned the sigil!", killer.Player.Name));
+                    SendStatusMessage($"{killer.Player.Name} has returned the sigil!");
 
                     NextSigilSpawn = DateTime.UtcNow + TimeSpan.FromMinutes(1);
                     RemovePriests();
 
                     break;
                 case UpdateType.Disarm:
-                    SendStatusMessage(string.Format("{0} has disarmed a trap!", killer.Player.Name));
+                    SendStatusMessage($"{killer.Player.Name} has disarmed a trap!");
 
                     if (killerStats != null)
                     {
@@ -814,7 +807,7 @@ namespace Server.Engines.VvV
             team.Score += (int)AltarPoints;
             team.Silver += AwardSilver(AltarSilver + (OppositionCount(g) * 50));
 
-            SendStatusMessage(string.Format("{0} claimed the altar!", g != null ? g.Abbreviation : "somebody"));
+            SendStatusMessage($"{(g != null ? g.Abbreviation : "somebody")} claimed the altar!");
 
             foreach (PlayerMobile p in Region.GetEnumeratedMobiles().Where(player => player is PlayerMobile))
             {
@@ -843,7 +836,7 @@ namespace Server.Engines.VvV
                 {
                     if (ViceVsVirtueSystem.EnhancedRules)
                     {
-                        System.SendVvVMessage(string.Format("{0} is occupying {1}!", team.Guild.Name, City == VvVCity.SkaraBrae ? "Skara Brae" : City.ToString()));
+                        System.SendVvVMessage($"{team.Guild.Name} is occupying {(City == VvVCity.SkaraBrae ? "Skara Brae" : City.ToString())}!");
                     }
                     else
                     {
@@ -859,7 +852,7 @@ namespace Server.Engines.VvV
                 {
                     if (ViceVsVirtueSystem.EnhancedRules)
                     {
-                        System.SendVvVMessage(1050039, string.Format("#{0}\tis unoccupied! Slay opposing forces to claim the city for your guild!", ViceVsVirtueSystem.GetCityLocalization(City).ToString()));
+                        System.SendVvVMessage(1050039, $"#{ViceVsVirtueSystem.GetCityLocalization(City).ToString()}\tis unoccupied! Slay opposing forces to claim the city for your guild!");
                     }
                     else
                     {
diff --git a/Scripts/Services/ViceVsVirtue/VvVRewards.cs b/Scripts/Services/ViceVsVirtue/VvVRewards.cs
index 6fc70faf2..dbfc8046f 100644
--- a/Scripts/Services/ViceVsVirtue/VvVRewards.cs
+++ b/Scripts/Services/ViceVsVirtue/VvVRewards.cs
@@ -112,8 +112,8 @@ namespace Server.Engines.VvV
 
         public static void OnRewardItemCreated(Mobile from, Item item)
         {
-            if (item is IOwnerRestricted)
-                ((IOwnerRestricted)item).Owner = from;
+            if (item is IOwnerRestricted iOwnerRestricted)
+                iOwnerRestricted.Owner = from;
 
             if (item is IAccountRestricted && from.Account != null)
                 ((IAccountRestricted)item).Account = from.Account.Username;
diff --git a/Scripts/Services/Virtues/Honor.cs b/Scripts/Services/Virtues/Honor.cs
index 18af67cd6..725fd8a3c 100644
--- a/Scripts/Services/Virtues/Honor.cs
+++ b/Scripts/Services/Virtues/Honor.cs
@@ -183,7 +183,7 @@ namespace Server.Services.Virtues
                 source.Animate(32, 5, 1, true, true, 0);
 
             BuffInfo.AddBuff(source, new BuffInfo(BuffIcon.Honored, 1075649, 1153815, string.Format("{0}", target.Name, true)));
-            BuffInfo.AddBuff(source, new BuffInfo(BuffIcon.Perfection, 1153786, 1151394, string.Format("0\t{0}", target.Name)));
+            BuffInfo.AddBuff(source, new BuffInfo(BuffIcon.Perfection, 1153786, 1151394, $"0\t{target.Name}"));
         }
 
         private class InternalTarget : Target
@@ -205,8 +205,8 @@ namespace Server.Services.Virtues
                 {
                     EmbraceHonor(pm);
                 }
-                else if (targeted is Mobile)
-                    Honor(pm, (Mobile)targeted);
+                else if (targeted is Mobile mobile)
+                    Honor(pm, mobile);
             }
 
             protected override void OnTargetOutOfRange(Mobile from, object targeted)
@@ -350,11 +350,11 @@ namespace Server.Services.Virtues
                         1075652,
                         TimeSpan.FromSeconds(5),
                         from,
-                        string.Format("{0}\t{1}", m_Perfection, from.Name)));
+                        $"{m_Perfection}\t{from.Name}"));
 
                 BuffInfo.AddBuff(
                     from,
-                    new BuffInfo(BuffIcon.Perfection, 1153786, 1151394, string.Format("{0}\t{1}", m_Target.Name, m_Perfection)));
+                    new BuffInfo(BuffIcon.Perfection, 1153786, 1151394, $"{m_Target.Name}\t{m_Perfection}"));
             }
             else
             {
@@ -362,7 +362,7 @@ namespace Server.Services.Virtues
 
                 BuffInfo.AddBuff(
                     from,
-                    new BuffInfo(BuffIcon.Perfection, 1153786, 1151394, string.Format("{0}\t{1}", m_Target.Name, m_Perfection)));
+                    new BuffInfo(BuffIcon.Perfection, 1153786, 1151394, $"{m_Target.Name}\t{m_Perfection}"));
             }
         }
 
diff --git a/Scripts/Services/Virtues/Humility.cs b/Scripts/Services/Virtues/Humility.cs
index 0556843eb..57f2194dc 100644
--- a/Scripts/Services/Virtues/Humility.cs
+++ b/Scripts/Services/Virtues/Humility.cs
@@ -46,10 +46,8 @@ namespace Server.Services.Virtues
                     TargetFlags.None,
                     (m, targeted) =>
                     {
-                        if (targeted is BaseCreature)
+                        if (targeted is BaseCreature bc)
                         {
-                            BaseCreature bc = (BaseCreature)targeted;
-
                             if (!bc.Alive)
                             {
                                 from.SendLocalizedMessage(1155815); // You cannot embrace Humility on the dead!
@@ -90,7 +88,7 @@ namespace Server.Services.Virtues
                                         1156050,
                                         TimeSpan.FromMinutes(20),
                                         from,
-                                        string.Format("{0}\t{1}", bc.Name, GetRegenBonus(bc)))); // Pet: ~1_NAME~<br>+~2_VAL~ HPR<br>
+                                        $"{bc.Name}\t{GetRegenBonus(bc)}")); // Pet: ~1_NAME~<br>+~2_VAL~ HPR<br>
 
                                 CheckTimer();
                                 bc.ResetStatTimers();
@@ -199,9 +197,7 @@ namespace Server.Services.Virtues
             }
             else
             {
-                PlayerMobile pm = from as PlayerMobile;
-
-                if (pm != null)
+                if (from is PlayerMobile pm)
                 {
                     HuntTable[pm] = new HumilityHuntContext(pm, new List<Mobile>(pm.AllFollowers));
 
diff --git a/Scripts/Services/Virtues/Justice.cs b/Scripts/Services/Virtues/Justice.cs
index 9f52f0d6c..8d5957a65 100644
--- a/Scripts/Services/Virtues/Justice.cs
+++ b/Scripts/Services/Virtues/Justice.cs
@@ -140,7 +140,7 @@ namespace Server.Services.Virtues
             {
                 protectee.JusticeProtectors.Add(protector);
 
-                string args = string.Format("{0}\t{1}", protector.Name, protectee.Name);
+                string args = $"{protector.Name}\t{protectee.Name}";
 
                 protectee.SendLocalizedMessage(1049451, args); // You are now being protected by ~1_NAME~.
                 protector.SendLocalizedMessage(1049452, args); // You are now protecting ~2_NAME~.
@@ -149,7 +149,7 @@ namespace Server.Services.Virtues
 
         public static void OnVirtueRejected(PlayerMobile protector, PlayerMobile protectee)
         {
-            string args = string.Format("{0}\t{1}", protector.Name, protectee.Name);
+            string args = $"{protector.Name}\t{protectee.Name}";
 
             protectee.SendLocalizedMessage(1049453, args); // You have declined protection from ~1_NAME~.
             protector.SendLocalizedMessage(1049454, args); // ~2_NAME~ has declined your protection.
diff --git a/Scripts/Services/Virtues/Spirituality.cs b/Scripts/Services/Virtues/Spirituality.cs
index 7c4711c95..79a5c912f 100644
--- a/Scripts/Services/Virtues/Spirituality.cs
+++ b/Scripts/Services/Virtues/Spirituality.cs
@@ -35,10 +35,8 @@ namespace Server.Services.Virtues
                     TargetFlags.None,
                     (mobile, targeted) =>
                     {
-                        if (targeted is Mobile)
+                        if (targeted is Mobile m)
                         {
-                            Mobile m = (Mobile)targeted;
-
                             if (VirtueHelper.GetLevel(from, VirtueName.Spirituality) < VirtueLevel.Seeker)
                             {
                                 from.SendLocalizedMessage(1155812); // You must be at least a Seeker of Humility to Invoke this ability.
@@ -75,10 +73,7 @@ namespace Server.Services.Virtues
                                         BuffIcon.Spirituality,
                                         1155824,
                                         1155825,
-                                        string.Format(
-                                            "{0}\t{1}",
-                                            context.Reduction.ToString(),
-                                            context.Pool.ToString()))); // ~1_VAL~% Reduction to Incoming Damage<br>~2_VAL~ Shield HP Remaining
+                                        $"{context.Reduction.ToString()}\t{context.Pool.ToString()}")); // ~1_VAL~% Reduction to Incoming Damage<br>~2_VAL~ Shield HP Remaining
 
                                 VirtueHelper.Atrophy(from, VirtueName.Spirituality, 3200);
 
@@ -167,10 +162,7 @@ namespace Server.Services.Virtues
                             BuffIcon.Spirituality,
                             1155824,
                             1155825,
-                            string.Format(
-                                "{0}\t{1}",
-                                context.Reduction,
-                                context.Pool))); // ~1_VAL~% Reduction to Incoming Damage<br>~2_VAL~ Shield HP Remaining
+                            $"{context.Reduction}\t{context.Pool}")); // ~1_VAL~% Reduction to Incoming Damage<br>~2_VAL~ Shield HP Remaining
             }
         }
 
diff --git a/Scripts/Services/XmlSpawner/BaseXmlSpawner.cs b/Scripts/Services/XmlSpawner/BaseXmlSpawner.cs
index 00016520d..241ce2b86 100644
--- a/Scripts/Services/XmlSpawner/BaseXmlSpawner.cs
+++ b/Scripts/Services/XmlSpawner/BaseXmlSpawner.cs
@@ -415,7 +415,7 @@ namespace Server.Mobiles
         public static string TagInfo(KeywordTag tag)
         {
             if (tag != null)
-                return (string.Format("{0} : type={1} cond={2} go={3} del={4} end={5}", tag.Typename, tag.Type, tag.m_Condition, tag.m_Goto, tag.m_Delay, tag.m_End));
+                return ($"{tag.Typename} : type={tag.Type} cond={tag.m_Condition} go={tag.m_Goto} del={tag.m_Delay} end={tag.m_End}");
 
             return null;
         }
@@ -479,11 +479,11 @@ namespace Server.Mobiles
             else if (IsChar(type))
                 toString = string.Format("'{0}' ({1} [0x{1:X}])", value, (int)value);
             else if (IsString(type))
-                toString = string.Format("\"{0}\"", value);
+                toString = $"\"{value}\"";
             else
                 toString = value.ToString();
 
-            return string.Format("{0} = {1}", p.Name, toString);
+            return $"{p.Name} = {toString}";
         }
 
         public static bool IsItem(Type type)
@@ -889,18 +889,18 @@ namespace Server.Mobiles
             {
                 try
                 {
-                    if (o is Mobile)
+                    if (o is Mobile mobile)
                     {
-                        ptype = ((Mobile)o).Serial.GetType();
+                        ptype = mobile.Serial.GetType();
 
-                        return string.Format("Serial = {0}", ((Mobile)o).Serial);
+                        return $"Serial = {((Mobile)o).Serial}";
                     }
 
-                    if (o is Item)
+                    if (o is Item item)
                     {
-                        ptype = ((Item)o).Serial.GetType();
+                        ptype = item.Serial.GetType();
 
-                        return string.Format("Serial = {0}", ((Item)o).Serial);
+                        return $"Serial = {((Item)o).Serial}";
                     }
 
                     return "Object is not item/mobile";
@@ -913,7 +913,7 @@ namespace Server.Mobiles
             {
                 ptype = typeof(Type);
 
-                return string.Format("Type = {0}", o.GetType().Name);
+                return $"Type = {o.GetType().Name}";
 
             }
 
@@ -1175,7 +1175,7 @@ namespace Server.Mobiles
                                         int min, max;
                                         if (int.TryParse(value_keywordargs[1], out min) && int.TryParse(value_keywordargs[2], out max))
                                         {
-                                            incvalue = string.Format("{0}", Utility.RandomMinMax(min, max));
+                                            incvalue = $"{Utility.RandomMinMax(min, max)}";
                                         }
                                         else { status_str = "Invalid INC args : " + arglist[1]; no_error = false; }
                                     }
@@ -1191,7 +1191,7 @@ namespace Server.Mobiles
                                     // see if it was successful
                                     if (ptype == null)
                                     {
-                                        status_str = string.Format("Cant find {0}", arglist[0]);
+                                        status_str = $"Cant find {arglist[0]}";
                                         no_error = false;
                                     }
                                     else
@@ -1293,18 +1293,18 @@ namespace Server.Mobiles
                                 }
 
                                 // count nearby players
-                                if (refobject is Item)
+                                if (refobject is Item item)
                                 {
-                                    IPooledEnumerable ie = ((Item)refobject).GetMobilesInRange(range);
+                                    IPooledEnumerable ie = item.GetMobilesInRange(range);
                                     foreach (Mobile p in ie)
                                     {
                                         if (p.Player && p.AccessLevel == AccessLevel.Player) nplayers++;
                                     }
                                     ie.Free();
                                 }
-                                else if (refobject is Mobile)
+                                else if (refobject is Mobile mobile)
                                 {
-                                    IPooledEnumerable ie = ((Mobile)refobject).GetMobilesInRange(range);
+                                    IPooledEnumerable ie = mobile.GetMobilesInRange(range);
                                     foreach (Mobile p in ie)
                                     {
                                         if (p.Player && p.AccessLevel == AccessLevel.Player) nplayers++;
@@ -1556,18 +1556,18 @@ namespace Server.Mobiles
                             if (p.AccessLevel <= spawner.TriggerAccessLevel) nplayers++;
                         }
                     }
-                    else if (o is Item)
+                    else if (o is Item item)
                     {
-                        IPooledEnumerable ie = ((Item)o).GetMobilesInRange(range);
+                        IPooledEnumerable ie = item.GetMobilesInRange(range);
                         foreach (Mobile p in ie)
                         {
                             if (p.Player && p.AccessLevel == AccessLevel.Player) nplayers++;
                         }
                         ie.Free();
                     }
-                    else if (o is Mobile)
+                    else if (o is Mobile mobile)
                     {
-                        IPooledEnumerable ie = ((Mobile)o).GetMobilesInRange(range);
+                        IPooledEnumerable ie = mobile.GetMobilesInRange(range);
                         foreach (Mobile p in ie)
                         {
                             if (p.Player && p.AccessLevel == AccessLevel.Player) nplayers++;
@@ -2238,9 +2238,8 @@ namespace Server.Mobiles
             // search through all xmlspawners in the world and find one with a matching name
             foreach (Item item in World.Items.Values)
             {
-                if (item is XmlSpawner)
+                if (item is XmlSpawner spawner)
                 {
-                    XmlSpawner spawner = (XmlSpawner)item;
                     if (!spawner.Deleted && (string.Compare(spawner.Name, name, true) == 0))
                     {
                         foundspawner = spawner;
@@ -3059,13 +3058,13 @@ namespace Server.Mobiles
                                     Mobile dummy = FindMobileByName(spawner, CommandMobileName, "Mobile");
                                     if (dummy != null)
                                     {
-                                        CommandSystem.Handle(dummy, string.Format("{0}{1}", CommandSystem.Prefix, arglist[1]));
+                                        CommandSystem.Handle(dummy, $"{CommandSystem.Prefix}{arglist[1]}");
                                     }
                                 }
                                 else
                                     if (triggermob != null && !triggermob.Deleted)
                                 {
-                                    CommandSystem.Handle(triggermob, string.Format("{0}{1}", CommandSystem.Prefix, arglist[1]));
+                                    CommandSystem.Handle(triggermob, $"{CommandSystem.Prefix}{arglist[1]}");
                                 }
                             }
                             else
diff --git a/Scripts/Services/XmlSpawner/SpawnerExporter.cs b/Scripts/Services/XmlSpawner/SpawnerExporter.cs
index 2b6b451f6..4fd9addae 100644
--- a/Scripts/Services/XmlSpawner/SpawnerExporter.cs
+++ b/Scripts/Services/XmlSpawner/SpawnerExporter.cs
@@ -56,7 +56,7 @@ namespace Server.Mobiles
                     }
                 }
 
-                AddResponse(string.Format("{0} spawners exported to Saves/Spawners/{1}.", spawners.Count.ToString(), filename));
+                AddResponse($"{spawners.Count.ToString()} spawners exported to Saves/Spawners/{filename}.");
 
                 ExportSpawners(spawners, filename);
             }
diff --git a/Scripts/Services/XmlSpawner/XmlPropsGumps/XmlPropsGump.cs b/Scripts/Services/XmlSpawner/XmlPropsGumps/XmlPropsGump.cs
index 0afad8442..af277be48 100644
--- a/Scripts/Services/XmlSpawner/XmlPropsGumps/XmlPropsGump.cs
+++ b/Scripts/Services/XmlSpawner/XmlPropsGumps/XmlPropsGump.cs
@@ -402,7 +402,7 @@ namespace Server.Gumps
             }
             catch (Exception e)
             {
-                return string.Format("!{0}!", e.GetType());
+                return $"!{e.GetType()}!";
             }
         }
 
@@ -415,7 +415,7 @@ namespace Server.Gumps
 
             if (o is string s1)
             {
-                return string.Format("\"{0}\"", s1);
+                return $"\"{s1}\"";
             }
 
             if (o is bool)
diff --git a/Scripts/Services/XmlSpawner/XmlPropsGumps/XmlSetPoint2DGump.cs b/Scripts/Services/XmlSpawner/XmlPropsGumps/XmlSetPoint2DGump.cs
index 2ad6df197..570d6326c 100644
--- a/Scripts/Services/XmlSpawner/XmlPropsGumps/XmlSetPoint2DGump.cs
+++ b/Scripts/Services/XmlSpawner/XmlPropsGumps/XmlSetPoint2DGump.cs
@@ -151,9 +151,7 @@ namespace Server.Gumps
 
             protected override void OnTarget(Mobile from, object targeted)
             {
-                IPoint3D p = targeted as IPoint3D;
-
-                if (p != null)
+                if (targeted is IPoint3D p)
                 {
                     try
                     {
diff --git a/Scripts/Services/XmlSpawner/XmlPropsGumps/XmlSetPoint3DGump.cs b/Scripts/Services/XmlSpawner/XmlPropsGumps/XmlSetPoint3DGump.cs
index dee077b72..81d86ddf5 100644
--- a/Scripts/Services/XmlSpawner/XmlPropsGumps/XmlSetPoint3DGump.cs
+++ b/Scripts/Services/XmlSpawner/XmlPropsGumps/XmlSetPoint3DGump.cs
@@ -156,9 +156,7 @@ namespace Server.Gumps
 
             protected override void OnTarget(Mobile from, object targeted)
             {
-                IPoint3D p = targeted as IPoint3D;
-
-                if (p != null)
+                if (targeted is IPoint3D p)
                 {
                     try
                     {
diff --git a/Scripts/Services/XmlSpawner/XmlSpawner2.cs b/Scripts/Services/XmlSpawner/XmlSpawner2.cs
index d1b08dda9..71e0dcfb3 100644
--- a/Scripts/Services/XmlSpawner/XmlSpawner2.cs
+++ b/Scripts/Services/XmlSpawner/XmlSpawner2.cs
@@ -638,7 +638,7 @@ namespace Server.Mobiles
                             m_SpawnObjects.Add(new SpawnObject(str, 1));
                         }
                         else
-                            status_str = string.Format("{0} is not a valid type name.", str);
+                            status_str = $"{str} is not a valid type name.";
                     }
                     InvalidateProperties();
                 }
@@ -1723,10 +1723,10 @@ namespace Server.Mobiles
 
             int x = 0;
             int y = 0;
-            
-            Account acct = from.Account as Account; // read the text entries for default values
 
-            if (acct != null)
+ // read the text entries for default values
+
+            if (from.Account is Account acct)
             {
                 XmlSpawnerDefaults.DefaultEntry defs = XmlSpawnerDefaults.GetDefaults(acct.ToString(), from.Name);
                 if (defs != null)
@@ -2041,7 +2041,7 @@ namespace Server.Mobiles
 
                 if (fs == null)
                 {
-                    status_str = string.Format("Unable to open {0} for loading", filename);
+                    status_str = $"Unable to open {filename} for loading";
                     return;
                 }
 
@@ -3401,7 +3401,7 @@ namespace Server.Mobiles
         public static void XmlLoadDefaults(string filePath, Mobile m)
         {
             if (m == null || m.Deleted) return;
-            if (filePath != null && filePath.Length >= 1)
+            if (!string.IsNullOrEmpty(filePath))
             {
 
                 if (File.Exists(filePath))
@@ -4155,8 +4155,7 @@ namespace Server.Mobiles
             int spawners_deleted = 0;
 
             if (from != null)
-                from.SendMessage(string.Format("UnLoading {0} objects{1} from file {2}.",
-                    "XmlSpawner", (!string.IsNullOrEmpty(SpawnerPrefix) ? " beginning with " + SpawnerPrefix : string.Empty), filename));
+                from.SendMessage($"UnLoading {"XmlSpawner"} objects{(!string.IsNullOrEmpty(SpawnerPrefix) ? " beginning with " + SpawnerPrefix : string.Empty)} from file {filename}.");
 
             // Create the data set
             DataSet ds = new DataSet(SpawnDataSetName);
@@ -4656,7 +4655,7 @@ namespace Server.Mobiles
                     Guid SpawnId = Guid.NewGuid();
 
                     // and give it a name based on the spawner count and file
-                    string spawnername = string.Format("{0}#{1}", Path.GetFileNameWithoutExtension(filename), spawnercount);
+                    string spawnername = $"{Path.GetFileNameWithoutExtension(filename)}#{spawnercount}";
 
                     // Create the new xml spawner
                     XmlSpawner spawner = new XmlSpawner(SpawnId, x, y, 0, 0, spawnername, totalmaxcount,
@@ -4904,7 +4903,7 @@ namespace Server.Mobiles
                     Guid SpawnId = Guid.NewGuid();
 
                     // and give it a name based on the spawner count and file
-                    string spawnername = string.Format("{0}#{1}", Path.GetFileNameWithoutExtension(filename), spawnercount);
+                    string spawnername = $"{Path.GetFileNameWithoutExtension(filename)}#{spawnercount}";
 
                     // Create the new xml spawner
                     XmlSpawner spawner = new XmlSpawner(SpawnId, x, y, 0, 0, spawnername, maxcount,
@@ -5495,8 +5494,7 @@ namespace Server.Mobiles
             Map relativemap = null;
 
             if (from != null)
-                from.SendMessage(string.Format("Loading {0} objects{1} from file {2}.", "XmlSpawner",
-                    (!string.IsNullOrEmpty(SpawnerPrefix) ? " beginning with " + SpawnerPrefix : string.Empty), filename));
+                from.SendMessage($"Loading {"XmlSpawner"} objects{(!string.IsNullOrEmpty(SpawnerPrefix) ? " beginning with " + SpawnerPrefix : string.Empty)} from file {filename}.");
 
             // Create the data set
             DataSet ds = new DataSet(SpawnDataSetName);
@@ -5535,7 +5533,7 @@ namespace Server.Mobiles
                         if (loadnew)
                         {
                             // append the new id to the name
-                            SpawnName = string.Format("{0}-{1}", SpawnName, newloadid);
+                            SpawnName = $"{SpawnName}-{newloadid}";
                         }
 
                         // Check if there is any spawner name criteria specified on the load
@@ -6135,7 +6133,7 @@ namespace Server.Mobiles
                                 // if this is a new load then assume that it will be referring to another newly loaded object so append the newloadid
                                 if (loadnew)
                                 {
-                                    string tmpsetObjectName = string.Format("{0}-{1}", namestr, newloadid);
+                                    string tmpsetObjectName = $"{namestr}-{newloadid}";
                                     OldSpawner.m_SetPropertyItem = BaseXmlSpawner.FindItemByName(null, tmpsetObjectName, typestr);
                                 }
                                 // if this fails then try the original
@@ -6184,7 +6182,7 @@ namespace Server.Mobiles
                                 // if this is a new load then assume that it will be referring to another newly loaded object so append the newloadid
                                 if (loadnew)
                                 {
-                                    string tmptriggerObjectName = string.Format("{0}-{1}", namestr, newloadid);
+                                    string tmptriggerObjectName = $"{namestr}-{newloadid}";
                                     OldSpawner.m_ObjectPropertyItem = BaseXmlSpawner.FindItemByName(null, tmptriggerObjectName, typestr);
                                 }
                                 // if this fails then try the original
@@ -6261,7 +6259,7 @@ namespace Server.Mobiles
             if (Directory.Exists(XmlSpawnDir))
             {
                 // get it from the defaults directory if it exists
-                dirname = string.Format("{0}/{1}", XmlSpawnDir, filename);
+                dirname = $"{XmlSpawnDir}/{filename}";
                 found = File.Exists(dirname) || Directory.Exists(dirname);
             }
 
@@ -6506,7 +6504,7 @@ namespace Server.Mobiles
             if (Directory.Exists(XmlSpawnDir) && filename != null && !filename.StartsWith("/") && !filename.StartsWith("\\"))
             {
                 // put it in the defaults directory if it exists
-                dirname = string.Format("{0}/{1}", XmlSpawnDir, filename);
+                dirname = $"{XmlSpawnDir}/{filename}";
             }
             else
             {
@@ -6550,7 +6548,7 @@ namespace Server.Mobiles
             if (Directory.Exists(XmlSpawnDir) && filename != null && !filename.StartsWith("/") && !filename.StartsWith("\\"))
             {
                 // put it in the defaults directory if it exists
-                dirname = string.Format("{0}/{1}", XmlSpawnDir, filename);
+                dirname = $"{XmlSpawnDir}/{filename}";
             }
             else
             {
@@ -6559,11 +6557,9 @@ namespace Server.Mobiles
             }
 
             if (SaveAllMaps)
-                e.Mobile.SendMessage(string.Format("Saving {0} objects{1} to file {2} from {3}.", "XmlSpawner",
-                    !string.IsNullOrEmpty(SpawnerPrefix) ? " beginning with " + SpawnerPrefix : string.Empty, dirname, e.Mobile.Map));
+                e.Mobile.SendMessage($"Saving {"XmlSpawner"} objects{(!string.IsNullOrEmpty(SpawnerPrefix) ? " beginning with " + SpawnerPrefix : string.Empty)} to file {dirname} from {e.Mobile.Map}.");
             else
-                e.Mobile.SendMessage(string.Format("Saving {0} obejcts{1} to file {2} from the entire world.", "XmlSpawner",
-                    !string.IsNullOrEmpty(SpawnerPrefix) ? " beginning with " + SpawnerPrefix : string.Empty, dirname));
+                e.Mobile.SendMessage($"Saving {"XmlSpawner"} obejcts{(!string.IsNullOrEmpty(SpawnerPrefix) ? " beginning with " + SpawnerPrefix : string.Empty)} to file {dirname} from the entire world.");
 
 
             List<XmlSpawner> saveslist = new List<XmlSpawner>();
@@ -6813,14 +6809,12 @@ namespace Server.Mobiles
                 dr["ProximityTriggerSound"] = sp.m_ProximityTriggerSound;
                 dr["ProximityTriggerMessage"] = sp.m_ProximityTriggerMessage;
                 if (sp.m_ObjectPropertyItem != null && !sp.m_ObjectPropertyItem.Deleted)
-                    dr["ObjectPropertyItemName"] = string.Format("{0},{1}", sp.m_ObjectPropertyItem.Name,
-                        sp.m_ObjectPropertyItem.GetType().Name);
+                    dr["ObjectPropertyItemName"] = $"{sp.m_ObjectPropertyItem.Name},{sp.m_ObjectPropertyItem.GetType().Name}";
                 else
                     dr["ObjectPropertyItemName"] = null;
                 dr["ObjectPropertyName"] = sp.m_ObjectPropertyName;
                 if (sp.m_SetPropertyItem != null && !sp.m_SetPropertyItem.Deleted)
-                    dr["SetPropertyItemName"] = string.Format("{0},{1}", sp.m_SetPropertyItem.Name,
-                        sp.m_SetPropertyItem.GetType().Name);
+                    dr["SetPropertyItemName"] = $"{sp.m_SetPropertyItem.Name},{sp.m_SetPropertyItem.GetType().Name}";
                 else
                     dr["SetPropertyItemName"] = null;
                 dr["ItemTriggerName"] = sp.m_ItemTriggerName;
@@ -6853,7 +6847,7 @@ namespace Server.Mobiles
                     }
                     else
                     {
-                        waystr = string.Format("SERIAL,{0}", sp.m_WayPoint.Serial);
+                        waystr = $"SERIAL,{sp.m_WayPoint.Serial}";
                     }
                 }
                 dr["WayPoint"] = waystr;
@@ -6899,11 +6893,7 @@ namespace Server.Mobiles
             }
             catch { }
             // Indicate how many spawners were written
-            if (from != null)
-            {
-                from.SendMessage("{0} spawner(s) were saved to file {1} [Trammel={2}, Felucca={3}, Ilshenar={4}, Malas={5}, Tokuno={6}, Other={7}].",
-                    TotalCount, dirname, TrammelCount, FeluccaCount, IlshenarCount, MalasCount, TokunoCount, OtherCount);
-            }
+            from?.SendMessage("{0} spawner(s) were saved to file {1} [Trammel={2}, Felucca={3}, Ilshenar={4}, Malas={5}, Tokuno={6}, Other={7}].", TotalCount, dirname, TrammelCount, FeluccaCount, IlshenarCount, MalasCount, TokunoCount, OtherCount);
             return true;
 
         }
diff --git a/Scripts/Services/XmlSpawner/XmlSpawnerGumps.cs b/Scripts/Services/XmlSpawner/XmlSpawnerGumps.cs
index 03f4ca942..f47cf35f1 100644
--- a/Scripts/Services/XmlSpawner/XmlSpawnerGumps.cs
+++ b/Scripts/Services/XmlSpawner/XmlSpawnerGumps.cs
@@ -289,7 +289,7 @@ namespace Server.Mobiles
             // Add sequential spawn state
             if (m_Spawner.SequentialSpawn >= 0)
             {
-                AddLabel(15, 365, 33, string.Format("{0}", m_Spawner.SequentialSpawn));
+                AddLabel(15, 365, 33, $"{m_Spawner.SequentialSpawn}");
             }
 
             // Add Current / Max count labels
@@ -599,7 +599,7 @@ namespace Server.Mobiles
                                 SpawnObjects.Add(new XmlSpawner.SpawnObject(from, m_Spawner, str, 0));
                             }
                             else
-                                m_Spawner.status_str = string.Format("{0} is not a valid type name.", str);
+                                m_Spawner.status_str = $"{str} is not a valid type name.";
                             //from.SendMessage( "{0} is not a valid type name.", str );
                         }
 
@@ -1070,7 +1070,7 @@ namespace Server.Mobiles
 
                             m_Spawner.m_TextEntryBook.Add(book);
 
-                            book.Title = string.Format("Entry {0}", index);
+                            book.Title = $"Entry {index}";
                             book.Author = m_Spawner.Name;
 
                             // fill the contents of the book with the current text entry data
@@ -1108,9 +1108,7 @@ namespace Server.Mobiles
 
                                     if (ValidGotoObject(state.Mobile, so))
                                     {
-                                        IPoint3D o = so as IPoint3D;
-
-                                        if (o != null)
+                                        if (so is IPoint3D o)
                                         {
                                             Map m = m_Spawner.Map;
 
diff --git a/Scripts/Services/XmlSpawner/XmlUtils/XmlAdd.cs b/Scripts/Services/XmlSpawner/XmlUtils/XmlAdd.cs
index fa8bbae06..550ec3492 100644
--- a/Scripts/Services/XmlSpawner/XmlUtils/XmlAdd.cs
+++ b/Scripts/Services/XmlSpawner/XmlUtils/XmlAdd.cs
@@ -332,7 +332,7 @@ namespace Server.Mobiles
             // Write out the file
             bool file_error = false;
 
-            var dirname = Directory.Exists(DefsDir) ? string.Format("{0}/{1}.defs", DefsDir, filename) : string.Format("{0}.defs", filename);
+            var dirname = Directory.Exists(DefsDir) ? $"{DefsDir}/{filename}.defs" : $"{filename}.defs";
 
             try
             {
@@ -359,18 +359,18 @@ namespace Server.Mobiles
             if (Directory.Exists(DefsDir))
             {
                 // look for it in the defaults directory
-                dirname = string.Format("{0}/{1}.defs", DefsDir, filename);
+                dirname = $"{DefsDir}/{filename}.defs";
                 // Check if the file exists
                 if (File.Exists(dirname) == false)
                 {
                     // didnt find it so just look in the main install dir
-                    dirname = string.Format("{0}.defs", filename);
+                    dirname = $"{filename}.defs";
                 }
             }
             else
             {
                 // look in the main installation dir
-                dirname = string.Format("{0}.defs", filename);
+                dirname = $"{filename}.defs";
             }
             // Check if the file exists
             if (File.Exists(dirname))
@@ -558,11 +558,11 @@ namespace Server.Mobiles
         [Description("Opens a gump that can add Xmlspawners with specified default settings")]
         public static void XmlAdd_OnCommand(CommandEventArgs e)
         {
-            Account acct = e.Mobile.Account as Account;
             int x = 440;
             int y = 0;
             XmlSpawnerDefaults.DefaultEntry defs = null;
-            if (acct != null)
+
+            if (e.Mobile.Account is Account acct)
                 defs = XmlSpawnerDefaults.GetDefaults(acct.ToString(), e.Mobile.Name);
             if (defs != null)
             {
@@ -959,8 +959,7 @@ namespace Server.Mobiles
             // read the text entries for default values
             XmlSpawnerDefaults.DefaultEntry defs = null;
 
-            Account acct = from.Account as Account;
-            if (acct != null)
+            if (from.Account is Account acct)
                 defs = XmlSpawnerDefaults.GetDefaults(acct.ToString(), from.Name);
 
             if (defs == null) return;
@@ -1024,7 +1023,7 @@ namespace Server.Mobiles
                 string sname = defs.SpawnerName;
                 if (defs.AutoNumber)
                 {
-                    sname = string.Format("{0}#{1}", defs.SpawnerName, defs.AutoNumberValue);
+                    sname = $"{defs.SpawnerName}#{defs.AutoNumberValue}";
                 }
 
                 XmlSpawner spawner = new XmlSpawner(SpawnId, from.Location.X, from.Location.Y, 0, 0, sname, maxcount,
@@ -1308,11 +1307,11 @@ namespace Server.Mobiles
                         string filename;
                         if (!string.IsNullOrEmpty(defaults.DefsExt))
                         {
-                            filename = string.Format("{0}-{1}-{2}", defaults.AccountName, defaults.PlayerName, defaults.DefsExt);
+                            filename = $"{defaults.AccountName}-{defaults.PlayerName}-{defaults.DefsExt}";
                         }
                         else
                         {
-                            filename = string.Format("{0}-{1}", defaults.AccountName, defaults.PlayerName);
+                            filename = $"{defaults.AccountName}-{defaults.PlayerName}";
                         }
                         DoSaveDefs(state.Mobile, filename);
                         break;
@@ -1322,11 +1321,11 @@ namespace Server.Mobiles
                         string filename;
                         if (!string.IsNullOrEmpty(defaults.DefsExt))
                         {
-                            filename = string.Format("{0}-{1}-{2}", defaults.AccountName, defaults.PlayerName, defaults.DefsExt);
+                            filename = $"{defaults.AccountName}-{defaults.PlayerName}-{defaults.DefsExt}";
                         }
                         else
                         {
-                            filename = string.Format("{0}-{1}", defaults.AccountName, defaults.PlayerName);
+                            filename = $"{defaults.AccountName}-{defaults.PlayerName}";
                         }
                         DoLoadDefs(state.Mobile, filename);
                         break;
diff --git a/Scripts/Services/XmlSpawner/XmlUtils/XmlCategorizedAddGump.cs b/Scripts/Services/XmlSpawner/XmlUtils/XmlCategorizedAddGump.cs
index 5b21d667f..fa3952c25 100644
--- a/Scripts/Services/XmlSpawner/XmlUtils/XmlCategorizedAddGump.cs
+++ b/Scripts/Services/XmlSpawner/XmlUtils/XmlCategorizedAddGump.cs
@@ -311,7 +311,7 @@ namespace Server.Gumps
             if (!OldStyle)
                 AddImageTiled(x - (OldStyle ? OffsetSize : 0), y, emptyWidth + (OldStyle ? OffsetSize * 2 : 0), EntryHeight, EntryGumpID);
 
-            AddHtml(x + TextOffsetX, y + ((EntryHeight - 20) / 2), emptyWidth - TextOffsetX, EntryHeight, string.Format("<center>{0}</center>", m_Category.Caption), false, false);
+            AddHtml(x + TextOffsetX, y + ((EntryHeight - 20) / 2), emptyWidth - TextOffsetX, EntryHeight, $"<center>{m_Category.Caption}</center>", false, false);
 
             x += emptyWidth + OffsetSize;
 
diff --git a/Scripts/Services/XmlSpawner/XmlUtils/XmlFind.cs b/Scripts/Services/XmlSpawner/XmlUtils/XmlFind.cs
index ba417568f..22b0cd470 100644
--- a/Scripts/Services/XmlSpawner/XmlUtils/XmlFind.cs
+++ b/Scripts/Services/XmlSpawner/XmlUtils/XmlFind.cs
@@ -742,12 +742,11 @@ namespace Server.Mobiles
         {
             if (e?.Mobile == null)
                 return;
-
-            Account acct = e.Mobile.Account as Account;
             int x = 0;
             int y = 0;
             XmlSpawnerDefaults.DefaultEntry defs = null;
-            if (acct != null)
+
+            if (e.Mobile.Account is Account acct)
                 defs = XmlSpawnerDefaults.GetDefaults(acct.ToString(), e.Mobile.Name);
 
             if (defs != null)
@@ -1126,16 +1125,15 @@ namespace Server.Mobiles
                 // display the item list
                 if (m_SearchList != null)
                 {
-                    AddLabel(180, y - 50, 68, string.Format("Found {0} items/mobiles", m_SearchList.Count));
-                    AddLabel(400, y - 50, 68, string.Format("Displaying {0}-{1}", DisplayFrom,
-                        (DisplayFrom + MaxEntries < m_SearchList.Count ? DisplayFrom + MaxEntries : m_SearchList.Count)));
+                    AddLabel(180, y - 50, 68, $"Found {m_SearchList.Count} items/mobiles");
+                    AddLabel(400, y - 50, 68, $"Displaying {DisplayFrom}-{(DisplayFrom + MaxEntries < m_SearchList.Count ? DisplayFrom + MaxEntries : m_SearchList.Count)}");
                     // count the number of selected objects
                     int count = 0;
                     foreach (SearchEntry e in m_SearchList)
                     {
                         if (e.Selected) count++;
                     }
-                    AddLabel(600, y - 50, 33, string.Format("Selected {0}", count));
+                    AddLabel(600, y - 50, 33, $"Selected {count}");
                 }
 
                 // display the select-all-displayed toggle
@@ -1589,7 +1587,7 @@ namespace Server.Mobiles
             if (System.IO.Directory.Exists(XmlSpawner.XmlSpawnDir) && filename != null && !filename.StartsWith("/") && !filename.StartsWith("\\"))
             {
                 // put it in the defaults directory if it exists
-                dirname = string.Format("{0}/{1}", XmlSpawner.XmlSpawnDir, filename);
+                dirname = $"{XmlSpawner.XmlSpawnDir}/{filename}";
             }
             else
             {
@@ -2027,7 +2025,7 @@ namespace Server.Mobiles
                     }
                 }
 
-                AddLabel(20, 225, 33, string.Format("Bring {0} objects to you?", count));
+                AddLabel(20, 225, 33, $"Bring {count} objects to you?");
                 AddRadio(35, 255, 9721, 9724, false, 1); // accept/yes radio
                 AddRadio(135, 255, 9721, 9724, true, 2); // decline/no radio
                 AddHtmlLocalized(72, 255, 200, 30, 1049016, 0x7fff, false, false); // Yes
@@ -2106,7 +2104,7 @@ namespace Server.Mobiles
                     }
                 }
 
-                AddLabel(20, 225, 33, string.Format("Delete {0} objects?", count));
+                AddLabel(20, 225, 33, $"Delete {count} objects?");
                 AddRadio(35, 255, 9721, 9724, false, 1); // accept/yes radio
                 AddRadio(135, 255, 9721, 9724, true, 2); // decline/no radio
                 AddHtmlLocalized(72, 255, 200, 30, 1049016, 0x7fff, false, false); // Yes
diff --git a/Scripts/Skills/Anatomy.cs b/Scripts/Skills/Anatomy.cs
index 7a3568524..076d676dc 100644
--- a/Scripts/Skills/Anatomy.cs
+++ b/Scripts/Skills/Anatomy.cs
@@ -34,18 +34,16 @@ namespace Server.SkillHandlers
                 {
                     from.LocalOverheadMessage(MessageType.Regular, 0x3B2, 500324); // You know yourself quite well enough already.
                 }
-                else if (targeted is TownCrier)
+                else if (targeted is TownCrier townCrier)
                 {
-                    ((TownCrier)targeted).PrivateOverheadMessage(MessageType.Regular, 0x3B2, 500322, from.NetState); // This person looks fine to me, though he may have some news...
+                    townCrier.PrivateOverheadMessage(MessageType.Regular, 0x3B2, 500322, from.NetState); // This person looks fine to me, though he may have some news...
                 }
                 else if (targeted is BaseVendor && ((BaseVendor)targeted).IsInvulnerable)
                 {
                     ((BaseVendor)targeted).PrivateOverheadMessage(MessageType.Regular, 0x3B2, 500326, from.NetState); // That can not be inspected.
                 }
-                else if (targeted is Mobile)
+                else if (targeted is Mobile targ)
                 {
-                    Mobile targ = (Mobile)targeted;
-
                     int marginOfError = Math.Max(0, 25 - (int)(from.Skills[SkillName.Anatomy].Value / 4));
 
                     int str = targ.Str + Utility.RandomMinMax(-marginOfError, +marginOfError);
@@ -83,9 +81,9 @@ namespace Server.SkillHandlers
                         targ.PrivateOverheadMessage(MessageType.Regular, 0x3B2, 1042666, from.NetState); // You can not quite get a sense of their physical characteristics.
                     }
                 }
-                else if (targeted is Item)
+                else if (targeted is Item item)
                 {
-                    ((Item)targeted).SendLocalizedMessageTo(from, 500323, ""); // Only living things have anatomies!
+                    item.SendLocalizedMessageTo(from, 500323, ""); // Only living things have anatomies!
                 }
             }
         }
diff --git a/Scripts/Skills/AnimalLore.cs b/Scripts/Skills/AnimalLore.cs
index a3a031435..923b66d61 100644
--- a/Scripts/Skills/AnimalLore.cs
+++ b/Scripts/Skills/AnimalLore.cs
@@ -33,11 +33,11 @@ namespace Server.SkillHandlers
             {
                 from.CheckTargetSkill(SkillName.AnimalLore, c, 0.0, 120.0);
 
-                if (from is PlayerMobile)
+                if (from is PlayerMobile playerMobile)
                 {
                     Timer.DelayCall(TimeSpan.FromSeconds(1), () =>
                         {
-                            BaseGump.SendGump(new NewAnimalLoreGump((PlayerMobile)from, c));
+                            BaseGump.SendGump(new NewAnimalLoreGump(playerMobile, c));
                         });
                 }
             }
@@ -61,10 +61,8 @@ namespace Server.SkillHandlers
                 {
                     from.SendLocalizedMessage(500331); // The spirits of the dead are not the province of animal lore.
                 }
-                else if (targeted is BaseCreature)
+                else if (targeted is BaseCreature c)
                 {
-                    BaseCreature c = (BaseCreature)targeted;
-
                     if (!c.IsDeadPet)
                     {
                         if (c.Body.IsAnimal || c.Body.IsMonster || c.Body.IsSea)
diff --git a/Scripts/Skills/AnimalTaming.cs b/Scripts/Skills/AnimalTaming.cs
index 29e81aa5e..6bbd7be9e 100644
--- a/Scripts/Skills/AnimalTaming.cs
+++ b/Scripts/Skills/AnimalTaming.cs
@@ -136,10 +136,8 @@ namespace Server.SkillHandlers
 
                 if (targeted is Mobile)
                 {
-                    if (targeted is BaseCreature)
+                    if (targeted is BaseCreature creature)
                     {
-                        BaseCreature creature = (BaseCreature)targeted;
-
                         if (!creature.Tamable)
                         {
                             creature.PrivateOverheadMessage(MessageType.Regular, 0x3B2, 1049655, from.NetState);
diff --git a/Scripts/Skills/ArmsLore.cs b/Scripts/Skills/ArmsLore.cs
index 6be64fbc0..c91b646e2 100644
--- a/Scripts/Skills/ArmsLore.cs
+++ b/Scripts/Skills/ArmsLore.cs
@@ -33,11 +33,10 @@ namespace Server.SkillHandlers
 
             protected override void OnTarget(Mobile from, object targeted)
             {
-                if (targeted is BaseWeapon)
+                if (targeted is BaseWeapon weap)
                 {
                     if (from.CheckTargetSkill(SkillName.ArmsLore, targeted, 0, 100))
                     {
-                        BaseWeapon weap = (BaseWeapon)targeted;
 
                         if (weap.MaxHitPoints != 0)
                         {
@@ -80,11 +79,10 @@ namespace Server.SkillHandlers
                         from.SendLocalizedMessage(500353); // You are not certain...
                     }
                 }
-                else if (targeted is BaseArmor)
+                else if (targeted is BaseArmor arm)
                 {
                     if (from.CheckTargetSkill(SkillName.ArmsLore, targeted, 0, 100))
                     {
-                        BaseArmor arm = (BaseArmor)targeted;
 
                         if (arm.MaxHitPoints != 0)
                         {
diff --git a/Scripts/Skills/Begging.cs b/Scripts/Skills/Begging.cs
index c0933dd06..220708d8f 100644
--- a/Scripts/Skills/Begging.cs
+++ b/Scripts/Skills/Begging.cs
@@ -49,10 +49,8 @@ namespace Server.SkillHandlers
 
                 int number = -1;
 
-                if (targeted is Mobile)
+                if (targeted is Mobile targ)
                 {
-                    Mobile targ = (Mobile)targeted;
-
                     if (targ.Player) // We can't beg from players
                     {
                         number = 500398; // Perhaps just asking would work better.
diff --git a/Scripts/Skills/DetectHidden.cs b/Scripts/Skills/DetectHidden.cs
index eb1f2679d..c2279f654 100644
--- a/Scripts/Skills/DetectHidden.cs
+++ b/Scripts/Skills/DetectHidden.cs
@@ -49,12 +49,12 @@ namespace Server.SkillHandlers
                 bool foundAnyone = false;
 
                 Point3D p;
-                if (targ is Mobile)
-                    p = ((Mobile)targ).Location;
-                else if (targ is Item)
-                    p = ((Item)targ).Location;
-                else if (targ is IPoint3D)
-                    p = new Point3D((IPoint3D)targ);
+                if (targ is Mobile mobile)
+                    p = mobile.Location;
+                else if (targ is Item item)
+                    p = item.Location;
+                else if (targ is IPoint3D iPoint3D)
+                    p = new Point3D(iPoint3D);
                 else
                     p = src.Location;
 
diff --git a/Scripts/Skills/Discordance.cs b/Scripts/Skills/Discordance.cs
index 7a52110eb..802eff7c3 100644
--- a/Scripts/Skills/Discordance.cs
+++ b/Scripts/Skills/Discordance.cs
@@ -341,10 +341,7 @@ namespace Server.SkillHandlers
                     {
                         AosSkillBonuses bonuses = RunicReforging.GetAosSkillBonuses(item);
 
-                        if (bonuses != null)
-                        {
-                            bonuses.Remove();
-                        }
+                        bonuses?.Remove();
                     }
                 }
                 else
@@ -379,10 +376,7 @@ namespace Server.SkillHandlers
                         {
                             AosSkillBonuses bonuses = RunicReforging.GetAosSkillBonuses(item);
 
-                            if (bonuses != null)
-                            {
-                                bonuses.AddTo(m_Target);
-                            }
+                            bonuses?.AddTo(m_Target);
                         }
                     });
                 }
diff --git a/Scripts/Skills/EvalInt.cs b/Scripts/Skills/EvalInt.cs
index d6a53435f..5347e9107 100644
--- a/Scripts/Skills/EvalInt.cs
+++ b/Scripts/Skills/EvalInt.cs
@@ -34,18 +34,16 @@ namespace Server.SkillHandlers
                 {
                     from.LocalOverheadMessage(MessageType.Regular, 0x3B2, 500910); // Hmm, that person looks really silly.
                 }
-                else if (targeted is TownCrier)
+                else if (targeted is TownCrier townCrier)
                 {
-                    ((TownCrier)targeted).PrivateOverheadMessage(MessageType.Regular, 0x3B2, 500907, from.NetState); // He looks smart enough to remember the news.  Ask him about it.
+                    townCrier.PrivateOverheadMessage(MessageType.Regular, 0x3B2, 500907, from.NetState); // He looks smart enough to remember the news.  Ask him about it.
                 }
                 else if (targeted is BaseVendor && ((BaseVendor)targeted).IsInvulnerable)
                 {
                     ((BaseVendor)targeted).PrivateOverheadMessage(MessageType.Regular, 0x3B2, 500909, from.NetState); // That person could probably calculate the cost of what you buy from them.
                 }
-                else if (targeted is Mobile)
+                else if (targeted is Mobile targ)
                 {
-                    Mobile targ = (Mobile)targeted;
-
                     int marginOfError = Math.Max(0, 20 - (int)(from.Skills[SkillName.EvalInt].Value / 5));
 
                     int intel = targ.Int + Utility.RandomMinMax(-marginOfError, +marginOfError);
@@ -83,9 +81,9 @@ namespace Server.SkillHandlers
                         targ.PrivateOverheadMessage(MessageType.Regular, 0x3B2, 1038166 + (body / 11), from.NetState); // You cannot judge his/her/its mental abilities.
                     }
                 }
-                else if (targeted is Item)
+                else if (targeted is Item item)
                 {
-                    ((Item)targeted).SendLocalizedMessageTo(from, 500908, ""); // It looks smarter than a rock, but dumber than a piece of wood.
+                    item.SendLocalizedMessageTo(from, 500908, ""); // It looks smarter than a rock, but dumber than a piece of wood.
                 }
             }
         }
diff --git a/Scripts/Skills/ForensicEval.cs b/Scripts/Skills/ForensicEval.cs
index c7d0559be..8b2334bf5 100644
--- a/Scripts/Skills/ForensicEval.cs
+++ b/Scripts/Skills/ForensicEval.cs
@@ -40,7 +40,7 @@ namespace Server.SkillHandlers
                 double skill = from.Skills[SkillName.Forensics].Value;
                 double minSkill = 30.0;
 
-                if (target is Corpse)
+                if (target is Corpse c)
                 {
                     if (skill < minSkill)
                     {
@@ -50,7 +50,6 @@ namespace Server.SkillHandlers
 
                     if (from.CheckTargetSkill(SkillName.Forensics, target, minSkill, 55.0))
                     {
-                        Corpse c = (Corpse)target;
 
                         if (c.m_Forensicist != null)
                             from.SendLocalizedMessage(1042750, c.m_Forensicist); // The forensicist  ~1_NAME~ has already discovered that:
@@ -106,7 +105,7 @@ namespace Server.SkillHandlers
                         from.SendLocalizedMessage(501001);//You cannot determain anything useful.
                     }
                 }
-                else if (target is ILockpickable)
+                else if (target is ILockpickable p)
                 {
                     if (skill < 41.0)
                     {
@@ -114,7 +113,6 @@ namespace Server.SkillHandlers
                     }
                     else if (from.CheckTargetSkill(SkillName.Forensics, target, 41.0, 100.0))
                     {
-                        ILockpickable p = (ILockpickable)target;
 
                         if (p.Picker != null)
                         {
@@ -130,13 +128,11 @@ namespace Server.SkillHandlers
                         from.SendLocalizedMessage(501001);//You cannot determain anything useful.
                     }
                 }
-                else if (target is Item)
+                else if (target is Item item)
                 {
-                    Item item = (Item)target;
-
-                    if (item is IForensicTarget)
+                    if (item is IForensicTarget iForensicTarget)
                     {
-                        ((IForensicTarget)item).OnForensicEval(from);
+                        iForensicTarget.OnForensicEval(from);
                     }
                     else if (skill < 41.0)
                     {
@@ -159,7 +155,7 @@ namespace Server.SkillHandlers
                             {
                                 if (honestySocket.HonestyOwner != null)
 								{
-                                    from.SendLocalizedMessage(1151521, string.Format("{0}\t{1}", honestySocket.HonestyOwner.Name, region)); // This item belongs to ~1_val~ who lives in ~2_val~.
+                                    from.SendLocalizedMessage(1151521, $"{honestySocket.HonestyOwner.Name}\t{region}"); // This item belongs to ~1_val~ who lives in ~2_val~.
 								}
                             }
                             else
diff --git a/Scripts/Skills/Inscribe.cs b/Scripts/Skills/Inscribe.cs
index c482ae7a8..041b6fbb4 100644
--- a/Scripts/Skills/Inscribe.cs
+++ b/Scripts/Skills/Inscribe.cs
@@ -80,9 +80,7 @@ namespace Server.SkillHandlers
 
             protected override void OnTarget(Mobile from, object targeted)
             {
-                BaseBook book = targeted as BaseBook;
-
-                if (book != null)
+                if (targeted is BaseBook book)
                 {
                     if (IsEmpty(book))
                         from.SendLocalizedMessage(501611); // Can't copy an empty book.
@@ -97,9 +95,9 @@ namespace Server.SkillHandlers
                         SetUser(book, from);
                     }
                 }
-                else if (targeted is Engines.Khaldun.MysteriousBook)
+                else if (targeted is Engines.Khaldun.MysteriousBook mysteriousBook)
                 {
-                    ((Engines.Khaldun.MysteriousBook)targeted).OnInscribeTarget(from);
+                    mysteriousBook.OnInscribeTarget(from);
                 }
                 else
                 {
diff --git a/Scripts/Skills/ItemIdentification.cs b/Scripts/Skills/ItemIdentification.cs
index 5f012ca81..53de2c3b7 100644
--- a/Scripts/Skills/ItemIdentification.cs
+++ b/Scripts/Skills/ItemIdentification.cs
@@ -65,9 +65,9 @@ namespace Server.Items
                     item.PrivateOverheadMessage(MessageType.Label, 0x3B2, item.LabelNumber, from.NetState);
                 }
 
-                if (item is Meteorite)
+                if (item is Meteorite meteorite)
                 {
-                    if (((Meteorite)item).Polished)
+                    if (meteorite.Polished)
                     {
                         from.SendLocalizedMessage(1158697); // The brilliance of the meteorite shimmers in the light as you rotate it in your hands! Brightly hued veins of exotic minerals reflect against the polished surface. You think to yourself you have never seen anything so full of splendor!
                     }
diff --git a/Scripts/Skills/Poisoning.cs b/Scripts/Skills/Poisoning.cs
index f13b71053..5a0a241f5 100644
--- a/Scripts/Skills/Poisoning.cs
+++ b/Scripts/Skills/Poisoning.cs
@@ -29,10 +29,10 @@ namespace Server.SkillHandlers
 
             protected override void OnTarget(Mobile from, object targeted)
             {
-                if (targeted is BasePoisonPotion)
+                if (targeted is BasePoisonPotion basePoisonPotion)
                 {
                     from.SendLocalizedMessage(502142); // To what do you wish to apply the poison?
-                    from.Target = new InternalTarget((BasePoisonPotion)targeted);
+                    from.Target = new InternalTarget(basePoisonPotion);
                 }
                 else // Not a Poison Potion
                 {
@@ -60,10 +60,8 @@ namespace Server.SkillHandlers
                     {
                         startTimer = true;
                     }
-                    else if (targeted is BaseWeapon)
+                    else if (targeted is BaseWeapon weapon)
                     {
-                        BaseWeapon weapon = (BaseWeapon)targeted;
-
                         startTimer = (weapon.PrimaryAbility == WeaponAbility.InfectiousStrike || weapon.SecondaryAbility == WeaponAbility.InfectiousStrike);
                     }
 
@@ -104,23 +102,23 @@ namespace Server.SkillHandlers
                     {
                         if (m_From.CheckTargetSkill(SkillName.Poisoning, m_Target, m_MinSkill, m_MaxSkill))
                         {
-                            if (m_Target is Food)
+                            if (m_Target is Food food)
                             {
-                                ((Food)m_Target).Poison = m_Poison;
+                                food.Poison = m_Poison;
                             }
-                            else if (m_Target is BaseWeapon)
+                            else if (m_Target is BaseWeapon baseWeapon)
                             {
-                                ((BaseWeapon)m_Target).Poison = m_Poison;
+                                baseWeapon.Poison = m_Poison;
                                 ((BaseWeapon)m_Target).PoisonCharges = 18 - (m_Poison.RealLevel * 2);
                             }
-                            else if (m_Target is FukiyaDarts)
+                            else if (m_Target is FukiyaDarts fukiyaDarts)
                             {
-                                ((FukiyaDarts)m_Target).Poison = m_Poison;
+                                fukiyaDarts.Poison = m_Poison;
                                 ((FukiyaDarts)m_Target).PoisonCharges = Math.Min(18 - (m_Poison.RealLevel * 2), ((FukiyaDarts)m_Target).UsesRemaining);
                             }
-                            else if (m_Target is Shuriken)
+                            else if (m_Target is Shuriken shuriken)
                             {
-                                ((Shuriken)m_Target).Poison = m_Poison;
+                                shuriken.Poison = m_Poison;
                                 ((Shuriken)m_Target).PoisonCharges = Math.Min(18 - (m_Poison.RealLevel * 2), ((Shuriken)m_Target).UsesRemaining);
                             }
 
@@ -138,10 +136,8 @@ namespace Server.SkillHandlers
                             }
                             else
                             {
-                                if (m_Target is BaseWeapon)
+                                if (m_Target is BaseWeapon weapon)
                                 {
-                                    BaseWeapon weapon = (BaseWeapon)m_Target;
-
                                     if (weapon.Type == WeaponType.Slashing)
                                         m_From.SendLocalizedMessage(1010516); // You fail to apply a sufficient dose of poison on the blade
                                     else
diff --git a/Scripts/Skills/Provocation.cs b/Scripts/Skills/Provocation.cs
index 096b36196..ac543fe8c 100644
--- a/Scripts/Skills/Provocation.cs
+++ b/Scripts/Skills/Provocation.cs
@@ -126,8 +126,8 @@ namespace Server.SkillHandlers
                         double music = from.Skills[SkillName.Musicianship].Value;
                         int masteryBonus = 0;
 
-                        if (from is PlayerMobile)
-                            masteryBonus = Spells.SkillMasteries.BardSpell.GetMasteryBonus((PlayerMobile)from, SkillName.Provocation);
+                        if (from is PlayerMobile playerMobile)
+                            masteryBonus = Spells.SkillMasteries.BardSpell.GetMasteryBonus(playerMobile, SkillName.Provocation);
 
                         if (masteryBonus > 0)
                             diff -= (diff * ((double)masteryBonus / 100));
diff --git a/Scripts/Skills/RemoveTrap.cs b/Scripts/Skills/RemoveTrap.cs
index 9eabd8d5e..c1e5e5ff8 100644
--- a/Scripts/Skills/RemoveTrap.cs
+++ b/Scripts/Skills/RemoveTrap.cs
@@ -128,10 +128,9 @@ namespace Server.SkillHandlers
 
                             if (trap.Owner != null && from != trap.Owner)
                             {
-                                Guild fromG = from.Guild as Guild;
                                 Guild ownerG = trap.Owner.Guild as Guild;
 
-                                if (fromG != null && fromG != ownerG && !fromG.IsAlly(ownerG) && ViceVsVirtueSystem.Instance != null
+                                if (from.Guild is Guild fromG && fromG != ownerG && !fromG.IsAlly(ownerG) && ViceVsVirtueSystem.Instance != null
                                     && ViceVsVirtueSystem.Instance.Battle != null && ViceVsVirtueSystem.Instance.Battle.OnGoing)
                                 {
                                     ViceVsVirtueSystem.Instance.Battle.Update(from, UpdateType.Disarm);
@@ -209,10 +208,7 @@ namespace Server.SkillHandlers
             {
                 RemoveTrapTimer timer = _Table[from];
 
-                if (timer != null)
-                {
-                    timer.Stop();
-                }
+                timer?.Stop();
 
                 _Table.Remove(from);
 
diff --git a/Scripts/Skills/Snooping.cs b/Scripts/Skills/Snooping.cs
index d7cacc85a..b1200cafd 100644
--- a/Scripts/Skills/Snooping.cs
+++ b/Scripts/Skills/Snooping.cs
@@ -66,7 +66,7 @@ namespace Server.SkillHandlers
 
                     if (map != null)
                     {
-                        string message = string.Format("You notice {0} peeking into your belongings!", from.Name);
+                        string message = $"You notice {from.Name} peeking into your belongings!";
 
                         root.Send(new AsciiMessage(-1, -1, MessageType.Label, 946, 3, "", message));
                     }
diff --git a/Scripts/Skills/SpiritSpeak.cs b/Scripts/Skills/SpiritSpeak.cs
index 0f43b270d..8c294f7cc 100644
--- a/Scripts/Skills/SpiritSpeak.cs
+++ b/Scripts/Skills/SpiritSpeak.cs
@@ -115,9 +115,9 @@ namespace Server.SkillHandlers
                         break;
                     }
 
-                    if (objs is Engines.Khaldun.SageHumbolt)
+                    if (objs is Engines.Khaldun.SageHumbolt sageHumbolt)
                     {
-                        if (((Engines.Khaldun.SageHumbolt)objs).OnSpiritSpeak(Caster))
+                        if (sageHumbolt.OnSpiritSpeak(Caster))
                         {
                             eable.Free();
                             Remove(Caster);
diff --git a/Scripts/Skills/Stealing.cs b/Scripts/Skills/Stealing.cs
index b21146452..c0fbed24f 100644
--- a/Scripts/Skills/Stealing.cs
+++ b/Scripts/Skills/Stealing.cs
@@ -305,9 +305,7 @@ namespace Server.SkillHandlers
 
                 if (house != null)
                 {
-                    var rootItem = root as Item;
-
-                    if (rootItem != null)
+                    if (root is Item rootItem)
                     {
                         SecureInfo secure = house.GetSecureInfoFor(rootItem);
 
@@ -326,17 +324,16 @@ namespace Server.SkillHandlers
                 object root = null;
                 bool caught = false;
 
-                if (target is Item)
+                if (target is Item item)
                 {
-                    root = ((Item)target).RootParent;
+                    root = item.RootParent;
                     stolen = TryStealItem((Item)target, ref caught);
                 }
-                else if (target is Mobile)
+                else if (target is Mobile mobile)
                 {
-                    var bc = target as BaseCreature;
                     root = target;
 
-                    if (bc != null && from is PlayerMobile)
+                    if (target is BaseCreature bc && from is PlayerMobile)
                     {
                         if (bc.Controlled || bc.Summoned)
                         {
@@ -359,7 +356,7 @@ namespace Server.SkillHandlers
                                     bc.GenerateLoot(LootStage.Stolen);
                                 }
 
-                                StealRandom((Mobile)target, ref caught, ref stolen);
+                                StealRandom(mobile, ref caught, ref stolen);
                             }
                         }
                     }
@@ -376,9 +373,9 @@ namespace Server.SkillHandlers
 
                 if (stolen != null)
                 {
-                    if (stolen is AddonComponent)
+                    if (stolen is AddonComponent addonComponent)
                     {
-                        BaseAddon addon = ((AddonComponent)stolen).Addon;
+                        BaseAddon addon = addonComponent.Addon;
                         from.AddToBackpack(addon.Deed);
                         addon.Delete();
                     }
@@ -393,9 +390,9 @@ namespace Server.SkillHandlers
                         StolenItem.Add(stolen, m_Thief, root as Mobile);
                     }
 
-                    if (target is BaseCreature)
+                    if (target is BaseCreature baseCreature)
                     {
-                        ((BaseCreature)target).HasBeenStolen = true;
+                        baseCreature.HasBeenStolen = true;
                     }
                 }
 
@@ -409,16 +406,14 @@ namespace Server.SkillHandlers
                     {
                         m_Thief.CriminalAction(false);
                     }
-                    else if (root is Mobile)
+                    else if (root is Mobile mobRoot)
                     {
-                        Mobile mobRoot = (Mobile)root;
-
                         if (!IsInGuild(mobRoot) && IsInnocentTo(m_Thief, mobRoot))
                         {
                             m_Thief.CriminalAction(false);
                         }
 
-                        string message = string.Format("You notice {0} trying to steal from {1}.", m_Thief.Name, mobRoot.Name);
+                        string message = $"You notice {m_Thief.Name} trying to steal from {mobRoot.Name}.";
 
                         foreach (NetState ns in m_Thief.GetClientsInRange(8))
                         {
diff --git a/Scripts/Skills/TasteID.cs b/Scripts/Skills/TasteID.cs
index 137e7b561..f8399396b 100644
--- a/Scripts/Skills/TasteID.cs
+++ b/Scripts/Skills/TasteID.cs
@@ -36,10 +36,8 @@ namespace Server.SkillHandlers
                 {
                     from.SendLocalizedMessage(502816); // You feel that such an action would be inappropriate.
                 }
-                else if (targeted is Food)
+                else if (targeted is Food food)
                 {
-                    Food food = (Food)targeted;
-
                     if (from.CheckTargetSkill(SkillName.TasteID, food, 0, 100))
                     {
                         if (food.Poison != null)
@@ -58,17 +56,13 @@ namespace Server.SkillHandlers
                         food.SendLocalizedMessageTo(from, 502823); // You cannot discern anything about this substance.
                     }
                 }
-                else if (targeted is BasePotion)
+                else if (targeted is BasePotion potion)
                 {
-                    BasePotion potion = (BasePotion)targeted;
-
                     potion.SendLocalizedMessageTo(from, 502813); // You already know what kind of potion that is.
                     potion.SendLocalizedMessageTo(from, potion.LabelNumber);
                 }
-                else if (targeted is PotionKeg)
+                else if (targeted is PotionKeg keg)
                 {
-                    PotionKeg keg = (PotionKeg)targeted;
-
                     if (keg.Held <= 0)
                     {
                         keg.SendLocalizedMessageTo(from, 502228); // There is nothing in the keg to taste!
diff --git a/Scripts/Spells/Base/SpecialMove.cs b/Scripts/Spells/Base/SpecialMove.cs
index d8be2305f..3336cf356 100644
--- a/Scripts/Spells/Base/SpecialMove.cs
+++ b/Scripts/Spells/Base/SpecialMove.cs
@@ -79,7 +79,7 @@ namespace Server.Spells
         {
             if (m.Skills[MoveSkill].Value < RequiredSkill)
             {
-                string args = string.Format("{0}\t{1}\t ", RequiredSkill.ToString("F1"), MoveSkill.ToString());
+                string args = $"{RequiredSkill.ToString("F1")}\t{MoveSkill.ToString()}\t ";
                 m.SendLocalizedMessage(1063013, args); // You need at least ~1_SKILL_REQUIREMENT~ ~2_SKILL_NAME~ skill to use that ability.
                 return false;
             }
diff --git a/Scripts/Spells/Base/Spell.cs b/Scripts/Spells/Base/Spell.cs
index 871a8319b..c4ab628ef 100644
--- a/Scripts/Spells/Base/Spell.cs
+++ b/Scripts/Spells/Base/Spell.cs
@@ -258,7 +258,7 @@ namespace Server.Spells
                 object o = ProtectionSpell.Registry[m_Caster];
                 bool disturb = true;
 
-                if (o != null && o is double)
+                if (o is double)
                 {
                     if (((double)o) > Utility.RandomDouble() * 100.0)
                     {
@@ -575,10 +575,7 @@ namespace Server.Spells
                 Disturbed = true;
                 OnDisturb(type, true);
 
-                if (m_AnimTimer != null)
-                {
-                    m_AnimTimer.Stop();
-                }
+                m_AnimTimer?.Stop();
 
                 if (m_Caster.Player && type == DisturbType.Hurt)
                 {
@@ -1308,7 +1305,7 @@ namespace Server.Spells
                         }
                         catch (Exception e)
                         {
-                            Diagnostics.ExceptionLogging.LogException(e, string.Format("Count: {0}; Index: {1}", registry.Count, i));
+                            Diagnostics.ExceptionLogging.LogException(e, $"Count: {registry.Count}; Index: {i}");
                         }
                     }
 
diff --git a/Scripts/Spells/Base/SpellHelper.cs b/Scripts/Spells/Base/SpellHelper.cs
index 70c2b96ff..ad8139fd0 100644
--- a/Scripts/Spells/Base/SpellHelper.cs
+++ b/Scripts/Spells/Base/SpellHelper.cs
@@ -330,7 +330,7 @@ namespace Server.Spells
         public static bool AddStatBonus(Mobile caster, Mobile target, StatType type, int bonus, TimeSpan duration)
         {
             int offset = bonus;
-            string name = string.Format("[Magic] {0} Buff", type);
+            string name = $"[Magic] {type} Buff";
 
             StatMod mod = target.GetStatMod(name);
 
@@ -347,7 +347,7 @@ namespace Server.Spells
 
         public static int GetBuffOffset(Mobile m, StatType type)
         {
-            string name = string.Format("[Magic] {0} Buff", type);
+            string name = $"[Magic] {type} Buff";
 
             StatMod mod = m.GetStatMod(name);
 
@@ -372,7 +372,7 @@ namespace Server.Spells
         public static bool AddStatCurse(Mobile caster, Mobile target, StatType type, int curse, TimeSpan duration)
         {
             int offset = curse;
-            string name = string.Format("[Magic] {0} Curse", type);
+            string name = $"[Magic] {type} Curse";
 
             StatMod mod = target.GetStatMod(name);
 
@@ -397,7 +397,7 @@ namespace Server.Spells
 
         public static int GetCurseOffset(Mobile m, StatType type)
         {
-            string name = string.Format("[Magic] {0} Curse", type);
+            string name = $"[Magic] {type} Curse";
 
             StatMod mod = m.GetStatMod(name);
 
diff --git a/Scripts/Spells/Base/SpellRegistry.cs b/Scripts/Spells/Base/SpellRegistry.cs
index 248c358bd..f89676b82 100644
--- a/Scripts/Spells/Base/SpellRegistry.cs
+++ b/Scripts/Spells/Base/SpellRegistry.cs
@@ -156,7 +156,7 @@ namespace Server.Spells
         {
             for (int i = 0; i < m_CircleNames.Length; ++i)
             {
-                Type t = ScriptCompiler.FindTypeByFullName(string.Format("Server.Spells.{0}.{1}", m_CircleNames[i], name));
+                Type t = ScriptCompiler.FindTypeByFullName($"Server.Spells.{m_CircleNames[i]}.{name}");
 
                 if (t != null && !t.IsSubclassOf(typeof(SpecialMove)))
                 {
diff --git a/Scripts/Spells/Bushido/Confidence.cs b/Scripts/Spells/Bushido/Confidence.cs
index ccddd1f21..2a68e84e4 100644
--- a/Scripts/Spells/Bushido/Confidence.cs
+++ b/Scripts/Spells/Bushido/Confidence.cs
@@ -41,12 +41,12 @@ namespace Server.Spells.Bushido
             t.Start();
 
             double bushido = m.Skills[SkillName.Bushido].Value;
-            BuffInfo.AddBuff(m, new BuffInfo(BuffIcon.Confidence, 1060596, 1153809, TimeSpan.FromSeconds(4), m, string.Format("{0}\t{1}\t{2}", ((int)(bushido / 12)).ToString(), ((int)(bushido / 5)).ToString(), "100"))); // Successful parry will heal for 1-~1_HEAL~ hit points and refresh for 1-~2_STAM~ stamina points.<br>+~3_HP~ hit point regeneration (4 second duration).
+            BuffInfo.AddBuff(m, new BuffInfo(BuffIcon.Confidence, 1060596, 1153809, TimeSpan.FromSeconds(4), m, $"{((int)(bushido / 12)).ToString()}\t{((int)(bushido / 5)).ToString()}\t{"100"}")); // Successful parry will heal for 1-~1_HEAL~ hit points and refresh for 1-~2_STAM~ stamina points.<br>+~3_HP~ hit point regeneration (4 second duration).
 
             int anticipateHitBonus = SkillMasteries.MasteryInfo.AnticipateHitBonus(m);
 
             if (anticipateHitBonus > 0)
-                BuffInfo.AddBuff(m, new BuffInfo(BuffIcon.AnticipateHit, 1155905, 1156057, TimeSpan.FromSeconds(4), m, string.Format("{0}\t{1}", anticipateHitBonus.ToString(), "75"))); // ~1_CHANCE~% chance to reduce Confidence heal by ~2_REDUCE~% when hit. 
+                BuffInfo.AddBuff(m, new BuffInfo(BuffIcon.AnticipateHit, 1155905, 1156057, TimeSpan.FromSeconds(4), m, $"{anticipateHitBonus.ToString()}\t{"75"}")); // ~1_CHANCE~% chance to reduce Confidence heal by ~2_REDUCE~% when hit. 
         }
 
         public static void EndConfidence(Mobile m)
@@ -91,8 +91,8 @@ namespace Server.Spells.Bushido
 
             if (anticipateHitBonus >= Utility.Random(100) && m_RegenTable.TryGetValue(m, out t))
             {
-                if (t is RegenTimer)
-                    ((RegenTimer)t).Hits /= 2;
+                if (t is RegenTimer regenTimer)
+                    regenTimer.Hits /= 2;
 
                 return;
             }
diff --git a/Scripts/Spells/Bushido/HonorableExecution.cs b/Scripts/Spells/Bushido/HonorableExecution.cs
index 4a43014bd..3809e5181 100644
--- a/Scripts/Spells/Bushido/HonorableExecution.cs
+++ b/Scripts/Spells/Bushido/HonorableExecution.cs
@@ -60,9 +60,7 @@ namespace Server.Spells.Bushido
 
             ClearCurrentMove(attacker);
 
-            HonorableExecutionInfo info = m_Table[attacker] as HonorableExecutionInfo;
-
-            if (info != null)
+            if (m_Table[attacker] is HonorableExecutionInfo info)
             {
                 info.Clear();
 
@@ -83,7 +81,7 @@ namespace Server.Spells.Bushido
                 info = new HonorableExecutionInfo(attacker, swingBonus);
                 info.m_Timer = Timer.DelayCall(TimeSpan.FromSeconds(20.0), new TimerStateCallback(EndEffect), info);
 
-                BuffInfo.AddBuff(attacker, new BuffInfo(BuffIcon.HonorableExecution, 1060595, 1153807, TimeSpan.FromSeconds(20.0), attacker, string.Format("{0}", swingBonus)));
+                BuffInfo.AddBuff(attacker, new BuffInfo(BuffIcon.HonorableExecution, 1060595, 1153807, TimeSpan.FromSeconds(20.0), attacker, $"{swingBonus}"));
 
                 m_Table[attacker] = info;
             }
@@ -105,7 +103,7 @@ namespace Server.Spells.Bushido
                 info = new HonorableExecutionInfo(attacker, mods);
                 info.m_Timer = Timer.DelayCall(TimeSpan.FromSeconds(7.0), new TimerStateCallback(EndEffect), info);
 
-                BuffInfo.AddBuff(attacker, new BuffInfo(BuffIcon.HonorableExecution, 1060595, 1153808, TimeSpan.FromSeconds(7.0), attacker, string.Format("{0}\t40\t40\t40\t40\t40", resSpells)));
+                BuffInfo.AddBuff(attacker, new BuffInfo(BuffIcon.HonorableExecution, 1060595, 1153808, TimeSpan.FromSeconds(7.0), attacker, $"{resSpells}\t40\t40\t40\t40\t40"));
 
                 m_Table[attacker] = info;
             }
@@ -160,10 +158,10 @@ namespace Server.Spells.Bushido
                 {
                     object mod = m_Mods[i];
 
-                    if (mod is ResistanceMod)
-                        m_Mobile.AddResistanceMod((ResistanceMod)mod);
-                    else if (mod is SkillMod)
-                        m_Mobile.AddSkillMod((SkillMod)mod);
+                    if (mod is ResistanceMod resistanceMod)
+                        m_Mobile.AddResistanceMod(resistanceMod);
+                    else if (mod is SkillMod skillMod)
+                        m_Mobile.AddSkillMod(skillMod);
                 }
             }
 
@@ -176,10 +174,10 @@ namespace Server.Spells.Bushido
                 {
                     object mod = m_Mods[i];
 
-                    if (mod is ResistanceMod)
-                        m_Mobile.RemoveResistanceMod((ResistanceMod)mod);
-                    else if (mod is SkillMod)
-                        m_Mobile.RemoveSkillMod((SkillMod)mod);
+                    if (mod is ResistanceMod resistanceMod)
+                        m_Mobile.RemoveResistanceMod(resistanceMod);
+                    else if (mod is SkillMod skillMod)
+                        m_Mobile.RemoveSkillMod(skillMod);
                 }
             }
         }
diff --git a/Scripts/Spells/Bushido/LightningStrike.cs b/Scripts/Spells/Bushido/LightningStrike.cs
index 4255eef17..ea8d1f23a 100644
--- a/Scripts/Spells/Bushido/LightningStrike.cs
+++ b/Scripts/Spells/Bushido/LightningStrike.cs
@@ -19,8 +19,7 @@ namespace Server.Spells.Bushido
             bool isValid = base.Validate(from);
             if (isValid)
             {
-                PlayerMobile ThePlayer = from as PlayerMobile;
-                if (ThePlayer != null)
+                if (from is PlayerMobile ThePlayer)
                 {
                     ThePlayer.ExecutesLightningStrike = BaseMana;
                 }
@@ -85,13 +84,13 @@ namespace Server.Spells.Bushido
 
             m.Delta(MobileDelta.WeaponDamage);
 
-            BuffInfo.AddBuff(m, new BuffInfo(BuffIcon.LightningStrike, 1060599, 1153811, string.Format("50\t{0}", criticalChance)));
+            BuffInfo.AddBuff(m, new BuffInfo(BuffIcon.LightningStrike, 1060599, 1153811, $"50\t{criticalChance}"));
         }
 
         public override void OnClearMove(Mobile attacker)
         {
-            PlayerMobile ThePlayer = attacker as PlayerMobile; // this can be deletet if the PlayerMobile parts are moved to Server.Mobile 
-            if (ThePlayer != null)
+ // this can be deletet if the PlayerMobile parts are moved to Server.Mobile 
+            if (attacker is PlayerMobile ThePlayer)
             {
                 ThePlayer.ExecutesLightningStrike = 0;
             }
diff --git a/Scripts/Spells/Bushido/SamuraiSpell.cs b/Scripts/Spells/Bushido/SamuraiSpell.cs
index 45a21f200..5aadb8124 100644
--- a/Scripts/Spells/Bushido/SamuraiSpell.cs
+++ b/Scripts/Spells/Bushido/SamuraiSpell.cs
@@ -37,7 +37,7 @@ namespace Server.Spells.Bushido
 
             if (Caster.Skills[CastSkill].Value < RequiredSkill)
             {
-                string args = string.Format("{0}\t{1}\t ", RequiredSkill.ToString("F1"), CastSkill.ToString());
+                string args = $"{RequiredSkill.ToString("F1")}\t{CastSkill.ToString()}\t ";
                 Caster.SendLocalizedMessage(1063013, args); // You need at least ~1_SKILL_REQUIREMENT~ ~2_SKILL_NAME~ skill to use that ability.
                 return false;
             }
diff --git a/Scripts/Spells/Chivalry/CleanseByFire.cs b/Scripts/Spells/Chivalry/CleanseByFire.cs
index 465cb5d11..92c74b81c 100644
--- a/Scripts/Spells/Chivalry/CleanseByFire.cs
+++ b/Scripts/Spells/Chivalry/CleanseByFire.cs
@@ -103,8 +103,8 @@ namespace Server.Spells.Chivalry
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is Mobile)
-                    m_Owner.Target((Mobile)o);
+                if (o is Mobile mobile)
+                    m_Owner.Target(mobile);
             }
 
             protected override void OnTargetFinish(Mobile from)
diff --git a/Scripts/Spells/Chivalry/CloseWounds.cs b/Scripts/Spells/Chivalry/CloseWounds.cs
index 3707c5d73..0c294f61b 100644
--- a/Scripts/Spells/Chivalry/CloseWounds.cs
+++ b/Scripts/Spells/Chivalry/CloseWounds.cs
@@ -98,8 +98,8 @@ namespace Server.Spells.Chivalry
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is Mobile)
-                    m_Owner.Target((Mobile)o);
+                if (o is Mobile mobile)
+                    m_Owner.Target(mobile);
             }
 
             protected override void OnTargetFinish(Mobile from)
diff --git a/Scripts/Spells/Chivalry/ConsecrateWeapon.cs b/Scripts/Spells/Chivalry/ConsecrateWeapon.cs
index 5e894576f..832fffec7 100644
--- a/Scripts/Spells/Chivalry/ConsecrateWeapon.cs
+++ b/Scripts/Spells/Chivalry/ConsecrateWeapon.cs
@@ -111,7 +111,7 @@ namespace Server.Spells.Chivalry
 
                 m_Table[Caster] = context;
 
-                BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.ConsecrateWeapon, 1151385, 1151386, duration, Caster, string.Format("{0}\t{1}", context.ConsecrateProcChance, context.ConsecrateDamageBonus)));
+                BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.ConsecrateWeapon, 1151385, 1151386, duration, Caster, $"{context.ConsecrateProcChance}\t{context.ConsecrateDamageBonus}"));
             }
 
             FinishSequence();
diff --git a/Scripts/Spells/Chivalry/DispelEvil.cs b/Scripts/Spells/Chivalry/DispelEvil.cs
index 9a34a429f..610c3424c 100644
--- a/Scripts/Spells/Chivalry/DispelEvil.cs
+++ b/Scripts/Spells/Chivalry/DispelEvil.cs
@@ -42,9 +42,7 @@ namespace Server.Spells.Chivalry
 
                 foreach (Mobile m in AcquireIndirectTargets(Caster.Location, 8).OfType<Mobile>())
                 {
-                    BaseCreature bc = m as BaseCreature;
-
-                    if (bc != null)
+                    if (m is BaseCreature bc)
                     {
                         bool dispellable = bc.Summoned && !bc.IsAnimatedDead;
 
diff --git a/Scripts/Spells/Chivalry/DivineFury.cs b/Scripts/Spells/Chivalry/DivineFury.cs
index 639dedc91..b025a15dd 100644
--- a/Scripts/Spells/Chivalry/DivineFury.cs
+++ b/Scripts/Spells/Chivalry/DivineFury.cs
@@ -59,7 +59,7 @@ namespace Server.Spells.Chivalry
                 m_Table[Caster] = t = Timer.DelayCall(TimeSpan.FromSeconds(delay), new TimerStateCallback(Expire_Callback), Caster);
                 Caster.Delta(MobileDelta.WeaponDamage);
 
-                string args = string.Format("{0}\t{1}\t{2}\t{3}", GetAttackBonus(Caster).ToString(), GetDamageBonus(Caster).ToString(), GetWeaponSpeedBonus(Caster).ToString(), GetDefendMalus(Caster).ToString());
+                string args = $"{GetAttackBonus(Caster).ToString()}\t{GetDamageBonus(Caster).ToString()}\t{GetWeaponSpeedBonus(Caster).ToString()}\t{GetDefendMalus(Caster).ToString()}";
 
                 BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.DivineFury, 1060589, 1150218, TimeSpan.FromSeconds(delay), Caster, args));
                 // ~1_HCI~% hit chance<br> ~2_DI~% damage<br>~3_SSI~% swing speed increase<br>-~4_DCI~% defense chance
diff --git a/Scripts/Spells/Chivalry/EnemyOfOne.cs b/Scripts/Spells/Chivalry/EnemyOfOne.cs
index f467d9bf8..b186f247b 100644
--- a/Scripts/Spells/Chivalry/EnemyOfOne.cs
+++ b/Scripts/Spells/Chivalry/EnemyOfOne.cs
@@ -234,11 +234,11 @@ namespace Server.Spells.Chivalry
         {
             if (m_TypeName == null)
             {
-                BuffInfo.AddBuff(m_Owner, new BuffInfo(BuffIcon.EnemyOfOne, 1075653, 1075902, m_Expire - DateTime.UtcNow, m_Owner, string.Format("{0}\t{1}", m_DamageScalar, "100"), true));
+                BuffInfo.AddBuff(m_Owner, new BuffInfo(BuffIcon.EnemyOfOne, 1075653, 1075902, m_Expire - DateTime.UtcNow, m_Owner, $"{m_DamageScalar}\t{"100"}", true));
             }
             else
             {
-                BuffInfo.AddBuff(m_Owner, new BuffInfo(BuffIcon.EnemyOfOne, 1075653, 1075654, m_Expire - DateTime.UtcNow, m_Owner, string.Format("{0}\t{1}\t{2}\t{3}", m_DamageScalar, TypeName, ".", "100"), true));
+                BuffInfo.AddBuff(m_Owner, new BuffInfo(BuffIcon.EnemyOfOne, 1075653, 1075654, m_Expire - DateTime.UtcNow, m_Owner, $"{m_DamageScalar}\t{TypeName}\t{"."}\t{"100"}", true));
             }
         }
 
diff --git a/Scripts/Spells/Chivalry/RemoveCurse.cs b/Scripts/Spells/Chivalry/RemoveCurse.cs
index 5f94ddf95..7f64f6970 100644
--- a/Scripts/Spells/Chivalry/RemoveCurse.cs
+++ b/Scripts/Spells/Chivalry/RemoveCurse.cs
@@ -110,8 +110,8 @@ namespace Server.Spells.Chivalry
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is Mobile)
-                    m_Owner.Target((Mobile)o);
+                if (o is Mobile mobile)
+                    m_Owner.Target(mobile);
             }
 
             protected override void OnTargetFinish(Mobile from)
diff --git a/Scripts/Spells/Chivalry/SacredJourney.cs b/Scripts/Spells/Chivalry/SacredJourney.cs
index a80c39c57..f56f00edc 100644
--- a/Scripts/Spells/Chivalry/SacredJourney.cs
+++ b/Scripts/Spells/Chivalry/SacredJourney.cs
@@ -190,10 +190,8 @@ namespace Server.Spells.Chivalry
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is RecallRune)
+                if (o is RecallRune rune)
                 {
-                    RecallRune rune = (RecallRune)o;
-
                     if (rune.Marked)
                     {
                         if (rune.Type == RecallRuneType.Ship)
@@ -210,9 +208,9 @@ namespace Server.Spells.Chivalry
                         from.SendLocalizedMessage(501805); // That rune is not yet marked.
                     }
                 }
-                else if (o is Runebook)
+                else if (o is Runebook runebook)
                 {
-                    RunebookEntry e = ((Runebook)o).Default;
+                    RunebookEntry e = runebook.Default;
 
                     if (e != null)
                     {
@@ -245,10 +243,8 @@ namespace Server.Spells.Chivalry
 
                     m_Owner.Effect(deed.PlotLocation, deed.PlotFacet, true);
                 }
-                else if (o is Engines.NewMagincia.WritOfLease)
+                else if (o is Engines.NewMagincia.WritOfLease lease)
                 {
-                    Engines.NewMagincia.WritOfLease lease = (Engines.NewMagincia.WritOfLease)o;
-
                     if (lease.RecallLoc != Point3D.Zero && lease.Facet != null && lease.Facet != Map.Internal)
                         m_Owner.Effect(lease.RecallLoc, lease.Facet, false);
                     else
diff --git a/Scripts/Spells/Eighth/EnergyVortex.cs b/Scripts/Spells/Eighth/EnergyVortex.cs
index 464b8a3cd..29b8f1d41 100644
--- a/Scripts/Spells/Eighth/EnergyVortex.cs
+++ b/Scripts/Spells/Eighth/EnergyVortex.cs
@@ -69,8 +69,8 @@ namespace Server.Spells.Eighth
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is IPoint3D)
-                    m_Owner.Target((IPoint3D)o);
+                if (o is IPoint3D iPoint3D)
+                    m_Owner.Target(iPoint3D);
             }
 
             protected override void OnTargetOutOfLOS(Mobile from, object o)
diff --git a/Scripts/Spells/Eighth/Resurrection.cs b/Scripts/Spells/Eighth/Resurrection.cs
index bf6c68006..dbbb82611 100644
--- a/Scripts/Spells/Eighth/Resurrection.cs
+++ b/Scripts/Spells/Eighth/Resurrection.cs
@@ -84,9 +84,9 @@ namespace Server.Spells.Eighth
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is Mobile)
+                if (o is Mobile mobile)
                 {
-                    m_Owner.Target((Mobile)o);
+                    m_Owner.Target(mobile);
                 }
             }
 
diff --git a/Scripts/Spells/Fifth/BladeSpirits.cs b/Scripts/Spells/Fifth/BladeSpirits.cs
index a9b98d1b0..cf918a9d8 100644
--- a/Scripts/Spells/Fifth/BladeSpirits.cs
+++ b/Scripts/Spells/Fifth/BladeSpirits.cs
@@ -73,8 +73,8 @@ namespace Server.Spells.Fifth
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is IPoint3D)
-                    m_Owner.Target((IPoint3D)o);
+                if (o is IPoint3D iPoint3D)
+                    m_Owner.Target(iPoint3D);
             }
 
             protected override void OnTargetOutOfLOS(Mobile from, object o)
diff --git a/Scripts/Spells/Fifth/DispelField.cs b/Scripts/Spells/Fifth/DispelField.cs
index 381c5ac51..ac3e0bd6c 100644
--- a/Scripts/Spells/Fifth/DispelField.cs
+++ b/Scripts/Spells/Fifth/DispelField.cs
@@ -54,9 +54,9 @@ namespace Server.Spells.Fifth
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is IEntity)
+                if (o is IEntity iEntity)
                 {
-                    m_Owner.Target((IEntity)o);
+                    m_Owner.Target(iEntity);
                 }
             }
 
diff --git a/Scripts/Spells/Fifth/Incognito.cs b/Scripts/Spells/Fifth/Incognito.cs
index 6c06f8a08..a209e21aa 100644
--- a/Scripts/Spells/Fifth/Incognito.cs
+++ b/Scripts/Spells/Fifth/Incognito.cs
@@ -94,7 +94,7 @@ namespace Server.Spells.Fifth
 
                     PlayerMobile pm = Caster as PlayerMobile;
 
-                    if (pm != null && pm.Race != null)
+                    if (pm?.Race != null)
                     {
                         pm.SetHairMods(pm.Race.RandomHair(pm.Female), pm.Race.RandomFacialHair(pm.Female));
                         pm.HairHue = pm.Race.RandomHairHue();
@@ -156,8 +156,8 @@ namespace Server.Spells.Fifth
             {
                 if (!m_Owner.CanBeginAction(typeof(IncognitoSpell)))
                 {
-                    if (m_Owner is PlayerMobile)
-                        ((PlayerMobile)m_Owner).SetHairMods(-1, -1);
+                    if (m_Owner is PlayerMobile playerMobile)
+                        playerMobile.SetHairMods(-1, -1);
 
                     m_Owner.BodyMod = 0;
                     m_Owner.HueMod = -1;
diff --git a/Scripts/Spells/Fifth/MagicReflect.cs b/Scripts/Spells/Fifth/MagicReflect.cs
index aff2123e4..4f21b796e 100644
--- a/Scripts/Spells/Fifth/MagicReflect.cs
+++ b/Scripts/Spells/Fifth/MagicReflect.cs
@@ -142,25 +142,25 @@ namespace Server.Spells.Fifth
             {
                 var reduce = 0;
 
-                if (spell is MagerySpell)
+                if (spell is MagerySpell magerySpell)
                 {
-                    reduce = (int)(((MagerySpell)spell).Circle + 1) * 10;
+                    reduce = (int)(magerySpell.Circle + 1) * 10;
                 }
-                else if (spell is MysticSpell)
+                else if (spell is MysticSpell mysticSpell)
                 {
-                    reduce = (int)(((MysticSpell)spell).Circle + 1) * 10;
+                    reduce = (int)(mysticSpell.Circle + 1) * 10;
                 }
-                else if (spell is NecromancerSpell)
+                else if (spell is NecromancerSpell necromancerSpell)
                 {
-                    reduce = (int)((NecromancerSpell)spell).RequiredSkill;
+                    reduce = (int)necromancerSpell.RequiredSkill;
                 }
-                else if (spell is ArcanistSpell)
+                else if (spell is ArcanistSpell arcanistSpell)
                 {
-                    reduce = (int)((ArcanistSpell)spell).RequiredSkill;
+                    reduce = (int)arcanistSpell.RequiredSkill;
                 }
-                else if (spell is SkillMasterySpell)
+                else if (spell is SkillMasterySpell skillMasterySpell)
                 {
-                    reduce = (int)((SkillMasterySpell)spell).RequiredSkill;
+                    reduce = (int)skillMasterySpell.RequiredSkill;
                 }
 
                 if (reduce > context.ReflectPool)
diff --git a/Scripts/Spells/Fifth/MindBlast.cs b/Scripts/Spells/Fifth/MindBlast.cs
index dc53a14c5..a77b384ec 100644
--- a/Scripts/Spells/Fifth/MindBlast.cs
+++ b/Scripts/Spells/Fifth/MindBlast.cs
@@ -89,8 +89,8 @@ namespace Server.Spells.Fifth
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is Mobile)
-                    m_Owner.Target((Mobile)o);
+                if (o is Mobile mobile)
+                    m_Owner.Target(mobile);
             }
 
             protected override void OnTargetFinish(Mobile from)
diff --git a/Scripts/Spells/Fifth/Paralyze.cs b/Scripts/Spells/Fifth/Paralyze.cs
index 54c53f2c7..b96a8b48c 100644
--- a/Scripts/Spells/Fifth/Paralyze.cs
+++ b/Scripts/Spells/Fifth/Paralyze.cs
@@ -53,9 +53,9 @@ namespace Server.Spells.Fifth
 
                 duration = secs;
 
-                if (m is PlagueBeastLord)
+                if (m is PlagueBeastLord plagueBeastLord)
                 {
-                    ((PlagueBeastLord)m).OnParalyzed(Caster);
+                    plagueBeastLord.OnParalyzed(Caster);
                     duration = 120;
                 }
 
@@ -81,8 +81,8 @@ namespace Server.Spells.Fifth
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is Mobile)
-                    m_Owner.Target((Mobile)o);
+                if (o is Mobile mobile)
+                    m_Owner.Target(mobile);
             }
 
             protected override void OnTargetFinish(Mobile from)
diff --git a/Scripts/Spells/Fifth/PoisonField.cs b/Scripts/Spells/Fifth/PoisonField.cs
index a38632c6b..b3207083a 100644
--- a/Scripts/Spells/Fifth/PoisonField.cs
+++ b/Scripts/Spells/Fifth/PoisonField.cs
@@ -195,8 +195,8 @@ namespace Server.Spells.Fifth
                     if (SpellHelper.CanRevealCaster(m))
                         m_Caster.RevealingAction();
 
-                if (m is BaseCreature)
-                    ((BaseCreature)m).OnHarmfulSpell(m_Caster);
+                if (m is BaseCreature baseCreature)
+                    baseCreature.OnHarmfulSpell(m_Caster);
             }
 
             public override bool OnMoveOver(Mobile m)
@@ -282,8 +282,8 @@ namespace Server.Spells.Fifth
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is IPoint3D)
-                    m_Owner.Target((IPoint3D)o);
+                if (o is IPoint3D iPoint3D)
+                    m_Owner.Target(iPoint3D);
             }
 
             protected override void OnTargetFinish(Mobile from)
diff --git a/Scripts/Spells/First/Clumsy.cs b/Scripts/Spells/First/Clumsy.cs
index d864c8eed..a4138a5df 100644
--- a/Scripts/Spells/First/Clumsy.cs
+++ b/Scripts/Spells/First/Clumsy.cs
@@ -119,9 +119,9 @@ namespace Server.Spells.First
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is Mobile)
+                if (o is Mobile mobile)
                 {
-                    m_Owner.Target((Mobile)o);
+                    m_Owner.Target(mobile);
                 }
             }
 
diff --git a/Scripts/Spells/First/Feeblemind.cs b/Scripts/Spells/First/Feeblemind.cs
index 3d125958d..a0a09dd03 100644
--- a/Scripts/Spells/First/Feeblemind.cs
+++ b/Scripts/Spells/First/Feeblemind.cs
@@ -119,9 +119,9 @@ namespace Server.Spells.First
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is Mobile)
+                if (o is Mobile mobile)
                 {
-                    m_Owner.Target((Mobile)o);
+                    m_Owner.Target(mobile);
                 }
             }
 
diff --git a/Scripts/Spells/First/Heal.cs b/Scripts/Spells/First/Heal.cs
index 27392f422..5570e3c81 100644
--- a/Scripts/Spells/First/Heal.cs
+++ b/Scripts/Spells/First/Heal.cs
@@ -80,9 +80,9 @@ namespace Server.Spells.First
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is Mobile)
+                if (o is Mobile mobile)
                 {
-                    m_Owner.Target((Mobile)o);
+                    m_Owner.Target(mobile);
                 }
             }
 
diff --git a/Scripts/Spells/First/MagicArrow.cs b/Scripts/Spells/First/MagicArrow.cs
index 1bf996dfc..7c3370c46 100644
--- a/Scripts/Spells/First/MagicArrow.cs
+++ b/Scripts/Spells/First/MagicArrow.cs
@@ -77,9 +77,9 @@ namespace Server.Spells.First
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is IDamageable)
+                if (o is IDamageable iDamageable)
                 {
-                    m_Owner.Target((IDamageable)o);
+                    m_Owner.Target(iDamageable);
                 }
             }
 
diff --git a/Scripts/Spells/First/ReactiveArmor.cs b/Scripts/Spells/First/ReactiveArmor.cs
index 05ab14358..eeb80bac6 100644
--- a/Scripts/Spells/First/ReactiveArmor.cs
+++ b/Scripts/Spells/First/ReactiveArmor.cs
@@ -70,7 +70,7 @@ namespace Server.Spells.First
                         targ.AddResistanceMod(mods[i]);
 
                     int physresist = 15 + (int)(targ.Skills[SkillName.Inscribe].Value / 20);
-                    string args = string.Format("{0}\t{1}\t{2}\t{3}\t{4}", physresist, 5, 5, 5, 5);
+                    string args = $"{physresist}\t{5}\t{5}\t{5}\t{5}";
 
                     BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.ReactiveArmor, 1075812, 1075813, args.ToString()));
                 }
diff --git a/Scripts/Spells/First/Weaken.cs b/Scripts/Spells/First/Weaken.cs
index 9dcbd21ea..ab3b5ee83 100644
--- a/Scripts/Spells/First/Weaken.cs
+++ b/Scripts/Spells/First/Weaken.cs
@@ -120,9 +120,9 @@ namespace Server.Spells.First
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is Mobile)
+                if (o is Mobile mobile)
                 {
-                    m_Owner.Target((Mobile)o);
+                    m_Owner.Target(mobile);
                 }
             }
 
diff --git a/Scripts/Spells/Fourth/ArchProtection.cs b/Scripts/Spells/Fourth/ArchProtection.cs
index 131b79776..2f0cfcea5 100644
--- a/Scripts/Spells/Fourth/ArchProtection.cs
+++ b/Scripts/Spells/Fourth/ArchProtection.cs
@@ -122,9 +122,7 @@ namespace Server.Spells.Fourth
 
             protected override void OnTarget(Mobile from, object o)
             {
-                IPoint3D p = o as IPoint3D;
-
-                if (p != null)
+                if (o is IPoint3D p)
                     m_Owner.Target(p);
             }
 
diff --git a/Scripts/Spells/Fourth/Curse.cs b/Scripts/Spells/Fourth/Curse.cs
index 844dfd363..d5c4f79fa 100644
--- a/Scripts/Spells/Fourth/Curse.cs
+++ b/Scripts/Spells/Fourth/Curse.cs
@@ -128,7 +128,7 @@ namespace Server.Spells.Fourth
             }
             else
             {
-                args = string.Format("{0}\t{1}\t{2}\t{3}\t{4}\t{5}\t{6}", percentage, percentage, percentage, 10, 10, 10, 10);
+                args = $"{percentage}\t{percentage}\t{percentage}\t{10}\t{10}\t{10}\t{10}";
                 BuffInfo.AddBuff(m, new BuffInfo(BuffIcon.Curse, 1075835, 1075836, length, m, args.ToString()));
             }
 
@@ -181,8 +181,8 @@ namespace Server.Spells.Fourth
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is Mobile)
-                    m_Owner.Target((Mobile)o);
+                if (o is Mobile mobile)
+                    m_Owner.Target(mobile);
             }
 
             protected override void OnTargetFinish(Mobile from)
diff --git a/Scripts/Spells/Fourth/FireField.cs b/Scripts/Spells/Fourth/FireField.cs
index 4f284eee9..b69b40559 100644
--- a/Scripts/Spells/Fourth/FireField.cs
+++ b/Scripts/Spells/Fourth/FireField.cs
@@ -205,8 +205,8 @@ namespace Server.Spells.Fourth
                     AOS.Damage(m, m_Caster, damage, 0, 100, 0, 0, 0);
                     m.PlaySound(0x208);
 
-                    if (m is BaseCreature)
-                        ((BaseCreature)m).OnHarmfulSpell(m_Caster);
+                    if (m is BaseCreature baseCreature)
+                        baseCreature.OnHarmfulSpell(m_Caster);
                 }
 
                 return true;
@@ -270,8 +270,8 @@ namespace Server.Spells.Fourth
                                 AOS.Damage(m, caster, damage, 0, 100, 0, 0, 0);
                                 m.PlaySound(0x208);
 
-                                if (m is BaseCreature)
-                                    ((BaseCreature)m).OnHarmfulSpell(caster);
+                                if (m is BaseCreature baseCreature)
+                                    baseCreature.OnHarmfulSpell(caster);
                             }
                         }
                     }
@@ -290,8 +290,8 @@ namespace Server.Spells.Fourth
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is IPoint3D)
-                    m_Owner.Target((IPoint3D)o);
+                if (o is IPoint3D iPoint3D)
+                    m_Owner.Target(iPoint3D);
             }
 
             protected override void OnTargetFinish(Mobile from)
diff --git a/Scripts/Spells/Fourth/GreaterHeal.cs b/Scripts/Spells/Fourth/GreaterHeal.cs
index 5118f612c..b90dc7166 100644
--- a/Scripts/Spells/Fourth/GreaterHeal.cs
+++ b/Scripts/Spells/Fourth/GreaterHeal.cs
@@ -78,9 +78,9 @@ namespace Server.Spells.Fourth
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is Mobile)
+                if (o is Mobile mobile)
                 {
-                    m_Owner.Target((Mobile)o);
+                    m_Owner.Target(mobile);
                 }
             }
 
diff --git a/Scripts/Spells/Fourth/Lightning.cs b/Scripts/Spells/Fourth/Lightning.cs
index f6a1e5cc0..808dd763f 100644
--- a/Scripts/Spells/Fourth/Lightning.cs
+++ b/Scripts/Spells/Fourth/Lightning.cs
@@ -67,8 +67,8 @@ namespace Server.Spells.Fourth
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is IDamageable)
-                    m_Owner.Target((IDamageable)o);
+                if (o is IDamageable iDamageable)
+                    m_Owner.Target(iDamageable);
             }
 
             protected override void OnTargetFinish(Mobile from)
diff --git a/Scripts/Spells/Fourth/ManaDrain.cs b/Scripts/Spells/Fourth/ManaDrain.cs
index 875be2de0..e2d4fb946 100644
--- a/Scripts/Spells/Fourth/ManaDrain.cs
+++ b/Scripts/Spells/Fourth/ManaDrain.cs
@@ -102,8 +102,8 @@ namespace Server.Spells.Fourth
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is Mobile)
-                    m_Owner.Target((Mobile)o);
+                if (o is Mobile mobile)
+                    m_Owner.Target(mobile);
             }
 
             protected override void OnTargetFinish(Mobile from)
diff --git a/Scripts/Spells/Fourth/Recall.cs b/Scripts/Spells/Fourth/Recall.cs
index 92bbecdfe..c820f4efc 100644
--- a/Scripts/Spells/Fourth/Recall.cs
+++ b/Scripts/Spells/Fourth/Recall.cs
@@ -238,10 +238,8 @@ namespace Server.Spells.Fourth
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is RecallRune)
+                if (o is RecallRune rune)
                 {
-                    RecallRune rune = (RecallRune)o;
-
                     if (rune.Marked)
                     {
                         if (rune.Type == RecallRuneType.Ship)
@@ -258,9 +256,9 @@ namespace Server.Spells.Fourth
                         from.SendLocalizedMessage(501805); // That rune is not yet marked.
                     }
                 }
-                else if (o is Runebook)
+                else if (o is Runebook runebook)
                 {
-                    RunebookEntry e = ((Runebook)o).Default;
+                    RunebookEntry e = runebook.Default;
 
                     if (e != null)
                     {
@@ -287,10 +285,8 @@ namespace Server.Spells.Fourth
                     else
                         from.Send(new MessageLocalized(from.Serial, from.Body, MessageType.Regular, 0x3B2, 3, 502357, from.Name, "")); // I can not recall from that object.
                 }
-                else if (o is Engines.NewMagincia.WritOfLease)
+                else if (o is Engines.NewMagincia.WritOfLease lease)
                 {
-                    Engines.NewMagincia.WritOfLease lease = (Engines.NewMagincia.WritOfLease)o;
-
                     if (lease.RecallLoc != Point3D.Zero && lease.Facet != null && lease.Facet != Map.Internal)
                         m_Owner.Effect(lease.RecallLoc, lease.Facet, false);
                     else
diff --git a/Scripts/Spells/Mysticism/SpellDefinitions/AnimatedWeaponSpell.cs b/Scripts/Spells/Mysticism/SpellDefinitions/AnimatedWeaponSpell.cs
index e108472e2..4ec2b527b 100644
--- a/Scripts/Spells/Mysticism/SpellDefinitions/AnimatedWeaponSpell.cs
+++ b/Scripts/Spells/Mysticism/SpellDefinitions/AnimatedWeaponSpell.cs
@@ -72,8 +72,8 @@ namespace Server.Spells.Mysticism
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is IPoint3D)
-                    m_Owner.Target((IPoint3D)o);
+                if (o is IPoint3D iPoint3D)
+                    m_Owner.Target(iPoint3D);
             }
 
             protected override void OnTargetFinish(Mobile from)
diff --git a/Scripts/Spells/Mysticism/SpellDefinitions/BombardSpell.cs b/Scripts/Spells/Mysticism/SpellDefinitions/BombardSpell.cs
index f91486e39..be294ad45 100644
--- a/Scripts/Spells/Mysticism/SpellDefinitions/BombardSpell.cs
+++ b/Scripts/Spells/Mysticism/SpellDefinitions/BombardSpell.cs
@@ -61,11 +61,11 @@ namespace Server.Spells.Mysticism
 
                 SpellHelper.Damage(this, target, GetNewAosDamage(40, 1, 5, target), 100, 0, 0, 0, 0);
 
-                if (target is Mobile)
+                if (target is Mobile mobile)
                 {
                     Timer.DelayCall(TimeSpan.FromMilliseconds(1200), () =>
                     {
-                        if (!CheckResisted((Mobile)target))
+                        if (!CheckResisted(mobile))
                         {
                             int secs = (int)((GetDamageSkill(Caster) / 10) - (GetResistSkill((Mobile)target) / 10));
 
@@ -103,10 +103,10 @@ namespace Server.Spells.Mysticism
 
                 if (!from.CanSee(o))
                     from.SendLocalizedMessage(500237); // Target can not be seen.
-                else if (o is IDamageable)
+                else if (o is IDamageable iDamageable)
                 {
                     SpellHelper.Turn(from, o);
-                    Owner.OnTarget((IDamageable)o);
+                    Owner.OnTarget(iDamageable);
                 }
             }
 
diff --git a/Scripts/Spells/Mysticism/SpellDefinitions/EagleStrikeSpell.cs b/Scripts/Spells/Mysticism/SpellDefinitions/EagleStrikeSpell.cs
index 11666ff35..d87aa8532 100644
--- a/Scripts/Spells/Mysticism/SpellDefinitions/EagleStrikeSpell.cs
+++ b/Scripts/Spells/Mysticism/SpellDefinitions/EagleStrikeSpell.cs
@@ -92,10 +92,10 @@ namespace Server.Spells.Mysticism
 
                 if (!from.CanSee(o))
                     from.SendLocalizedMessage(500237); // Target can not be seen.
-                else if (o is IDamageable)
+                else if (o is IDamageable iDamageable)
                 {
                     SpellHelper.Turn(from, o);
-                    Owner.OnTarget((IDamageable)o);
+                    Owner.OnTarget(iDamageable);
                 }
             }
 
diff --git a/Scripts/Spells/Mysticism/SpellDefinitions/EnchantSpell .cs b/Scripts/Spells/Mysticism/SpellDefinitions/EnchantSpell .cs
index 66ecf9439..0dac78834 100644
--- a/Scripts/Spells/Mysticism/SpellDefinitions/EnchantSpell .cs	
+++ b/Scripts/Spells/Mysticism/SpellDefinitions/EnchantSpell .cs	
@@ -215,10 +215,7 @@ namespace Server.Spells.Mysticism
 
                 Enhancement.RemoveMobile(caster);
 
-                if (weapon != null)
-                {
-                    weapon.InvalidateProperties();
-                }
+                weapon?.InvalidateProperties();
 
                 BuffInfo.RemoveBuff(caster, BuffIcon.Enchant);
             }
diff --git a/Scripts/Spells/Mysticism/SpellDefinitions/HailStormSpell.cs b/Scripts/Spells/Mysticism/SpellDefinitions/HailStormSpell.cs
index 0be1c14b0..86a39857d 100644
--- a/Scripts/Spells/Mysticism/SpellDefinitions/HailStormSpell.cs
+++ b/Scripts/Spells/Mysticism/SpellDefinitions/HailStormSpell.cs
@@ -104,8 +104,8 @@ namespace Server.Spells.Mysticism
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is IPoint3D)
-                    m_Owner.OnTarget((IPoint3D)o);
+                if (o is IPoint3D iPoint3D)
+                    m_Owner.OnTarget(iPoint3D);
             }
 
             protected override void OnTargetFinish(Mobile from)
diff --git a/Scripts/Spells/Mysticism/SpellDefinitions/MassSleepSpell.cs b/Scripts/Spells/Mysticism/SpellDefinitions/MassSleepSpell.cs
index 7926bb2ec..a3b88a6ba 100644
--- a/Scripts/Spells/Mysticism/SpellDefinitions/MassSleepSpell.cs
+++ b/Scripts/Spells/Mysticism/SpellDefinitions/MassSleepSpell.cs
@@ -38,8 +38,8 @@ namespace Server.Spells.Mysticism
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is IPoint3D)
-                    m_Owner.Target((IPoint3D)o);
+                if (o is IPoint3D iPoint3D)
+                    m_Owner.Target(iPoint3D);
             }
 
             protected override void OnTargetFinish(Mobile from)
diff --git a/Scripts/Spells/Mysticism/SpellDefinitions/NetherBoltSpell.cs b/Scripts/Spells/Mysticism/SpellDefinitions/NetherBoltSpell.cs
index 1b48a2892..579a9fd70 100644
--- a/Scripts/Spells/Mysticism/SpellDefinitions/NetherBoltSpell.cs
+++ b/Scripts/Spells/Mysticism/SpellDefinitions/NetherBoltSpell.cs
@@ -89,10 +89,10 @@ namespace Server.Spells.Mysticism
 
                 if (!from.CanSee(o))
                     from.SendLocalizedMessage(500237); // Target can not be seen.
-                else if (o is IDamageable)
+                else if (o is IDamageable iDamageable)
                 {
                     SpellHelper.Turn(from, o);
-                    Owner.OnTarget((IDamageable)o);
+                    Owner.OnTarget(iDamageable);
                 }
             }
 
diff --git a/Scripts/Spells/Mysticism/SpellDefinitions/NetherCycloneSpell.cs b/Scripts/Spells/Mysticism/SpellDefinitions/NetherCycloneSpell.cs
index 3960fd80f..35542dbd6 100644
--- a/Scripts/Spells/Mysticism/SpellDefinitions/NetherCycloneSpell.cs
+++ b/Scripts/Spells/Mysticism/SpellDefinitions/NetherCycloneSpell.cs
@@ -136,10 +136,10 @@ namespace Server.Spells.Mysticism
 
                 if (!from.CanSee(o))
                     from.SendLocalizedMessage(500237); // Target can not be seen.
-                else if (o is IPoint3D)
+                else if (o is IPoint3D iPoint3D)
                 {
                     SpellHelper.Turn(from, o);
-                    Owner.OnTarget((IPoint3D)o);
+                    Owner.OnTarget(iPoint3D);
                 }
             }
 
diff --git a/Scripts/Spells/Mysticism/SpellDefinitions/RisingColossusSpell.cs b/Scripts/Spells/Mysticism/SpellDefinitions/RisingColossusSpell.cs
index 69610c9cc..944e9debb 100644
--- a/Scripts/Spells/Mysticism/SpellDefinitions/RisingColossusSpell.cs
+++ b/Scripts/Spells/Mysticism/SpellDefinitions/RisingColossusSpell.cs
@@ -73,8 +73,8 @@ namespace Server.Spells.Mysticism
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is IPoint3D)
-                    m_Owner.Target((IPoint3D)o);
+                if (o is IPoint3D iPoint3D)
+                    m_Owner.Target(iPoint3D);
             }
 
             protected override void OnTargetFinish(Mobile from)
diff --git a/Scripts/Spells/Mysticism/SpellDefinitions/StoneForm.cs b/Scripts/Spells/Mysticism/SpellDefinitions/StoneForm.cs
index 04283b3b3..d873725c9 100644
--- a/Scripts/Spells/Mysticism/SpellDefinitions/StoneForm.cs
+++ b/Scripts/Spells/Mysticism/SpellDefinitions/StoneForm.cs
@@ -62,7 +62,7 @@ namespace Server.Spells.Mysticism
             Timer.DelayCall(MobileDelta_Callback);
             m_Effected.Add(m);
 
-            string args = string.Format("{0}\t{1}\t{2}\t{3}\t{4}", "-10", "-2", GetResBonus(m).ToString(), GetMaxResistance(m).ToString(), GetDamBonus(m).ToString());
+            string args = $"{"-10"}\t{"-2"}\t{GetResBonus(m).ToString()}\t{GetMaxResistance(m).ToString()}\t{GetDamBonus(m).ToString()}";
             BuffInfo.AddBuff(m, new BuffInfo(BuffIcon.StoneForm, 1080145, 1080146, args));
             BuffInfo.AddBuff(m, new BuffInfo(BuffIcon.PoisonImmunity, 1153785, 1153814));
         }
diff --git a/Scripts/Spells/Necromancy/AnimateDeadSpell.cs b/Scripts/Spells/Necromancy/AnimateDeadSpell.cs
index 9abe13523..57a8793c0 100644
--- a/Scripts/Spells/Necromancy/AnimateDeadSpell.cs
+++ b/Scripts/Spells/Necromancy/AnimateDeadSpell.cs
@@ -280,9 +280,7 @@ namespace Server.Spells.Necromancy
             Type toSummon = null;
             SummonEntry[] entries = group.m_Entries;
 
-            BaseCreature creature = caster as BaseCreature;
-
-            if (creature != null)
+            if (caster is BaseCreature creature)
             {
                 if (creature.AIObject is NecroMageAI)
                     toSummon = typeof(FleshGolem);
@@ -332,8 +330,8 @@ namespace Server.Spells.Necromancy
 
             BaseCreature.Summon((BaseCreature)summoned, false, caster, loc, 0x28, TimeSpan.FromDays(1.0));
 
-            if (summoned is SkeletalDragon)
-                Scale((SkeletalDragon)summoned, 50); // lose 50% hp and strength
+            if (summoned is SkeletalDragon skeletalDragon)
+                Scale(skeletalDragon, 50); // lose 50% hp and strength
 
             summoned.Fame = 0;
             summoned.Karma = -1500;
diff --git a/Scripts/Spells/Necromancy/BloodOathSpell.cs b/Scripts/Spells/Necromancy/BloodOathSpell.cs
index 8fb5e18a5..32d782756 100644
--- a/Scripts/Spells/Necromancy/BloodOathSpell.cs
+++ b/Scripts/Spells/Necromancy/BloodOathSpell.cs
@@ -179,8 +179,8 @@ namespace Server.Spells.Necromancy
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is Mobile)
-                    m_Owner.Target((Mobile)o);
+                if (o is Mobile mobile)
+                    m_Owner.Target(mobile);
                 else
                     from.SendLocalizedMessage(1060508); // You can't curse that.
             }
diff --git a/Scripts/Spells/Necromancy/CorpseSkin.cs b/Scripts/Spells/Necromancy/CorpseSkin.cs
index d9b1d2783..422126786 100644
--- a/Scripts/Spells/Necromancy/CorpseSkin.cs
+++ b/Scripts/Spells/Necromancy/CorpseSkin.cs
@@ -178,8 +178,8 @@ namespace Server.Spells.Necromancy
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is Mobile)
-                    m_Owner.Target((Mobile)o);
+                if (o is Mobile mobile)
+                    m_Owner.Target(mobile);
             }
 
             protected override void OnTargetFinish(Mobile from)
diff --git a/Scripts/Spells/Necromancy/EvilOmen.cs b/Scripts/Spells/Necromancy/EvilOmen.cs
index 05ca3dd7f..082e025cb 100644
--- a/Scripts/Spells/Necromancy/EvilOmen.cs
+++ b/Scripts/Spells/Necromancy/EvilOmen.cs
@@ -137,8 +137,8 @@ namespace Server.Spells.Necromancy
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is Mobile)
-                    m_Owner.Target((Mobile)o);
+                if (o is Mobile mobile)
+                    m_Owner.Target(mobile);
                 else
                     from.SendLocalizedMessage(1060508); // You can't curse that.
             }
diff --git a/Scripts/Spells/Necromancy/Exorcism.cs b/Scripts/Spells/Necromancy/Exorcism.cs
index a5b2f3822..c2e9f96f3 100644
--- a/Scripts/Spells/Necromancy/Exorcism.cs
+++ b/Scripts/Spells/Necromancy/Exorcism.cs
@@ -153,11 +153,9 @@ namespace Server.Spells.Necromancy
         {
             if (!m.Player || m.Alive)
                 return false;
-
-            Corpse c = m.Corpse as Corpse;
             Map map = m.Map;
 
-            if (c != null && !c.Deleted && map != null && c.Map == map)
+            if (m.Corpse is Corpse c && !c.Deleted && map != null && c.Map == map)
             {
                 if (SpellHelper.IsAnyT2A(map, c.Location) && SpellHelper.IsAnyT2A(map, m.Location))
                     return false;	//Same Map, both in T2A, ie, same 'sub server'.
diff --git a/Scripts/Spells/Necromancy/MindRot.cs b/Scripts/Spells/Necromancy/MindRot.cs
index 411761f4f..783b9ead3 100644
--- a/Scripts/Spells/Necromancy/MindRot.cs
+++ b/Scripts/Spells/Necromancy/MindRot.cs
@@ -124,8 +124,8 @@ namespace Server.Spells.Necromancy
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is Mobile)
-                    m_Owner.Target((Mobile)o);
+                if (o is Mobile mobile)
+                    m_Owner.Target(mobile);
                 else
                     from.SendLocalizedMessage(1060508); // You can't curse that.
             }
diff --git a/Scripts/Spells/Necromancy/PainSpike.cs b/Scripts/Spells/Necromancy/PainSpike.cs
index 292c62e37..01cc886a2 100644
--- a/Scripts/Spells/Necromancy/PainSpike.cs
+++ b/Scripts/Spells/Necromancy/PainSpike.cs
@@ -139,8 +139,8 @@ namespace Server.Spells.Necromancy
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is Mobile)
-                    m_Owner.Target((Mobile)o);
+                if (o is Mobile mobile)
+                    m_Owner.Target(mobile);
             }
 
             protected override void OnTargetFinish(Mobile from)
diff --git a/Scripts/Spells/Necromancy/PoisonStrike.cs b/Scripts/Spells/Necromancy/PoisonStrike.cs
index 1d91603b6..7dcaffe5d 100644
--- a/Scripts/Spells/Necromancy/PoisonStrike.cs
+++ b/Scripts/Spells/Necromancy/PoisonStrike.cs
@@ -96,8 +96,8 @@ namespace Server.Spells.Necromancy
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is IDamageable)
-                    m_Owner.Target((IDamageable)o);
+                if (o is IDamageable iDamageable)
+                    m_Owner.Target(iDamageable);
             }
 
             protected override void OnTargetFinish(Mobile from)
diff --git a/Scripts/Spells/Necromancy/Strangle.cs b/Scripts/Spells/Necromancy/Strangle.cs
index d11b45e8d..405baa246 100644
--- a/Scripts/Spells/Necromancy/Strangle.cs
+++ b/Scripts/Spells/Necromancy/Strangle.cs
@@ -104,7 +104,7 @@ namespace Server.Spells.Necromancy
                     spiritlevel = 4;
                 int d_MinDamage = (int)(4.0 * strength);
                 int d_MaxDamage = (int)(((spiritlevel + 1) * 3) * strength);
-                string args = string.Format("{0}\t{1}", d_MinDamage, d_MaxDamage);
+                string args = $"{d_MinDamage}\t{d_MaxDamage}";
 
                 int i_Count = (int)spiritlevel;
                 int i_MaxCount = i_Count;
@@ -243,8 +243,8 @@ namespace Server.Spells.Necromancy
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is Mobile)
-                    m_Owner.Target((Mobile)o);
+                if (o is Mobile mobile)
+                    m_Owner.Target(mobile);
             }
 
             protected override void OnTargetFinish(Mobile from)
diff --git a/Scripts/Spells/Necromancy/SummonFamiliar.cs b/Scripts/Spells/Necromancy/SummonFamiliar.cs
index b1a372a92..e22af1f0a 100644
--- a/Scripts/Spells/Necromancy/SummonFamiliar.cs
+++ b/Scripts/Spells/Necromancy/SummonFamiliar.cs
@@ -137,7 +137,7 @@ namespace Server.Spells.Necromancy
                 if (name is int)
                     AddHtmlLocalized(50, 51 + (i * 21), 150, 20, (int)name, enabled ? EnabledColor16 : DisabledColor16, false, false);
                 else if (name is string)
-                    AddHtml(50, 51 + (i * 21), 150, 20, string.Format("<BASEFONT COLOR=#{0:X6}>{1}</BASEFONT>", enabled ? EnabledColor32 : DisabledColor32, name), false, false);
+                    AddHtml(50, 51 + (i * 21), 150, 20, $"<BASEFONT COLOR=#{(enabled ? EnabledColor32 : DisabledColor32):X6}>{name}</BASEFONT>", false, false);
             }
         }
 
diff --git a/Scripts/Spells/Necromancy/VampiricEmbrace.cs b/Scripts/Spells/Necromancy/VampiricEmbrace.cs
index 5879c1062..70836eb12 100644
--- a/Scripts/Spells/Necromancy/VampiricEmbrace.cs
+++ b/Scripts/Spells/Necromancy/VampiricEmbrace.cs
@@ -53,7 +53,7 @@ namespace Server.Spells.Necromancy
             Effects.SendLocationParticles(EffectItem.Create(m.Location, m.Map, EffectItem.DefaultDuration), 0x376A, 1, 22, 67, 7, 9502, 0);
             Effects.PlaySound(m.Location, m.Map, 0x4B1);
 
-            BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.VampiricEmbrace, 1028812, 1153768, string.Format("{0}\t{1}\t{2}\t{3}", "20", "15", "3", "25")));
+            BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.VampiricEmbrace, 1028812, 1153768, $"{"20"}\t{"15"}\t{"3"}\t{"25"}"));
             BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.PoisonImmunity, 1153785, 1153814));
 
             m.ResetStatTimers();
diff --git a/Scripts/Spells/Necromancy/VengefulSpirit.cs b/Scripts/Spells/Necromancy/VengefulSpirit.cs
index 28fe9f4bd..dfd83be8f 100644
--- a/Scripts/Spells/Necromancy/VengefulSpirit.cs
+++ b/Scripts/Spells/Necromancy/VengefulSpirit.cs
@@ -78,8 +78,8 @@ namespace Server.Spells.Necromancy
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is Mobile)
-                    m_Owner.Target((Mobile)o);
+                if (o is Mobile mobile)
+                    m_Owner.Target(mobile);
             }
 
             protected override void OnTargetFinish(Mobile from)
diff --git a/Scripts/Spells/Necromancy/WraithForm.cs b/Scripts/Spells/Necromancy/WraithForm.cs
index 9bbadabdb..4a79324af 100644
--- a/Scripts/Spells/Necromancy/WraithForm.cs
+++ b/Scripts/Spells/Necromancy/WraithForm.cs
@@ -28,15 +28,15 @@ namespace Server.Spells.Necromancy
         public override int NrgyResistOffset => -5;
         public override void DoEffect(Mobile m)
         {
-            if (m is PlayerMobile)
-                ((PlayerMobile)m).IgnoreMobiles = true;
+            if (m is PlayerMobile playerMobile)
+                playerMobile.IgnoreMobiles = true;
 
             m.PlaySound(0x17F);
             m.FixedParticles(0x374A, 1, 15, 9902, 1108, 4, EffectLayer.Waist);
 
             int manadrain = Math.Max(8, 5 + (int)(0.16 * m.Skills.SpiritSpeak.Value));
 
-            BuffInfo.AddBuff(m, new BuffInfo(BuffIcon.WraithForm, 1060524, 1153829, string.Format("15\t5\t5\t{0}", manadrain)));
+            BuffInfo.AddBuff(m, new BuffInfo(BuffIcon.WraithForm, 1060524, 1153829, $"15\t5\t5\t{manadrain}"));
         }
 
         public override void RemoveEffect(Mobile m)
diff --git a/Scripts/Spells/Ninjitsu/AnimalForm.cs b/Scripts/Spells/Ninjitsu/AnimalForm.cs
index 953fba8c2..63ceb2846 100644
--- a/Scripts/Spells/Ninjitsu/AnimalForm.cs
+++ b/Scripts/Spells/Ninjitsu/AnimalForm.cs
@@ -205,7 +205,7 @@ namespace Server.Spells.Ninjitsu
 
             if (m.Skills.Ninjitsu.Value < entry.ReqSkill)
             {
-                string args = string.Format("{0}\t{1}\t ", entry.ReqSkill.ToString("F1"), SkillName.Ninjitsu);
+                string args = $"{entry.ReqSkill.ToString("F1")}\t{SkillName.Ninjitsu}\t ";
                 m.SendLocalizedMessage(1063013, args);
                 // You need at least ~1_SKILL_REQUIREMENT~ ~2_SKILL_NAME~ skill to use that ability.
                 return MorphResult.NoSkill;
@@ -539,7 +539,7 @@ namespace Server.Spells.Ninjitsu
 
             private string Color(string str, int color)
             {
-                return string.Format("<BASEFONT COLOR=#{0:X6}>{1}</BASEFONT>", color, str);
+                return $"<BASEFONT COLOR=#{color:X6}>{str}</BASEFONT>";
             }
 
             public override void OnResponse(NetState sender, RelayInfo info)
@@ -574,7 +574,7 @@ namespace Server.Spells.Ninjitsu
 
                         string typename = entry.Name;
 
-                        BuffInfo.AddBuff(m_Caster, new BuffInfo(BuffIcon.AnimalForm, 1060612, 1075823, string.Format("{0}\t{1}", "aeiouy".IndexOf(typename.ToLower()[0]) >= 0 ? "an" : "a", typename)));
+                        BuffInfo.AddBuff(m_Caster, new BuffInfo(BuffIcon.AnimalForm, 1060612, 1075823, $"{("aeiouy".IndexOf(typename.ToLower()[0]) >= 0 ? "an" : "a")}\t{typename}"));
                     }
                 }
             }
@@ -639,9 +639,7 @@ namespace Server.Spells.Ninjitsu
                     {
                         if (m_Mobile.Hits < m_Mobile.HitsMax && m_Mobile.Backpack != null)
                         {
-                            Bandage b = m_Mobile.Backpack.FindItemByType(typeof(Bandage)) as Bandage;
-
-                            if (b != null)
+                            if (m_Mobile.Backpack.FindItemByType(typeof(Bandage)) is Bandage b)
                             {
                                 m_Mobile.Hits += Utility.RandomMinMax(20, 50);
                                 b.Consume();
diff --git a/Scripts/Spells/Ninjitsu/DeathStrike.cs b/Scripts/Spells/Ninjitsu/DeathStrike.cs
index adb7f2939..01a4f2049 100644
--- a/Scripts/Spells/Ninjitsu/DeathStrike.cs
+++ b/Scripts/Spells/Ninjitsu/DeathStrike.cs
@@ -96,7 +96,7 @@ namespace Server.Spells.Ninjitsu
 
             m_Table[defender] = info;
 
-            BuffInfo.AddBuff(defender, new BuffInfo(BuffIcon.DeathStrike, 1075645, DamageDelay, defender, string.Format("{0}", _totaldamage)));
+            BuffInfo.AddBuff(defender, new BuffInfo(BuffIcon.DeathStrike, 1075645, DamageDelay, defender, $"{_totaldamage}"));
         }
 
         private static void ProcessDeathStrike(DeathStrikeInfo info)
diff --git a/Scripts/Spells/Ninjitsu/FocusAttack.cs b/Scripts/Spells/Ninjitsu/FocusAttack.cs
index 296975c07..0f59ea627 100644
--- a/Scripts/Spells/Ninjitsu/FocusAttack.cs
+++ b/Scripts/Spells/Ninjitsu/FocusAttack.cs
@@ -15,14 +15,10 @@ namespace Server.Spells.Ninjitsu
                 return false;
             }
 
-            Item handOne = from.FindItemOnLayer(Layer.OneHanded) as BaseWeapon;
-
-            if (handOne != null && !(handOne is BaseRanged))
+            if (from.FindItemOnLayer(Layer.OneHanded) is BaseWeapon handOne && !(handOne is BaseRanged))
                 return base.Validate(from);
 
-            Item handTwo = from.FindItemOnLayer(Layer.TwoHanded) as BaseWeapon;
-
-            if (handTwo != null && !(handTwo is BaseRanged))
+            if (from.FindItemOnLayer(Layer.TwoHanded) is BaseWeapon handTwo && !(handTwo is BaseRanged))
                 return base.Validate(from);
 
             from.SendLocalizedMessage(1063097); // You must be wielding a melee weapon without a shield to use this ability.
@@ -62,9 +58,7 @@ namespace Server.Spells.Ninjitsu
 
         public override void OnUse(Mobile from)
         {
-            BaseWeapon wep = from.Weapon as BaseWeapon;
-
-            if (wep != null)
+            if (from.Weapon is BaseWeapon wep)
             {
                 wep.FocusWeilder = from;
                 wep.InvalidateProperties();
@@ -75,7 +69,7 @@ namespace Server.Spells.Ninjitsu
         {
             BaseWeapon wep = from.Weapon as BaseWeapon;
 
-            if (wep != null && wep.FocusWeilder != null)
+            if (wep?.FocusWeilder != null)
             {
                 wep.FocusWeilder = null;
                 wep.InvalidateProperties();
diff --git a/Scripts/Spells/Ninjitsu/KiAttack.cs b/Scripts/Spells/Ninjitsu/KiAttack.cs
index bd3a8b986..ef9c92620 100644
--- a/Scripts/Spells/Ninjitsu/KiAttack.cs
+++ b/Scripts/Spells/Ninjitsu/KiAttack.cs
@@ -48,9 +48,7 @@ namespace Server.Spells.Ninjitsu
                 return false;
             }
 
-            BaseRanged ranged = from.Weapon as BaseRanged;
-
-            if (ranged != null)
+            if (from.Weapon is BaseRanged ranged)
             {
                 from.SendLocalizedMessage(1075858); // You can only use this with melee attacks.
                 return false;
@@ -92,9 +90,7 @@ namespace Server.Spells.Ninjitsu
 
         public override void OnClearMove(Mobile from)
         {
-            KiAttackInfo info = m_Table[from] as KiAttackInfo;
-
-            if (info != null)
+            if (m_Table[from] is KiAttackInfo info)
             {
                 if (info.m_Timer != null)
                     info.m_Timer.Stop();
diff --git a/Scripts/Spells/Ninjitsu/MirrorImage.cs b/Scripts/Spells/Ninjitsu/MirrorImage.cs
index 0e9b648ee..a47bedc70 100644
--- a/Scripts/Spells/Ninjitsu/MirrorImage.cs
+++ b/Scripts/Spells/Ninjitsu/MirrorImage.cs
@@ -131,10 +131,7 @@ namespace Server.Spells.Ninjitsu
 
                     if (clone != null && clone.Summoned && clone.SummonMaster == defender)
                     {
-                        if (attacker != null)
-                        {
-                            attacker.SendLocalizedMessage(1063141); // Your attack has been diverted to a nearby mirror image of your target!
-                        }
+                        attacker?.SendLocalizedMessage(1063141);
 
                         defender.SendLocalizedMessage(1063140); // You manage to divert the attack onto one of your nearby mirror images.
                         break;
diff --git a/Scripts/Spells/Ninjitsu/NinjaSpell.cs b/Scripts/Spells/Ninjitsu/NinjaSpell.cs
index d3929e00b..928cf5799 100644
--- a/Scripts/Spells/Ninjitsu/NinjaSpell.cs
+++ b/Scripts/Spells/Ninjitsu/NinjaSpell.cs
@@ -26,7 +26,7 @@ namespace Server.Spells.Ninjitsu
 
             if (Caster.Skills[CastSkill].Value < RequiredSkill)
             {
-                string args = string.Format("{0}\t{1}\t ", RequiredSkill.ToString("F1"), CastSkill.ToString());
+                string args = $"{RequiredSkill.ToString("F1")}\t{CastSkill.ToString()}\t ";
                 Caster.SendLocalizedMessage(1063013, args); // You need at least ~1_SKILL_REQUIREMENT~ ~2_SKILL_NAME~ skill to use that ability.
                 return false;
             }
diff --git a/Scripts/Spells/Ninjitsu/ShadowJump.cs b/Scripts/Spells/Ninjitsu/ShadowJump.cs
index 9bf1692c1..0ba1be5a1 100644
--- a/Scripts/Spells/Ninjitsu/ShadowJump.cs
+++ b/Scripts/Spells/Ninjitsu/ShadowJump.cs
@@ -109,9 +109,7 @@ namespace Server.Spells.Ninjitsu
 
             protected override void OnTarget(Mobile from, object o)
             {
-                IPoint3D p = o as IPoint3D;
-
-                if (p != null)
+                if (o is IPoint3D p)
                     m_Owner.Target(p);
             }
 
diff --git a/Scripts/Spells/Second/Agility.cs b/Scripts/Spells/Second/Agility.cs
index bc910521b..50aeec37b 100644
--- a/Scripts/Spells/Second/Agility.cs
+++ b/Scripts/Spells/Second/Agility.cs
@@ -66,9 +66,9 @@ namespace Server.Spells.Second
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is Mobile)
+                if (o is Mobile mobile)
                 {
-                    m_Owner.Target((Mobile)o);
+                    m_Owner.Target(mobile);
                 }
             }
 
diff --git a/Scripts/Spells/Second/Cunning.cs b/Scripts/Spells/Second/Cunning.cs
index d1fdd86df..583bb0f49 100644
--- a/Scripts/Spells/Second/Cunning.cs
+++ b/Scripts/Spells/Second/Cunning.cs
@@ -66,9 +66,9 @@ namespace Server.Spells.Second
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is Mobile)
+                if (o is Mobile mobile)
                 {
-                    m_Owner.Target((Mobile)o);
+                    m_Owner.Target(mobile);
                 }
             }
 
diff --git a/Scripts/Spells/Second/Cure.cs b/Scripts/Spells/Second/Cure.cs
index 6d3fa905e..25e04856b 100644
--- a/Scripts/Spells/Second/Cure.cs
+++ b/Scripts/Spells/Second/Cure.cs
@@ -73,9 +73,9 @@ namespace Server.Spells.Second
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is Mobile)
+                if (o is Mobile mobile)
                 {
-                    m_Owner.Target((Mobile)o);
+                    m_Owner.Target(mobile);
                 }
             }
 
diff --git a/Scripts/Spells/Second/Harm.cs b/Scripts/Spells/Second/Harm.cs
index 2cf5dbcbe..daa9a80d5 100644
--- a/Scripts/Spells/Second/Harm.cs
+++ b/Scripts/Spells/Second/Harm.cs
@@ -29,7 +29,6 @@ namespace Server.Spells.Second
 
         public void Target(IDamageable m)
         {
-            Mobile mob = m as Mobile;
 
             if (!Caster.CanSee(m))
             {
@@ -49,7 +48,7 @@ namespace Server.Spells.Second
                 else if (!Caster.InRange(m, 1))
                     damage *= 0.50; // 1/2 damage at 2 tile range
 
-                if (mob != null)
+                if (m is Mobile mob)
                 {
                     mob.FixedParticles(0x374A, 10, 30, 5013, 1153, 2, EffectLayer.Waist);
                     mob.PlaySound(0x0FC);
@@ -80,9 +79,9 @@ namespace Server.Spells.Second
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is IDamageable)
+                if (o is IDamageable iDamageable)
                 {
-                    m_Owner.Target((IDamageable)o);
+                    m_Owner.Target(iDamageable);
                 }
             }
 
diff --git a/Scripts/Spells/Second/MagicTrap.cs b/Scripts/Spells/Second/MagicTrap.cs
index f218f155e..fccd32d45 100644
--- a/Scripts/Spells/Second/MagicTrap.cs
+++ b/Scripts/Spells/Second/MagicTrap.cs
@@ -66,9 +66,9 @@ namespace Server.Spells.Second
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is TrapableContainer)
+                if (o is TrapableContainer trapableContainer)
                 {
-                    m_Owner.Target((TrapableContainer)o);
+                    m_Owner.Target(trapableContainer);
                 }
                 else
                 {
diff --git a/Scripts/Spells/Second/Protection.cs b/Scripts/Spells/Second/Protection.cs
index d078c355d..a6c1615a2 100644
--- a/Scripts/Spells/Second/Protection.cs
+++ b/Scripts/Spells/Second/Protection.cs
@@ -52,7 +52,7 @@ namespace Server.Spells.Second
 
                 int physloss = -15 + (int)(caster.Skills[SkillName.Inscribe].Value / 20);
                 int resistloss = -35 + (int)(caster.Skills[SkillName.Inscribe].Value / 20);
-                string args = string.Format("{0}\t{1}", physloss, resistloss);
+                string args = $"{physloss}\t{resistloss}";
                 BuffInfo.AddBuff(target, new BuffInfo(archprotection ? BuffIcon.ArchProtection : BuffIcon.Protection, archprotection ? 1075816 : 1075814, 1075815, args.ToString()));
             }
             else
diff --git a/Scripts/Spells/Second/RemoveTrap.cs b/Scripts/Spells/Second/RemoveTrap.cs
index 9101fb2de..a0c32051a 100644
--- a/Scripts/Spells/Second/RemoveTrap.cs
+++ b/Scripts/Spells/Second/RemoveTrap.cs
@@ -60,9 +60,9 @@ namespace Server.Spells.Second
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is TrapableContainer)
+                if (o is TrapableContainer trapableContainer)
                 {
-                    m_Owner.Target((TrapableContainer)o);
+                    m_Owner.Target(trapableContainer);
                 }
                 else
                 {
diff --git a/Scripts/Spells/Second/Strength.cs b/Scripts/Spells/Second/Strength.cs
index 001417220..d755a4a28 100644
--- a/Scripts/Spells/Second/Strength.cs
+++ b/Scripts/Spells/Second/Strength.cs
@@ -66,9 +66,9 @@ namespace Server.Spells.Second
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is Mobile)
+                if (o is Mobile mobile)
                 {
-                    m_Owner.Target((Mobile)o);
+                    m_Owner.Target(mobile);
                 }
             }
 
diff --git a/Scripts/Spells/Seventh/ChainLightning.cs b/Scripts/Spells/Seventh/ChainLightning.cs
index c2f040ac8..3cc9a1558 100644
--- a/Scripts/Spells/Seventh/ChainLightning.cs
+++ b/Scripts/Spells/Seventh/ChainLightning.cs
@@ -40,8 +40,8 @@ namespace Server.Spells.Seventh
             {
                 SpellHelper.Turn(Caster, p);
 
-                if (p is Item)
-                    p = ((Item)p).GetWorldLocation();
+                if (p is Item item)
+                    p = item.GetWorldLocation();
 
                 System.Collections.Generic.List<IDamageable> targets = AcquireIndirectTargets(p, 2).ToList();
                 int count = Math.Max(1, targets.Count);
@@ -49,7 +49,6 @@ namespace Server.Spells.Seventh
                 foreach (IDamageable dam in targets)
                 {
                     IDamageable id = dam;
-                    Mobile m = id as Mobile;
                     double damage = GetNewAosDamage(51, 1, 5, id is PlayerMobile, id);
 
                     if (count > 2)
@@ -58,7 +57,7 @@ namespace Server.Spells.Seventh
                     Mobile source = Caster;
                     SpellHelper.CheckReflect(this, ref source, ref id);
 
-                    if (m != null)
+                    if (id is Mobile m)
                     {
                         damage *= GetDamageScalar(m);
                     }
@@ -86,9 +85,7 @@ namespace Server.Spells.Seventh
 
             protected override void OnTarget(Mobile from, object o)
             {
-                IPoint3D p = o as IPoint3D;
-
-                if (p != null)
+                if (o is IPoint3D p)
                     m_Owner.Target(p);
             }
 
diff --git a/Scripts/Spells/Seventh/EnergyField.cs b/Scripts/Spells/Seventh/EnergyField.cs
index 2c64a5f64..f36302b5f 100644
--- a/Scripts/Spells/Seventh/EnergyField.cs
+++ b/Scripts/Spells/Seventh/EnergyField.cs
@@ -197,8 +197,8 @@ namespace Server.Spells.Seventh
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is IPoint3D)
-                    m_Owner.Target((IPoint3D)o);
+                if (o is IPoint3D iPoint3D)
+                    m_Owner.Target(iPoint3D);
             }
 
             protected override void OnTargetFinish(Mobile from)
diff --git a/Scripts/Spells/Seventh/FlameStrike.cs b/Scripts/Spells/Seventh/FlameStrike.cs
index dc4ee1e5d..da7f1d991 100644
--- a/Scripts/Spells/Seventh/FlameStrike.cs
+++ b/Scripts/Spells/Seventh/FlameStrike.cs
@@ -64,9 +64,9 @@ namespace Server.Spells.Seventh
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is IDamageable)
+                if (o is IDamageable iDamageable)
                 {
-                    m_Owner.Target((IDamageable)o);
+                    m_Owner.Target(iDamageable);
                 }
             }
 
diff --git a/Scripts/Spells/Seventh/GateTravel.cs b/Scripts/Spells/Seventh/GateTravel.cs
index e3bd0f267..041fdfe42 100644
--- a/Scripts/Spells/Seventh/GateTravel.cs
+++ b/Scripts/Spells/Seventh/GateTravel.cs
@@ -215,7 +215,7 @@ namespace Server.Spells.Seventh
 
             public override void UseGate(Mobile m)
             {
-                if (LinkedGate == null || !(LinkedGate is InternalItem) || !((InternalItem)LinkedGate).BoatGate || !LinkedGate.Deleted)
+                if (!(LinkedGate is InternalItem) || !((InternalItem)LinkedGate).BoatGate || !LinkedGate.Deleted)
                 {
                     if (LinkedGate != null && ((InternalItem)LinkedGate).BoatGate)
                     {
@@ -302,10 +302,8 @@ namespace Server.Spells.Seventh
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is RecallRune)
+                if (o is RecallRune rune)
                 {
-                    RecallRune rune = (RecallRune)o;
-
                     if (rune.Marked)
                     {
                         if (rune.Type == RecallRuneType.Ship)
@@ -322,9 +320,9 @@ namespace Server.Spells.Seventh
                         from.SendLocalizedMessage(501805); // That rune is not yet marked.
                     }
                 }
-                else if (o is Runebook)
+                else if (o is Runebook runebook)
                 {
-                    RunebookEntry e = ((Runebook)o).Default;
+                    RunebookEntry e = runebook.Default;
 
                     if (e != null)
                     {
@@ -342,10 +340,8 @@ namespace Server.Spells.Seventh
                         from.SendLocalizedMessage(502354); // Target is not marked.
                     }
                 }
-                else if (o is Engines.NewMagincia.WritOfLease)
+                else if (o is Engines.NewMagincia.WritOfLease lease)
                 {
-                    Engines.NewMagincia.WritOfLease lease = (Engines.NewMagincia.WritOfLease)o;
-
                     if (lease.RecallLoc != Point3D.Zero && lease.Facet != null && lease.Facet != Map.Internal)
                         m_Owner.Effect(lease.RecallLoc, lease.Facet, false);
                     else
diff --git a/Scripts/Spells/Seventh/ManaVampire.cs b/Scripts/Spells/Seventh/ManaVampire.cs
index 54042ed15..69ab040cf 100644
--- a/Scripts/Spells/Seventh/ManaVampire.cs
+++ b/Scripts/Spells/Seventh/ManaVampire.cs
@@ -83,9 +83,9 @@ namespace Server.Spells.Seventh
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is Mobile)
+                if (o is Mobile mobile)
                 {
-                    m_Owner.Target((Mobile)o);
+                    m_Owner.Target(mobile);
                 }
             }
 
diff --git a/Scripts/Spells/Seventh/MassDispel.cs b/Scripts/Spells/Seventh/MassDispel.cs
index 635cd3dd3..19ad560c2 100644
--- a/Scripts/Spells/Seventh/MassDispel.cs
+++ b/Scripts/Spells/Seventh/MassDispel.cs
@@ -97,9 +97,7 @@ namespace Server.Spells.Seventh
 
             protected override void OnTarget(Mobile from, object o)
             {
-                IPoint3D p = o as IPoint3D;
-
-                if (p != null)
+                if (o is IPoint3D p)
                     m_Owner.Target(p);
             }
 
diff --git a/Scripts/Spells/Seventh/MeteorSwarm.cs b/Scripts/Spells/Seventh/MeteorSwarm.cs
index c7dba08cb..ede0d42ff 100644
--- a/Scripts/Spells/Seventh/MeteorSwarm.cs
+++ b/Scripts/Spells/Seventh/MeteorSwarm.cs
@@ -83,7 +83,6 @@ namespace Server.Spells.Seventh
 
                 foreach (IDamageable id in targets)
                 {
-                    Mobile m = id as Mobile;
                     double damage = GetNewAosDamage(51, 1, 5, id is PlayerMobile, id);
 
                     if (count > 2)
@@ -100,7 +99,7 @@ namespace Server.Spells.Seventh
                         });
                     }
 
-                    if (m != null)
+                    if (id is Mobile m)
                     {
                         damage *= GetDamageScalar(m);
                     }
@@ -131,9 +130,7 @@ namespace Server.Spells.Seventh
 
             protected override void OnTarget(Mobile from, object o)
             {
-                IPoint3D p = o as IPoint3D;
-
-                if (p != null)
+                if (o is IPoint3D p)
                     m_Owner.Target(p, m_Item);
             }
 
diff --git a/Scripts/Spells/Sixth/Dispel.cs b/Scripts/Spells/Sixth/Dispel.cs
index dce95bba2..02c4cf163 100644
--- a/Scripts/Spells/Sixth/Dispel.cs
+++ b/Scripts/Spells/Sixth/Dispel.cs
@@ -35,9 +35,8 @@ namespace Server.Spells.Sixth
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is Mobile)
+                if (o is Mobile m)
                 {
-                    Mobile m = (Mobile)o;
                     BaseCreature bc = m as BaseCreature;
 
                     if (!from.CanSee(m))
diff --git a/Scripts/Spells/Sixth/EnergyBolt.cs b/Scripts/Spells/Sixth/EnergyBolt.cs
index 52257aa52..5975eba5f 100644
--- a/Scripts/Spells/Sixth/EnergyBolt.cs
+++ b/Scripts/Spells/Sixth/EnergyBolt.cs
@@ -72,8 +72,8 @@ namespace Server.Spells.Sixth
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is IDamageable)
-                    m_Owner.Target((IDamageable)o);
+                if (o is IDamageable iDamageable)
+                    m_Owner.Target(iDamageable);
             }
 
             protected override void OnTargetFinish(Mobile from)
diff --git a/Scripts/Spells/Sixth/Explosion.cs b/Scripts/Spells/Sixth/Explosion.cs
index 32a6abcf5..8b6f71978 100644
--- a/Scripts/Spells/Sixth/Explosion.cs
+++ b/Scripts/Spells/Sixth/Explosion.cs
@@ -71,13 +71,12 @@ namespace Server.Spells.Sixth
 
             protected override void OnTick()
             {
-                Mobile defender = m_Target as Mobile;
 
                 if (m_Attacker.HarmfulCheck(m_Target))
                 {
                     double damage = m_Spell.GetNewAosDamage(40, 1, 5, m_Target);
 
-                    if (defender != null)
+                    if (m_Target is Mobile defender)
                     {
                         defender.FixedParticles(0x36BD, 20, 10, 5044, EffectLayer.Head);
                         defender.PlaySound(0x307);
@@ -110,8 +109,8 @@ namespace Server.Spells.Sixth
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is IDamageable)
-                    m_Owner.Target((IDamageable)o);
+                if (o is IDamageable iDamageable)
+                    m_Owner.Target(iDamageable);
             }
 
             protected override void OnTargetFinish(Mobile from)
diff --git a/Scripts/Spells/Sixth/Invisibility.cs b/Scripts/Spells/Sixth/Invisibility.cs
index f2d37299c..49eafb1d2 100644
--- a/Scripts/Spells/Sixth/Invisibility.cs
+++ b/Scripts/Spells/Sixth/Invisibility.cs
@@ -90,9 +90,9 @@ namespace Server.Spells.Sixth
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is Mobile)
+                if (o is Mobile mobile)
                 {
-                    m_Owner.Target((Mobile)o);
+                    m_Owner.Target(mobile);
                 }
             }
 
diff --git a/Scripts/Spells/Sixth/Mark.cs b/Scripts/Spells/Sixth/Mark.cs
index 09013f838..b77564caa 100644
--- a/Scripts/Spells/Sixth/Mark.cs
+++ b/Scripts/Spells/Sixth/Mark.cs
@@ -78,9 +78,9 @@ namespace Server.Spells.Sixth
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is RecallRune)
+                if (o is RecallRune recallRune)
                 {
-                    m_Owner.Target((RecallRune)o);
+                    m_Owner.Target(recallRune);
                 }
                 else
                 {
diff --git a/Scripts/Spells/Sixth/MassCurse.cs b/Scripts/Spells/Sixth/MassCurse.cs
index 18a9ae4f1..fabb5d466 100644
--- a/Scripts/Spells/Sixth/MassCurse.cs
+++ b/Scripts/Spells/Sixth/MassCurse.cs
@@ -57,9 +57,7 @@ namespace Server.Spells.Sixth
 
             protected override void OnTarget(Mobile from, object o)
             {
-                IPoint3D p = o as IPoint3D;
-
-                if (p != null)
+                if (o is IPoint3D p)
                     m_Owner.Target(p);
             }
 
diff --git a/Scripts/Spells/Sixth/ParalyzeField.cs b/Scripts/Spells/Sixth/ParalyzeField.cs
index f5b9987d3..89f7a3704 100644
--- a/Scripts/Spells/Sixth/ParalyzeField.cs
+++ b/Scripts/Spells/Sixth/ParalyzeField.cs
@@ -185,8 +185,8 @@ namespace Server.Spells.Sixth
                     m.PlaySound(0x204);
                     m.FixedEffect(0x376A, 10, 16);
 
-                    if (m is BaseCreature)
-                        ((BaseCreature)m).OnHarmfulSpell(m_Caster);
+                    if (m is BaseCreature baseCreature)
+                        baseCreature.OnHarmfulSpell(m_Caster);
                 }
 
                 return true;
@@ -220,8 +220,8 @@ namespace Server.Spells.Sixth
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is IPoint3D)
-                    m_Owner.Target((IPoint3D)o);
+                if (o is IPoint3D iPoint3D)
+                    m_Owner.Target(iPoint3D);
             }
 
             protected override void OnTargetFinish(Mobile from)
diff --git a/Scripts/Spells/Sixth/Reveal.cs b/Scripts/Spells/Sixth/Reveal.cs
index 9393cd410..0b273d5b7 100644
--- a/Scripts/Spells/Sixth/Reveal.cs
+++ b/Scripts/Spells/Sixth/Reveal.cs
@@ -104,9 +104,7 @@ namespace Server.Spells.Sixth
 
             protected override void OnTarget(Mobile from, object o)
             {
-                IPoint3D p = o as IPoint3D;
-
-                if (p != null)
+                if (o is IPoint3D p)
                     m_Owner.Target(p);
             }
 
diff --git a/Scripts/Spells/Skill Masteries/BardSpells/BardSpell.cs b/Scripts/Spells/Skill Masteries/BardSpells/BardSpell.cs
index 53a4ebe98..57e19ad18 100644
--- a/Scripts/Spells/Skill Masteries/BardSpells/BardSpell.cs	
+++ b/Scripts/Spells/Skill Masteries/BardSpells/BardSpell.cs	
@@ -135,9 +135,7 @@ namespace Server.Spells.SkillMasteries
             if (Target == null)
                 return 1.0;
 
-            ISlayer slayer = Instrument as ISlayer;
-
-            if (slayer != null)
+            if (Instrument is ISlayer slayer)
             {
                 SlayerEntry se1 = SlayerGroup.GetEntryByName(slayer.Slayer);
                 SlayerEntry se2 = SlayerGroup.GetEntryByName(slayer.Slayer2);
diff --git a/Scripts/Spells/Skill Masteries/BardSpells/Despair.cs b/Scripts/Spells/Skill Masteries/BardSpells/Despair.cs
index 0f78e3269..178a3265c 100644
--- a/Scripts/Spells/Skill Masteries/BardSpells/Despair.cs	
+++ b/Scripts/Spells/Skill Masteries/BardSpells/Despair.cs	
@@ -33,9 +33,7 @@ namespace Server.Spells.SkillMasteries
 
         public override void OnCast()
         {
-            BardSpell spell = GetSpell(Caster, GetType()) as BardSpell;
-
-            if (spell != null)
+            if (GetSpell(Caster, GetType()) is BardSpell spell)
             {
                 spell.Expire();
                 Caster.SendLocalizedMessage(1115774); //You halt your spellsong.
@@ -81,7 +79,7 @@ namespace Server.Spells.SkillMasteries
                 m_Damage = (int)((BaseSkillBonus * 4.5) + (CollectiveBonus * 2));
                 m_Rounds = 5 + (int)((BaseSkillBonus * .75) + (CollectiveBonus / 2));
 
-                string args = string.Format("{0}\t{1}", m_StatMod, m_Damage);
+                string args = $"{m_StatMod}\t{m_Damage}";
                 BuffInfo.AddBuff(m, new BuffInfo(BuffIcon.DespairTarget, 1115741, 1115743, args.ToString()));
                 BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.DespairCaster, 1115741, 1115743, args.ToString()));
 
@@ -150,8 +148,8 @@ namespace Server.Spells.SkillMasteries
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is Mobile)
-                    m_Owner.OnTarget((Mobile)o);
+                if (o is Mobile mobile)
+                    m_Owner.OnTarget(mobile);
             }
 
             protected override void OnTargetFinish(Mobile from)
diff --git a/Scripts/Spells/Skill Masteries/BardSpells/Perseverance.cs b/Scripts/Spells/Skill Masteries/BardSpells/Perseverance.cs
index 58813cf28..243f9e09f 100644
--- a/Scripts/Spells/Skill Masteries/BardSpells/Perseverance.cs	
+++ b/Scripts/Spells/Skill Masteries/BardSpells/Perseverance.cs	
@@ -27,9 +27,7 @@ namespace Server.Spells.SkillMasteries
 
         public override void OnCast()
         {
-            BardSpell spell = GetSpell(Caster, GetType()) as BardSpell;
-
-            if (spell != null)
+            if (GetSpell(Caster, GetType()) is BardSpell spell)
             {
                 spell.Expire();
                 Caster.SendLocalizedMessage(1115774); //You halt your spellsong.
@@ -52,7 +50,7 @@ namespace Server.Spells.SkillMasteries
             m.FixedParticles(0x373A, 10, 15, 5018, EffectLayer.Waist);
             m.SendLocalizedMessage(1115739); // The bard's spellsong fills you with a feeling of invincibility.
 
-            string args = string.Format("{0}\t-{1}\t{2}", m_PropertyBonus, m_DamageMod, m_PropertyBonus2);
+            string args = $"{m_PropertyBonus}\t-{m_DamageMod}\t{m_PropertyBonus2}";
             BuffInfo.AddBuff(m, new BuffInfo(BuffIcon.Perseverance, 1115615, 1115732, args.ToString()));
         }
 
diff --git a/Scripts/Spells/Skill Masteries/BardSpells/Resilience.cs b/Scripts/Spells/Skill Masteries/BardSpells/Resilience.cs
index 6dab70ed3..6bad15217 100644
--- a/Scripts/Spells/Skill Masteries/BardSpells/Resilience.cs	
+++ b/Scripts/Spells/Skill Masteries/BardSpells/Resilience.cs	
@@ -25,9 +25,7 @@ namespace Server.Spells.SkillMasteries
 
         public override void OnCast()
         {
-            BardSpell spell = GetSpell(Caster, GetType()) as BardSpell;
-
-            if (spell != null)
+            if (GetSpell(Caster, GetType()) is BardSpell spell)
             {
                 spell.Expire();
                 Caster.SendLocalizedMessage(1115774); //You halt your spellsong.
@@ -48,7 +46,7 @@ namespace Server.Spells.SkillMasteries
             m.FixedParticles(0x373A, 10, 15, 5018, EffectLayer.Waist);
             m.SendLocalizedMessage(1115738); // The bard's spellsong fills you with a feeling of resilience.
 
-            string args = string.Format("{0}\t{1}\t{2}", m_PropertyBonus, m_PropertyBonus, m_PropertyBonus);
+            string args = $"{m_PropertyBonus}\t{m_PropertyBonus}\t{m_PropertyBonus}";
             BuffInfo.AddBuff(m, new BuffInfo(BuffIcon.Resilience, 1115614, 1115731, args.ToString()));
 
             m.ResetStatTimers();
diff --git a/Scripts/Spells/Skill Masteries/BardSpells/Tribulation.cs b/Scripts/Spells/Skill Masteries/BardSpells/Tribulation.cs
index 5a56d0709..b1f08ce3b 100644
--- a/Scripts/Spells/Skill Masteries/BardSpells/Tribulation.cs	
+++ b/Scripts/Spells/Skill Masteries/BardSpells/Tribulation.cs	
@@ -39,9 +39,7 @@ namespace Server.Spells.SkillMasteries
 
         public override void OnCast()
         {
-            BardSpell spell = GetSpell(Caster, GetType()) as BardSpell;
-
-            if (spell != null)
+            if (GetSpell(Caster, GetType()) is BardSpell spell)
             {
                 spell.Expire();
                 Caster.SendLocalizedMessage(1115774); //You halt your spellsong.
@@ -85,10 +83,10 @@ namespace Server.Spells.SkillMasteries
                 m_Rounds = 5 + (int)((BaseSkillBonus * .75) + (CollectiveBonus / 2));                       // 5 - 11 (14)
 
                 // ~1_HCI~% Hit Chance.<br>~2_SDI~% Spell Damage.<br>Damage taken has a ~3_EXP~% chance to cause additional burst of physical damage.<br>
-                BuffInfo.AddBuff(m, new BuffInfo(BuffIcon.TribulationTarget, 1115740, 1115742, string.Format("{0}\t{1}\t{2}", m_PropertyBonus, m_PropertyBonus, (int)m_DamageChance)));
+                BuffInfo.AddBuff(m, new BuffInfo(BuffIcon.TribulationTarget, 1115740, 1115742, $"{m_PropertyBonus}\t{m_PropertyBonus}\t{(int)m_DamageChance}"));
 
                 // Target: ~1_val~ <br> Damage Factor: ~2_val~% <br> Damage Chance: ~3_val~%
-                BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.TribulationCaster, 1115740, 1151388, string.Format("{0}\t{1}\t{2}", m.Name, m_DamageFactor, (int)m_DamageChance)));
+                BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.TribulationCaster, 1115740, 1151388, $"{m.Name}\t{m_DamageFactor}\t{(int)m_DamageChance}"));
 
                 BeginTimer();
             }
@@ -150,8 +148,8 @@ namespace Server.Spells.SkillMasteries
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is Mobile)
-                    m_Owner.OnTarget((Mobile)o);
+                if (o is Mobile mobile)
+                    m_Owner.OnTarget(mobile);
             }
 
             protected override void OnTargetFinish(Mobile from)
diff --git a/Scripts/Spells/Skill Masteries/BardSpells/inspire.cs b/Scripts/Spells/Skill Masteries/BardSpells/inspire.cs
index 0523ea294..e4b3b8629 100644
--- a/Scripts/Spells/Skill Masteries/BardSpells/inspire.cs	
+++ b/Scripts/Spells/Skill Masteries/BardSpells/inspire.cs	
@@ -27,9 +27,7 @@ namespace Server.Spells.SkillMasteries
 
         public override void OnCast()
         {
-            BardSpell spell = GetSpell(Caster, GetType()) as BardSpell;
-
-            if (spell != null)
+            if (GetSpell(Caster, GetType()) is BardSpell spell)
             {
                 spell.Expire();
                 Caster.SendLocalizedMessage(1115774); //You halt your spellsong.
@@ -52,7 +50,7 @@ namespace Server.Spells.SkillMasteries
             m.FixedParticles(0x373A, 10, 15, 5018, EffectLayer.Waist);
             m.SendLocalizedMessage(1115736); // You feel inspired by the bard's spellsong.
 
-            string args = string.Format("{0}\t{1}\t{2}\t{3}", m_PropertyBonus, m_PropertyBonus, m_DamageBonus, m_DamageModifier);
+            string args = $"{m_PropertyBonus}\t{m_PropertyBonus}\t{m_DamageBonus}\t{m_DamageModifier}";
             BuffInfo.AddBuff(m, new BuffInfo(BuffIcon.Inspire, 1115683, 1151951, args.ToString()));
         }
 
diff --git a/Scripts/Spells/Skill Masteries/BardSpells/invigorate.cs b/Scripts/Spells/Skill Masteries/BardSpells/invigorate.cs
index 903a7d49d..9f3544afb 100644
--- a/Scripts/Spells/Skill Masteries/BardSpells/invigorate.cs	
+++ b/Scripts/Spells/Skill Masteries/BardSpells/invigorate.cs	
@@ -35,9 +35,7 @@ namespace Server.Spells.SkillMasteries
 
         public override void OnCast()
         {
-            BardSpell spell = GetSpell(Caster, GetType()) as BardSpell;
-
-            if (spell != null)
+            if (GetSpell(Caster, GetType()) is BardSpell spell)
             {
                 spell.Expire();
                 Caster.SendLocalizedMessage(1115774); //You halt your spellsong.
@@ -59,7 +57,7 @@ namespace Server.Spells.SkillMasteries
             m.FixedParticles(0x373A, 10, 15, 5018, EffectLayer.Waist);
             m.SendLocalizedMessage(1115737); // You feel invigorated by the bard's spellsong.
 
-            string args = string.Format("{0}\t{1}\t{2}\t{3}", m_HPBonus, m_StatBonus, m_StatBonus, m_StatBonus);
+            string args = $"{m_HPBonus}\t{m_StatBonus}\t{m_StatBonus}\t{m_StatBonus}";
             BuffInfo.AddBuff(m, new BuffInfo(BuffIcon.Invigorate, 1115613, 1115730, args.ToString()));
 
             m.AddStatMod(new StatMod(StatType.Str, StatModName + "str", m_StatBonus, TimeSpan.Zero));
diff --git a/Scripts/Spells/Skill Masteries/BodyGuard.cs b/Scripts/Spells/Skill Masteries/BodyGuard.cs
index e85ed9d9b..b92166662 100644
--- a/Scripts/Spells/Skill Masteries/BodyGuard.cs	
+++ b/Scripts/Spells/Skill Masteries/BodyGuard.cs	
@@ -117,9 +117,9 @@ namespace Server.Spells.SkillMasteries
                     {
                         Caster.PlaySound(Caster.Female ? 0x338 : 0x44A);
                     }
-                    else if (Caster is BaseCreature)
+                    else if (Caster is BaseCreature baseCreature)
                     {
-                        Caster.PlaySound(((BaseCreature)Caster).GetAngerSound());
+                        Caster.PlaySound(baseCreature.GetAngerSound());
                     }
 
                     if (Caster is PlayerMobile)
@@ -150,8 +150,8 @@ namespace Server.Spells.SkillMasteries
                 Caster.SendLocalizedMessage(1049452, "\t" + toGuard.Name); // You are now protecting ~2_NAME~.
                 toGuard.SendLocalizedMessage(1049451, Caster.Name); // You are now being protected by ~1_NAME~.
 
-                BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.Bodyguard, 1155924, 1156061, TimeSpan.FromSeconds(90), Caster, string.Format("{0}\t{1}\t{2}\t{3}", Caster.Name, ((int)(_Block + 5)).ToString(), toGuard.Name, ((int)_Block).ToString())));
-                BuffInfo.AddBuff(toGuard, new BuffInfo(BuffIcon.Bodyguard, 1155924, 1156061, TimeSpan.FromSeconds(90), toGuard, string.Format("{0}\t{1}\t{2}\t{3}", Caster.Name, ((int)(_Block + 5)).ToString(), toGuard.Name, ((int)_Block).ToString())));
+                BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.Bodyguard, 1155924, 1156061, TimeSpan.FromSeconds(90), Caster, $"{Caster.Name}\t{((int)(_Block + 5)).ToString()}\t{toGuard.Name}\t{((int)_Block).ToString()}"));
+                BuffInfo.AddBuff(toGuard, new BuffInfo(BuffIcon.Bodyguard, 1155924, 1156061, TimeSpan.FromSeconds(90), toGuard, $"{Caster.Name}\t{((int)(_Block + 5)).ToString()}\t{toGuard.Name}\t{((int)_Block).ToString()}"));
                 //~1_NAME~ receives ~2_DAMAGE~% of all damage dealt to ~3_NAME~. All damage dealt to ~3_NAME~ will be reduced by ~4_DAMAGE~%. Body guard must be within 2 tiles. 
             }
 
@@ -278,7 +278,7 @@ namespace Server.Spells.SkillMasteries
             AddAlphaRegion(15, 15, 365, 190);
 
             AddHtmlLocalized(30, 20, 360, 25, 1156099, 0x7FFF, false, false); // Another player is offering to bodyguard you:
-            AddLabel(90, 55, 1153, string.Format("{0} will body guard {1}", protector.Name, protectee.Name));
+            AddLabel(90, 55, 1153, $"{protector.Name} will body guard {protectee.Name}");
 
             AddImage(50, 45, 9005);
             AddImageTiled(80, 80, 200, 1, 9107);
diff --git a/Scripts/Spells/Skill Masteries/CalledShot.cs b/Scripts/Spells/Skill Masteries/CalledShot.cs
index 18abe6506..3fb626027 100644
--- a/Scripts/Spells/Skill Masteries/CalledShot.cs	
+++ b/Scripts/Spells/Skill Masteries/CalledShot.cs	
@@ -39,9 +39,7 @@ namespace Server.Spells.SkillMasteries
                 return false;
             }
 
-            CalledShotSpell spell = GetSpell(Caster, GetType()) as CalledShotSpell;
-
-            if (spell != null)
+            if (GetSpell(Caster, GetType()) is CalledShotSpell spell)
             {
                 spell.Expire();
                 return false;
@@ -74,7 +72,7 @@ namespace Server.Spells.SkillMasteries
 
                 AddToCooldown(TimeSpan.FromSeconds(60));
 
-                BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.CalledShot, 1156025, 1156026, duration, Caster, string.Format("{0}\t{1}", _HCIBonus.ToString(), _DamageBonus.ToString())));
+                BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.CalledShot, 1156025, 1156026, duration, Caster, $"{_HCIBonus.ToString()}\t{_DamageBonus.ToString()}"));
                 //Hit Chance Increase: ~1_VAL~%<br>Damage Increase: ~2_VAL~%
             }
 
@@ -99,9 +97,7 @@ namespace Server.Spells.SkillMasteries
 
         public static int GetHitChanceBonus(Mobile m)
         {
-            CalledShotSpell spell = GetSpell(m, typeof(CalledShotSpell)) as CalledShotSpell;
-
-            if (spell != null)
+            if (GetSpell(m, typeof(CalledShotSpell)) is CalledShotSpell spell)
                 return spell._HCIBonus;
 
             return 0;
diff --git a/Scripts/Spells/Skill Masteries/CombatTraining.cs b/Scripts/Spells/Skill Masteries/CombatTraining.cs
index 0e2fc16b4..89fde21c5 100644
--- a/Scripts/Spells/Skill Masteries/CombatTraining.cs	
+++ b/Scripts/Spells/Skill Masteries/CombatTraining.cs	
@@ -65,9 +65,7 @@ namespace Server.Spells.SkillMasteries
 
         public override bool Cast()
         {
-            CombatTrainingSpell spell = GetSpell(Caster, typeof(CombatTrainingSpell)) as CombatTrainingSpell;
-
-            if (spell != null)
+            if (GetSpell(Caster, typeof(CombatTrainingSpell)) is CombatTrainingSpell spell)
             {
                 spell.Expire();
                 return false;
@@ -101,7 +99,7 @@ namespace Server.Spells.SkillMasteries
 
         public void OnSelected(TrainingType type, Mobile target)
         {
-            if (!CheckSequence() || (type == TrainingType.AsOne && Caster is PlayerMobile && ((PlayerMobile)Caster).AllFollowers.Where(mob => mob != target).Count() == 0))
+            if (!CheckSequence() || (type == TrainingType.AsOne && Caster is PlayerMobile && !((PlayerMobile)Caster).AllFollowers.Any(mob => mob != target)))
             {
                 FinishSequence();
                 return;
@@ -116,7 +114,7 @@ namespace Server.Spells.SkillMasteries
 
             Target.FixedParticles(0x373A, 10, 80, 5018, 0, 0, EffectLayer.Waist);
 
-            BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.CombatTraining, 1155933, 1156107, string.Format("{0}\t{1}\t{2}", SpellType.ToString(), Target.Name, ScaleUpkeep().ToString())));
+            BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.CombatTraining, 1155933, 1156107, $"{SpellType.ToString()}\t{Target.Name}\t{ScaleUpkeep().ToString()}"));
             //You train ~2_NAME~ to use ~1_SKILLNAME~.<br>Mana Upkeep: ~3_COST~
 
             FinishSequence();
diff --git a/Scripts/Spells/Skill Masteries/CommandUndead.cs b/Scripts/Spells/Skill Masteries/CommandUndead.cs
index 9b3201bc4..9243f4a15 100644
--- a/Scripts/Spells/Skill Masteries/CommandUndead.cs	
+++ b/Scripts/Spells/Skill Masteries/CommandUndead.cs	
@@ -89,9 +89,9 @@ namespace Server.Spells.SkillMasteries
                                 }
                             }
 
-                            if (bc is SkeletalDragon)
+                            if (bc is SkeletalDragon skeletalDragon)
                             {
-                                Engines.Quests.Doom.BellOfTheDead.TryRemoveDragon((SkeletalDragon)bc);
+                                Engines.Quests.Doom.BellOfTheDead.TryRemoveDragon(skeletalDragon);
                             }
 
                             Caster.PlaySound(0x5C4);
diff --git a/Scripts/Spells/Skill Masteries/Conduit.cs b/Scripts/Spells/Skill Masteries/Conduit.cs
index d8db9e8cc..6437b1eaa 100644
--- a/Scripts/Spells/Skill Masteries/Conduit.cs	
+++ b/Scripts/Spells/Skill Masteries/Conduit.cs	
@@ -47,9 +47,7 @@ namespace Server.Spells.SkillMasteries
 
         protected override void OnTarget(object o)
         {
-            IPoint3D p = o as IPoint3D;
-
-            if (p != null && CheckSequence())
+            if (o is IPoint3D p && CheckSequence())
             {
                 Rectangle2D rec = new Rectangle2D(p.X - 3, p.Y - 3, 6, 6);
                 Skulls = new List<Item>();
diff --git a/Scripts/Spells/Skill Masteries/Core/MasteryInfo.cs b/Scripts/Spells/Skill Masteries/Core/MasteryInfo.cs
index ea927f5ae..e33751497 100644
--- a/Scripts/Spells/Skill Masteries/Core/MasteryInfo.cs	
+++ b/Scripts/Spells/Skill Masteries/Core/MasteryInfo.cs	
@@ -332,18 +332,14 @@ namespace Server.Spells.SkillMasteries
             {
                 foreach (Item item in m.Backpack.FindItemsByType(typeof(BookOfMasteries)))
                 {
-                    BookOfMasteries book = item as BookOfMasteries;
-
-                    if (book != null)
+                    if (item is BookOfMasteries book)
                         book.InvalidateProperties();
                 }
             }
 
             foreach (Item item in m.Items.Where(i => i is BookOfMasteries))
             {
-                BookOfMasteries book = item as BookOfMasteries;
-
-                if (book != null)
+                if (item is BookOfMasteries book)
                     book.InvalidateProperties();
             }
         }
diff --git a/Scripts/Spells/Skill Masteries/Core/SelectMasteryGump.cs b/Scripts/Spells/Skill Masteries/Core/SelectMasteryGump.cs
index 23b8b24b4..f57b88ea4 100644
--- a/Scripts/Spells/Skill Masteries/Core/SelectMasteryGump.cs	
+++ b/Scripts/Spells/Skill Masteries/Core/SelectMasteryGump.cs	
@@ -65,7 +65,7 @@ namespace Server.Gumps
                 BookOfMasteries.AddToCooldown(User);
             }
             else
-                User.SendLocalizedMessage(1156236, string.Format("{0}\t{1}", MasteryInfo.MinSkillRequirement.ToString(), User.Skills[n].Info.Name)); // You need at least ~1_SKILL_REQUIREMENT~ ~2_SKILL_NAME~ skill to use that mastery.
+                User.SendLocalizedMessage(1156236, $"{MasteryInfo.MinSkillRequirement.ToString()}\t{User.Skills[n].Info.Name}"); // You need at least ~1_SKILL_REQUIREMENT~ ~2_SKILL_NAME~ skill to use that mastery.
         }
     }
 }
diff --git a/Scripts/Spells/Skill Masteries/Core/SkillMasteryMove.cs b/Scripts/Spells/Skill Masteries/Core/SkillMasteryMove.cs
index 03b5cef28..766b04b8e 100644
--- a/Scripts/Spells/Skill Masteries/Core/SkillMasteryMove.cs	
+++ b/Scripts/Spells/Skill Masteries/Core/SkillMasteryMove.cs	
@@ -64,9 +64,7 @@ namespace Server.Spells.SkillMasteries
             if (!from.Player)
                 return true;
 
-            BaseWeapon wep = from.Weapon as BaseWeapon;
-
-            return wep != null && wep.DefSkill == MoveSkill;
+            return from.Weapon is BaseWeapon wep && wep.DefSkill == MoveSkill;
         }
 
         public virtual bool IsInCooldown(Mobile m)
diff --git a/Scripts/Spells/Skill Masteries/Core/SkillMasteryPrimer.cs b/Scripts/Spells/Skill Masteries/Core/SkillMasteryPrimer.cs
index a8da63434..7f3ccf2f3 100644
--- a/Scripts/Spells/Skill Masteries/Core/SkillMasteryPrimer.cs	
+++ b/Scripts/Spells/Skill Masteries/Core/SkillMasteryPrimer.cs	
@@ -29,11 +29,11 @@ namespace Server.Items
             {
                 if (MasteryInfo.HasLearned(from, Skill, Volume))
                 {
-                    from.SendLocalizedMessage(1155884, string.Format("#{0}", MasteryInfo.GetLocalization(Skill))); // You are already proficient in this level of ~1_MasterySkill~
+                    from.SendLocalizedMessage(1155884, $"#{MasteryInfo.GetLocalization(Skill)}"); // You are already proficient in this level of ~1_MasterySkill~
                 }
                 else if (MasteryInfo.LearnMastery(from, Skill, Volume))
                 {
-                    from.SendLocalizedMessage(1155885, string.Format("#{0}", MasteryInfo.GetLocalization(Skill))); // You have increased your proficiency in ~1_SkillMastery~!
+                    from.SendLocalizedMessage(1155885, $"#{MasteryInfo.GetLocalization(Skill)}"); // You have increased your proficiency in ~1_SkillMastery~!
 
                     Effects.SendLocationParticles(EffectItem.Create(from.Location, from.Map, EffectItem.DefaultDuration), 0, 0, 0, 0, 0, 5060, 0);
                     Effects.PlaySound(from.Location, from.Map, 0x243);
@@ -51,14 +51,14 @@ namespace Server.Items
 
         public override void AddNameProperty(ObjectPropertyList list)
         {
-            list.Add(1155882, string.Format("#{0}", MasteryInfo.GetLocalization(Skill))); // Primer on ~1_Skill~
+            list.Add(1155882, $"#{MasteryInfo.GetLocalization(Skill)}"); // Primer on ~1_Skill~
         }
 
         public override void GetProperties(ObjectPropertyList list)
         {
             base.GetProperties(list);
 
-            list.Add(1155883, string.Format("{0}", GetVolume(Volume))); // Volume ~1_Level~
+            list.Add(1155883, $"{GetVolume(Volume)}"); // Volume ~1_Level~
         }
 
         private string GetVolume(int volume)
diff --git a/Scripts/Spells/Skill Masteries/Core/SkillMasterySpell.cs b/Scripts/Spells/Skill Masteries/Core/SkillMasterySpell.cs
index 508ec7f9d..d010d9570 100644
--- a/Scripts/Spells/Skill Masteries/Core/SkillMasterySpell.cs	
+++ b/Scripts/Spells/Skill Masteries/Core/SkillMasterySpell.cs	
@@ -439,9 +439,9 @@ namespace Server.Spells.SkillMasteries
             PartyList.Add(m);
             AddPartyEffects(m);
 
-            if (m is PlayerMobile)
+            if (m is PlayerMobile playerMobile)
             {
-                foreach (Mobile pet in ((PlayerMobile)m).AllFollowers.Where(p => !PartyList.Contains(p) && ValidPartyMember(p)))
+                foreach (Mobile pet in playerMobile.AllFollowers.Where(p => !PartyList.Contains(p) && ValidPartyMember(p)))
                 {
                     AddPartyMember(pet);
                 }
@@ -453,9 +453,9 @@ namespace Server.Spells.SkillMasteries
             PartyList.Remove(m);
             RemovePartyEffects(m);
 
-            if (m is PlayerMobile)
+            if (m is PlayerMobile playerMobile)
             {
-                foreach (Mobile pet in ((PlayerMobile)m).AllFollowers.Where(p => PartyList.Contains(p)))
+                foreach (Mobile pet in playerMobile.AllFollowers.Where(p => PartyList.Contains(p)))
                 {
                     RemovePartyMember(pet);
                 }
@@ -464,9 +464,9 @@ namespace Server.Spells.SkillMasteries
 
         private void UpdatePets(Mobile m)
         {
-            if (m is PlayerMobile)
+            if (m is PlayerMobile playerMobile)
             {
-                foreach (Mobile pet in ((PlayerMobile)m).AllFollowers.Where(p => !PartyList.Contains(p) && ValidPartyMember(p)))
+                foreach (Mobile pet in playerMobile.AllFollowers.Where(p => !PartyList.Contains(p) && ValidPartyMember(p)))
                 {
                     AddPartyMember(pet);
                 }
@@ -856,19 +856,13 @@ namespace Server.Spells.SkillMasteries
                 sp.OnTargetDamaged(damager, victim, type, ref damage);
             }
 
-            SkillMasteryMove move = SpecialMove.GetCurrentMove(victim) as SkillMasteryMove;
-
-            if (move != null)
+            if (SpecialMove.GetCurrentMove(victim) is SkillMasteryMove move)
                 move.OnDamaged(damager, victim, type, ref damage);
 
-            PerseveranceSpell preserve = GetSpellForParty(victim, typeof(PerseveranceSpell)) as PerseveranceSpell;
-
-            if (preserve != null)
+            if (GetSpellForParty(victim, typeof(PerseveranceSpell)) is PerseveranceSpell preserve)
                 preserve.AbsorbDamage(ref damage);
 
-            InspireSpell inspire = GetSpellForParty(damager, typeof(InspireSpell)) as InspireSpell;
-
-            if (inspire != null)
+            if (GetSpellForParty(damager, typeof(InspireSpell)) is InspireSpell inspire)
                 inspire.DoDamage(ref damage);
 
             CombatTrainingSpell.CheckDamage(damager, victim, type, ref damage);
@@ -895,9 +889,7 @@ namespace Server.Spells.SkillMasteries
                 spell.OnGotHit(defender, ref damage);
             }
 
-            SkillMasteryMove move = SpecialMove.GetCurrentMove(defender) as SkillMasteryMove;
-
-            if (move != null)
+            if (SpecialMove.GetCurrentMove(defender) is SkillMasteryMove move)
                 move.OnGotHit(attacker, defender, ref damage);
 
             if (attacker is BaseCreature || defender is BaseCreature)
diff --git a/Scripts/Spells/Skill Masteries/DeathRay.cs b/Scripts/Spells/Skill Masteries/DeathRay.cs
index c19c42c32..ae6a4a8cf 100644
--- a/Scripts/Spells/Skill Masteries/DeathRay.cs	
+++ b/Scripts/Spells/Skill Masteries/DeathRay.cs	
@@ -49,9 +49,7 @@ namespace Server.Spells.SkillMasteries
 
         protected override void OnTarget(object o)
         {
-            Mobile m = o as Mobile;
-
-            if (m != null)
+            if (o is Mobile m)
             {
                 if (GetSpell<DeathRaySpell>(Caster, m) != null)
                 {
@@ -79,7 +77,7 @@ namespace Server.Spells.SkillMasteries
                         _Mod = new ResistanceMod(ResistanceType.Energy, -mod);
                         m.AddResistanceMod(_Mod);
 
-                        BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.DeathRay, 1155896, 1156085, string.Format("{0}\t{1}", ((int)damage).ToString(), m.Name))); // Deals ~2_DAMAGE~ to ~1_NAME~ every 3 seconds while in range. Preforming any action will end spell.
+                        BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.DeathRay, 1155896, 1156085, $"{((int)damage).ToString()}\t{m.Name}")); // Deals ~2_DAMAGE~ to ~1_NAME~ every 3 seconds while in range. Preforming any action will end spell.
                         BuffInfo.AddBuff(m, new BuffInfo(BuffIcon.DeathRayDebuff, 1155896, 1156086, mod.ToString())); // Energy Resist Debuff: ~1_VAL~%
 
                         Target = m;
diff --git a/Scripts/Spells/Skill Masteries/ElementalFury.cs b/Scripts/Spells/Skill Masteries/ElementalFury.cs
index 43b2c3843..e04fadadc 100644
--- a/Scripts/Spells/Skill Masteries/ElementalFury.cs	
+++ b/Scripts/Spells/Skill Masteries/ElementalFury.cs	
@@ -42,9 +42,7 @@ namespace Server.Spells.SkillMasteries
                 return false;
             }
 
-            ElementalFurySpell spell = GetSpell(Caster, GetType()) as ElementalFurySpell;
-
-            if (spell != null)
+            if (GetSpell(Caster, GetType()) is ElementalFurySpell spell)
             {
                 spell.Expire();
                 return false;
@@ -77,7 +75,7 @@ namespace Server.Spells.SkillMasteries
 
                 _Type = GetResistanceType(GetWeapon());
 
-                BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.ElementalFury, 1156018, 1156019, duration, Caster, string.Format("{0}\t69\t{1}", _Type.ToString(), _MaxAdd.ToString())));
+                BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.ElementalFury, 1156018, 1156019, duration, Caster, $"{_Type.ToString()}\t69\t{_MaxAdd.ToString()}"));
                 //Each attack the caster deals with ~1_TYPE~ damage will add up to ~3_VAL~ damage to the Fury Pool. Once the Fury Pool 
                 //reaches ~2_VAL~ the throwing weapon will unleash the Elemental Fury.
             }
diff --git a/Scripts/Spells/Skill Masteries/FistsOfFury.cs b/Scripts/Spells/Skill Masteries/FistsOfFury.cs
index 7845fb172..a436d5bc1 100644
--- a/Scripts/Spells/Skill Masteries/FistsOfFury.cs	
+++ b/Scripts/Spells/Skill Masteries/FistsOfFury.cs	
@@ -65,7 +65,7 @@ namespace Server.Spells.SkillMasteries
 
             BaseWeapon wep = defender.Weapon as BaseWeapon;
 
-            if (wep == null || !(wep is Fists))
+            if (!(wep is Fists))
             {
                 defender.SendLocalizedMessage(1155979); // You may not wield a weapon and use this ability.
                 Expire(defender);
diff --git a/Scripts/Spells/Skill Masteries/FlamingShot.cs b/Scripts/Spells/Skill Masteries/FlamingShot.cs
index bd2df1f02..7e5b5e5e8 100644
--- a/Scripts/Spells/Skill Masteries/FlamingShot.cs	
+++ b/Scripts/Spells/Skill Masteries/FlamingShot.cs	
@@ -54,9 +54,8 @@ namespace Server.Spells.SkillMasteries
 
             if (weapon is BaseRanged && !(weapon is BaseThrown))
             {
-                IPoint3D p = o as IPoint3D;
 
-                if (p != null && SpellHelper.CheckTown(p, Caster) && CheckSequence())
+                if (o is IPoint3D p && SpellHelper.CheckTown(p, Caster) && CheckSequence())
                 {
                     System.Collections.Generic.List<Mobile> targets = AcquireIndirectTargets(p, 5).OfType<Mobile>().ToList();
                     int count = targets.Count;
@@ -78,9 +77,7 @@ namespace Server.Spells.SkillMasteries
 
                             Server.Timer.DelayCall(TimeSpan.FromMilliseconds(800), obj =>
                             {
-                                Mobile mobile = obj as Mobile;
-
-                                if (mobile != null)
+                                if (obj is Mobile mobile)
                                     mobile.FixedParticles(0x36BD, 20, 10, 5044, EffectLayer.Head);
                             }, mob);
 
diff --git a/Scripts/Spells/Skill Masteries/FocusedEye.cs b/Scripts/Spells/Skill Masteries/FocusedEye.cs
index 350ccfc5a..d13379e72 100644
--- a/Scripts/Spells/Skill Masteries/FocusedEye.cs	
+++ b/Scripts/Spells/Skill Masteries/FocusedEye.cs	
@@ -62,7 +62,7 @@ namespace Server.Spells.SkillMasteries
                 _PropertyBonus = (int)((Caster.Skills[CastSkill].Value + Caster.Skills[DamageSkill].Value + (GetMasteryLevel() * 40)) / 12);
 
                 Caster.PrivateOverheadMessage(MessageType.Regular, 1150, 1156002, Caster.NetState); // *You focus your eye on your opponents!*
-                BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.FocusedEye, 1156003, 1156004, string.Format("{0}\t{1}", _PropertyBonus.ToString(), ScaleUpkeep().ToString()))); // +~1_VAL~% Hit Chance Increase.<br>Mana Upkeep Cost: ~2_VAL~.
+                BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.FocusedEye, 1156003, 1156004, $"{_PropertyBonus.ToString()}\t{ScaleUpkeep().ToString()}")); // +~1_VAL~% Hit Chance Increase.<br>Mana Upkeep Cost: ~2_VAL~.
 
                 Caster.PlaySound(0x101);
                 Effects.SendTargetParticles(Caster, 0x3789, 1, 40, 2726, 5, 9907, EffectLayer.RightFoot, 0);
diff --git a/Scripts/Spells/Skill Masteries/HeightenSenses.cs b/Scripts/Spells/Skill Masteries/HeightenSenses.cs
index fbc0276e1..816c4e77b 100644
--- a/Scripts/Spells/Skill Masteries/HeightenSenses.cs	
+++ b/Scripts/Spells/Skill Masteries/HeightenSenses.cs	
@@ -30,9 +30,7 @@ namespace Server.Spells.SkillMasteries
 
         public override bool CheckCast()
         {
-            HeightenedSensesSpell spell = GetSpell(Caster, GetType()) as HeightenedSensesSpell;
-
-            if (spell != null)
+            if (GetSpell(Caster, GetType()) is HeightenedSensesSpell spell)
             {
                 spell.Expire();
                 return false;
@@ -55,7 +53,7 @@ namespace Server.Spells.SkillMasteries
 
                 BeginTimer();
 
-                BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.HeightenedSenses, 1155925, 1156062, string.Format("{0}\t{1}", PropertyBonus().ToString(), ScaleUpkeep().ToString()))); // +~1_ARG~% Parry Bonus.<br>Mana Upkeep Cost: ~2_VAL~.
+                BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.HeightenedSenses, 1155925, 1156062, $"{PropertyBonus().ToString()}\t{ScaleUpkeep().ToString()}")); // +~1_ARG~% Parry Bonus.<br>Mana Upkeep Cost: ~2_VAL~.
             }
 
             FinishSequence();
@@ -110,9 +108,7 @@ namespace Server.Spells.SkillMasteries
 
         public static double GetParryBonus(Mobile m)
         {
-            HeightenedSensesSpell spell = GetSpell(m, typeof(HeightenedSensesSpell)) as HeightenedSensesSpell;
-
-            if (spell != null)
+            if (GetSpell(m, typeof(HeightenedSensesSpell)) is HeightenedSensesSpell spell)
                 return spell.PropertyBonus() / 100.0;
 
             return 0;
diff --git a/Scripts/Spells/Skill Masteries/HolyFistSpell.cs b/Scripts/Spells/Skill Masteries/HolyFistSpell.cs
index 4ca465715..6d9f1b2f5 100644
--- a/Scripts/Spells/Skill Masteries/HolyFistSpell.cs	
+++ b/Scripts/Spells/Skill Masteries/HolyFistSpell.cs	
@@ -58,9 +58,7 @@ namespace Server.Spells.SkillMasteries
 
         protected override void OnTarget(object o)
         {
-            IDamageable m = o as IDamageable;
-
-            if (m != null)
+            if (o is IDamageable m)
             {
                 if (CheckHSequence(m))
                 {
@@ -91,9 +89,9 @@ namespace Server.Spells.SkillMasteries
                     Caster.MovingParticles(m, 0x9BB5, 7, 0, false, true, 9502, 4019, 0x160);
                     Caster.PlaySound(0x5CE);
 
-                    if (m is Mobile)
+                    if (m is Mobile mobile)
                     {
-                        damage *= GetDamageScalar((Mobile)m);
+                        damage *= GetDamageScalar(mobile);
                     }
 
                     int sdiBonus = SpellHelper.GetSpellDamageBonus(Caster, m, CastSkill, m is Mobile ? Caster.Player && ((Mobile)m).Player : false);
diff --git a/Scripts/Spells/Skill Masteries/InjectedStrike.cs b/Scripts/Spells/Skill Masteries/InjectedStrike.cs
index d0e40d845..891a6eb73 100644
--- a/Scripts/Spells/Skill Masteries/InjectedStrike.cs	
+++ b/Scripts/Spells/Skill Masteries/InjectedStrike.cs	
@@ -63,7 +63,7 @@ namespace Server.Spells.SkillMasteries
                         int bonus = 30;
 
                         // Your next successful attack will poison your target and reduce its poison resist by:<br>~1_VAL~% PvM<br>~2_VAL~% PvP
-                        BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.InjectedStrike, 1155927, 1156163, string.Format("{0}\t{1}", bonus.ToString(), (bonus / 2).ToString())));
+                        BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.InjectedStrike, 1155927, 1156163, $"{bonus.ToString()}\t{(bonus / 2).ToString()}"));
                         Caster.FixedParticles(0x3728, 0x1, 0xA, 0x251E, 0x4F7, 7, (EffectLayer)2, 0);
 
                         weapon.InvalidateProperties();
@@ -243,7 +243,7 @@ namespace Server.Spells.SkillMasteries
             defender.AddResistanceMod(mod);
 
             // ~2_NAME~ reduces your poison resistance by ~1_VAL~.
-            BuffInfo.AddBuff(defender, new BuffInfo(BuffIcon.InjectedStrikeDebuff, 1155927, 1156133, TimeSpan.FromSeconds(7), defender, string.Format("{0}\t{1}", malus, Caster.Name)));
+            BuffInfo.AddBuff(defender, new BuffInfo(BuffIcon.InjectedStrikeDebuff, 1155927, 1156133, TimeSpan.FromSeconds(7), defender, $"{malus}\t{Caster.Name}"));
 
             Server.Timer.DelayCall(TimeSpan.FromSeconds(7), () =>
                 {
diff --git a/Scripts/Spells/Skill Masteries/Onslaught.cs b/Scripts/Spells/Skill Masteries/Onslaught.cs
index 0c6f2affe..7f91ce8b0 100644
--- a/Scripts/Spells/Skill Masteries/Onslaught.cs	
+++ b/Scripts/Spells/Skill Masteries/Onslaught.cs	
@@ -37,9 +37,7 @@ namespace Server.Spells.SkillMasteries
             if (!Validate(attacker) || !CheckMana(attacker, true))
                 return;
 
-            BaseWeapon weapon = attacker.Weapon as BaseWeapon;
-
-            if (weapon != null && !HasOnslaught(attacker, defender))
+            if (attacker.Weapon is BaseWeapon weapon && !HasOnslaught(attacker, defender))
             {
                 ClearCurrentMove(attacker);
 
@@ -85,7 +83,7 @@ namespace Server.Spells.SkillMasteries
                 defender.AddResistanceMod(mod);
 
                 attacker.PrivateOverheadMessage(MessageType.Regular, 1150, 1156008, attacker.NetState);  // You deliver an onslaught of sword strikes!
-                BuffInfo.AddBuff(defender, new BuffInfo(BuffIcon.Onslaught, 1156009, 1156010, TimeSpan.FromSeconds(duration), defender, string.Format("{0}\t{1}", amount.ToString(), resistType.ToString()))); // -~2_VAL~% ~1_RESIST~ Debuff.
+                BuffInfo.AddBuff(defender, new BuffInfo(BuffIcon.Onslaught, 1156009, 1156010, TimeSpan.FromSeconds(duration), defender, $"{amount.ToString()}\t{resistType.ToString()}")); // -~2_VAL~% ~1_RESIST~ Debuff.
 
                 defender.FixedEffect(0x37B9, 10, 5, 632, 0);
 
diff --git a/Scripts/Spells/Skill Masteries/Pierce.cs b/Scripts/Spells/Skill Masteries/Pierce.cs
index 7b4043592..0a7f8435a 100644
--- a/Scripts/Spells/Skill Masteries/Pierce.cs	
+++ b/Scripts/Spells/Skill Masteries/Pierce.cs	
@@ -36,9 +36,9 @@ namespace Server.Spells.SkillMasteries
             {
                 from.PlaySound(from.Female ? 0x338 : 0x44A);
             }
-            else if (from is BaseCreature)
+            else if (from is BaseCreature baseCreature)
             {
-                from.PlaySound(((BaseCreature)from).GetAngerSound());
+                from.PlaySound(baseCreature.GetAngerSound());
             }
 
             from.FixedParticles(0x376A, 1, 31, 9961, 1160, 0, EffectLayer.Waist);
@@ -51,9 +51,7 @@ namespace Server.Spells.SkillMasteries
 
             ClearCurrentMove(attacker);
 
-            BaseWeapon weapon = attacker.Weapon as BaseWeapon;
-
-            if (weapon != null && (_Table == null || !_Table.ContainsKey(attacker)))
+            if (attacker.Weapon is BaseWeapon weapon && (_Table == null || !_Table.ContainsKey(attacker)))
             {
                 int toDrain = (int)(attacker.Skills[MoveSkill].Value + attacker.Skills[SkillName.Tactics].Value + (MasteryInfo.GetMasteryLevel(attacker, SkillName.Fencing) * 40) / 3);
                 toDrain /= 3;
diff --git a/Scripts/Spells/Skill Masteries/PlayingTheOdds.cs b/Scripts/Spells/Skill Masteries/PlayingTheOdds.cs
index 9d3c452e7..33b64314d 100644
--- a/Scripts/Spells/Skill Masteries/PlayingTheOdds.cs	
+++ b/Scripts/Spells/Skill Masteries/PlayingTheOdds.cs	
@@ -69,7 +69,7 @@ namespace Server.Spells.SkillMasteries
                 _HCIBonus = (int)Math.Max(45, skill / 2.667);
                 _SSIBonus = (int)Math.Max(30, skill / 4);
 
-                string args = string.Format("{0}\t{1}\t{2}", Caster.Name, _HCIBonus.ToString(), _SSIBonus.ToString());
+                string args = $"{Caster.Name}\t{_HCIBonus.ToString()}\t{_SSIBonus.ToString()}";
                 BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.PlayingTheOddsDebuff, 1155913, 1156091, duration, Caster));
                 //Your bow range has been reduced as you play the odds.
 
@@ -110,7 +110,7 @@ namespace Server.Spells.SkillMasteries
 
             if (m != Caster)
             {
-                string args = string.Format("{0}\t{1}\t{2}", Caster.Name, _HCIBonus.ToString(), _SSIBonus.ToString());
+                string args = $"{Caster.Name}\t{_HCIBonus.ToString()}\t{_SSIBonus.ToString()}";
                 BuffInfo.AddBuff(m, new BuffInfo(BuffIcon.PlayingTheOdds, 1155913, 1155998, Expires - DateTime.UtcNow, m, args));
                 //~1_NAME~ grants you the following:<br>+~2_VAl~% Hit Chance Increase.<br>+~3_VAL~% Swing Speed Increase.
             }
@@ -142,9 +142,7 @@ namespace Server.Spells.SkillMasteries
 
         public static int HitChanceBonus(Mobile m)
         {
-            PlayingTheOddsSpell spell = GetSpellForParty(m, typeof(PlayingTheOddsSpell)) as PlayingTheOddsSpell;
-
-            if (spell != null)
+            if (GetSpellForParty(m, typeof(PlayingTheOddsSpell)) is PlayingTheOddsSpell spell)
                 return spell._HCIBonus;
 
             return 0;
@@ -152,9 +150,7 @@ namespace Server.Spells.SkillMasteries
 
         public static int SwingSpeedBonus(Mobile m)
         {
-            PlayingTheOddsSpell spell = GetSpellForParty(m, typeof(PlayingTheOddsSpell)) as PlayingTheOddsSpell;
-
-            if (spell != null)
+            if (GetSpellForParty(m, typeof(PlayingTheOddsSpell)) is PlayingTheOddsSpell spell)
                 return spell._SSIBonus;
 
             return 0;
@@ -164,13 +160,10 @@ namespace Server.Spells.SkillMasteries
         {
             if (weapon is BaseRanged && !(weapon is BaseThrown))
             {
-                Mobile m = weapon.RootParent as Mobile;
-
-                if (m != null)
+                if (weapon.RootParent is Mobile m)
                 {
-                    PlayingTheOddsSpell spell = GetSpell(m, typeof(PlayingTheOddsSpell)) as PlayingTheOddsSpell;
 
-                    if (spell != null)
+                    if (GetSpell(m, typeof(PlayingTheOddsSpell)) is PlayingTheOddsSpell spell)
                     {
                         return weapon.DefMaxRange / 2;
                     }
diff --git a/Scripts/Spells/Skill Masteries/Rampage.cs b/Scripts/Spells/Skill Masteries/Rampage.cs
index d40df9eae..1e3045b39 100644
--- a/Scripts/Spells/Skill Masteries/Rampage.cs	
+++ b/Scripts/Spells/Skill Masteries/Rampage.cs	
@@ -35,7 +35,7 @@ namespace Server.Spells.SkillMasteries
         {
             BaseWeapon wep = GetWeapon();
 
-            if (Caster.Player && (wep == null || !(wep is Fists)))
+            if (Caster.Player && (!(wep is Fists)))
             {
                 Caster.SendLocalizedMessage(1155979); // You may not wield a weapon and use this ability.
                 return false;
@@ -56,18 +56,16 @@ namespace Server.Spells.SkillMasteries
                 {
                     Caster.PlaySound(Caster.Female ? 0x338 : 0x44A);
                 }
-                else if (Caster is BaseCreature)
+                else if (Caster is BaseCreature baseCreature)
                 {
-                    Caster.PlaySound(((BaseCreature)Caster).GetAngerSound());
+                    Caster.PlaySound(baseCreature.GetAngerSound());
                 }
             }
         }
 
         public override void OnCast()
         {
-            RampageSpell spell = GetSpell(Caster, typeof(RampageSpell)) as RampageSpell;
-
-            if (spell != null)
+            if (GetSpell(Caster, typeof(RampageSpell)) is RampageSpell spell)
             {
                 spell.Expire();
             }
diff --git a/Scripts/Spells/Skill Masteries/Rejuvinate.cs b/Scripts/Spells/Skill Masteries/Rejuvinate.cs
index 29021fab7..8c33f61a1 100644
--- a/Scripts/Spells/Skill Masteries/Rejuvinate.cs	
+++ b/Scripts/Spells/Skill Masteries/Rejuvinate.cs	
@@ -59,9 +59,7 @@ namespace Server.Spells.SkillMasteries
 
         protected override void OnTarget(object o)
         {
-            Mobile m = o as Mobile;
-
-            if (m != null)
+            if (o is Mobile m)
             {
                 if (m.IsDeadBondedPet)
                 {
diff --git a/Scripts/Spells/Skill Masteries/Shadow.cs b/Scripts/Spells/Skill Masteries/Shadow.cs
index dc0400ad7..5992f624d 100644
--- a/Scripts/Spells/Skill Masteries/Shadow.cs	
+++ b/Scripts/Spells/Skill Masteries/Shadow.cs	
@@ -59,9 +59,7 @@ namespace Server.Spells.SkillMasteries
 
         public static double GetDifficultyFactor(Mobile m)
         {
-            ShadowSpell spell = GetSpell(m, typeof(ShadowSpell)) as ShadowSpell;
-
-            if (spell != null)
+            if (GetSpell(m, typeof(ShadowSpell)) is ShadowSpell spell)
                 return ((spell.Caster.Skills[spell.CastSkill].Value + spell.Caster.Skills[spell.DamageSkill].Value + (spell.GetMasteryLevel() * 40)) / 3) / 150;
 
             return 0.0;
diff --git a/Scripts/Spells/Skill Masteries/ShieldBash.cs b/Scripts/Spells/Skill Masteries/ShieldBash.cs
index 689fa6c93..01aeffd23 100644
--- a/Scripts/Spells/Skill Masteries/ShieldBash.cs	
+++ b/Scripts/Spells/Skill Masteries/ShieldBash.cs	
@@ -175,9 +175,7 @@ namespace Server.Spells.SkillMasteries
 
         public override void OnParried(Mobile attacker)
         {
-            BaseWeapon wep = Caster.Weapon as BaseWeapon;
-
-            if (wep != null)
+            if (Caster.Weapon is BaseWeapon wep)
                 wep.OnHit(Caster, attacker, 1.0);
         }
     }
diff --git a/Scripts/Spells/Skill Masteries/Stagger.cs b/Scripts/Spells/Skill Masteries/Stagger.cs
index 215737957..bc3a9eb09 100644
--- a/Scripts/Spells/Skill Masteries/Stagger.cs	
+++ b/Scripts/Spells/Skill Masteries/Stagger.cs	
@@ -33,9 +33,9 @@ namespace Server.Spells.SkillMasteries
             {
                 from.PlaySound(from.Female ? 0x338 : 0x44A);
             }
-            else if (from is BaseCreature)
+            else if (from is BaseCreature baseCreature)
             {
-                from.PlaySound(((BaseCreature)from).GetAngerSound());
+                from.PlaySound(baseCreature.GetAngerSound());
             }
 
             from.FixedParticles(0x373A, 10, 15, 5018, 2719, 0, EffectLayer.Waist);
diff --git a/Scripts/Spells/Skill Masteries/Thrust.cs b/Scripts/Spells/Skill Masteries/Thrust.cs
index 656e9a1cf..7935ba4e2 100644
--- a/Scripts/Spells/Skill Masteries/Thrust.cs	
+++ b/Scripts/Spells/Skill Masteries/Thrust.cs	
@@ -72,9 +72,7 @@ namespace Server.Spells.SkillMasteries
                 return false;
             }
 
-            ThrustSpell spell = GetSpell(Caster, GetType()) as ThrustSpell;
-
-            if (spell != null)
+            if (GetSpell(Caster, GetType()) is ThrustSpell spell)
             {
                 spell.Expire();
                 return false;
@@ -96,7 +94,7 @@ namespace Server.Spells.SkillMasteries
 
             Caster.PrivateOverheadMessage(MessageType.Regular, 1150, 1155988, Caster.NetState); // *You enter a thrusting stance!*
 
-            BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.Thrust, 1155989, 1155990, string.Format("{0}\t{1}\t{2}", AttackModifier.ToString(), DefenseModifier.ToString(), ScaleMana(30).ToString())));
+            BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.Thrust, 1155989, 1155990, $"{AttackModifier.ToString()}\t{DefenseModifier.ToString()}\t{ScaleMana(30).ToString()}"));
             //Your next physical attack will be increased by +~1_VAL~% damage while reducing your victim's physical attack damage by ~2_VAL~%.<br>Mana Upkeep Cost: ~3_VAL~.
 
             FinishSequence();
@@ -127,7 +125,7 @@ namespace Server.Spells.SkillMasteries
             BuffInfo.AddBuff(defender, new BuffInfo(BuffIcon.ThrustDebuff, 1155989, 1156234, TimeSpan.FromSeconds(8), defender, DefenseModifier.ToString()));
             // All damage from your physical attacks have been reduced by ~1_val~%.
 
-            BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.Thrust, 1155989, 1155990, string.Format("{0}\t{1}\t{2}", AttackModifier.ToString(), (GetMasteryLevel() * 6).ToString(), ScaleMana(30).ToString())));
+            BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.Thrust, 1155989, 1155990, $"{AttackModifier.ToString()}\t{(GetMasteryLevel() * 6).ToString()}\t{ScaleMana(30).ToString()}"));
             //Your next physical attack will be increased by +~1_VAL~% damage while reducing your victim's physical attack damage by ~2_VAL~%.<br>Mana Upkeep Cost: ~3_VAL~.
 
             if (!CheckMana())
@@ -161,7 +159,7 @@ namespace Server.Spells.SkillMasteries
             DefenseModifier = 0;
             Target = null;
 
-            BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.Thrust, 1155989, 1155990, string.Format("{0}\t{1}\t{2}", AttackModifier.ToString(), (GetMasteryLevel() * 6).ToString(), ScaleMana(30).ToString())));
+            BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.Thrust, 1155989, 1155990, $"{AttackModifier.ToString()}\t{(GetMasteryLevel() * 6).ToString()}\t{ScaleMana(30).ToString()}"));
             //Your next physical attack will be increased by +~1_VAL~% damage while reducing your victim's physical attack damage by ~2_VAL~%.<br>Mana Upkeep Cost: ~3_VAL~.
 
             if (Target != null)
diff --git a/Scripts/Spells/Skill Masteries/Tolerance.cs b/Scripts/Spells/Skill Masteries/Tolerance.cs
index af85b8bc5..7005986c7 100644
--- a/Scripts/Spells/Skill Masteries/Tolerance.cs	
+++ b/Scripts/Spells/Skill Masteries/Tolerance.cs	
@@ -24,9 +24,7 @@ namespace Server.Spells.SkillMasteries
 
         public override bool CheckCast()
         {
-            ToleranceSpell spell = GetSpell(Caster, typeof(ToleranceSpell)) as ToleranceSpell;
-
-            if (spell != null)
+            if (GetSpell(Caster, typeof(ToleranceSpell)) is ToleranceSpell spell)
             {
                 spell.Expire();
                 return false;
@@ -57,9 +55,7 @@ namespace Server.Spells.SkillMasteries
 
         public static bool OnPoisonApplied(Mobile m)
         {
-            ToleranceSpell spell = GetSpell(m, typeof(ToleranceSpell)) as ToleranceSpell;
-
-            if (spell != null)
+            if (GetSpell(m, typeof(ToleranceSpell)) is ToleranceSpell spell)
             {
                 double stamCost = (m.Skills[spell.CastSkill].Base + ((MasteryInfo.GetMasteryLevel(m, SkillName.Poisoning) * 30) + 10)) / 2;
 
diff --git a/Scripts/Spells/Skill Masteries/Toughness.cs b/Scripts/Spells/Skill Masteries/Toughness.cs
index 9f6ef8d3f..e5491bd49 100644
--- a/Scripts/Spells/Skill Masteries/Toughness.cs	
+++ b/Scripts/Spells/Skill Masteries/Toughness.cs	
@@ -32,9 +32,7 @@ namespace Server.Spells.SkillMasteries
                 return false;
             }
 
-            ToughnessSpell spell = GetSpell(Caster, GetType()) as ToughnessSpell;
-
-            if (spell != null)
+            if (GetSpell(Caster, GetType()) is ToughnessSpell spell)
             {
                 spell.Expire();
                 return false;
@@ -49,9 +47,9 @@ namespace Server.Spells.SkillMasteries
             {
                 Caster.PlaySound(Caster.Female ? 0x338 : 0x44A);
             }
-            else if (Caster is BaseCreature)
+            else if (Caster is BaseCreature baseCreature)
             {
-                Caster.PlaySound(((BaseCreature)Caster).GetAngerSound());
+                Caster.PlaySound(baseCreature.GetAngerSound());
             }
         }
 
@@ -66,7 +64,7 @@ namespace Server.Spells.SkillMasteries
 
                 BeginTimer();
 
-                BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.Toughness, 1155985, 1155986, string.Format("{0}\t{1}", _HPBonus.ToString(), ScaleMana((int)UpKeep)))); // Hit Point Increase: ~1_VAL~.<br>Mana Upkeep Cost: ~2_VAL~.
+                BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.Toughness, 1155985, 1155986, $"{_HPBonus.ToString()}\t{ScaleMana((int)UpKeep)}")); // Hit Point Increase: ~1_VAL~.<br>Mana Upkeep Cost: ~2_VAL~.
             }
 
             FinishSequence();
@@ -79,9 +77,7 @@ namespace Server.Spells.SkillMasteries
 
         public static int GetHPBonus(Mobile m)
         {
-            ToughnessSpell spell = GetSpell(m, typeof(ToughnessSpell)) as ToughnessSpell;
-
-            if (spell != null)
+            if (GetSpell(m, typeof(ToughnessSpell)) is ToughnessSpell spell)
                 return spell._HPBonus;
 
             return 0;
diff --git a/Scripts/Spells/Skill Masteries/Warcry.cs b/Scripts/Spells/Skill Masteries/Warcry.cs
index 8aaba9c0d..6557589a2 100644
--- a/Scripts/Spells/Skill Masteries/Warcry.cs	
+++ b/Scripts/Spells/Skill Masteries/Warcry.cs	
@@ -39,9 +39,9 @@ namespace Server.Spells.SkillMasteries
                 {
                     Caster.PlaySound(Caster.Female ? 0x338 : 0x44A);
                 }
-                else if (Caster is BaseCreature)
+                else if (Caster is BaseCreature baseCreature)
                 {
-                    Caster.PlaySound(((BaseCreature)Caster).GetAngerSound());
+                    Caster.PlaySound(baseCreature.GetAngerSound());
                 }
 
                 TimeSpan d;
@@ -56,7 +56,7 @@ namespace Server.Spells.SkillMasteries
                 Expires = DateTime.UtcNow + TimeSpan.FromSeconds(10);
                 BeginTimer();
 
-                BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.Warcry, 1155906, 1156058, TimeSpan.FromSeconds(10), Caster, string.Format("{0}\t{1}", _Radius.ToString(), _DamageMalus.ToString())));
+                BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.Warcry, 1155906, 1156058, TimeSpan.FromSeconds(10), Caster, $"{_Radius.ToString()}\t{_DamageMalus.ToString()}"));
                 //Reduces all incoming attack damage from opponents who hear the war cry within ~1_RANGE~ tiles by ~2_val~%.
             }
 
@@ -74,9 +74,9 @@ namespace Server.Spells.SkillMasteries
                 {
                     Caster.PlaySound(attacker.Female ? 0x338 : 0x44A);
                 }
-                else if (Caster is BaseCreature)
+                else if (Caster is BaseCreature baseCreature)
                 {
-                    Caster.PlaySound(((BaseCreature)Caster).GetAngerSound());
+                    Caster.PlaySound(baseCreature.GetAngerSound());
                 }
 
                 Caster.FixedEffect(0x3779, 10, 20, 1372, 4);
diff --git a/Scripts/Spells/Skill Masteries/Whispering.cs b/Scripts/Spells/Skill Masteries/Whispering.cs
index 7c90d041f..134a7a183 100644
--- a/Scripts/Spells/Skill Masteries/Whispering.cs	
+++ b/Scripts/Spells/Skill Masteries/Whispering.cs	
@@ -42,7 +42,7 @@ namespace Server.Spells.SkillMasteries
                 return false;
             }
 
-            if (Caster is PlayerMobile && ((PlayerMobile)Caster).AllFollowers == null || ((PlayerMobile)Caster).AllFollowers.Where(m => !(m is Engines.Despise.DespiseCreature)).Count() == 0)
+            if (Caster is PlayerMobile && ((PlayerMobile)Caster).AllFollowers == null || !((PlayerMobile)Caster).AllFollowers.Any(m => !(m is Engines.Despise.DespiseCreature)))
             {
                 Caster.SendLocalizedMessage(1156112); // This ability requires you to have pets.
                 return false;
@@ -62,9 +62,9 @@ namespace Server.Spells.SkillMasteries
         {
             if (CheckSequence())
             {
-                if (Caster is PlayerMobile)
+                if (Caster is PlayerMobile playerMobile)
                 {
-                    foreach (Mobile m in ((PlayerMobile)Caster).AllFollowers.Where(m => m.Map == Caster.Map && Caster.InRange(m.Location, PartyRange) && !(m is Engines.Despise.DespiseCreature)))
+                    foreach (Mobile m in playerMobile.AllFollowers.Where(m => m.Map == Caster.Map && Caster.InRange(m.Location, PartyRange) && !(m is Engines.Despise.DespiseCreature)))
                     {
                         Effects.SendLocationParticles(EffectItem.Create(m.Location, m.Map, EffectItem.DefaultDuration), 0, 0, 0, 0, 0, 5060, 0);
                         Effects.PlaySound(m.Location, m.Map, 0x243);
diff --git a/Scripts/Spells/Skill Masteries/WhiteTigerForm.cs b/Scripts/Spells/Skill Masteries/WhiteTigerForm.cs
index 8de93d39d..5ce9672be 100644
--- a/Scripts/Spells/Skill Masteries/WhiteTigerForm.cs	
+++ b/Scripts/Spells/Skill Masteries/WhiteTigerForm.cs	
@@ -147,7 +147,7 @@ namespace Server.Spells.SkillMasteries
                 Caster.CheckStatTimers();
 
                 int bleedMod = (int)(((Caster.Skills[SkillName.Ninjitsu].Value + Caster.Skills[SkillName.Stealth].Value + (GetMasteryLevel() * 40)) / 3) / 10);
-                BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.WhiteTigerForm, 1155911, 1156060, string.Format("{0}\t{1}\t{2}\t{3}", "20", "5", "", bleedMod.ToString())));
+                BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.WhiteTigerForm, 1155911, 1156060, $"{"20"}\t{"5"}\t{""}\t{bleedMod.ToString()}"));
                 // +~1_ARG~ Defense Chance Increase.<br>+~2_ARG~ Max Defense Chance Increase Cap.<br> Chance to evade attacks.<br>Applies bleed to victim with a max damage of ~4_ARG~.
 
                 Caster.Delta(MobileDelta.WeaponDamage);
diff --git a/Scripts/Spells/Spellweaving/ArcaneEmpowerment.cs b/Scripts/Spells/Spellweaving/ArcaneEmpowerment.cs
index ec01779f7..2e919b4d9 100644
--- a/Scripts/Spells/Spellweaving/ArcaneEmpowerment.cs
+++ b/Scripts/Spells/Spellweaving/ArcaneEmpowerment.cs
@@ -20,18 +20,14 @@ namespace Server.Spells.Spellweaving
 
         public static double GetDispellBonus(Mobile m)
         {
-            EmpowermentInfo info = m_Table[m] as EmpowermentInfo;
-
-            if (info != null)
+            if (m_Table[m] is EmpowermentInfo info)
                 return 10.0 * info.Focus;
             return 0.0;
         }
 
         public static int GetSpellBonus(Mobile m, bool playerVsPlayer)
         {
-            EmpowermentInfo info = m_Table[m] as EmpowermentInfo;
-
-            if (info != null)
+            if (m_Table[m] is EmpowermentInfo info)
                 return info.Bonus + (playerVsPlayer ? info.Focus : 0);
 
             return 0;
@@ -39,9 +35,7 @@ namespace Server.Spells.Spellweaving
 
         public static void AddHealBonus(Mobile m, ref int toHeal)
         {
-            EmpowermentInfo info = m_Table[m] as EmpowermentInfo;
-
-            if (info != null)
+            if (m_Table[m] is EmpowermentInfo info)
                 toHeal = (int)Math.Floor((1 + (10 + info.Bonus) / 100.0) * toHeal);
         }
 
@@ -49,7 +43,7 @@ namespace Server.Spells.Spellweaving
         {
             EmpowermentInfo info = m_Table[m] as EmpowermentInfo;
 
-            if (info != null && info.Timer != null)
+            if (info?.Timer != null)
                 info.Timer.Stop();
 
             m_Table.Remove(m);
@@ -78,7 +72,7 @@ namespace Server.Spells.Spellweaving
 
                 m_Table[Caster] = new EmpowermentInfo(Caster, duration, bonus, level);
 
-                BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.ArcaneEmpowerment, 1031616, 1075808, duration, Caster, new TextDefinition(string.Format("{0}\t10", bonus.ToString()))));
+                BuffInfo.AddBuff(Caster, new BuffInfo(BuffIcon.ArcaneEmpowerment, 1031616, 1075808, duration, Caster, new TextDefinition($"{bonus.ToString()}\t10")));
 
                 Caster.Delta(MobileDelta.WeaponDamage);
             }
diff --git a/Scripts/Spells/Spellweaving/ArcanistSpell.cs b/Scripts/Spells/Spellweaving/ArcanistSpell.cs
index 908d92832..dfcd2ce42 100644
--- a/Scripts/Spells/Spellweaving/ArcanistSpell.cs
+++ b/Scripts/Spells/Spellweaving/ArcanistSpell.cs
@@ -95,7 +95,7 @@ namespace Server.Spells.Spellweaving
 
             if (Caster.Skills[CastSkill].Value < RequiredSkill)
             {
-                Caster.SendLocalizedMessage(1063013, string.Format("{0}\t{1}", RequiredSkill.ToString("F1"), "#1044114"));
+                Caster.SendLocalizedMessage(1063013, $"{RequiredSkill.ToString("F1")}\t{"#1044114"}");
                 // You need at least ~1_SKILL_REQUIREMENT~ ~2_SKILL_NAME~ skill to use that ability.
                 return false;
             }
diff --git a/Scripts/Spells/Spellweaving/AttuneWeapon.cs b/Scripts/Spells/Spellweaving/AttuneWeapon.cs
index e9ade031c..5c0430182 100644
--- a/Scripts/Spells/Spellweaving/AttuneWeapon.cs
+++ b/Scripts/Spells/Spellweaving/AttuneWeapon.cs
@@ -30,7 +30,7 @@ namespace Server.Spells.Spellweaving
             damage -= absorbed;
             defender.MeleeDamageAbsorb -= absorbed;
 
-            defender.SendLocalizedMessage(1075127, string.Format("{0}\t{1}", absorbed, defender.MeleeDamageAbsorb)); // ~1_damage~ point(s) of damage have been absorbed. A total of ~2_remaining~ point(s) of shielding remain.
+            defender.SendLocalizedMessage(1075127, $"{absorbed}\t{defender.MeleeDamageAbsorb}"); // ~1_damage~ point(s) of damage have been absorbed. A total of ~2_remaining~ point(s) of shielding remain.
 
             if (defender.MeleeDamageAbsorb <= 0)
             {
diff --git a/Scripts/Spells/Spellweaving/DryadAllure.cs b/Scripts/Spells/Spellweaving/DryadAllure.cs
index e9ed0c878..649e68c41 100644
--- a/Scripts/Spells/Spellweaving/DryadAllure.cs
+++ b/Scripts/Spells/Spellweaving/DryadAllure.cs
@@ -118,9 +118,9 @@ namespace Server.Spells.Spellweaving
 
             protected override void OnTarget(Mobile m, object o)
             {
-                if (o is BaseCreature)
+                if (o is BaseCreature baseCreature)
                 {
-                    m_Owner.Target((BaseCreature)o);
+                    m_Owner.Target(baseCreature);
                 }
                 else
                 {
diff --git a/Scripts/Spells/Spellweaving/EssenceOfWind.cs b/Scripts/Spells/Spellweaving/EssenceOfWind.cs
index 6309d8027..bba75f166 100644
--- a/Scripts/Spells/Spellweaving/EssenceOfWind.cs
+++ b/Scripts/Spells/Spellweaving/EssenceOfWind.cs
@@ -79,7 +79,7 @@ namespace Server.Spells.Spellweaving
                     {
                         m_Table[m] = new EssenceOfWindInfo(m, fcMalus, ssiMalus, duration);
 
-                        BuffInfo.AddBuff(m, new BuffInfo(BuffIcon.EssenceOfWind, 1075802, duration, m, string.Format("{0}\t{1}", fcMalus.ToString(), ssiMalus.ToString())));
+                        BuffInfo.AddBuff(m, new BuffInfo(BuffIcon.EssenceOfWind, 1075802, duration, m, $"{fcMalus.ToString()}\t{ssiMalus.ToString()}"));
 
                         m.Delta(MobileDelta.WeaponDamage);
                     }
diff --git a/Scripts/Spells/Spellweaving/GiftOfLife.cs b/Scripts/Spells/Spellweaving/GiftOfLife.cs
index b6d336dad..4e263de1a 100644
--- a/Scripts/Spells/Spellweaving/GiftOfLife.cs
+++ b/Scripts/Spells/Spellweaving/GiftOfLife.cs
@@ -134,7 +134,7 @@ namespace Server.Spells.Spellweaving
                     BaseCreature pet = (BaseCreature)m;
                     Mobile master = pet.GetMaster();
 
-                    if (master != null && master.NetState != null && Utility.InUpdateRange(pet, master))
+                    if (master?.NetState != null && Utility.InUpdateRange(pet, master))
                     {
                         master.CloseGump(typeof(PetResurrectGump));
                         master.SendGump(new PetResurrectGump(master, pet, hitsScalar));
@@ -179,9 +179,9 @@ namespace Server.Spells.Spellweaving
 
             protected override void OnTarget(Mobile m, object o)
             {
-                if (o is Mobile)
+                if (o is Mobile mobile)
                 {
-                    m_Owner.Target((Mobile)o);
+                    m_Owner.Target(mobile);
                 }
                 else
                 {
diff --git a/Scripts/Spells/Spellweaving/GiftOfRenewal.cs b/Scripts/Spells/Spellweaving/GiftOfRenewal.cs
index 99c3e7d7e..aad4be274 100644
--- a/Scripts/Spells/Spellweaving/GiftOfRenewal.cs
+++ b/Scripts/Spells/Spellweaving/GiftOfRenewal.cs
@@ -173,9 +173,9 @@ namespace Server.Spells.Spellweaving
 
             protected override void OnTarget(Mobile m, object o)
             {
-                if (o is Mobile)
+                if (o is Mobile mobile)
                 {
-                    m_Owner.Target((Mobile)o);
+                    m_Owner.Target(mobile);
                 }
             }
 
diff --git a/Scripts/Spells/Spellweaving/NatureFury.cs b/Scripts/Spells/Spellweaving/NatureFury.cs
index 2ac88b35b..62cdaae34 100644
--- a/Scripts/Spells/Spellweaving/NatureFury.cs
+++ b/Scripts/Spells/Spellweaving/NatureFury.cs
@@ -48,7 +48,7 @@ namespace Server.Spells.Spellweaving
 
             HouseRegion r = Region.Find(p, map).GetRegion(typeof(HouseRegion)) as HouseRegion;
 
-            if (r != null && r.House != null && !r.House.IsFriend(Caster))
+            if (r?.House != null && !r.House.IsFriend(Caster))
                 return;
 
             if (!map.CanSpawnMobile(p.X, p.Y, p.Z))
@@ -79,8 +79,8 @@ namespace Server.Spells.Spellweaving
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is IPoint3D)
-                    m_Owner.Target((IPoint3D)o);
+                if (o is IPoint3D iPoint3D)
+                    m_Owner.Target(iPoint3D);
             }
 
             protected override void OnTargetFinish(Mobile from)
diff --git a/Scripts/Spells/Spellweaving/Thunderstorm.cs b/Scripts/Spells/Spellweaving/Thunderstorm.cs
index c272f20da..49d254123 100644
--- a/Scripts/Spells/Spellweaving/Thunderstorm.cs
+++ b/Scripts/Spells/Spellweaving/Thunderstorm.cs
@@ -69,12 +69,10 @@ namespace Server.Spells.Spellweaving
                 {
                     Caster.DoHarmful(m);
 
-                    Spell oldSpell = m.Spell as Spell;
-
                     SpellHelper.Damage(this, m, (m.Player && Caster.Player) ? pvpDamage : pvmDamage, 0, 0, 0, 0, 100);
                     Effects.SendPacket(m.Location, m.Map, new HuedEffect(EffectType.FixedFrom, m.Serial, Serial.Zero, 0x1B6C, m.Location, m.Location, 10, 10, false, false, 0x480, 4));
 
-                    if (oldSpell != null && oldSpell != m.Spell)
+                    if (m.Spell is Spell oldSpell && oldSpell != m.Spell)
                     {
                         if (!CheckResisted(m))
                         {
diff --git a/Scripts/Spells/Spellweaving/Wildfire.cs b/Scripts/Spells/Spellweaving/Wildfire.cs
index 36f969600..016aacb84 100644
--- a/Scripts/Spells/Spellweaving/Wildfire.cs
+++ b/Scripts/Spells/Spellweaving/Wildfire.cs
@@ -110,9 +110,9 @@ namespace Server.Spells.Spellweaving
 
             protected override void OnTarget(Mobile m, object o)
             {
-                if (o is IPoint3D)
+                if (o is IPoint3D iPoint3D)
                 {
-                    m_Owner.Target(new Point3D((IPoint3D)o));
+                    m_Owner.Target(new Point3D(iPoint3D));
                 }
             }
 
diff --git a/Scripts/Spells/Spellweaving/WordOfDeath.cs b/Scripts/Spells/Spellweaving/WordOfDeath.cs
index 826e625e9..48cbaed54 100644
--- a/Scripts/Spells/Spellweaving/WordOfDeath.cs
+++ b/Scripts/Spells/Spellweaving/WordOfDeath.cs
@@ -75,9 +75,9 @@ namespace Server.Spells.Spellweaving
 
             protected override void OnTarget(Mobile m, object o)
             {
-                if (o is Mobile)
+                if (o is Mobile mobile)
                 {
-                    m_Owner.Target((Mobile)o);
+                    m_Owner.Target(mobile);
                 }
             }
 
diff --git a/Scripts/Spells/Third/Bless.cs b/Scripts/Spells/Third/Bless.cs
index 7ad9a715e..f6553ad9c 100644
--- a/Scripts/Spells/Third/Bless.cs
+++ b/Scripts/Spells/Third/Bless.cs
@@ -87,7 +87,7 @@ namespace Server.Spells.Third
 
                     int percentage = (int)(SpellHelper.GetOffsetScalar(Caster, m, false) * 100);
                     TimeSpan length = SpellHelper.GetDuration(Caster, m);
-                    string args = string.Format("{0}\t{1}\t{2}", percentage, percentage, percentage);
+                    string args = $"{percentage}\t{percentage}\t{percentage}";
                     BuffInfo.AddBuff(m, new BuffInfo(BuffIcon.Bless, 1075847, 1075848, length, m, args));
 
                     m.FixedParticles(0x373A, 10, 15, 5018, EffectLayer.Waist);
@@ -111,9 +111,9 @@ namespace Server.Spells.Third
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is Mobile)
+                if (o is Mobile mobile)
                 {
-                    m_Owner.Target((Mobile)o);
+                    m_Owner.Target(mobile);
                 }
             }
 
diff --git a/Scripts/Spells/Third/Fireball.cs b/Scripts/Spells/Third/Fireball.cs
index 76518affd..f0a1c897a 100644
--- a/Scripts/Spells/Third/Fireball.cs
+++ b/Scripts/Spells/Third/Fireball.cs
@@ -70,8 +70,8 @@ namespace Server.Spells.Third
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is IDamageable)
-                    m_Owner.Target((IDamageable)o);
+                if (o is IDamageable iDamageable)
+                    m_Owner.Target(iDamageable);
             }
 
             protected override void OnTargetFinish(Mobile from)
diff --git a/Scripts/Spells/Third/MagicLock.cs b/Scripts/Spells/Third/MagicLock.cs
index 5c988c1da..be7f04891 100644
--- a/Scripts/Spells/Third/MagicLock.cs
+++ b/Scripts/Spells/Third/MagicLock.cs
@@ -69,8 +69,8 @@ namespace Server.Spells.Third
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is LockableContainer)
-                    m_Owner.Target((LockableContainer)o);
+                if (o is LockableContainer lockableContainer)
+                    m_Owner.Target(lockableContainer);
                 else
                     from.SendLocalizedMessage(501762); // Target must be an unlocked chest.
             }
diff --git a/Scripts/Spells/Third/Poison.cs b/Scripts/Spells/Third/Poison.cs
index 67398144e..40bf446b2 100644
--- a/Scripts/Spells/Third/Poison.cs
+++ b/Scripts/Spells/Third/Poison.cs
@@ -108,9 +108,9 @@ namespace Server.Spells.Third
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is Mobile)
+                if (o is Mobile mobile)
                 {
-                    m_Owner.Target((Mobile)o);
+                    m_Owner.Target(mobile);
                 }
             }
 
diff --git a/Scripts/Spells/Third/Telekinesis.cs b/Scripts/Spells/Third/Telekinesis.cs
index 4cf01dcce..72a6fb68b 100644
--- a/Scripts/Spells/Third/Telekinesis.cs
+++ b/Scripts/Spells/Third/Telekinesis.cs
@@ -49,7 +49,7 @@ namespace Server.Spells.Third
                 else if (!item.CheckItemUse(Caster, item))
                 {
                 }
-                else if (root != null && root is Mobile && root != Caster)
+                else if (root is Mobile && root != Caster)
                 {
                     item.OnSnoop(Caster);
                 }
diff --git a/Scripts/Spells/Third/Teleport.cs b/Scripts/Spells/Third/Teleport.cs
index 948d09d68..ff85fd364 100644
--- a/Scripts/Spells/Third/Teleport.cs
+++ b/Scripts/Spells/Third/Teleport.cs
@@ -112,9 +112,7 @@ namespace Server.Spells.Third
 
             protected override void OnTarget(Mobile from, object o)
             {
-                IPoint3D p = o as IPoint3D;
-
-                if (p != null)
+                if (o is IPoint3D p)
                     m_Owner.Target(p);
             }
 
diff --git a/Scripts/Spells/Third/Unlock.cs b/Scripts/Spells/Third/Unlock.cs
index bb1b46929..9f1f2d2cc 100644
--- a/Scripts/Spells/Third/Unlock.cs
+++ b/Scripts/Spells/Third/Unlock.cs
@@ -54,8 +54,8 @@ namespace Server.Spells.Third
 
                     if (o is Mobile)
                         from.LocalOverheadMessage(MessageType.Regular, 0x3B2, 503101); // That did not need to be unlocked.
-                    else if (o is IMageUnlockable)
-                        ((IMageUnlockable)o).OnMageUnlock(from);
+                    else if (o is IMageUnlockable iMageUnlockable)
+                        iMageUnlockable.OnMageUnlock(from);
                     else if (!(o is LockableContainer))
                         from.SendLocalizedMessage(501666); // You can't unlock that!
                     else
diff --git a/Scripts/Spells/Third/WallOfStone.cs b/Scripts/Spells/Third/WallOfStone.cs
index f8c4c1faa..93ff485d8 100644
--- a/Scripts/Spells/Third/WallOfStone.cs
+++ b/Scripts/Spells/Third/WallOfStone.cs
@@ -200,8 +200,8 @@ namespace Server.Spells.Third
 
             protected override void OnTarget(Mobile from, object o)
             {
-                if (o is IPoint3D)
-                    m_Owner.Target((IPoint3D)o);
+                if (o is IPoint3D iPoint3D)
+                    m_Owner.Target(iPoint3D);
             }
 
             protected override void OnTargetFinish(Mobile from)
diff --git a/Scripts/Targets/BladedItemTarget.cs b/Scripts/Targets/BladedItemTarget.cs
index da992804b..00bd63af7 100644
--- a/Scripts/Targets/BladedItemTarget.cs
+++ b/Scripts/Targets/BladedItemTarget.cs
@@ -35,7 +35,7 @@ namespace Server.Targets
             if (m_Item.Deleted)
                 return;
 
-            if (targeted is ICarvable)
+            if (targeted is ICarvable iCarvable)
             {
                 if (targeted is Item)
                 {
@@ -48,7 +48,7 @@ namespace Server.Targets
                     }
                 }
 
-                if (((ICarvable)targeted).Carve(from, m_Item) && Siege.SiegeShard)
+                if (iCarvable.Carve(from, m_Item) && Siege.SiegeShard)
                 {
                     Siege.CheckUsesRemaining(from, m_Item);
                 }
@@ -71,28 +71,25 @@ namespace Server.Targets
             }
             else
             {
-                if (targeted is Mobile)
+                if (targeted is Mobile mobile)
                 {
-                    ((Mobile)targeted).PrivateOverheadMessage(MessageType.Regular, 0x3B2, 500450, from.NetState); // You can only skin dead creatures.
+                    mobile.PrivateOverheadMessage(MessageType.Regular, 0x3B2, 500450, from.NetState); // You can only skin dead creatures.
                     return;
                 }
-                else if (targeted is StaticTarget)
+                else if (targeted is StaticTarget staticTarget)
                 {
-                    int itemID = ((StaticTarget)targeted).ItemID;
+                    int itemID = staticTarget.ItemID;
 
                     if (itemID == 0xD15 || itemID == 0xD16) // red mushroom
                     {
-                        PlayerMobile player = from as PlayerMobile;
-
-                        if (player != null)
+                        if (from is PlayerMobile player)
                         {
                             QuestSystem qs = player.Quest;
 
                             if (qs is WitchApprenticeQuest)
                             {
-                                FindIngredientObjective obj = qs.FindObjective(typeof(FindIngredientObjective)) as FindIngredientObjective;
 
-                                if (obj != null && !obj.Completed && obj.Ingredient == Ingredient.RedMushrooms)
+                                if (qs.FindObjective(typeof(FindIngredientObjective)) is FindIngredientObjective obj && !obj.Completed && obj.Ingredient == Ingredient.RedMushrooms)
                                 {
                                     player.SendLocalizedMessage(1055036); // You slice a red cap mushroom from its stem.
                                     obj.Complete();
diff --git a/Scripts/Targets/MoveTarget.cs b/Scripts/Targets/MoveTarget.cs
index 052184a29..00289decf 100644
--- a/Scripts/Targets/MoveTarget.cs
+++ b/Scripts/Targets/MoveTarget.cs
@@ -15,9 +15,7 @@ namespace Server.Targets
 
         protected override void OnTarget(Mobile from, object o)
         {
-            IPoint3D p = o as IPoint3D;
-
-            if (p != null)
+            if (o is IPoint3D p)
             {
                 if (!BaseCommand.IsAccessible(from, m_Object))
                 {
diff --git a/Scripts/VendorInfo/GenericBuy.cs b/Scripts/VendorInfo/GenericBuy.cs
index f1b83588c..e85bb056a 100644
--- a/Scripts/VendorInfo/GenericBuy.cs
+++ b/Scripts/VendorInfo/GenericBuy.cs
@@ -337,10 +337,10 @@ namespace Server.Mobiles
 
         private bool IsDeleted(IEntity obj)
         {
-            if (obj is Item)
-                return ((Item)obj).Deleted;
-            else if (obj is Mobile)
-                return ((Mobile)obj).Deleted;
+            if (obj is Item item)
+                return item.Deleted;
+            else if (obj is Mobile mobile)
+                return mobile.Deleted;
 
             return false;
         }
@@ -377,9 +377,9 @@ namespace Server.Mobiles
 
         public static bool IsDisplayCache(IEntity e)
         {
-            if (e is Mobile)
+            if (e is Mobile mobile)
             {
-                return DisplayCache.Cache.Mobiles != null && DisplayCache.Cache.Mobiles.Contains((Mobile)e);
+                return DisplayCache.Cache.Mobiles != null && DisplayCache.Cache.Mobiles.Contains(mobile);
             }
 
             return DisplayCache.Cache.Table != null && DisplayCache.Cache.Table.ContainsValue(e);
@@ -428,10 +428,10 @@ namespace Server.Mobiles
                 if (cache)
                     m_Table[key] = obj;
 
-                if (obj is Item)
-                    AddItem((Item)obj);
-                else if (obj is Mobile)
-                    m_Mobiles.Add((Mobile)obj);
+                if (obj is Item item)
+                    AddItem(item);
+                else if (obj is Mobile mobile)
+                    m_Mobiles.Add(mobile);
             }
 
             public override void OnAfterDelete()
diff --git a/Scripts/VendorInfo/GenericSell.cs b/Scripts/VendorInfo/GenericSell.cs
index 2ac8ceecb..090da9241 100644
--- a/Scripts/VendorInfo/GenericSell.cs
+++ b/Scripts/VendorInfo/GenericSell.cs
@@ -52,10 +52,8 @@ namespace Server.Mobiles
                 }
             }
 
-            if (item is BaseArmor)
+            if (item is BaseArmor armor)
             {
-                BaseArmor armor = (BaseArmor)item;
-
                 if (armor.Quality == ItemQuality.Low)
                     price = (int)(price * 0.60);
                 else if (armor.Quality == ItemQuality.Exceptional)
@@ -66,10 +64,8 @@ namespace Server.Mobiles
                 if (price < 1)
                     price = 1;
             }
-            else if (item is BaseWeapon)
+            else if (item is BaseWeapon weapon)
             {
-                BaseWeapon weapon = (BaseWeapon)item;
-
                 if (weapon.Quality == ItemQuality.Low)
                     price = (int)(price * 0.60);
                 else if (weapon.Quality == ItemQuality.Exceptional)
@@ -82,7 +78,7 @@ namespace Server.Mobiles
                 if (price < 1)
                     price = 1;
             }
-            else if (item is BaseBeverage)
+            else if (item is BaseBeverage bev)
             {
                 int price1 = price, price2 = price;
 
@@ -102,8 +98,6 @@ namespace Server.Mobiles
                     price2 = 6;
                 }
 
-                BaseBeverage bev = (BaseBeverage)item;
-
                 if (bev.IsEmpty || bev.Content == BeverageType.Milk)
                     price = price1;
                 else
diff --git a/Server/Assets/TileData.cs b/Server/Assets/TileData.cs
index 2d4812957..fcf775a50 100644
--- a/Server/Assets/TileData.cs
+++ b/Server/Assets/TileData.cs
@@ -374,7 +374,7 @@ namespace Server
 			}
 			else
 			{
-				throw new Exception(String.Format("TileData: {0} not found", filePath));
+				throw new Exception($"TileData: {filePath} not found");
 			}
 		}
 	}
diff --git a/Server/Body.cs b/Server/Body.cs
index a3df0a2e3..47ea1549c 100644
--- a/Server/Body.cs
+++ b/Server/Body.cs
@@ -130,7 +130,7 @@ namespace Server
 
 		public override bool Equals(object o)
 		{
-			if (o == null || !(o is Body))
+			if (!(o is Body))
 			{
 				return false;
 			}
diff --git a/Server/Config.cs b/Server/Config.cs
index b140041c4..995d81446 100644
--- a/Server/Config.cs
+++ b/Server/Config.cs
@@ -43,7 +43,7 @@ namespace Server
 
 			public override string ToString()
 			{
-				return String.Format("{0}.{1}{2}={3}", Scope, UseDefault ? "@" : "", Key, Value);
+				return $"{Scope}.{(UseDefault ? "@" : "")}{Key}={Value}";
 			}
 
 			public override int GetHashCode()
@@ -245,7 +245,7 @@ namespace Server
 
 				if (io < 0)
 				{
-					throw new FormatException(String.Format("Bad format at line {0}", i + 1));
+					throw new FormatException($"Bad format at line {i + 1}");
 				}
 
 				var key = line.Substring(0, io);
@@ -253,7 +253,7 @@ namespace Server
 
 				if (String.IsNullOrWhiteSpace(key))
 				{
-					throw new NullReferenceException(String.Format("Key can not be null at line {0}", i + 1));
+					throw new NullReferenceException($"Key can not be null at line {i + 1}");
 				}
 
 				key = key.Trim();
@@ -265,7 +265,7 @@ namespace Server
 
 				var e = new Entry(info.FullName, idx++, scope, String.Join(String.Empty, desc), key, val, useDef);
 
-				_Entries[String.Format("{0}.{1}", e.Scope, e.Key)] = e;
+				_Entries[$"{e.Scope}.{e.Key}"] = e;
 
 				desc.Clear();
 			}
@@ -317,7 +317,7 @@ namespace Server
 					{
 						if ((line + word).Length > 100)
 						{
-							content.AppendLine(String.Format("# {0}", line));
+							content.AppendLine($"# {line}");
 							line.Clear();
 						}
 
@@ -326,12 +326,12 @@ namespace Server
 
 					if (line.Length > 0)
 					{
-						content.AppendLine(String.Format("# {0}", line));
+						content.AppendLine($"# {line}");
 						line.Clear();
 					}
 				}
 
-				content.AppendLine(String.Format("{0}{1}={2}", e.UseDefault ? "@" : String.Empty, e.Key, e.Value));
+				content.AppendLine($"{(e.UseDefault ? "@" : String.Empty)}{e.Key}={e.Value}");
 			}
 
 			File.WriteAllText(path, content.ToString());
diff --git a/Server/ContextMenus/ContextMenu.cs b/Server/ContextMenus/ContextMenu.cs
index 21255a6c3..e801de706 100644
--- a/Server/ContextMenus/ContextMenu.cs
+++ b/Server/ContextMenus/ContextMenu.cs
@@ -52,13 +52,13 @@ namespace Server.ContextMenus
 
 			var list = new List<ContextMenuEntry>();
 
-			if (target is Mobile)
+			if (target is Mobile mobile)
 			{
-				((Mobile)target).GetContextMenuEntries(from, list);
+				mobile.GetContextMenuEntries(from, list);
 			}
-			else if (target is Item)
+			else if (target is Item item)
 			{
-				((Item)target).GetContextMenuEntries(from, list);
+				item.GetContextMenuEntries(from, list);
 			}
 
 			EventSink.InvokeContextMenu(new ContextMenuEventArgs(From, Target, list));
@@ -145,9 +145,9 @@ namespace Server.ContextMenus
 				return false;
 			}
 
-			if (target is Item)
+			if (target is Item item)
 			{
-				var root = ((Item)target).RootParent;
+				var root = item.RootParent;
 
 				if (root is Mobile && root != m && ((Mobile)root).AccessLevel >= m.AccessLevel)
 				{
diff --git a/Server/Diagnostics/PacketProfile.cs b/Server/Diagnostics/PacketProfile.cs
index 1bc247f4a..71cca29d3 100644
--- a/Server/Diagnostics/PacketProfile.cs
+++ b/Server/Diagnostics/PacketProfile.cs
@@ -91,7 +91,7 @@ namespace Server.Diagnostics
 		}
 
 		public PacketReceiveProfile(int packetId)
-			: base(String.Format("0x{0:X2}", packetId))
+			: base($"0x{packetId:X2}")
 		{ }
 	}
 }
\ No newline at end of file
diff --git a/Server/ExceptionLogging.cs b/Server/ExceptionLogging.cs
index 781d6c805..bca5f1e3a 100644
--- a/Server/ExceptionLogging.cs
+++ b/Server/ExceptionLogging.cs
@@ -15,7 +15,7 @@ namespace Server.Diagnostics
 			{
 				if (_Output == null)
 				{
-					_Output = new StreamWriter(Path.Combine(LogDirectory, String.Format("{0}.log", DateTime.UtcNow.ToLongDateString())), true)
+					_Output = new StreamWriter(Path.Combine(LogDirectory, $"{DateTime.UtcNow.ToLongDateString()}.log"), true)
 					{
 						AutoFlush = true
 					};
diff --git a/Server/Geometry.cs b/Server/Geometry.cs
index 32d0622aa..c83e4c6ae 100644
--- a/Server/Geometry.cs
+++ b/Server/Geometry.cs
@@ -30,7 +30,7 @@ namespace Server
 
 		public override string ToString()
 		{
-			return String.Format("({0}, {1})", m_X, m_Y);
+			return $"({m_X}, {m_Y})";
 		}
 
 		public static Point2D Parse(string value)
@@ -62,9 +62,9 @@ namespace Server
 
 		public int CompareTo(object other)
 		{
-			if (other is Point2D)
+			if (other is Point2D point2D)
 			{
-				return CompareTo((Point2D)other);
+				return CompareTo(point2D);
 			}
 
 			if (other == null)
@@ -246,7 +246,7 @@ namespace Server
 
 		public override string ToString()
 		{
-			return String.Format("({0}, {1}, {2})", m_X, m_Y, m_Z);
+			return $"({m_X}, {m_Y}, {m_Z})";
 		}
 
 		public override bool Equals(object o)
@@ -344,9 +344,9 @@ namespace Server
 
 		public int CompareTo(object other)
 		{
-			if (other is Point3D)
+			if (other is Point3D point3D)
 			{
-				return CompareTo((Point3D)other);
+				return CompareTo(point3D);
 			}
 
 			if (other == null)
@@ -473,7 +473,7 @@ namespace Server
 
 		public override string ToString()
 		{
-			return String.Format("({0}, {1})+({2}, {3})", X, Y, Width, Height);
+			return $"({X}, {Y})+({Width}, {Height})";
 		}
 
 		public override int GetHashCode()
@@ -585,7 +585,7 @@ namespace Server
 
 		public override string ToString()
 		{
-			return String.Format("({0}, {1}, {2})+({3}, {4}, {5})", Start.X, Start.Y, Start.Z, Width, Height, Depth);
+			return $"({Start.X}, {Start.Y}, {Start.Z})+({Width}, {Height}, {Depth})";
 		}
 
 		public override int GetHashCode()
diff --git a/Server/Gumps/GumpEntry.cs b/Server/Gumps/GumpEntry.cs
index a550d9f92..1bb622ddb 100644
--- a/Server/Gumps/GumpEntry.cs
+++ b/Server/Gumps/GumpEntry.cs
@@ -41,10 +41,7 @@ namespace Server.Gumps
 
 			var = val;
 
-			if (_Parent != null)
-			{
-				_Parent.Invalidate();
-			}
+			_Parent?.Invalidate();
 		}
 
 		protected void Delta(ref bool var, bool val)
@@ -56,10 +53,7 @@ namespace Server.Gumps
 
 			var = val;
 
-			if (_Parent != null)
-			{
-				_Parent.Invalidate();
-			}
+			_Parent?.Invalidate();
 		}
 
 		protected void Delta(ref string var, string val)
@@ -71,10 +65,7 @@ namespace Server.Gumps
 
 			var = val;
 
-			if (_Parent != null)
-			{
-				_Parent.Invalidate();
-			}
+			_Parent?.Invalidate();
 		}
 
 		public abstract string Compile();
diff --git a/Server/Item.cs b/Server/Item.cs
index 6304d8e46..e943ef5bd 100644
--- a/Server/Item.cs
+++ b/Server/Item.cs
@@ -807,9 +807,9 @@ namespace Server
 			get => m_GridLocation;
 			set
 			{
-				if (Parent is Container)
+				if (Parent is Container container)
 				{
-					if (value < 0 || value > 0x7C || !((Container)Parent).IsFreePosition(value))
+					if (value < 0 || value > 0x7C || !container.IsFreePosition(value))
 					{
 						m_GridLocation = ((Container)Parent).GetNewPosition(0);
 					}
@@ -1396,10 +1396,7 @@ namespace Server
 
 			AddItemSocketProperties(list);
 
-			if (Spawner != null)
-			{
-				Spawner.GetSpawnProperties(this, list);
-			}
+			Spawner?.GetSpawnProperties(this, list);
 
 			AddItemPowerProperties(list);
 		}
@@ -1616,10 +1613,7 @@ namespace Server
 				from.Region.GetContextMenuEntries(from, list, this);
 			}
 
-			if (Spawner != null)
-			{
-				Spawner.GetSpawnContextEntries(this, from, list);
-			}
+			Spawner?.GetSpawnContextEntries(this, from, list);
 		}
 
 		public virtual bool DisplayContextMenu(Mobile from)
@@ -1770,13 +1764,13 @@ namespace Server
 
 			SetLastMoved();
 
-			if (Parent is Mobile)
+			if (Parent is Mobile mobile)
 			{
-				((Mobile)Parent).RemoveItem(this);
+				mobile.RemoveItem(this);
 			}
-			else if (Parent is Item)
+			else if (Parent is Item item)
 			{
-				((Item)Parent).RemoveItem(this);
+				item.RemoveItem(this);
 			}
 
 			if (m_Map != map)
@@ -1822,10 +1816,7 @@ namespace Server
 
 				m_Map = map;
 
-				if (m_Map != null)
-				{
-					m_Map.OnEnter(this);
-				}
+				m_Map?.OnEnter(this);
 
 				OnMapChange();
 
@@ -2068,9 +2059,9 @@ namespace Server
 
 		public virtual bool OnDragDrop(Mobile from, Item dropped)
 		{
-			if (Parent is Container)
+			if (Parent is Container container)
 			{
-				return ((Container)Parent).OnStackAttempt(from, this, dropped);
+				return container.OnStackAttempt(from, this, dropped);
 			}
 
 			return StackWith(from, dropped);
@@ -2530,7 +2521,7 @@ namespace Server
 				flags |= SaveFlag.Light;
 			}
 
-			if (info != null && info.m_Bounce != null)
+			if (info?.m_Bounce != null)
 			{
 				flags |= SaveFlag.Bounce;
 			}
@@ -2560,7 +2551,7 @@ namespace Server
 				flags |= SaveFlag.Layer;
 			}
 
-			if (info != null && info.m_Name != null)
+			if (info?.m_Name != null)
 			{
 				flags |= SaveFlag.Name;
 			}
@@ -2580,12 +2571,12 @@ namespace Server
 				flags |= SaveFlag.Map;
 			}
 
-			if (info != null && info.m_BlessedFor != null && !info.m_BlessedFor.Deleted)
+			if (info?.m_BlessedFor != null && !info.m_BlessedFor.Deleted)
 			{
 				flags |= SaveFlag.BlessedFor;
 			}
 
-			if (info != null && info.m_HeldBy != null && !info.m_HeldBy.Deleted)
+			if (info?.m_HeldBy != null && !info.m_HeldBy.Deleted)
 			{
 				flags |= SaveFlag.HeldBy;
 			}
@@ -3594,10 +3585,7 @@ namespace Server
 				{
 					mobile.UpdateTotal(sender, type, delta);
 				}
-				else if (HeldBy != null)
-				{
-					HeldBy.UpdateTotal(sender, type, delta);
-				}
+				else HeldBy?.UpdateTotal(sender, type, delta);
 			}
 		}
 
@@ -4158,10 +4146,7 @@ namespace Server
 
 			var region = Region.Find(GetWorldLocation(), Map);
 
-			if (region != null)
-			{
-				region.OnDelete(this);
-			}
+			region?.OnDelete(this);
 		}
 
 		public virtual void OnParentDeleted(object parent)
@@ -4208,13 +4193,13 @@ namespace Server
 
 			SetFlag(ImplFlag.Deleted, true);
 
-			if (Parent is Mobile)
+			if (Parent is Mobile mobile)
 			{
-				((Mobile)Parent).RemoveItem(this);
+				mobile.RemoveItem(this);
 			}
-			else if (Parent is Item)
+			else if (Parent is Item item)
 			{
-				((Item)Parent).RemoveItem(this);
+				item.RemoveItem(this);
 			}
 
 			ClearBounce();
@@ -4395,13 +4380,10 @@ namespace Server
 
 		public virtual void OnAfterDelete()
 		{
-			if (Sockets != null)
-			{
-				Sockets.IterateReverse(socket =>
-				{
-					socket.Remove();
-				});
-			}
+			Sockets?.IterateReverse(socket =>
+{
+    socket.Remove();
+});
 
 			Timer.DelayCall(EventSink.InvokeItemDeleted, new ItemDeletedEventArgs(this));
 		}
@@ -4517,10 +4499,7 @@ namespace Server
 
 				var o = items[i];
 
-				if (o != null)
-				{
-					o.OnParentLocationChange(oldLocation);
-				}
+				o?.OnParentLocationChange(oldLocation);
 			}
 		}
 
@@ -4658,7 +4637,7 @@ namespace Server
 			{
 				var info = LookupCompactInfo();
 
-				if (info != null && info.m_Name != null)
+				if (info?.m_Name != null)
 				{
 					return info.m_Name;
 				}
diff --git a/Server/Items/Containers.cs b/Server/Items/Containers.cs
index f0d34ed90..f477fa0c6 100644
--- a/Server/Items/Containers.cs
+++ b/Server/Items/Containers.cs
@@ -48,7 +48,7 @@ namespace Server.Items
 					MessageType.Regular,
 					0x3B2,
 					true,
-					String.Format("Bank container has {0} items, {1} stones", TotalItems, TotalWeight),
+					$"Bank container has {TotalItems} items, {TotalWeight} stones",
 					m_Owner.NetState);
 
 				m_Owner.Send(new EquipUpdate(this));
diff --git a/Server/Items/VirtualCheck.cs b/Server/Items/VirtualCheck.cs
index 6439c5319..51d7617e4 100644
--- a/Server/Items/VirtualCheck.cs
+++ b/Server/Items/VirtualCheck.cs
@@ -109,7 +109,7 @@ namespace Server
 		{
 			base.GetProperties(list);
 
-			list.Add(1060738, String.Format("{0:#,0} platinum, {1:#,0} gold", Plat, Gold)); // value: ~1_val~
+			list.Add(1060738, $"{Plat:#,0} platinum, {Gold:#,0} gold"); // value: ~1_val~
 		}
 
 		public void UpdateTrade(Mobile user)
@@ -259,10 +259,7 @@ namespace Server
 				AddImage(10, 8, 113);
 				AddImage(360, 8, 113);
 
-				var title = String.Format(
-					"<BASEFONT COLOR=#{0:X6}><CENTER>BANK OF {1}</CENTER>",
-					Color.DarkSlateGray.ToArgb() & 0x00FFFFFF,
-					User.RawName.ToUpper());
+				var title = $"<BASEFONT COLOR=#{Color.DarkSlateGray.ToArgb() & 0x00FFFFFF:X6}><CENTER>BANK OF {User.RawName.ToUpper()}</CENTER>";
 
 				AddHtml(40, 15, 320, 20, title, false, false);
 
diff --git a/Server/Map.cs b/Server/Map.cs
index d99f83c66..aa9e98464 100644
--- a/Server/Map.cs
+++ b/Server/Map.cs
@@ -166,7 +166,7 @@ namespace Server
 
 		public static IEnumerable<NetState> SelectClients(Sector s, Rectangle2D bounds)
 		{
-			return s.Clients.Where(o => o != null && o.Mobile != null && !o.Mobile.Deleted && bounds.Contains(o.Mobile));
+			return s.Clients.Where(o => o?.Mobile != null && !o.Mobile.Deleted && bounds.Contains(o.Mobile));
 		}
 
 		public static IEnumerable<IEntity> SelectEntities(Sector s, Rectangle2D bounds)
@@ -1761,9 +1761,8 @@ namespace Server
 
 			GetSector(item).OnEnter(item);
 
-			if (item is BaseMulti)
+			if (item is BaseMulti m)
 			{
-				var m = (BaseMulti)item;
 				var mcl = m.Components;
 
 				var start = GetMultiMinSector(item.Location, mcl);
@@ -1790,9 +1789,8 @@ namespace Server
 
 			GetSector(item).OnLeave(item);
 
-			if (item is BaseMulti)
+			if (item is BaseMulti m)
 			{
-				var m = (BaseMulti)item;
 				var mcl = m.Components;
 
 				var start = GetMultiMinSector(item.Location, mcl);
@@ -1877,9 +1875,8 @@ namespace Server
 				newSector.OnEnter(item);
 			}
 
-			if (item is BaseMulti)
+			if (item is BaseMulti m)
 			{
-				var m = (BaseMulti)item;
 				var mcl = m.Components;
 
 				var start = GetMultiMinSector(item.Location, mcl);
@@ -2852,23 +2849,23 @@ namespace Server
 		{
 			Point3D p;
 
-			if (o is Mobile)
+			if (o is Mobile mobile)
 			{
-				p = ((Mobile)o).Location;
+				p = mobile.Location;
 				p.Z += 14; //eye ? 15 : 10;
 			}
-			else if (o is Item)
+			else if (o is Item item)
 			{
-				p = ((Item)o).GetWorldLocation();
+				p = item.GetWorldLocation();
 				p.Z += (((Item)o).ItemData.Height / 2) + 1;
 			}
-			else if (o is Point3D)
+			else if (o is Point3D point3D)
 			{
-				p = (Point3D)o;
+				p = point3D;
 			}
-			else if (o is LandTarget)
+			else if (o is LandTarget landTarget)
 			{
-				p = ((LandTarget)o).Location;
+				p = landTarget.Location;
 
 				int low = 0, avg = 0, top = 0;
 
@@ -2876,16 +2873,15 @@ namespace Server
 
 				p.Z = top + 1;
 			}
-			else if (o is StaticTarget)
+			else if (o is StaticTarget st)
 			{
-				var st = (StaticTarget)o;
 				var id = TileData.ItemTable[st.ItemID & TileData.MaxItemValue];
 
 				p = new Point3D(st.X, st.Y, st.Z - id.CalcHeight + (id.Height / 2));
 			}
-			else if (o is IPoint3D)
+			else if (o is IPoint3D iPoint3D)
 			{
-				p = new Point3D((IPoint3D)o);
+				p = new Point3D(iPoint3D);
 			}
 			else
 			{
diff --git a/Server/Mobile.cs b/Server/Mobile.cs
index bcf3da9f6..762c00803 100644
--- a/Server/Mobile.cs
+++ b/Server/Mobile.cs
@@ -837,10 +837,7 @@ namespace Server
 		{
 			ComputeBaseLightLevels(out global, out personal);
 
-			if (m_Region != null)
-			{
-				m_Region.AlterLightLevel(this, ref global, ref personal);
-			}
+			m_Region?.AlterLightLevel(this, ref global, ref personal);
 		}
 
 		public virtual void ComputeBaseLightLevels(out int global, out int personal)
@@ -1106,10 +1103,7 @@ namespace Server
 		{
 			AddNameProperties(list);
 
-			if (Spawner != null)
-			{
-				Spawner.GetSpawnProperties(this, list);
-			}
+			Spawner?.GetSpawnProperties(this, list);
 		}
 
 		public virtual void GetChildProperties(ObjectPropertyList list, Item item)
@@ -1142,10 +1136,7 @@ namespace Server
 
 				var sk = m_Skills[mod.Skill];
 
-				if (sk != null)
-				{
-					sk.Update();
-				}
+				sk?.Update();
 			}
 		}
 
@@ -1182,10 +1173,7 @@ namespace Server
 
 				var sk = m_Skills[mod.Skill];
 
-				if (sk != null)
-				{
-					sk.Update();
-				}
+				sk?.Update();
 			}
 		}
 
@@ -1210,10 +1198,7 @@ namespace Server
 
 				var sk = m_Skills[mod.Skill];
 
-				if (sk != null)
-				{
-					sk.Update();
-				}
+				sk?.Update();
 			}
 		}
 
@@ -3140,10 +3125,7 @@ namespace Server
 				DisruptiveAction();
 			}
 
-			if (m_NetState != null)
-			{
-				m_NetState.Send(MovementAck.Instantiate(m_NetState.Sequence, this));
-			}
+			m_NetState?.Send(MovementAck.Instantiate(m_NetState.Sequence, this));
 
 			SetLocation(newLocation, false);
 			SetDirection(d);
@@ -3503,15 +3485,9 @@ namespace Server
 				return;
 			}
 
-			if (m_NetState != null)
-			{
-				m_NetState.CancelAllTrades();
-			}
+			m_NetState?.CancelAllTrades();
 
-			if (m_NetState != null)
-			{
-				m_NetState.Dispose();
-			}
+			m_NetState?.Dispose();
 
 			DropHolding();
 
@@ -3539,10 +3515,7 @@ namespace Server
 
 			SendRemovePacket();
 
-			if (m_Guild != null)
-			{
-				m_Guild.OnDelete(this);
-			}
+			m_Guild?.OnDelete(this);
 
 			m_Deleted = true;
 
@@ -3618,20 +3591,11 @@ namespace Server
 
 			CheckAggrExpire();
 
-			if (m_PoisonTimer != null)
-			{
-				m_PoisonTimer.Stop();
-			}
+			m_PoisonTimer?.Stop();
 
-			if (m_WarmodeTimer != null)
-			{
-				m_WarmodeTimer.Stop();
-			}
+			m_WarmodeTimer?.Stop();
 
-			if (m_AutoManifestTimer != null)
-			{
-				m_AutoManifestTimer.Stop();
-			}
+			m_AutoManifestTimer?.Stop();
 
 			Timer.DelayCall(EventSink.InvokeMobileDeleted, new MobileDeletedEventArgs(this));
 		}
@@ -3708,20 +3672,11 @@ namespace Server
 				box.Close();
 			}
 
-			if (m_NetState != null)
-			{
-				m_NetState.CancelAllTrades();
-			}
+			m_NetState?.CancelAllTrades();
 
-			if (m_Spell != null)
-			{
-				m_Spell.OnCasterKilled();
-			}
+			m_Spell?.OnCasterKilled();
 
-			if (m_Target != null)
-			{
-				m_Target.Cancel(this, TargetCancelType.Canceled);
-			}
+			m_Target?.Cancel(this, TargetCancelType.Canceled);
 
 			DisruptiveAction();
 
@@ -3908,10 +3863,7 @@ namespace Server
 
 					var o = items[i];
 
-					if (o != null)
-					{
-						o.OnParentKill(this, c);
-					}
+					o?.OnParentKill(this, c);
 				}
 			}
 
@@ -5280,10 +5232,7 @@ namespace Server
 						{
 							Packet p = Packet.Acquire(new DamagePacket(this, amount));
 
-							if (ourState != null)
-							{
-								ourState.Send(p);
-							}
+							ourState?.Send(p);
 
 							if (theirState != null && theirState != ourState)
 							{
@@ -5776,10 +5725,7 @@ namespace Server
 							m_Map = Map.Internal;
 						}
 
-						if (m_Map != null)
-						{
-							m_Map.OnEnter(this);
-						}
+						m_Map?.OnEnter(this);
 
 						if (m_Criminal)
 						{
@@ -5961,10 +5907,7 @@ namespace Server
 
 			if ((hairflag & 0x04) != 0)
 			{
-				if (m_Face != null)
-				{
-					m_Face.Serialize(writer);
-				}
+				m_Face?.Serialize(writer);
 			}
 
 			writer.Write(Race);
@@ -6177,10 +6120,7 @@ namespace Server
 				list.Add(new OpenBackpackEntry(this));
 			}
 
-			if (Spawner != null)
-			{
-				Spawner.GetSpawnContextEntries(this, from, list);
-			}
+			Spawner?.GetSpawnContextEntries(this, from, list);
 		}
 
 		public virtual bool DisplayContextMenu(Mobile from)
@@ -6294,10 +6234,10 @@ namespace Server
 						op.WriteLine();
 					}
 
-					Utility.WriteConsoleColor(ConsoleColor.Red, String.Format("Offending Mobile: {0} [{1}]", GetType(), this));
-					Utility.WriteConsoleColor(ConsoleColor.Red, String.Format("Offending Item: {0} [{1}]", item, item.GetType()));
-					Utility.WriteConsoleColor(ConsoleColor.Red, String.Format("Equipped Item: {0} [{1}]", equipped, equipped.GetType()));
-					Utility.WriteConsoleColor(ConsoleColor.Red, String.Format("Layer: {0}", item.Layer.ToString()));
+					Utility.WriteConsoleColor(ConsoleColor.Red, $"Offending Mobile: {GetType()} [{this}]");
+					Utility.WriteConsoleColor(ConsoleColor.Red, $"Offending Item: {item} [{item.GetType()}]");
+					Utility.WriteConsoleColor(ConsoleColor.Red, $"Equipped Item: {equipped} [{equipped.GetType()}]");
+					Utility.WriteConsoleColor(ConsoleColor.Red, $"Layer: {item.Layer.ToString()}");
 				}
 				catch (Exception e)
 				{
@@ -9435,10 +9375,7 @@ namespace Server
 				ClearFastwalkStack();
 			}
 
-			if (m_Map != null)
-			{
-				m_Map.OnEnter(this);
-			}
+			m_Map?.OnEnter(this);
 
 			UpdateRegion();
 
@@ -9468,10 +9405,7 @@ namespace Server
 			OnMapChange(oldMap);
 			OnLocationChange(oldLocation);
 
-			if (m_Region != null)
-			{
-				m_Region.OnLocationChanged(this, oldLocation);
-			}
+			m_Region?.OnLocationChanged(this, oldLocation);
 		}
 
 		public virtual void SetLocation(Point3D newLocation, bool isTeleport)
@@ -9498,15 +9432,9 @@ namespace Server
 					}
 				}
 
-				if (m_NetState != null)
-				{
-					m_NetState.ValidateAllTrades();
-				}
+				m_NetState?.ValidateAllTrades();
 
-				if (m_Map != null)
-				{
-					m_Map.OnMove(oldLocation, this);
-				}
+				m_Map?.OnMove(oldLocation, this);
 
 				if (isTeleport && m_NetState != null && !NoMoveHS)
 				{
@@ -11445,10 +11373,7 @@ namespace Server
 		{
 			var ns = m_NetState;
 
-			if (ns != null)
-			{
-				ns.Send(new MessageLocalized(m_Serial, Body, type, hue, 3, number, Name, args));
-			}
+			ns?.Send(new MessageLocalized(m_Serial, Body, type, hue, 3, number, Name, args));
 		}
 
 		public void NonlocalOverheadMessage(MessageType type, int hue, int number)
@@ -11517,10 +11442,7 @@ namespace Server
 		{
 			var ns = m_NetState;
 
-			if (ns != null)
-			{
-				ns.Send(MessageLocalized.InstantiateGeneric(number));
-			}
+			ns?.Send(MessageLocalized.InstantiateGeneric(number));
 		}
 
 		public void SendLocalizedMessage(int number, string args)
@@ -11534,19 +11456,13 @@ namespace Server
 			{
 				var ns = m_NetState;
 
-				if (ns != null)
-				{
-					ns.Send(MessageLocalized.InstantiateGeneric(number));
-				}
+				ns?.Send(MessageLocalized.InstantiateGeneric(number));
 			}
 			else
 			{
 				var ns = m_NetState;
 
-				if (ns != null)
-				{
-					ns.Send(new MessageLocalized(Serial.MinusOne, -1, MessageType.Regular, hue, 3, number, "System", args));
-				}
+				ns?.Send(new MessageLocalized(Serial.MinusOne, -1, MessageType.Regular, hue, 3, number, "System", args));
 			}
 		}
 
@@ -11564,31 +11480,13 @@ namespace Server
 		{
 			var ns = m_NetState;
 
-			if (ns != null)
-			{
-				ns.Send(
-					new MessageLocalizedAffix(
-						ns,
-						Serial.MinusOne,
-						-1,
-						MessageType.Regular,
-						hue,
-						3,
-						number,
-						"System",
-						(append ? AffixType.Append : AffixType.Prepend) | AffixType.System,
-						affix,
-						args));
-			}
+			ns?.Send(new MessageLocalizedAffix(ns, Serial.MinusOne, -1, MessageType.Regular, hue, 3, number, "System", (append ? AffixType.Append : AffixType.Prepend) | AffixType.System, affix, args));
 		}
 		#endregion
 
 		public void LaunchBrowser(string url)
 		{
-			if (m_NetState != null)
-			{
-				m_NetState.LaunchBrowser(url);
-			}
+			m_NetState?.LaunchBrowser(url);
 		}
 
 		#region Send[ASCII]Message
@@ -11613,10 +11511,7 @@ namespace Server
 
 			var ns = m_NetState;
 
-			if (ns != null)
-			{
-				ns.Send(new UnicodeMessage(Serial.MinusOne, -1, MessageType.Regular, hue, 3, "ENU", "System", text));
-			}
+			ns?.Send(new UnicodeMessage(Serial.MinusOne, -1, MessageType.Regular, hue, 3, "ENU", "System", text));
 		}
 
 		public void SendMessage(int hue, string format, params object[] args)
@@ -11643,10 +11538,7 @@ namespace Server
 
 			var ns = m_NetState;
 
-			if (ns != null)
-			{
-				ns.Send(new AsciiMessage(Serial.MinusOne, -1, MessageType.Regular, hue, 3, "System", text));
-			}
+			ns?.Send(new AsciiMessage(Serial.MinusOne, -1, MessageType.Regular, hue, 3, "System", text));
 		}
 
 		public void SendAsciiMessage(int hue, string format, params object[] args)
@@ -11793,10 +11685,7 @@ namespace Server
 
 			var ip = m_Party as IParty;
 
-			if (ip != null)
-			{
-				ip.OnStatsQuery(from, this);
-			}
+			ip?.OnStatsQuery(from, this);
 		}
 
 		/// <summary>
diff --git a/Server/Network/Listener.cs b/Server/Network/Listener.cs
index 617f5cf00..5f4aaa298 100644
--- a/Server/Network/Listener.cs
+++ b/Server/Network/Listener.cs
@@ -70,10 +70,8 @@ namespace Server.Network
 			}
 			catch (Exception e)
 			{
-				if (e is SocketException)
+				if (e is SocketException se)
 				{
-					var se = (SocketException)e;
-
 					if (se.ErrorCode == 10048)
 					{
 						// WSAEADDRINUSE
@@ -263,10 +261,7 @@ namespace Server.Network
 		{
 			var socket = Interlocked.Exchange(ref m_Listener, null);
 
-			if (socket != null)
-			{
-				socket.Close();
-			}
+			socket?.Close();
 
 			if (_PingListener == null)
 			{
diff --git a/Server/Network/MessagePump.cs b/Server/Network/MessagePump.cs
index c641b53f2..fbd72b8e3 100644
--- a/Server/Network/MessagePump.cs
+++ b/Server/Network/MessagePump.cs
@@ -315,10 +315,7 @@ namespace Server.Network
 						prof = PacketReceiveProfile.Acquire(packetID);
 					}
 
-					if (prof != null)
-					{
-						prof.Start();
-					}
+					prof?.Start();
 
 					byte[] packetBuffer;
 
@@ -345,10 +342,7 @@ namespace Server.Network
 						}
 					}
 
-					if (prof != null)
-					{
-						prof.Finish(packetLength);
-					}
+					prof?.Finish(packetLength);
 
 					length = buffer.Length;
 				}
diff --git a/Server/Network/NetState.cs b/Server/Network/NetState.cs
index c4d37f566..daf1fb106 100644
--- a/Server/Network/NetState.cs
+++ b/Server/Network/NetState.cs
@@ -140,10 +140,7 @@ namespace Server.Network
 
 		public void RemoveTrade(SecureTrade trade)
 		{
-			if (Trades != null)
-			{
-				Trades.Remove(trade);
-			}
+			Trades?.Remove(trade);
 		}
 
 		public SecureTrade FindTrade(Mobile m)
@@ -256,26 +253,17 @@ namespace Server.Network
 
 		public void RemoveMenu(IMenu menu)
 		{
-			if (Menus != null)
-			{
-				Menus.Remove(menu);
-			}
+			Menus?.Remove(menu);
 		}
 
 		public void RemoveMenu(int index)
 		{
-			if (Menus != null)
-			{
-				Menus.RemoveAt(index);
-			}
+			Menus?.RemoveAt(index);
 		}
 
 		public void ClearMenus()
 		{
-			if (Menus != null)
-			{
-				Menus.Clear();
-			}
+			Menus?.Clear();
 		}
 
 		public void AddHuePicker(HuePicker huePicker)
@@ -300,26 +288,17 @@ namespace Server.Network
 
 		public void RemoveHuePicker(HuePicker huePicker)
 		{
-			if (HuePickers != null)
-			{
-				HuePickers.Remove(huePicker);
-			}
+			HuePickers?.Remove(huePicker);
 		}
 
 		public void RemoveHuePicker(int index)
 		{
-			if (HuePickers != null)
-			{
-				HuePickers.RemoveAt(index);
-			}
+			HuePickers?.RemoveAt(index);
 		}
 
 		public void ClearHuePickers()
 		{
-			if (HuePickers != null)
-			{
-				HuePickers.Clear();
-			}
+			HuePickers?.Clear();
 		}
 
 		public void AddGump(Gump gump)
@@ -344,26 +323,17 @@ namespace Server.Network
 
 		public void RemoveGump(Gump gump)
 		{
-			if (Gumps != null)
-			{
-				Gumps.Remove(gump);
-			}
+			Gumps?.Remove(gump);
 		}
 
 		public void RemoveGump(int index)
 		{
-			if (Gumps != null)
-			{
-				Gumps.RemoveAt(index);
-			}
+			Gumps?.RemoveAt(index);
 		}
 
 		public void ClearGumps()
 		{
-			if (Gumps != null)
-			{
-				Gumps.Clear();
-			}
+			Gumps?.Clear();
 		}
 
 		public void LaunchBrowser(string url)
@@ -471,10 +441,7 @@ namespace Server.Network
 					prof = PacketSendProfile.Acquire(p.GetType());
 				}
 
-				if (prof != null)
-				{
-					prof.Start();
-				}
+				prof?.Start();
 
 				var buffered = false;
 
@@ -497,15 +464,9 @@ namespace Server.Network
 						System.Buffer.BlockCopy(buffer, 0, packetBuffer, 0, packetLength);
 					}
 
-					if (PacketEncoder != null)
-					{
-						PacketEncoder.EncodeOutgoingPacket(this, ref packetBuffer, ref packetLength);
-					}
+					PacketEncoder?.EncodeOutgoingPacket(this, ref packetBuffer, ref packetLength);
 
-					if (PacketEncryptor != null)
-					{
-						PacketEncryptor.EncryptOutgoingPacket(this, ref packetBuffer, ref packetLength);
-					}
+					PacketEncryptor?.EncryptOutgoingPacket(this, ref packetBuffer, ref packetLength);
 
 					buffered = buffer != packetBuffer && packetBuffer.Length == SendBufferSize;
 
@@ -556,10 +517,7 @@ namespace Server.Network
 
 				p.OnSend();
 
-				if (prof != null)
-				{
-					prof.Finish(length);
-				}
+				prof?.Finish(length);
 			}
 			else
 			{
@@ -632,15 +590,9 @@ namespace Server.Network
 						buffer = m_RecvBuffer;
 					}
 
-					if (PacketEncryptor != null)
-					{
-						PacketEncryptor.DecryptIncomingPacket(this, ref buffer, ref byteCount);
-					}
+					PacketEncryptor?.DecryptIncomingPacket(this, ref buffer, ref byteCount);
 
-					if (PacketEncoder != null)
-					{
-						PacketEncoder.DecodeIncomingPacket(this, ref buffer, ref byteCount);
-					}
+					PacketEncoder?.DecodeIncomingPacket(this, ref buffer, ref byteCount);
 
 					lock (Buffer)
 						Buffer.Enqueue(buffer, 0, byteCount);
diff --git a/Server/Network/PacketHandlers.cs b/Server/Network/PacketHandlers.cs
index 079d2ea94..80ad4d6dc 100644
--- a/Server/Network/PacketHandlers.cs
+++ b/Server/Network/PacketHandlers.cs
@@ -324,9 +324,7 @@ namespace Server.Network
 					{
 						Serial serial = pvSrc.ReadInt32();
 
-						var cont = World.FindItem(serial) as SecureTradeContainer;
-
-						if (cont != null)
+						if (World.FindItem(serial) is SecureTradeContainer cont)
 						{
 							var trade = cont.Trade;
 
@@ -344,9 +342,7 @@ namespace Server.Network
 					{
 						Serial serial = pvSrc.ReadInt32();
 
-						var cont = World.FindItem(serial) as SecureTradeContainer;
-
-						if (cont != null)
+						if (World.FindItem(serial) is SecureTradeContainer cont)
 						{
 							var trade = cont.Trade;
 
@@ -372,9 +368,7 @@ namespace Server.Network
 					{
 						Serial serial = pvSrc.ReadInt32();
 
-						var cont = World.FindItem(serial) as SecureTradeContainer;
-
-						if (cont != null)
+						if (World.FindItem(serial) is SecureTradeContainer cont)
 						{
 							var gold = pvSrc.ReadInt32();
 							var plat = pvSrc.ReadInt32();
@@ -441,9 +435,7 @@ namespace Server.Network
 
 				if (buyList.Count > 0)
 				{
-					var v = vendor as IVendor;
-
-					if (v != null && v.OnBuyItems(state.Mobile, buyList))
+					if (vendor is IVendor v && v.OnBuyItems(state.Mobile, buyList))
 					{
 						state.Send(new EndVendorBuy(vendor));
 					}
@@ -488,9 +480,7 @@ namespace Server.Network
 
 				if (sellList.Count > 0)
 				{
-					var v = vendor as IVendor;
-
-					if (v != null && v.OnSellItems(state.Mobile, sellList))
+					if (vendor is IVendor v && v.OnSellItems(state.Mobile, sellList))
 					{
 						state.Send(new EndVendorSell(vendor));
 					}
@@ -954,7 +944,7 @@ namespace Server.Network
 			var from = state.Mobile;
 			var p = from.Prompt;
 
-			var promptSerial = (p != null && p.Sender != null) ? p.Sender.Serial.Value : from.Serial.Value;
+			var promptSerial = (p?.Sender != null) ? p.Sender.Serial.Value : from.Serial.Value;
 
 			if (p != null && promptSerial == serial && p.TypeId == prompt)
 			{
@@ -1145,10 +1135,7 @@ namespace Server.Network
 		{
 			var s = state.Mobile.Skills[pvSrc.ReadInt16()];
 
-			if (s != null)
-			{
-				s.SetLockNoRelay((SkillLock)pvSrc.ReadByte());
-			}
+			s?.SetLockNoRelay((SkillLock)pvSrc.ReadByte());
 		}
 
 		public static void HelpRequest(NetState state, PacketReader pvSrc)
@@ -1178,10 +1165,7 @@ namespace Server.Network
 			{
 				var prof = TargetProfile.Acquire(t.GetType());
 
-				if (prof != null)
-				{
-					prof.Start();
-				}
+				prof?.Start();
 
 				try
 				{
@@ -1266,10 +1250,7 @@ namespace Server.Network
 				}
 				finally
 				{
-					if (prof != null)
-					{
-						prof.Finish();
-					}
+					prof?.Finish();
 				}
 			}
 		}
@@ -1366,17 +1347,11 @@ namespace Server.Network
 
 					var prof = GumpProfile.Acquire(gump.GetType());
 
-					if (prof != null)
-					{
-						prof.Start();
-					}
+					prof?.Start();
 
 					gump.OnResponse(state, new RelayInfo(buttonID, switches, textEntries));
 
-					if (prof != null)
-					{
-						prof.Finish();
-					}
+					prof?.Finish();
 
 					return;
 				}
@@ -1714,7 +1689,7 @@ namespace Server.Network
 			var rightClick = pvSrc.ReadBoolean();
 			var from = state.Mobile;
 
-			if (from != null && from.QuestArrow != null)
+			if (from?.QuestArrow != null)
 			{
 				from.QuestArrow.OnClick(rightClick);
 			}
@@ -2056,9 +2031,9 @@ namespace Server.Network
 						{
 							p = entity.Location;
 						}
-						else if (entity is Item)
+						else if (entity is Item item)
 						{
-							p = ((Item)entity).GetWorldLocation();
+							p = item.GetWorldLocation();
 						}
 						else
 						{
diff --git a/Server/Network/Packets.cs b/Server/Network/Packets.cs
index 381e48709..5f9803f22 100644
--- a/Server/Network/Packets.cs
+++ b/Server/Network/Packets.cs
@@ -871,9 +871,9 @@ namespace Server.Network
 			{
 				p = target.Location;
 			}
-			else if (target is Item)
+			else if (target is Item item)
 			{
-				p = ((Item)target).GetWorldLocation();
+				p = item.GetWorldLocation();
 			}
 			else
 			{
diff --git a/Server/Network/PingListener.cs b/Server/Network/PingListener.cs
index 5338dafac..a99770703 100644
--- a/Server/Network/PingListener.cs
+++ b/Server/Network/PingListener.cs
@@ -58,10 +58,7 @@ namespace Server.Network
 
 		private void BeginReceive()
 		{
-			if (_Listener != null)
-			{
-				_Listener.BeginReceive(EndReceive, _Listener);
-			}
+			_Listener?.BeginReceive(EndReceive, _Listener);
 		}
 
 		private void EndReceive(IAsyncResult r)
diff --git a/Server/Persistence/DynamicSaveStrategy.cs b/Server/Persistence/DynamicSaveStrategy.cs
index af1d18256..c7948a7f5 100644
--- a/Server/Persistence/DynamicSaveStrategy.cs
+++ b/Server/Persistence/DynamicSaveStrategy.cs
@@ -120,10 +120,7 @@ namespace Server
 						_decayBag.Add(item);
 					}
 
-					if (_metrics != null)
-					{
-						_metrics.OnItemSaved(size);
-					}
+					_metrics?.OnItemSaved(size);
 
 					return writer;
 				},
@@ -158,10 +155,7 @@ namespace Server
 
 					writer.QueueForIndex(mobile, size);
 
-					if (_metrics != null)
-					{
-						_metrics.OnMobileSaved(size);
-					}
+					_metrics?.OnMobileSaved(size);
 
 					return writer;
 				},
@@ -196,10 +190,7 @@ namespace Server
 
 					writer.QueueForIndex(guild, size);
 
-					if (_metrics != null)
-					{
-						_metrics.OnGuildSaved(size);
-					}
+					_metrics?.OnGuildSaved(size);
 
 					return writer;
 				},
diff --git a/Server/Persistence/ParallelSaveStrategy.cs b/Server/Persistence/ParallelSaveStrategy.cs
index f5e977d52..1dcb25a77 100644
--- a/Server/Persistence/ParallelSaveStrategy.cs
+++ b/Server/Persistence/ParallelSaveStrategy.cs
@@ -174,10 +174,7 @@ namespace Server
 		{
 			var length = writer.CommitTo(itemData, itemIndex, item.m_TypeRef, item.Serial);
 
-			if (metrics != null)
-			{
-				metrics.OnItemSaved(length);
-			}
+			metrics?.OnItemSaved(length);
 
 			if (item.Decays && item.Parent == null && item.Map != Map.Internal && DateTime.UtcNow > (item.LastMoved + item.DecayTime))
 			{
@@ -189,20 +186,14 @@ namespace Server
 		{
 			var length = writer.CommitTo(mobileData, mobileIndex, mob.m_TypeRef, mob.Serial);
 
-			if (metrics != null)
-			{
-				metrics.OnMobileSaved(length);
-			}
+			metrics?.OnMobileSaved(length);
 		}
 
 		private void Save(BaseGuild guild, BinaryMemoryWriter writer)
 		{
 			var length = writer.CommitTo(guildData, guildIndex, 0, guild.Id);
 
-			if (metrics != null)
-			{
-				metrics.OnGuildSaved(length);
-			}
+			metrics?.OnGuildSaved(length);
 		}
 
 		private bool Enqueue(ISerializable value)
diff --git a/Server/Persistence/Persistence.cs b/Server/Persistence/Persistence.cs
index 321be352a..60ddf9019 100644
--- a/Server/Persistence/Persistence.cs
+++ b/Server/Persistence/Persistence.cs
@@ -175,14 +175,14 @@ namespace Server
 				{
 					if (file.Length > 0)
 					{
-						throw new Exception(String.Format("[Persistence]: {0}", eos));
+						throw new Exception($"[Persistence]: {eos}");
 					}
 				}
 				catch (Exception e)
 				{
 					Utility.WriteConsoleColor(ConsoleColor.Red, "[Persistence]: An error was encountered while loading a saved object");
 
-					throw new Exception(String.Format("[Persistence]: {0}", e));
+					throw new Exception($"[Persistence]: {e}");
 				}
 				finally
 				{
diff --git a/Server/Persistence/SequentialFileWriter.cs b/Server/Persistence/SequentialFileWriter.cs
index d1863290f..1f28ad9d8 100644
--- a/Server/Persistence/SequentialFileWriter.cs
+++ b/Server/Persistence/SequentialFileWriter.cs
@@ -100,10 +100,7 @@ namespace Server
 			{
 				fileStream.Write(chunk.Buffer, chunk.Offset, chunk.Size);
 
-				if (metrics != null)
-				{
-					metrics.OnFileWritten(chunk.Size);
-				}
+				metrics?.OnFileWritten(chunk.Size);
 
 				chunk.Commit();
 			}
@@ -124,10 +121,7 @@ namespace Server
 
 			fileStream.EndWrite(asyncResult);
 
-			if (metrics != null)
-			{
-				metrics.OnFileWritten(chunk.Size);
-			}
+			metrics?.OnFileWritten(chunk.Size);
 
 			chunk.Commit();
 		}
diff --git a/Server/Persistence/StandardSaveStrategy.cs b/Server/Persistence/StandardSaveStrategy.cs
index 2b8c844b1..798c265a5 100644
--- a/Server/Persistence/StandardSaveStrategy.cs
+++ b/Server/Persistence/StandardSaveStrategy.cs
@@ -83,10 +83,7 @@ namespace Server
 
 				m.Serialize(bin);
 
-				if (metrics != null)
-				{
-					metrics.OnMobileSaved((int)(bin.Position - start));
-				}
+				metrics?.OnMobileSaved((int)(bin.Position - start));
 
 				idx.Write((int)(bin.Position - start));
 
@@ -140,10 +137,7 @@ namespace Server
 
 				item.Serialize(bin);
 
-				if (metrics != null)
-				{
-					metrics.OnItemSaved((int)(bin.Position - start));
-				}
+				metrics?.OnItemSaved((int)(bin.Position - start));
 
 				idx.Write((int)(bin.Position - start));
 
@@ -186,10 +180,7 @@ namespace Server
 
 				guild.Serialize(bin);
 
-				if (metrics != null)
-				{
-					metrics.OnGuildSaved((int)(bin.Position - start));
-				}
+				metrics?.OnGuildSaved((int)(bin.Position - start));
 
 				idx.Write((int)(bin.Position - start));
 			}
diff --git a/Server/QuestArrow.cs b/Server/QuestArrow.cs
index df3d22fa5..7da1546df 100644
--- a/Server/QuestArrow.cs
+++ b/Server/QuestArrow.cs
@@ -35,9 +35,9 @@ namespace Server
 				return;
 			}
 
-			if (m_Target is IEntity)
+			if (m_Target is IEntity iEntity)
 			{
-				ns.Send(new SetArrow(x, y, ((IEntity)m_Target).Serial));
+				ns.Send(new SetArrow(x, y, iEntity.Serial));
 			}
 			else
 			{
@@ -63,9 +63,9 @@ namespace Server
 
 			if (ns != null)
 			{
-				if (m_Target is IEntity)
+				if (m_Target is IEntity iEntity)
 				{
-					ns.Send(new CancelArrow(x, y, ((IEntity)m_Target).Serial));
+					ns.Send(new CancelArrow(x, y, iEntity.Serial));
 				}
 				else
 				{
diff --git a/Server/Random.cs b/Server/Random.cs
index 5ae006fd3..c0e174e13 100644
--- a/Server/Random.cs
+++ b/Server/Random.cs
@@ -42,9 +42,9 @@ namespace Server
 				_Random = new CSPRandom();
 			}
 
-			if (_Random is IHardwareRNG)
+			if (_Random is IHardwareRNG iHardwareRNG)
 			{
-				if (!((IHardwareRNG)_Random).IsSupported())
+				if (!iHardwareRNG.IsSupported())
 				{
 					_Random = new CSPRandom();
 				}
diff --git a/Server/Region.cs b/Server/Region.cs
index c04887fce..3f11045bc 100644
--- a/Server/Region.cs
+++ b/Server/Region.cs
@@ -786,10 +786,7 @@ namespace Server
 
 		public virtual void MakeGuard(Mobile focus)
 		{
-			if (m_Parent != null)
-			{
-				m_Parent.MakeGuard(focus);
-			}
+			m_Parent?.MakeGuard(focus);
 		}
 
 		public virtual Type GetResource(Type type)
@@ -814,34 +811,22 @@ namespace Server
 
 		public virtual void OnAggressed(Mobile aggressor, Mobile aggressed, bool criminal)
 		{
-			if (m_Parent != null)
-			{
-				m_Parent.OnAggressed(aggressor, aggressed, criminal);
-			}
+			m_Parent?.OnAggressed(aggressor, aggressed, criminal);
 		}
 
 		public virtual void OnDidHarmful(Mobile harmer, IDamageable harmed)
 		{
-			if (m_Parent != null)
-			{
-				m_Parent.OnDidHarmful(harmer, harmed);
-			}
+			m_Parent?.OnDidHarmful(harmer, harmed);
 		}
 
 		public virtual void OnGotHarmful(Mobile harmer, IDamageable harmed)
 		{
-			if (m_Parent != null)
-			{
-				m_Parent.OnGotHarmful(harmer, harmed);
-			}
+			m_Parent?.OnGotHarmful(harmer, harmed);
 		}
 
 		public virtual void OnLocationChanged(Mobile m, Point3D oldLocation)
 		{
-			if (m_Parent != null)
-			{
-				m_Parent.OnLocationChanged(m, oldLocation);
-			}
+			m_Parent?.OnLocationChanged(m, oldLocation);
 		}
 
 		public virtual bool OnTarget(Mobile m, Target t, object o)
@@ -964,34 +949,22 @@ namespace Server
 
 		public virtual void OnBeneficialAction(Mobile helper, Mobile target)
 		{
-			if (m_Parent != null)
-			{
-				m_Parent.OnBeneficialAction(helper, target);
-			}
+			m_Parent?.OnBeneficialAction(helper, target);
 		}
 
 		public virtual void OnGotBeneficialAction(Mobile helper, Mobile target)
 		{
-			if (m_Parent != null)
-			{
-				m_Parent.OnGotBeneficialAction(helper, target);
-			}
+			m_Parent?.OnGotBeneficialAction(helper, target);
 		}
 
 		public virtual void SpellDamageScalar(Mobile caster, Mobile target, ref double damage)
 		{
-			if (m_Parent != null)
-			{
-				m_Parent.SpellDamageScalar(caster, target, ref damage);
-			}
+			m_Parent?.SpellDamageScalar(caster, target, ref damage);
 		}
 
 		public virtual void OnSpeech(SpeechEventArgs args)
 		{
-			if (m_Parent != null)
-			{
-				m_Parent.OnSpeech(args);
-			}
+			m_Parent?.OnSpeech(args);
 		}
 
 		public virtual bool OnSkillUse(Mobile m, int Skill)
@@ -1021,10 +994,7 @@ namespace Server
 
 		public virtual void OnSpellCast(Mobile m, ISpell s)
 		{
-			if (m_Parent != null)
-			{
-				m_Parent.OnSpellCast(m, s);
-			}
+			m_Parent?.OnSpellCast(m, s);
 		}
 
 		public virtual bool OnResurrect(Mobile m)
@@ -1049,10 +1019,7 @@ namespace Server
 
 		public virtual void OnDeath(Mobile m)
 		{
-			if (m_Parent != null)
-			{
-				m_Parent.OnDeath(m);
-			}
+			m_Parent?.OnDeath(m);
 		}
 
 		public virtual bool OnDamage(Mobile m, ref int damage)
@@ -1105,10 +1072,7 @@ namespace Server
 
 		public virtual void AlterLightLevel(Mobile m, ref int global, ref int personal)
 		{
-			if (m_Parent != null)
-			{
-				m_Parent.AlterLightLevel(m, ref global, ref personal);
-			}
+			m_Parent?.AlterLightLevel(m, ref global, ref personal);
 		}
 
 		public virtual TimeSpan GetLogoutDelay(Mobile m)
diff --git a/Server/SecureTrade.cs b/Server/SecureTrade.cs
index b8bf9a706..73356ff79 100644
--- a/Server/SecureTrade.cs
+++ b/Server/SecureTrade.cs
@@ -130,17 +130,11 @@ namespace Server
 
 			var ns = m_From.Mobile.NetState;
 
-			if (ns != null)
-			{
-				ns.RemoveTrade(this);
-			}
+			ns?.RemoveTrade(this);
 
 			ns = m_To.Mobile.NetState;
 
-			if (ns != null)
-			{
-				ns.RemoveTrade(this);
-			}
+			ns?.RemoveTrade(this);
 
 			Timer.DelayCall(m_From.Dispose);
 			Timer.DelayCall(m_To.Dispose);
@@ -169,10 +163,7 @@ namespace Server
 				ls.Send(new UpdateSecureTrade(left.Container, TradeFlag.UpdateLedger, gold, plat));
 			}
 
-			if (rs != null)
-			{
-				rs.Send(new UpdateSecureTrade(right.Container, TradeFlag.UpdateGold, left.Gold, left.Plat));
-			}
+			rs?.Send(new UpdateSecureTrade(right.Container, TradeFlag.UpdateGold, left.Gold, left.Plat));
 		}
 
 		public void Update()
diff --git a/Server/Serial.cs b/Server/Serial.cs
index f3300e49a..97f75780d 100644
--- a/Server/Serial.cs
+++ b/Server/Serial.cs
@@ -68,9 +68,9 @@ namespace Server
 
 		public int CompareTo(object other)
 		{
-			if (other is Serial)
+			if (other is Serial serial)
 			{
-				return CompareTo((Serial)other);
+				return CompareTo(serial);
 			}
 			else if (other == null)
 			{
@@ -82,7 +82,7 @@ namespace Server
 
 		public override bool Equals(object o)
 		{
-			if (o == null || !(o is Serial))
+			if (!(o is Serial))
 			{
 				return false;
 			}
@@ -127,7 +127,7 @@ namespace Server
 
 		public override string ToString()
 		{
-			return String.Format("0x{0:X8}", m_Serial);
+			return $"0x{m_Serial:X8}";
 		}
 
 		public static implicit operator int(Serial a)
diff --git a/Server/Serialization.cs b/Server/Serialization.cs
index a55dfb52a..09bb841ca 100644
--- a/Server/Serialization.cs
+++ b/Server/Serialization.cs
@@ -1413,9 +1413,7 @@ namespace Server
 
 				for (var i = 0; i < count; ++i)
 				{
-					var item = ReadItem() as T;
-
-					if (item != null)
+					if (ReadItem() is T item)
 					{
 						list.Add(item);
 					}
@@ -1444,9 +1442,7 @@ namespace Server
 
 				for (var i = 0; i < count; ++i)
 				{
-					var item = ReadItem() as T;
-
-					if (item != null)
+					if (ReadItem() is T item)
 					{
 						set.Add(item);
 					}
@@ -1475,9 +1471,7 @@ namespace Server
 
 				for (var i = 0; i < count; ++i)
 				{
-					var m = ReadMobile() as T;
-
-					if (m != null)
+					if (ReadMobile() is T m)
 					{
 						list.Add(m);
 					}
@@ -1506,9 +1500,7 @@ namespace Server
 
 				for (var i = 0; i < count; ++i)
 				{
-					var item = ReadMobile() as T;
-
-					if (item != null)
+					if (ReadMobile() is T item)
 					{
 						set.Add(item);
 					}
@@ -1537,9 +1529,7 @@ namespace Server
 
 				for (var i = 0; i < count; ++i)
 				{
-					var g = ReadGuild() as T;
-
-					if (g != null)
+					if (ReadGuild() is T g)
 					{
 						list.Add(g);
 					}
@@ -1568,9 +1558,7 @@ namespace Server
 
 				for (var i = 0; i < count; ++i)
 				{
-					var item = ReadGuild() as T;
-
-					if (item != null)
+					if (ReadGuild() is T item)
 					{
 						set.Add(item);
 					}
diff --git a/Server/Skills.cs b/Server/Skills.cs
index 8956987be..757fc75c1 100644
--- a/Server/Skills.cs
+++ b/Server/Skills.cs
@@ -98,7 +98,7 @@ namespace Server
 
 		public override string ToString()
 		{
-			return String.Format("[{0}: {1}]", Name, Base);
+			return $"[{Name}: {Base}]";
 		}
 
 		public Skill(Skills owner, SkillInfo info, GenericReader reader)
diff --git a/Server/Targeting/Target.cs b/Server/Targeting/Target.cs
index 13180407c..a3c4bc610 100644
--- a/Server/Targeting/Target.cs
+++ b/Server/Targeting/Target.cs
@@ -36,17 +36,11 @@ namespace Server.Targeting
 		{
 			var ns = m.NetState;
 
-			if (ns != null)
-			{
-				ns.Send(CancelTarget.Instance);
-			}
+			ns?.Send(CancelTarget.Instance);
 
 			var targ = m.Target;
 
-			if (targ != null)
-			{
-				targ.OnTargetCancel(m, TargetCancelType.Canceled);
-			}
+			targ?.OnTargetCancel(m, TargetCancelType.Canceled);
 		}
 
 		private Timer m_TimeoutTimer;
@@ -55,10 +49,7 @@ namespace Server.Targeting
 		{
 			m_TimeoutTime = DateTime.UtcNow + delay;
 
-			if (m_TimeoutTimer != null)
-			{
-				m_TimeoutTimer.Stop();
-			}
+			m_TimeoutTimer?.Stop();
 
 			m_TimeoutTimer = new TimeoutTimer(this, from, delay);
 			m_TimeoutTimer.Start();
@@ -66,10 +57,7 @@ namespace Server.Targeting
 
 		public void CancelTimeout()
 		{
-			if (m_TimeoutTimer != null)
-			{
-				m_TimeoutTimer.Stop();
-			}
+			m_TimeoutTimer?.Stop();
 
 			m_TimeoutTimer = null;
 		}
@@ -166,9 +154,9 @@ namespace Server.Targeting
 			Point3D loc;
 			Map map;
 
-			if (targeted is LandTarget)
+			if (targeted is LandTarget landTarget)
 			{
-				loc = ((LandTarget)targeted).Location;
+				loc = landTarget.Location;
 				map = from.Map;
 
 				if (enhancedClient && loc.X == 0 && loc.Y == 0 && !from.InRange(loc, 10))
@@ -178,14 +166,14 @@ namespace Server.Targeting
 					return;
 				}
 			}
-			else if (targeted is StaticTarget)
+			else if (targeted is StaticTarget staticTarget)
 			{
-				loc = ((StaticTarget)targeted).Location;
+				loc = staticTarget.Location;
 				map = from.Map;
 			}
-			else if (targeted is Mobile)
+			else if (targeted is Mobile mobile)
 			{
-				if (((Mobile)targeted).Deleted)
+				if (mobile.Deleted)
 				{
 					OnTargetDeleted(from, targeted);
 					OnTargetFinish(from);
@@ -201,10 +189,8 @@ namespace Server.Targeting
 				loc = ((Mobile)targeted).Location;
 				map = ((Mobile)targeted).Map;
 			}
-			else if (targeted is Item)
+			else if (targeted is Item item)
 			{
-				var item = (Item)targeted;
-
 				if (item.Deleted)
 				{
 					OnTargetDeleted(from, targeted);
diff --git a/Server/TileMatrix.cs b/Server/TileMatrix.cs
index 434e9ea83..c3a5e8756 100644
--- a/Server/TileMatrix.cs
+++ b/Server/TileMatrix.cs
@@ -513,20 +513,11 @@ namespace Server
 			{
 				m_MapIndex.Close();
 			}
-			else if (m_Map != null)
-			{
-				m_Map.Close();
-			}
+			else m_Map?.Close();
 
-			if (m_Statics != null)
-			{
-				m_Statics.Close();
-			}
+			m_Statics?.Close();
 
-			if (m_IndexReader != null)
-			{
-				m_IndexReader.Close();
-			}
+			m_IndexReader?.Close();
 		}
 	}
 
diff --git a/Server/Timer.cs b/Server/Timer.cs
index cabb3deab..6dc33d0c9 100644
--- a/Server/Timer.cs
+++ b/Server/Timer.cs
@@ -58,7 +58,7 @@ namespace Server
 				return callback.Method.Name;
 			}
 
-			return String.Format("{0}.{1}", callback.Method.DeclaringType.FullName, callback.Method.Name);
+			return $"{callback.Method.DeclaringType.FullName}.{callback.Method.Name}";
 		}
 
 		public static void DumpInfo(TextWriter tw)
@@ -411,19 +411,13 @@ namespace Server
 					var t = m_Queue.Dequeue();
 					var prof = t.GetProfile();
 
-					if (prof != null)
-					{
-						prof.Start();
-					}
+					prof?.Start();
 
 					t.OnTick();
 					t.m_Queued = false;
 					++index;
 
-					if (prof != null)
-					{
-						prof.Finish();
-					}
+					prof?.Finish();
 				}
 			}
 		}
@@ -710,7 +704,7 @@ namespace Server
 
 			public override string ToString()
 			{
-				return String.Format("DelayCallTimer[{0}]", FormatDelegate(m_Callback));
+				return $"DelayCallTimer[{FormatDelegate(m_Callback)}]";
 			}
 		}
 
@@ -739,7 +733,7 @@ namespace Server
 
 			public override string ToString()
 			{
-				return String.Format("DelayStateCall[{0}]", FormatDelegate(m_Callback));
+				return $"DelayStateCall[{FormatDelegate(m_Callback)}]";
 			}
 		}
 
@@ -768,7 +762,7 @@ namespace Server
 
 			public override string ToString()
 			{
-				return String.Format("DelayStateCall[{0}]", FormatDelegate(m_Callback));
+				return $"DelayStateCall[{FormatDelegate(m_Callback)}]";
 			}
 		}
 
@@ -799,7 +793,7 @@ namespace Server
 
 			public override string ToString()
 			{
-				return String.Format("DelayStateCall[{0}]", FormatDelegate(m_Callback));
+				return $"DelayStateCall[{FormatDelegate(m_Callback)}]";
 			}
 		}
 
@@ -832,7 +826,7 @@ namespace Server
 
 			public override string ToString()
 			{
-				return String.Format("DelayStateCall[{0}]", FormatDelegate(m_Callback));
+				return $"DelayStateCall[{FormatDelegate(m_Callback)}]";
 			}
 		}
 
@@ -867,7 +861,7 @@ namespace Server
 
 			public override string ToString()
 			{
-				return String.Format("DelayStateCall[{0}]", FormatDelegate(m_Callback));
+				return $"DelayStateCall[{FormatDelegate(m_Callback)}]";
 			}
 		}
 		#endregion
diff --git a/Server/TimerRegistry.cs b/Server/TimerRegistry.cs
index ee38a82a4..547113e37 100644
--- a/Server/TimerRegistry.cs
+++ b/Server/TimerRegistry.cs
@@ -28,9 +28,7 @@ namespace Server
 						Console.WriteLine("Delay/Interval: {0}", kvp.Value[i].Interval);
 						Console.WriteLine("Timer Priority: {0}", kvp.Value[i].Priority);
 
-						var dic = kvp.Value[i].GetType().GetProperty("Registry").GetValue(kvp.Value[i], null) as IDictionary;
-
-						if (dic != null)
+						if (kvp.Value[i].GetType().GetProperty("Registry").GetValue(kvp.Value[i], null) is IDictionary dic)
 						{
 							elements += dic.Count;
 						}
diff --git a/Server/Utility.cs b/Server/Utility.cs
index 52cf7f6c1..0e4153ea2 100644
--- a/Server/Utility.cs
+++ b/Server/Utility.cs
@@ -1410,7 +1410,7 @@ namespace Server
 				return callback.Method.Name;
 			}
 
-			return String.Format("{0}.{1}", callback.Method.DeclaringType.FullName, callback.Method.Name);
+			return $"{callback.Method.DeclaringType.FullName}.{callback.Method.Name}";
 		}
 
 		private static readonly Stack<ConsoleColor> m_ConsoleColors = new Stack<ConsoleColor>();
@@ -1540,9 +1540,7 @@ namespace Server
 
 			for (var i = 0; i < list.Count; i++)
 			{
-				var t = list[i] as TOutput;
-
-				if (t != null)
+				if (list[i] is TOutput t)
 				{
 					output.Add(t);
 				}
@@ -1738,9 +1736,8 @@ namespace Server
 			{
 				if (i < list.Count)
 				{
-					var entity = list[i] as IEntity;
 
-					if (entity != null && !entity.Deleted && (predicate == null || predicate((T)entity)))
+					if (list[i] is IEntity entity && !entity.Deleted && (predicate == null || predicate((T)entity)))
 					{
 						entity.Delete();
 					}
diff --git a/Server/World.cs b/Server/World.cs
index 15d5d2343..c4c405e20 100644
--- a/Server/World.cs
+++ b/Server/World.cs
@@ -241,7 +241,7 @@ namespace Server
 						Console.WriteLine("Error: Type '{0}' was not found.", typeName);
 					}
 
-					throw new Exception(String.Format("Missing type '{0}'", typeName));
+					throw new Exception($"Missing type '{typeName}'");
 				}
 
 				if (t.IsAbstract)
@@ -280,7 +280,7 @@ namespace Server
 							Console.WriteLine("Error: Type '{0}' is abstract.", typeName);
 						}
 
-						throw new Exception(String.Format("Abstract type '{0}'", typeName));
+						throw new Exception($"Abstract type '{typeName}'");
 					}
 				}
 
@@ -292,7 +292,7 @@ namespace Server
 				}
 				else
 				{
-					throw new Exception(String.Format("Type '{0}' does not have a serialization constructor", t));
+					throw new Exception($"Type '{t}' does not have a serialization constructor");
 				}
 			}
 
@@ -513,7 +513,7 @@ namespace Server
 
 								if (reader.Position != (entry.Position + entry.Length))
 								{
-									throw new Exception(String.Format("***** Bad serialize on {0} *****", m.GetType()));
+									throw new Exception($"***** Bad serialize on {m.GetType()} *****");
 								}
 							}
 							catch (Exception e)
@@ -558,7 +558,7 @@ namespace Server
 
 								if (reader.Position != (entry.Position + entry.Length))
 								{
-									throw new Exception(String.Format("***** Bad serialize on {0} *****", item.GetType()));
+									throw new Exception($"***** Bad serialize on {item.GetType()} *****");
 								}
 							}
 							catch (Exception e)
@@ -603,7 +603,7 @@ namespace Server
 
 								if (reader.Position != (entry.Position + entry.Length))
 								{
-									throw new Exception(String.Format("***** Bad serialize on Guild {0} *****", g.Id));
+									throw new Exception($"***** Bad serialize on Guild {g.Id} *****");
 								}
 							}
 							catch (Exception e)
@@ -693,13 +693,7 @@ namespace Server
 				}
 
 				throw new Exception(
-					String.Format(
-						"Load failed (items={0}, mobiles={1}, guilds={2}, type={3}, serial={4})",
-						failedItems,
-						failedMobiles,
-						failedGuilds,
-						failedType,
-						failedSerial),
+					$"Load failed (items={failedItems}, mobiles={failedMobiles}, guilds={failedGuilds}, type={failedType}, serial={failedSerial})",
 						failed);
 			}
 
